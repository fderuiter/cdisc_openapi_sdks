/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExportSdtmVariablesTable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportSdtmVariablesTable{}

// ExportSdtmVariablesTable struct for ExportSdtmVariablesTable
type ExportSdtmVariablesTable struct {
	ClassVariables []ExportSdtmClassVariablesRow `json:"class-variables,omitempty"`
	DatasetVariables []ExportSdtmDatasetVariablesRow `json:"dataset-variables,omitempty"`
}

// NewExportSdtmVariablesTable instantiates a new ExportSdtmVariablesTable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportSdtmVariablesTable() *ExportSdtmVariablesTable {
	this := ExportSdtmVariablesTable{}
	return &this
}

// NewExportSdtmVariablesTableWithDefaults instantiates a new ExportSdtmVariablesTable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportSdtmVariablesTableWithDefaults() *ExportSdtmVariablesTable {
	this := ExportSdtmVariablesTable{}
	return &this
}

// GetClassVariables returns the ClassVariables field value if set, zero value otherwise.
func (o *ExportSdtmVariablesTable) GetClassVariables() []ExportSdtmClassVariablesRow {
	if o == nil || IsNil(o.ClassVariables) {
		var ret []ExportSdtmClassVariablesRow
		return ret
	}
	return o.ClassVariables
}

// GetClassVariablesOk returns a tuple with the ClassVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmVariablesTable) GetClassVariablesOk() ([]ExportSdtmClassVariablesRow, bool) {
	if o == nil || IsNil(o.ClassVariables) {
		return nil, false
	}
	return o.ClassVariables, true
}

// HasClassVariables returns a boolean if a field has been set.
func (o *ExportSdtmVariablesTable) HasClassVariables() bool {
	if o != nil && !IsNil(o.ClassVariables) {
		return true
	}

	return false
}

// SetClassVariables gets a reference to the given []ExportSdtmClassVariablesRow and assigns it to the ClassVariables field.
func (o *ExportSdtmVariablesTable) SetClassVariables(v []ExportSdtmClassVariablesRow) {
	o.ClassVariables = v
}

// GetDatasetVariables returns the DatasetVariables field value if set, zero value otherwise.
func (o *ExportSdtmVariablesTable) GetDatasetVariables() []ExportSdtmDatasetVariablesRow {
	if o == nil || IsNil(o.DatasetVariables) {
		var ret []ExportSdtmDatasetVariablesRow
		return ret
	}
	return o.DatasetVariables
}

// GetDatasetVariablesOk returns a tuple with the DatasetVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmVariablesTable) GetDatasetVariablesOk() ([]ExportSdtmDatasetVariablesRow, bool) {
	if o == nil || IsNil(o.DatasetVariables) {
		return nil, false
	}
	return o.DatasetVariables, true
}

// HasDatasetVariables returns a boolean if a field has been set.
func (o *ExportSdtmVariablesTable) HasDatasetVariables() bool {
	if o != nil && !IsNil(o.DatasetVariables) {
		return true
	}

	return false
}

// SetDatasetVariables gets a reference to the given []ExportSdtmDatasetVariablesRow and assigns it to the DatasetVariables field.
func (o *ExportSdtmVariablesTable) SetDatasetVariables(v []ExportSdtmDatasetVariablesRow) {
	o.DatasetVariables = v
}

func (o ExportSdtmVariablesTable) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportSdtmVariablesTable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClassVariables) {
		toSerialize["class-variables"] = o.ClassVariables
	}
	if !IsNil(o.DatasetVariables) {
		toSerialize["dataset-variables"] = o.DatasetVariables
	}
	return toSerialize, nil
}

type NullableExportSdtmVariablesTable struct {
	value *ExportSdtmVariablesTable
	isSet bool
}

func (v NullableExportSdtmVariablesTable) Get() *ExportSdtmVariablesTable {
	return v.value
}

func (v *NullableExportSdtmVariablesTable) Set(val *ExportSdtmVariablesTable) {
	v.value = val
	v.isSet = true
}

func (v NullableExportSdtmVariablesTable) IsSet() bool {
	return v.isSet
}

func (v *NullableExportSdtmVariablesTable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportSdtmVariablesTable(val *ExportSdtmVariablesTable) *NullableExportSdtmVariablesTable {
	return &NullableExportSdtmVariablesTable{value: val, isSet: true}
}

func (v NullableExportSdtmVariablesTable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportSdtmVariablesTable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


