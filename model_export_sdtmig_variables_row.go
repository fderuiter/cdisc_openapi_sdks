/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExportSdtmigVariablesRow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportSdtmigVariablesRow{}

// ExportSdtmigVariablesRow struct for ExportSdtmigVariablesRow
type ExportSdtmigVariablesRow struct {
	Version *string `json:"Version,omitempty"`
	VariableOrder *string `json:"Variable Order,omitempty"`
	Class *string `json:"Class,omitempty"`
	DatasetName *string `json:"Dataset Name,omitempty"`
	VariableName *string `json:"Variable Name,omitempty"`
	VariableLabel *string `json:"Variable Label,omitempty"`
	Type *string `json:"Type,omitempty"`
	ControlledTermsCodelistOrFormat *string `json:"Controlled Terms, Codelist or Format,omitempty"`
	Role *string `json:"Role,omitempty"`
	CDISCNotes *string `json:"CDISC Notes,omitempty"`
	Core *string `json:"Core,omitempty"`
}

// NewExportSdtmigVariablesRow instantiates a new ExportSdtmigVariablesRow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportSdtmigVariablesRow() *ExportSdtmigVariablesRow {
	this := ExportSdtmigVariablesRow{}
	return &this
}

// NewExportSdtmigVariablesRowWithDefaults instantiates a new ExportSdtmigVariablesRow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportSdtmigVariablesRowWithDefaults() *ExportSdtmigVariablesRow {
	this := ExportSdtmigVariablesRow{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ExportSdtmigVariablesRow) SetVersion(v string) {
	o.Version = &v
}

// GetVariableOrder returns the VariableOrder field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetVariableOrder() string {
	if o == nil || IsNil(o.VariableOrder) {
		var ret string
		return ret
	}
	return *o.VariableOrder
}

// GetVariableOrderOk returns a tuple with the VariableOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetVariableOrderOk() (*string, bool) {
	if o == nil || IsNil(o.VariableOrder) {
		return nil, false
	}
	return o.VariableOrder, true
}

// HasVariableOrder returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasVariableOrder() bool {
	if o != nil && !IsNil(o.VariableOrder) {
		return true
	}

	return false
}

// SetVariableOrder gets a reference to the given string and assigns it to the VariableOrder field.
func (o *ExportSdtmigVariablesRow) SetVariableOrder(v string) {
	o.VariableOrder = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *ExportSdtmigVariablesRow) SetClass(v string) {
	o.Class = &v
}

// GetDatasetName returns the DatasetName field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetDatasetName() string {
	if o == nil || IsNil(o.DatasetName) {
		var ret string
		return ret
	}
	return *o.DatasetName
}

// GetDatasetNameOk returns a tuple with the DatasetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetDatasetNameOk() (*string, bool) {
	if o == nil || IsNil(o.DatasetName) {
		return nil, false
	}
	return o.DatasetName, true
}

// HasDatasetName returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasDatasetName() bool {
	if o != nil && !IsNil(o.DatasetName) {
		return true
	}

	return false
}

// SetDatasetName gets a reference to the given string and assigns it to the DatasetName field.
func (o *ExportSdtmigVariablesRow) SetDatasetName(v string) {
	o.DatasetName = &v
}

// GetVariableName returns the VariableName field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetVariableName() string {
	if o == nil || IsNil(o.VariableName) {
		var ret string
		return ret
	}
	return *o.VariableName
}

// GetVariableNameOk returns a tuple with the VariableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetVariableNameOk() (*string, bool) {
	if o == nil || IsNil(o.VariableName) {
		return nil, false
	}
	return o.VariableName, true
}

// HasVariableName returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasVariableName() bool {
	if o != nil && !IsNil(o.VariableName) {
		return true
	}

	return false
}

// SetVariableName gets a reference to the given string and assigns it to the VariableName field.
func (o *ExportSdtmigVariablesRow) SetVariableName(v string) {
	o.VariableName = &v
}

// GetVariableLabel returns the VariableLabel field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetVariableLabel() string {
	if o == nil || IsNil(o.VariableLabel) {
		var ret string
		return ret
	}
	return *o.VariableLabel
}

// GetVariableLabelOk returns a tuple with the VariableLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetVariableLabelOk() (*string, bool) {
	if o == nil || IsNil(o.VariableLabel) {
		return nil, false
	}
	return o.VariableLabel, true
}

// HasVariableLabel returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasVariableLabel() bool {
	if o != nil && !IsNil(o.VariableLabel) {
		return true
	}

	return false
}

// SetVariableLabel gets a reference to the given string and assigns it to the VariableLabel field.
func (o *ExportSdtmigVariablesRow) SetVariableLabel(v string) {
	o.VariableLabel = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ExportSdtmigVariablesRow) SetType(v string) {
	o.Type = &v
}

// GetControlledTermsCodelistOrFormat returns the ControlledTermsCodelistOrFormat field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetControlledTermsCodelistOrFormat() string {
	if o == nil || IsNil(o.ControlledTermsCodelistOrFormat) {
		var ret string
		return ret
	}
	return *o.ControlledTermsCodelistOrFormat
}

// GetControlledTermsCodelistOrFormatOk returns a tuple with the ControlledTermsCodelistOrFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetControlledTermsCodelistOrFormatOk() (*string, bool) {
	if o == nil || IsNil(o.ControlledTermsCodelistOrFormat) {
		return nil, false
	}
	return o.ControlledTermsCodelistOrFormat, true
}

// HasControlledTermsCodelistOrFormat returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasControlledTermsCodelistOrFormat() bool {
	if o != nil && !IsNil(o.ControlledTermsCodelistOrFormat) {
		return true
	}

	return false
}

// SetControlledTermsCodelistOrFormat gets a reference to the given string and assigns it to the ControlledTermsCodelistOrFormat field.
func (o *ExportSdtmigVariablesRow) SetControlledTermsCodelistOrFormat(v string) {
	o.ControlledTermsCodelistOrFormat = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ExportSdtmigVariablesRow) SetRole(v string) {
	o.Role = &v
}

// GetCDISCNotes returns the CDISCNotes field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetCDISCNotes() string {
	if o == nil || IsNil(o.CDISCNotes) {
		var ret string
		return ret
	}
	return *o.CDISCNotes
}

// GetCDISCNotesOk returns a tuple with the CDISCNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetCDISCNotesOk() (*string, bool) {
	if o == nil || IsNil(o.CDISCNotes) {
		return nil, false
	}
	return o.CDISCNotes, true
}

// HasCDISCNotes returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasCDISCNotes() bool {
	if o != nil && !IsNil(o.CDISCNotes) {
		return true
	}

	return false
}

// SetCDISCNotes gets a reference to the given string and assigns it to the CDISCNotes field.
func (o *ExportSdtmigVariablesRow) SetCDISCNotes(v string) {
	o.CDISCNotes = &v
}

// GetCore returns the Core field value if set, zero value otherwise.
func (o *ExportSdtmigVariablesRow) GetCore() string {
	if o == nil || IsNil(o.Core) {
		var ret string
		return ret
	}
	return *o.Core
}

// GetCoreOk returns a tuple with the Core field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigVariablesRow) GetCoreOk() (*string, bool) {
	if o == nil || IsNil(o.Core) {
		return nil, false
	}
	return o.Core, true
}

// HasCore returns a boolean if a field has been set.
func (o *ExportSdtmigVariablesRow) HasCore() bool {
	if o != nil && !IsNil(o.Core) {
		return true
	}

	return false
}

// SetCore gets a reference to the given string and assigns it to the Core field.
func (o *ExportSdtmigVariablesRow) SetCore(v string) {
	o.Core = &v
}

func (o ExportSdtmigVariablesRow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportSdtmigVariablesRow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["Version"] = o.Version
	}
	if !IsNil(o.VariableOrder) {
		toSerialize["Variable Order"] = o.VariableOrder
	}
	if !IsNil(o.Class) {
		toSerialize["Class"] = o.Class
	}
	if !IsNil(o.DatasetName) {
		toSerialize["Dataset Name"] = o.DatasetName
	}
	if !IsNil(o.VariableName) {
		toSerialize["Variable Name"] = o.VariableName
	}
	if !IsNil(o.VariableLabel) {
		toSerialize["Variable Label"] = o.VariableLabel
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.ControlledTermsCodelistOrFormat) {
		toSerialize["Controlled Terms, Codelist or Format"] = o.ControlledTermsCodelistOrFormat
	}
	if !IsNil(o.Role) {
		toSerialize["Role"] = o.Role
	}
	if !IsNil(o.CDISCNotes) {
		toSerialize["CDISC Notes"] = o.CDISCNotes
	}
	if !IsNil(o.Core) {
		toSerialize["Core"] = o.Core
	}
	return toSerialize, nil
}

type NullableExportSdtmigVariablesRow struct {
	value *ExportSdtmigVariablesRow
	isSet bool
}

func (v NullableExportSdtmigVariablesRow) Get() *ExportSdtmigVariablesRow {
	return v.value
}

func (v *NullableExportSdtmigVariablesRow) Set(val *ExportSdtmigVariablesRow) {
	v.value = val
	v.isSet = true
}

func (v NullableExportSdtmigVariablesRow) IsSet() bool {
	return v.isSet
}

func (v *NullableExportSdtmigVariablesRow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportSdtmigVariablesRow(val *ExportSdtmigVariablesRow) *NullableExportSdtmigVariablesRow {
	return &NullableExportSdtmigVariablesRow{value: val, isSet: true}
}

func (v NullableExportSdtmigVariablesRow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportSdtmigVariablesRow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


