/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QrsItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QrsItem{}

// QrsItem struct for QrsItem
type QrsItem struct {
	Ordinal *string `json:"ordinal,omitempty"`
	Label *string `json:"label,omitempty"`
	QuestionText *string `json:"questionText,omitempty"`
	Links *QrsItemLinks `json:"_links,omitempty"`
}

// NewQrsItem instantiates a new QrsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQrsItem() *QrsItem {
	this := QrsItem{}
	return &this
}

// NewQrsItemWithDefaults instantiates a new QrsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQrsItemWithDefaults() *QrsItem {
	this := QrsItem{}
	return &this
}

// GetOrdinal returns the Ordinal field value if set, zero value otherwise.
func (o *QrsItem) GetOrdinal() string {
	if o == nil || IsNil(o.Ordinal) {
		var ret string
		return ret
	}
	return *o.Ordinal
}

// GetOrdinalOk returns a tuple with the Ordinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsItem) GetOrdinalOk() (*string, bool) {
	if o == nil || IsNil(o.Ordinal) {
		return nil, false
	}
	return o.Ordinal, true
}

// HasOrdinal returns a boolean if a field has been set.
func (o *QrsItem) HasOrdinal() bool {
	if o != nil && !IsNil(o.Ordinal) {
		return true
	}

	return false
}

// SetOrdinal gets a reference to the given string and assigns it to the Ordinal field.
func (o *QrsItem) SetOrdinal(v string) {
	o.Ordinal = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *QrsItem) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsItem) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *QrsItem) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *QrsItem) SetLabel(v string) {
	o.Label = &v
}

// GetQuestionText returns the QuestionText field value if set, zero value otherwise.
func (o *QrsItem) GetQuestionText() string {
	if o == nil || IsNil(o.QuestionText) {
		var ret string
		return ret
	}
	return *o.QuestionText
}

// GetQuestionTextOk returns a tuple with the QuestionText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsItem) GetQuestionTextOk() (*string, bool) {
	if o == nil || IsNil(o.QuestionText) {
		return nil, false
	}
	return o.QuestionText, true
}

// HasQuestionText returns a boolean if a field has been set.
func (o *QrsItem) HasQuestionText() bool {
	if o != nil && !IsNil(o.QuestionText) {
		return true
	}

	return false
}

// SetQuestionText gets a reference to the given string and assigns it to the QuestionText field.
func (o *QrsItem) SetQuestionText(v string) {
	o.QuestionText = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *QrsItem) GetLinks() QrsItemLinks {
	if o == nil || IsNil(o.Links) {
		var ret QrsItemLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsItem) GetLinksOk() (*QrsItemLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *QrsItem) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given QrsItemLinks and assigns it to the Links field.
func (o *QrsItem) SetLinks(v QrsItemLinks) {
	o.Links = &v
}

func (o QrsItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QrsItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ordinal) {
		toSerialize["ordinal"] = o.Ordinal
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.QuestionText) {
		toSerialize["questionText"] = o.QuestionText
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableQrsItem struct {
	value *QrsItem
	isSet bool
}

func (v NullableQrsItem) Get() *QrsItem {
	return v.value
}

func (v *NullableQrsItem) Set(val *QrsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableQrsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableQrsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQrsItem(val *QrsItem) *NullableQrsItem {
	return &NullableQrsItem{value: val, isSet: true}
}

func (v NullableQrsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQrsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


