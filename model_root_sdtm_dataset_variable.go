/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RootSdtmDatasetVariable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RootSdtmDatasetVariable{}

// RootSdtmDatasetVariable struct for RootSdtmDatasetVariable
type RootSdtmDatasetVariable struct {
	Links *RootSdtmDatasetVariableLinks `json:"_links,omitempty"`
}

// NewRootSdtmDatasetVariable instantiates a new RootSdtmDatasetVariable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootSdtmDatasetVariable() *RootSdtmDatasetVariable {
	this := RootSdtmDatasetVariable{}
	return &this
}

// NewRootSdtmDatasetVariableWithDefaults instantiates a new RootSdtmDatasetVariable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootSdtmDatasetVariableWithDefaults() *RootSdtmDatasetVariable {
	this := RootSdtmDatasetVariable{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RootSdtmDatasetVariable) GetLinks() RootSdtmDatasetVariableLinks {
	if o == nil || IsNil(o.Links) {
		var ret RootSdtmDatasetVariableLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootSdtmDatasetVariable) GetLinksOk() (*RootSdtmDatasetVariableLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RootSdtmDatasetVariable) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given RootSdtmDatasetVariableLinks and assigns it to the Links field.
func (o *RootSdtmDatasetVariable) SetLinks(v RootSdtmDatasetVariableLinks) {
	o.Links = &v
}

func (o RootSdtmDatasetVariable) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RootSdtmDatasetVariable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableRootSdtmDatasetVariable struct {
	value *RootSdtmDatasetVariable
	isSet bool
}

func (v NullableRootSdtmDatasetVariable) Get() *RootSdtmDatasetVariable {
	return v.value
}

func (v *NullableRootSdtmDatasetVariable) Set(val *RootSdtmDatasetVariable) {
	v.value = val
	v.isSet = true
}

func (v NullableRootSdtmDatasetVariable) IsSet() bool {
	return v.isSet
}

func (v *NullableRootSdtmDatasetVariable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootSdtmDatasetVariable(val *RootSdtmDatasetVariable) *NullableRootSdtmDatasetVariable {
	return &NullableRootSdtmDatasetVariable{value: val, isSet: true}
}

func (v NullableRootSdtmDatasetVariable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootSdtmDatasetVariable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


