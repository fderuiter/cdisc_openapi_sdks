/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SendigClassLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendigClassLinks{}

// SendigClassLinks struct for SendigClassLinks
type SendigClassLinks struct {
	Self *SendigClassRef `json:"self,omitempty"`
	ModelClass *SdtmClassRef `json:"modelClass,omitempty"`
	ParentProduct *SendigProductRef `json:"parentProduct,omitempty"`
	ParentClass *SendigClassRef `json:"parentClass,omitempty"`
	Subclasses []SendigClassRefSubclass `json:"subclasses,omitempty"`
	PriorVersion *SendigClassRef `json:"priorVersion,omitempty"`
}

// NewSendigClassLinks instantiates a new SendigClassLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendigClassLinks() *SendigClassLinks {
	this := SendigClassLinks{}
	return &this
}

// NewSendigClassLinksWithDefaults instantiates a new SendigClassLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendigClassLinksWithDefaults() *SendigClassLinks {
	this := SendigClassLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SendigClassLinks) GetSelf() SendigClassRef {
	if o == nil || IsNil(o.Self) {
		var ret SendigClassRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendigClassLinks) GetSelfOk() (*SendigClassRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SendigClassLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given SendigClassRef and assigns it to the Self field.
func (o *SendigClassLinks) SetSelf(v SendigClassRef) {
	o.Self = &v
}

// GetModelClass returns the ModelClass field value if set, zero value otherwise.
func (o *SendigClassLinks) GetModelClass() SdtmClassRef {
	if o == nil || IsNil(o.ModelClass) {
		var ret SdtmClassRef
		return ret
	}
	return *o.ModelClass
}

// GetModelClassOk returns a tuple with the ModelClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendigClassLinks) GetModelClassOk() (*SdtmClassRef, bool) {
	if o == nil || IsNil(o.ModelClass) {
		return nil, false
	}
	return o.ModelClass, true
}

// HasModelClass returns a boolean if a field has been set.
func (o *SendigClassLinks) HasModelClass() bool {
	if o != nil && !IsNil(o.ModelClass) {
		return true
	}

	return false
}

// SetModelClass gets a reference to the given SdtmClassRef and assigns it to the ModelClass field.
func (o *SendigClassLinks) SetModelClass(v SdtmClassRef) {
	o.ModelClass = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *SendigClassLinks) GetParentProduct() SendigProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret SendigProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendigClassLinks) GetParentProductOk() (*SendigProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *SendigClassLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given SendigProductRef and assigns it to the ParentProduct field.
func (o *SendigClassLinks) SetParentProduct(v SendigProductRef) {
	o.ParentProduct = &v
}

// GetParentClass returns the ParentClass field value if set, zero value otherwise.
func (o *SendigClassLinks) GetParentClass() SendigClassRef {
	if o == nil || IsNil(o.ParentClass) {
		var ret SendigClassRef
		return ret
	}
	return *o.ParentClass
}

// GetParentClassOk returns a tuple with the ParentClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendigClassLinks) GetParentClassOk() (*SendigClassRef, bool) {
	if o == nil || IsNil(o.ParentClass) {
		return nil, false
	}
	return o.ParentClass, true
}

// HasParentClass returns a boolean if a field has been set.
func (o *SendigClassLinks) HasParentClass() bool {
	if o != nil && !IsNil(o.ParentClass) {
		return true
	}

	return false
}

// SetParentClass gets a reference to the given SendigClassRef and assigns it to the ParentClass field.
func (o *SendigClassLinks) SetParentClass(v SendigClassRef) {
	o.ParentClass = &v
}

// GetSubclasses returns the Subclasses field value if set, zero value otherwise.
func (o *SendigClassLinks) GetSubclasses() []SendigClassRefSubclass {
	if o == nil || IsNil(o.Subclasses) {
		var ret []SendigClassRefSubclass
		return ret
	}
	return o.Subclasses
}

// GetSubclassesOk returns a tuple with the Subclasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendigClassLinks) GetSubclassesOk() ([]SendigClassRefSubclass, bool) {
	if o == nil || IsNil(o.Subclasses) {
		return nil, false
	}
	return o.Subclasses, true
}

// HasSubclasses returns a boolean if a field has been set.
func (o *SendigClassLinks) HasSubclasses() bool {
	if o != nil && !IsNil(o.Subclasses) {
		return true
	}

	return false
}

// SetSubclasses gets a reference to the given []SendigClassRefSubclass and assigns it to the Subclasses field.
func (o *SendigClassLinks) SetSubclasses(v []SendigClassRefSubclass) {
	o.Subclasses = v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *SendigClassLinks) GetPriorVersion() SendigClassRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret SendigClassRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendigClassLinks) GetPriorVersionOk() (*SendigClassRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *SendigClassLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given SendigClassRef and assigns it to the PriorVersion field.
func (o *SendigClassLinks) SetPriorVersion(v SendigClassRef) {
	o.PriorVersion = &v
}

func (o SendigClassLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendigClassLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ModelClass) {
		toSerialize["modelClass"] = o.ModelClass
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.ParentClass) {
		toSerialize["parentClass"] = o.ParentClass
	}
	if !IsNil(o.Subclasses) {
		toSerialize["subclasses"] = o.Subclasses
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	return toSerialize, nil
}

type NullableSendigClassLinks struct {
	value *SendigClassLinks
	isSet bool
}

func (v NullableSendigClassLinks) Get() *SendigClassLinks {
	return v.value
}

func (v *NullableSendigClassLinks) Set(val *SendigClassLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSendigClassLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSendigClassLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendigClassLinks(val *SendigClassLinks) *NullableSendigClassLinks {
	return &NullableSendigClassLinks{value: val, isSet: true}
}

func (v NullableSendigClassLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendigClassLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


