/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CtCodelistTermsLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CtCodelistTermsLinks{}

// CtCodelistTermsLinks struct for CtCodelistTermsLinks
type CtCodelistTermsLinks struct {
	Self *CtCodelistTermsRef `json:"self,omitempty"`
	ParentPackage *CtPackageRef `json:"parentPackage,omitempty"`
	RootItem *RootCtCodelistRef `json:"rootItem,omitempty"`
	PriorVersion *CtCodelistTermsRef `json:"priorVersion,omitempty"`
	Terms []CtTermRefElement `json:"terms,omitempty"`
}

// NewCtCodelistTermsLinks instantiates a new CtCodelistTermsLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCtCodelistTermsLinks() *CtCodelistTermsLinks {
	this := CtCodelistTermsLinks{}
	return &this
}

// NewCtCodelistTermsLinksWithDefaults instantiates a new CtCodelistTermsLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCtCodelistTermsLinksWithDefaults() *CtCodelistTermsLinks {
	this := CtCodelistTermsLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *CtCodelistTermsLinks) GetSelf() CtCodelistTermsRef {
	if o == nil || IsNil(o.Self) {
		var ret CtCodelistTermsRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtCodelistTermsLinks) GetSelfOk() (*CtCodelistTermsRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *CtCodelistTermsLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given CtCodelistTermsRef and assigns it to the Self field.
func (o *CtCodelistTermsLinks) SetSelf(v CtCodelistTermsRef) {
	o.Self = &v
}

// GetParentPackage returns the ParentPackage field value if set, zero value otherwise.
func (o *CtCodelistTermsLinks) GetParentPackage() CtPackageRef {
	if o == nil || IsNil(o.ParentPackage) {
		var ret CtPackageRef
		return ret
	}
	return *o.ParentPackage
}

// GetParentPackageOk returns a tuple with the ParentPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtCodelistTermsLinks) GetParentPackageOk() (*CtPackageRef, bool) {
	if o == nil || IsNil(o.ParentPackage) {
		return nil, false
	}
	return o.ParentPackage, true
}

// HasParentPackage returns a boolean if a field has been set.
func (o *CtCodelistTermsLinks) HasParentPackage() bool {
	if o != nil && !IsNil(o.ParentPackage) {
		return true
	}

	return false
}

// SetParentPackage gets a reference to the given CtPackageRef and assigns it to the ParentPackage field.
func (o *CtCodelistTermsLinks) SetParentPackage(v CtPackageRef) {
	o.ParentPackage = &v
}

// GetRootItem returns the RootItem field value if set, zero value otherwise.
func (o *CtCodelistTermsLinks) GetRootItem() RootCtCodelistRef {
	if o == nil || IsNil(o.RootItem) {
		var ret RootCtCodelistRef
		return ret
	}
	return *o.RootItem
}

// GetRootItemOk returns a tuple with the RootItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtCodelistTermsLinks) GetRootItemOk() (*RootCtCodelistRef, bool) {
	if o == nil || IsNil(o.RootItem) {
		return nil, false
	}
	return o.RootItem, true
}

// HasRootItem returns a boolean if a field has been set.
func (o *CtCodelistTermsLinks) HasRootItem() bool {
	if o != nil && !IsNil(o.RootItem) {
		return true
	}

	return false
}

// SetRootItem gets a reference to the given RootCtCodelistRef and assigns it to the RootItem field.
func (o *CtCodelistTermsLinks) SetRootItem(v RootCtCodelistRef) {
	o.RootItem = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *CtCodelistTermsLinks) GetPriorVersion() CtCodelistTermsRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret CtCodelistTermsRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtCodelistTermsLinks) GetPriorVersionOk() (*CtCodelistTermsRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *CtCodelistTermsLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given CtCodelistTermsRef and assigns it to the PriorVersion field.
func (o *CtCodelistTermsLinks) SetPriorVersion(v CtCodelistTermsRef) {
	o.PriorVersion = &v
}

// GetTerms returns the Terms field value if set, zero value otherwise.
func (o *CtCodelistTermsLinks) GetTerms() []CtTermRefElement {
	if o == nil || IsNil(o.Terms) {
		var ret []CtTermRefElement
		return ret
	}
	return o.Terms
}

// GetTermsOk returns a tuple with the Terms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtCodelistTermsLinks) GetTermsOk() ([]CtTermRefElement, bool) {
	if o == nil || IsNil(o.Terms) {
		return nil, false
	}
	return o.Terms, true
}

// HasTerms returns a boolean if a field has been set.
func (o *CtCodelistTermsLinks) HasTerms() bool {
	if o != nil && !IsNil(o.Terms) {
		return true
	}

	return false
}

// SetTerms gets a reference to the given []CtTermRefElement and assigns it to the Terms field.
func (o *CtCodelistTermsLinks) SetTerms(v []CtTermRefElement) {
	o.Terms = v
}

func (o CtCodelistTermsLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CtCodelistTermsLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ParentPackage) {
		toSerialize["parentPackage"] = o.ParentPackage
	}
	if !IsNil(o.RootItem) {
		toSerialize["rootItem"] = o.RootItem
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	if !IsNil(o.Terms) {
		toSerialize["terms"] = o.Terms
	}
	return toSerialize, nil
}

type NullableCtCodelistTermsLinks struct {
	value *CtCodelistTermsLinks
	isSet bool
}

func (v NullableCtCodelistTermsLinks) Get() *CtCodelistTermsLinks {
	return v.value
}

func (v *NullableCtCodelistTermsLinks) Set(val *CtCodelistTermsLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCtCodelistTermsLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCtCodelistTermsLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCtCodelistTermsLinks(val *CtCodelistTermsLinks) *NullableCtCodelistTermsLinks {
	return &NullableCtCodelistTermsLinks{value: val, isSet: true}
}

func (v NullableCtCodelistTermsLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCtCodelistTermsLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


