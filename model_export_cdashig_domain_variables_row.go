/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExportCdashigDomainVariablesRow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportCdashigDomainVariablesRow{}

// ExportCdashigDomainVariablesRow struct for ExportCdashigDomainVariablesRow
type ExportCdashigDomainVariablesRow struct {
	Version *string `json:"Version,omitempty"`
	Class *string `json:"Class,omitempty"`
	Domain *string `json:"Domain,omitempty"`
	DataCollectionScenario *string `json:"Data Collection Scenario,omitempty"`
	VariableOrder *string `json:"Variable Order,omitempty"`
	CDASHIGVariable *string `json:"CDASHIG Variable,omitempty"`
	CDASHIGVariableLabel *string `json:"CDASHIG Variable Label,omitempty"`
	DRAFTCDASHIGDefinition *string `json:"DRAFT CDASHIG Definition,omitempty"`
	QuestionText *string `json:"Question Text,omitempty"`
	Prompt *string `json:"Prompt,omitempty"`
	Type *string `json:"Type,omitempty"`
	CDASHIGCore *string `json:"CDASHIG Core,omitempty"`
	CaseReportFormCompletionInstructions *string `json:"Case Report Form Completion Instructions,omitempty"`
	SDTMIGTarget []string `json:"SDTMIG Target,omitempty"`
	MappingInstructions *string `json:"Mapping Instructions,omitempty"`
	ControlledTerminologyCodelistName *string `json:"Controlled Terminology Codelist Name,omitempty"`
	ImplementationNotes *string `json:"Implementation Notes,omitempty"`
}

// NewExportCdashigDomainVariablesRow instantiates a new ExportCdashigDomainVariablesRow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportCdashigDomainVariablesRow() *ExportCdashigDomainVariablesRow {
	this := ExportCdashigDomainVariablesRow{}
	return &this
}

// NewExportCdashigDomainVariablesRowWithDefaults instantiates a new ExportCdashigDomainVariablesRow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportCdashigDomainVariablesRowWithDefaults() *ExportCdashigDomainVariablesRow {
	this := ExportCdashigDomainVariablesRow{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ExportCdashigDomainVariablesRow) SetVersion(v string) {
	o.Version = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *ExportCdashigDomainVariablesRow) SetClass(v string) {
	o.Class = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *ExportCdashigDomainVariablesRow) SetDomain(v string) {
	o.Domain = &v
}

// GetDataCollectionScenario returns the DataCollectionScenario field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetDataCollectionScenario() string {
	if o == nil || IsNil(o.DataCollectionScenario) {
		var ret string
		return ret
	}
	return *o.DataCollectionScenario
}

// GetDataCollectionScenarioOk returns a tuple with the DataCollectionScenario field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetDataCollectionScenarioOk() (*string, bool) {
	if o == nil || IsNil(o.DataCollectionScenario) {
		return nil, false
	}
	return o.DataCollectionScenario, true
}

// HasDataCollectionScenario returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasDataCollectionScenario() bool {
	if o != nil && !IsNil(o.DataCollectionScenario) {
		return true
	}

	return false
}

// SetDataCollectionScenario gets a reference to the given string and assigns it to the DataCollectionScenario field.
func (o *ExportCdashigDomainVariablesRow) SetDataCollectionScenario(v string) {
	o.DataCollectionScenario = &v
}

// GetVariableOrder returns the VariableOrder field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetVariableOrder() string {
	if o == nil || IsNil(o.VariableOrder) {
		var ret string
		return ret
	}
	return *o.VariableOrder
}

// GetVariableOrderOk returns a tuple with the VariableOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetVariableOrderOk() (*string, bool) {
	if o == nil || IsNil(o.VariableOrder) {
		return nil, false
	}
	return o.VariableOrder, true
}

// HasVariableOrder returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasVariableOrder() bool {
	if o != nil && !IsNil(o.VariableOrder) {
		return true
	}

	return false
}

// SetVariableOrder gets a reference to the given string and assigns it to the VariableOrder field.
func (o *ExportCdashigDomainVariablesRow) SetVariableOrder(v string) {
	o.VariableOrder = &v
}

// GetCDASHIGVariable returns the CDASHIGVariable field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetCDASHIGVariable() string {
	if o == nil || IsNil(o.CDASHIGVariable) {
		var ret string
		return ret
	}
	return *o.CDASHIGVariable
}

// GetCDASHIGVariableOk returns a tuple with the CDASHIGVariable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetCDASHIGVariableOk() (*string, bool) {
	if o == nil || IsNil(o.CDASHIGVariable) {
		return nil, false
	}
	return o.CDASHIGVariable, true
}

// HasCDASHIGVariable returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasCDASHIGVariable() bool {
	if o != nil && !IsNil(o.CDASHIGVariable) {
		return true
	}

	return false
}

// SetCDASHIGVariable gets a reference to the given string and assigns it to the CDASHIGVariable field.
func (o *ExportCdashigDomainVariablesRow) SetCDASHIGVariable(v string) {
	o.CDASHIGVariable = &v
}

// GetCDASHIGVariableLabel returns the CDASHIGVariableLabel field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetCDASHIGVariableLabel() string {
	if o == nil || IsNil(o.CDASHIGVariableLabel) {
		var ret string
		return ret
	}
	return *o.CDASHIGVariableLabel
}

// GetCDASHIGVariableLabelOk returns a tuple with the CDASHIGVariableLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetCDASHIGVariableLabelOk() (*string, bool) {
	if o == nil || IsNil(o.CDASHIGVariableLabel) {
		return nil, false
	}
	return o.CDASHIGVariableLabel, true
}

// HasCDASHIGVariableLabel returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasCDASHIGVariableLabel() bool {
	if o != nil && !IsNil(o.CDASHIGVariableLabel) {
		return true
	}

	return false
}

// SetCDASHIGVariableLabel gets a reference to the given string and assigns it to the CDASHIGVariableLabel field.
func (o *ExportCdashigDomainVariablesRow) SetCDASHIGVariableLabel(v string) {
	o.CDASHIGVariableLabel = &v
}

// GetDRAFTCDASHIGDefinition returns the DRAFTCDASHIGDefinition field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetDRAFTCDASHIGDefinition() string {
	if o == nil || IsNil(o.DRAFTCDASHIGDefinition) {
		var ret string
		return ret
	}
	return *o.DRAFTCDASHIGDefinition
}

// GetDRAFTCDASHIGDefinitionOk returns a tuple with the DRAFTCDASHIGDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetDRAFTCDASHIGDefinitionOk() (*string, bool) {
	if o == nil || IsNil(o.DRAFTCDASHIGDefinition) {
		return nil, false
	}
	return o.DRAFTCDASHIGDefinition, true
}

// HasDRAFTCDASHIGDefinition returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasDRAFTCDASHIGDefinition() bool {
	if o != nil && !IsNil(o.DRAFTCDASHIGDefinition) {
		return true
	}

	return false
}

// SetDRAFTCDASHIGDefinition gets a reference to the given string and assigns it to the DRAFTCDASHIGDefinition field.
func (o *ExportCdashigDomainVariablesRow) SetDRAFTCDASHIGDefinition(v string) {
	o.DRAFTCDASHIGDefinition = &v
}

// GetQuestionText returns the QuestionText field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetQuestionText() string {
	if o == nil || IsNil(o.QuestionText) {
		var ret string
		return ret
	}
	return *o.QuestionText
}

// GetQuestionTextOk returns a tuple with the QuestionText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetQuestionTextOk() (*string, bool) {
	if o == nil || IsNil(o.QuestionText) {
		return nil, false
	}
	return o.QuestionText, true
}

// HasQuestionText returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasQuestionText() bool {
	if o != nil && !IsNil(o.QuestionText) {
		return true
	}

	return false
}

// SetQuestionText gets a reference to the given string and assigns it to the QuestionText field.
func (o *ExportCdashigDomainVariablesRow) SetQuestionText(v string) {
	o.QuestionText = &v
}

// GetPrompt returns the Prompt field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetPrompt() string {
	if o == nil || IsNil(o.Prompt) {
		var ret string
		return ret
	}
	return *o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetPromptOk() (*string, bool) {
	if o == nil || IsNil(o.Prompt) {
		return nil, false
	}
	return o.Prompt, true
}

// HasPrompt returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasPrompt() bool {
	if o != nil && !IsNil(o.Prompt) {
		return true
	}

	return false
}

// SetPrompt gets a reference to the given string and assigns it to the Prompt field.
func (o *ExportCdashigDomainVariablesRow) SetPrompt(v string) {
	o.Prompt = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ExportCdashigDomainVariablesRow) SetType(v string) {
	o.Type = &v
}

// GetCDASHIGCore returns the CDASHIGCore field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetCDASHIGCore() string {
	if o == nil || IsNil(o.CDASHIGCore) {
		var ret string
		return ret
	}
	return *o.CDASHIGCore
}

// GetCDASHIGCoreOk returns a tuple with the CDASHIGCore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetCDASHIGCoreOk() (*string, bool) {
	if o == nil || IsNil(o.CDASHIGCore) {
		return nil, false
	}
	return o.CDASHIGCore, true
}

// HasCDASHIGCore returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasCDASHIGCore() bool {
	if o != nil && !IsNil(o.CDASHIGCore) {
		return true
	}

	return false
}

// SetCDASHIGCore gets a reference to the given string and assigns it to the CDASHIGCore field.
func (o *ExportCdashigDomainVariablesRow) SetCDASHIGCore(v string) {
	o.CDASHIGCore = &v
}

// GetCaseReportFormCompletionInstructions returns the CaseReportFormCompletionInstructions field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetCaseReportFormCompletionInstructions() string {
	if o == nil || IsNil(o.CaseReportFormCompletionInstructions) {
		var ret string
		return ret
	}
	return *o.CaseReportFormCompletionInstructions
}

// GetCaseReportFormCompletionInstructionsOk returns a tuple with the CaseReportFormCompletionInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetCaseReportFormCompletionInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.CaseReportFormCompletionInstructions) {
		return nil, false
	}
	return o.CaseReportFormCompletionInstructions, true
}

// HasCaseReportFormCompletionInstructions returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasCaseReportFormCompletionInstructions() bool {
	if o != nil && !IsNil(o.CaseReportFormCompletionInstructions) {
		return true
	}

	return false
}

// SetCaseReportFormCompletionInstructions gets a reference to the given string and assigns it to the CaseReportFormCompletionInstructions field.
func (o *ExportCdashigDomainVariablesRow) SetCaseReportFormCompletionInstructions(v string) {
	o.CaseReportFormCompletionInstructions = &v
}

// GetSDTMIGTarget returns the SDTMIGTarget field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetSDTMIGTarget() []string {
	if o == nil || IsNil(o.SDTMIGTarget) {
		var ret []string
		return ret
	}
	return o.SDTMIGTarget
}

// GetSDTMIGTargetOk returns a tuple with the SDTMIGTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetSDTMIGTargetOk() ([]string, bool) {
	if o == nil || IsNil(o.SDTMIGTarget) {
		return nil, false
	}
	return o.SDTMIGTarget, true
}

// HasSDTMIGTarget returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasSDTMIGTarget() bool {
	if o != nil && !IsNil(o.SDTMIGTarget) {
		return true
	}

	return false
}

// SetSDTMIGTarget gets a reference to the given []string and assigns it to the SDTMIGTarget field.
func (o *ExportCdashigDomainVariablesRow) SetSDTMIGTarget(v []string) {
	o.SDTMIGTarget = v
}

// GetMappingInstructions returns the MappingInstructions field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetMappingInstructions() string {
	if o == nil || IsNil(o.MappingInstructions) {
		var ret string
		return ret
	}
	return *o.MappingInstructions
}

// GetMappingInstructionsOk returns a tuple with the MappingInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetMappingInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.MappingInstructions) {
		return nil, false
	}
	return o.MappingInstructions, true
}

// HasMappingInstructions returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasMappingInstructions() bool {
	if o != nil && !IsNil(o.MappingInstructions) {
		return true
	}

	return false
}

// SetMappingInstructions gets a reference to the given string and assigns it to the MappingInstructions field.
func (o *ExportCdashigDomainVariablesRow) SetMappingInstructions(v string) {
	o.MappingInstructions = &v
}

// GetControlledTerminologyCodelistName returns the ControlledTerminologyCodelistName field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetControlledTerminologyCodelistName() string {
	if o == nil || IsNil(o.ControlledTerminologyCodelistName) {
		var ret string
		return ret
	}
	return *o.ControlledTerminologyCodelistName
}

// GetControlledTerminologyCodelistNameOk returns a tuple with the ControlledTerminologyCodelistName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetControlledTerminologyCodelistNameOk() (*string, bool) {
	if o == nil || IsNil(o.ControlledTerminologyCodelistName) {
		return nil, false
	}
	return o.ControlledTerminologyCodelistName, true
}

// HasControlledTerminologyCodelistName returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasControlledTerminologyCodelistName() bool {
	if o != nil && !IsNil(o.ControlledTerminologyCodelistName) {
		return true
	}

	return false
}

// SetControlledTerminologyCodelistName gets a reference to the given string and assigns it to the ControlledTerminologyCodelistName field.
func (o *ExportCdashigDomainVariablesRow) SetControlledTerminologyCodelistName(v string) {
	o.ControlledTerminologyCodelistName = &v
}

// GetImplementationNotes returns the ImplementationNotes field value if set, zero value otherwise.
func (o *ExportCdashigDomainVariablesRow) GetImplementationNotes() string {
	if o == nil || IsNil(o.ImplementationNotes) {
		var ret string
		return ret
	}
	return *o.ImplementationNotes
}

// GetImplementationNotesOk returns a tuple with the ImplementationNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportCdashigDomainVariablesRow) GetImplementationNotesOk() (*string, bool) {
	if o == nil || IsNil(o.ImplementationNotes) {
		return nil, false
	}
	return o.ImplementationNotes, true
}

// HasImplementationNotes returns a boolean if a field has been set.
func (o *ExportCdashigDomainVariablesRow) HasImplementationNotes() bool {
	if o != nil && !IsNil(o.ImplementationNotes) {
		return true
	}

	return false
}

// SetImplementationNotes gets a reference to the given string and assigns it to the ImplementationNotes field.
func (o *ExportCdashigDomainVariablesRow) SetImplementationNotes(v string) {
	o.ImplementationNotes = &v
}

func (o ExportCdashigDomainVariablesRow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportCdashigDomainVariablesRow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["Version"] = o.Version
	}
	if !IsNil(o.Class) {
		toSerialize["Class"] = o.Class
	}
	if !IsNil(o.Domain) {
		toSerialize["Domain"] = o.Domain
	}
	if !IsNil(o.DataCollectionScenario) {
		toSerialize["Data Collection Scenario"] = o.DataCollectionScenario
	}
	if !IsNil(o.VariableOrder) {
		toSerialize["Variable Order"] = o.VariableOrder
	}
	if !IsNil(o.CDASHIGVariable) {
		toSerialize["CDASHIG Variable"] = o.CDASHIGVariable
	}
	if !IsNil(o.CDASHIGVariableLabel) {
		toSerialize["CDASHIG Variable Label"] = o.CDASHIGVariableLabel
	}
	if !IsNil(o.DRAFTCDASHIGDefinition) {
		toSerialize["DRAFT CDASHIG Definition"] = o.DRAFTCDASHIGDefinition
	}
	if !IsNil(o.QuestionText) {
		toSerialize["Question Text"] = o.QuestionText
	}
	if !IsNil(o.Prompt) {
		toSerialize["Prompt"] = o.Prompt
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.CDASHIGCore) {
		toSerialize["CDASHIG Core"] = o.CDASHIGCore
	}
	if !IsNil(o.CaseReportFormCompletionInstructions) {
		toSerialize["Case Report Form Completion Instructions"] = o.CaseReportFormCompletionInstructions
	}
	if !IsNil(o.SDTMIGTarget) {
		toSerialize["SDTMIG Target"] = o.SDTMIGTarget
	}
	if !IsNil(o.MappingInstructions) {
		toSerialize["Mapping Instructions"] = o.MappingInstructions
	}
	if !IsNil(o.ControlledTerminologyCodelistName) {
		toSerialize["Controlled Terminology Codelist Name"] = o.ControlledTerminologyCodelistName
	}
	if !IsNil(o.ImplementationNotes) {
		toSerialize["Implementation Notes"] = o.ImplementationNotes
	}
	return toSerialize, nil
}

type NullableExportCdashigDomainVariablesRow struct {
	value *ExportCdashigDomainVariablesRow
	isSet bool
}

func (v NullableExportCdashigDomainVariablesRow) Get() *ExportCdashigDomainVariablesRow {
	return v.value
}

func (v *NullableExportCdashigDomainVariablesRow) Set(val *ExportCdashigDomainVariablesRow) {
	v.value = val
	v.isSet = true
}

func (v NullableExportCdashigDomainVariablesRow) IsSet() bool {
	return v.isSet
}

func (v *NullableExportCdashigDomainVariablesRow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportCdashigDomainVariablesRow(val *ExportCdashigDomainVariablesRow) *NullableExportCdashigDomainVariablesRow {
	return &NullableExportCdashigDomainVariablesRow{value: val, isSet: true}
}

func (v NullableExportCdashigDomainVariablesRow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportCdashigDomainVariablesRow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


