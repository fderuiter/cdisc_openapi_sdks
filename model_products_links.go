/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductsLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductsLinks{}

// ProductsLinks struct for ProductsLinks
type ProductsLinks struct {
	Self *ProductsRef `json:"self,omitempty"`
	DataCollection *ProductgroupDataCollection `json:"data-collection,omitempty"`
	DataTabulation *ProductgroupDataTabulation `json:"data-tabulation,omitempty"`
	DataAnalysis *ProductgroupDataAnalysis `json:"data-analysis,omitempty"`
	Terminology *ProductgroupTerminology `json:"terminology,omitempty"`
	Measure *ProductgroupQrs `json:"measure,omitempty"`
}

// NewProductsLinks instantiates a new ProductsLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductsLinks() *ProductsLinks {
	this := ProductsLinks{}
	return &this
}

// NewProductsLinksWithDefaults instantiates a new ProductsLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductsLinksWithDefaults() *ProductsLinks {
	this := ProductsLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *ProductsLinks) GetSelf() ProductsRef {
	if o == nil || IsNil(o.Self) {
		var ret ProductsRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsLinks) GetSelfOk() (*ProductsRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *ProductsLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given ProductsRef and assigns it to the Self field.
func (o *ProductsLinks) SetSelf(v ProductsRef) {
	o.Self = &v
}

// GetDataCollection returns the DataCollection field value if set, zero value otherwise.
func (o *ProductsLinks) GetDataCollection() ProductgroupDataCollection {
	if o == nil || IsNil(o.DataCollection) {
		var ret ProductgroupDataCollection
		return ret
	}
	return *o.DataCollection
}

// GetDataCollectionOk returns a tuple with the DataCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsLinks) GetDataCollectionOk() (*ProductgroupDataCollection, bool) {
	if o == nil || IsNil(o.DataCollection) {
		return nil, false
	}
	return o.DataCollection, true
}

// HasDataCollection returns a boolean if a field has been set.
func (o *ProductsLinks) HasDataCollection() bool {
	if o != nil && !IsNil(o.DataCollection) {
		return true
	}

	return false
}

// SetDataCollection gets a reference to the given ProductgroupDataCollection and assigns it to the DataCollection field.
func (o *ProductsLinks) SetDataCollection(v ProductgroupDataCollection) {
	o.DataCollection = &v
}

// GetDataTabulation returns the DataTabulation field value if set, zero value otherwise.
func (o *ProductsLinks) GetDataTabulation() ProductgroupDataTabulation {
	if o == nil || IsNil(o.DataTabulation) {
		var ret ProductgroupDataTabulation
		return ret
	}
	return *o.DataTabulation
}

// GetDataTabulationOk returns a tuple with the DataTabulation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsLinks) GetDataTabulationOk() (*ProductgroupDataTabulation, bool) {
	if o == nil || IsNil(o.DataTabulation) {
		return nil, false
	}
	return o.DataTabulation, true
}

// HasDataTabulation returns a boolean if a field has been set.
func (o *ProductsLinks) HasDataTabulation() bool {
	if o != nil && !IsNil(o.DataTabulation) {
		return true
	}

	return false
}

// SetDataTabulation gets a reference to the given ProductgroupDataTabulation and assigns it to the DataTabulation field.
func (o *ProductsLinks) SetDataTabulation(v ProductgroupDataTabulation) {
	o.DataTabulation = &v
}

// GetDataAnalysis returns the DataAnalysis field value if set, zero value otherwise.
func (o *ProductsLinks) GetDataAnalysis() ProductgroupDataAnalysis {
	if o == nil || IsNil(o.DataAnalysis) {
		var ret ProductgroupDataAnalysis
		return ret
	}
	return *o.DataAnalysis
}

// GetDataAnalysisOk returns a tuple with the DataAnalysis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsLinks) GetDataAnalysisOk() (*ProductgroupDataAnalysis, bool) {
	if o == nil || IsNil(o.DataAnalysis) {
		return nil, false
	}
	return o.DataAnalysis, true
}

// HasDataAnalysis returns a boolean if a field has been set.
func (o *ProductsLinks) HasDataAnalysis() bool {
	if o != nil && !IsNil(o.DataAnalysis) {
		return true
	}

	return false
}

// SetDataAnalysis gets a reference to the given ProductgroupDataAnalysis and assigns it to the DataAnalysis field.
func (o *ProductsLinks) SetDataAnalysis(v ProductgroupDataAnalysis) {
	o.DataAnalysis = &v
}

// GetTerminology returns the Terminology field value if set, zero value otherwise.
func (o *ProductsLinks) GetTerminology() ProductgroupTerminology {
	if o == nil || IsNil(o.Terminology) {
		var ret ProductgroupTerminology
		return ret
	}
	return *o.Terminology
}

// GetTerminologyOk returns a tuple with the Terminology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsLinks) GetTerminologyOk() (*ProductgroupTerminology, bool) {
	if o == nil || IsNil(o.Terminology) {
		return nil, false
	}
	return o.Terminology, true
}

// HasTerminology returns a boolean if a field has been set.
func (o *ProductsLinks) HasTerminology() bool {
	if o != nil && !IsNil(o.Terminology) {
		return true
	}

	return false
}

// SetTerminology gets a reference to the given ProductgroupTerminology and assigns it to the Terminology field.
func (o *ProductsLinks) SetTerminology(v ProductgroupTerminology) {
	o.Terminology = &v
}

// GetMeasure returns the Measure field value if set, zero value otherwise.
func (o *ProductsLinks) GetMeasure() ProductgroupQrs {
	if o == nil || IsNil(o.Measure) {
		var ret ProductgroupQrs
		return ret
	}
	return *o.Measure
}

// GetMeasureOk returns a tuple with the Measure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsLinks) GetMeasureOk() (*ProductgroupQrs, bool) {
	if o == nil || IsNil(o.Measure) {
		return nil, false
	}
	return o.Measure, true
}

// HasMeasure returns a boolean if a field has been set.
func (o *ProductsLinks) HasMeasure() bool {
	if o != nil && !IsNil(o.Measure) {
		return true
	}

	return false
}

// SetMeasure gets a reference to the given ProductgroupQrs and assigns it to the Measure field.
func (o *ProductsLinks) SetMeasure(v ProductgroupQrs) {
	o.Measure = &v
}

func (o ProductsLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductsLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.DataCollection) {
		toSerialize["data-collection"] = o.DataCollection
	}
	if !IsNil(o.DataTabulation) {
		toSerialize["data-tabulation"] = o.DataTabulation
	}
	if !IsNil(o.DataAnalysis) {
		toSerialize["data-analysis"] = o.DataAnalysis
	}
	if !IsNil(o.Terminology) {
		toSerialize["terminology"] = o.Terminology
	}
	if !IsNil(o.Measure) {
		toSerialize["measure"] = o.Measure
	}
	return toSerialize, nil
}

type NullableProductsLinks struct {
	value *ProductsLinks
	isSet bool
}

func (v NullableProductsLinks) Get() *ProductsLinks {
	return v.value
}

func (v *NullableProductsLinks) Set(val *ProductsLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableProductsLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableProductsLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductsLinks(val *ProductsLinks) *NullableProductsLinks {
	return &NullableProductsLinks{value: val, isSet: true}
}

func (v NullableProductsLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductsLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


