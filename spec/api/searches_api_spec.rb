=begin
#CDISC Library API

#REST API Documentation for CDISC Library in production server

The version of the OpenAPI document: 1.1.0
Contact: cdisc_library_support@cdisc.org
Generated by: https://openapi-generator.tech
Generator version: 7.16.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SearchesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SearchesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SearchesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SearchesApi' do
    it 'should create an instance of SearchesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SearchesApi)
    end
  end

  # unit tests for mdr_search_get
  # Get Search Results Across CDISC Library
  # @param q Search Term Expression
  # @param [Hash] opts the optional parameters
  # @option opts [String] :highlight Search Highlight Expression
  # @option opts [Float] :start Initial Search Result Index
  # @option opts [Float] :page_size Number of Search Results to Return
  # @option opts [String] :_class Limit Search by Setting Scope to Class
  # @option opts [String] :codelist Limit Search by Setting Scope to Codelist
  # @option opts [String] :concept_id Limit Search by Setting Scope to Concept ID
  # @option opts [String] :core Limit Search by Setting Scope to Core
  # @option opts [String] :data_structure Limit Search by Setting Scope to Data Structure
  # @option opts [String] :dataset_structure Limit Search by Setting Scope to Dataset Structure
  # @option opts [String] :definition Limit Search by Setting Scope to Definition
  # @option opts [String] :description Limit Search by Setting Scope to Description
  # @option opts [String] :domain Limit Search by Setting Scope to Domain
  # @option opts [String] :effective_date Limit Search by Setting Scope to Effective Date
  # @option opts [String] :extensible Limit Search by Setting Scope to Extensible
  # @option opts [String] :href Limit Search by Setting Scope to Href
  # @option opts [String] :label Limit Search by Setting Scope to Label
  # @option opts [String] :measure_type SLimit Search by Setting Scope to Measure Type
  # @option opts [String] :name Limit Search by Setting Scope to Name
  # @option opts [String] :preferred_term Limit Search by Setting Scope to Preferred Term
  # @option opts [String] :product Limit Search by Setting Scope to Product
  # @option opts [String] :product_group Limit Search by Setting Scope to Product Group
  # @option opts [String] :registration_status Limit Search by Setting Scope to Registration Status
  # @option opts [String] :role_description Limit Search by Setting Scope to Role Description
  # @option opts [String] :sdtm_target Limit Search by Setting Scope to SDTM Target
  # @option opts [String] :simple_datatype Limit Search by Setting Scope to Simple Datatype
  # @option opts [String] :submission_value Limit Search by Setting Scope to Submission Value
  # @option opts [String] :synonyms Limit Search by Setting Scope to Synonyms
  # @option opts [String] :type Limit Search by Setting Scope to Type
  # @option opts [String] :ui_href Limit Search by Setting Scope to UI Href
  # @option opts [String] :value_domain Limit Search by Setting Scope to Value Domain
  # @option opts [String] :variable_set Limit Search by Setting Scope to Variable Set
  # @option opts [String] :version Limit Search by Setting Scope to Version
  # @return [DefaultSearchResponse]
  describe 'mdr_search_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for mdr_search_scopes_get
  # Get Search Results Across CDISC Library
  # @param [Hash] opts the optional parameters
  # @return [MdrSearchScopesGet200Response]
  describe 'mdr_search_scopes_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for mdr_search_scopes_scope_get
  # Get Search Results Limited to Scope
  # @param scope Search Scope
  # @param [Hash] opts the optional parameters
  # @return [ScopeValues]
  describe 'mdr_search_scopes_scope_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
