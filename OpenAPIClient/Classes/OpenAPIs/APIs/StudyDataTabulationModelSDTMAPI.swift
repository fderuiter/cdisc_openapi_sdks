//
// StudyDataTabulationModelSDTMAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class StudyDataTabulationModelSDTMAPI {

    /**

     - parameter _class: (path) SDTM Class Identifier 
     - parameter _var: (path) SDTM Variable Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrRootSdtmClassesClassVariablesVarGet(_class: String, _var: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: RootSdtmClassVariable?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrRootSdtmClassesClassVariablesVarGetWithRequestBuilder(_class: _class, _var: _var).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/root/sdtm/classes/{class}/variables/{var}
     - Get Root of SDTM Class Variable
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter _class: (path) SDTM Class Identifier 
     - parameter _var: (path) SDTM Variable Identifier 
     - returns: RequestBuilder<RootSdtmClassVariable> 
     */
    open class func mdrRootSdtmClassesClassVariablesVarGetWithRequestBuilder(_class: String, _var: String) -> RequestBuilder<RootSdtmClassVariable> {
        var localVariablePath = "/mdr/root/sdtm/classes/{class}/variables/{var}"
        let _classPreEscape = "\(APIHelper.mapValueToPathItem(_class))"
        let _classPostEscape = _classPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{class}", with: _classPostEscape, options: .literal, range: nil)
        let _varPreEscape = "\(APIHelper.mapValueToPathItem(_var))"
        let _varPostEscape = _varPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{var}", with: _varPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RootSdtmClassVariable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter dataset: (path) SDTM Dataset Identifier 
     - parameter _var: (path) SDTM Variable Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrRootSdtmDatasetsDatasetVariablesVarGet(dataset: String, _var: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: RootSdtmDatasetVariable?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrRootSdtmDatasetsDatasetVariablesVarGetWithRequestBuilder(dataset: dataset, _var: _var).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/root/sdtm/datasets/{dataset}/variables/{var}
     - Get Root SDTM Dataset Variable
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter dataset: (path) SDTM Dataset Identifier 
     - parameter _var: (path) SDTM Variable Identifier 
     - returns: RequestBuilder<RootSdtmDatasetVariable> 
     */
    open class func mdrRootSdtmDatasetsDatasetVariablesVarGetWithRequestBuilder(dataset: String, _var: String) -> RequestBuilder<RootSdtmDatasetVariable> {
        var localVariablePath = "/mdr/root/sdtm/datasets/{dataset}/variables/{var}"
        let datasetPreEscape = "\(APIHelper.mapValueToPathItem(dataset))"
        let datasetPostEscape = datasetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{dataset}", with: datasetPostEscape, options: .literal, range: nil)
        let _varPreEscape = "\(APIHelper.mapValueToPathItem(_var))"
        let _varPostEscape = _varPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{var}", with: _varPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RootSdtmDatasetVariable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SDTM Class Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionClassesClassDatasetsGet(version: String, _class: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmClassDatasets?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionClassesClassDatasetsGetWithRequestBuilder(version: version, _class: _class).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}/classes/{class}/datasets
     - Get SDTM Class Dataset List
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SDTM Class Identifier 
     - returns: RequestBuilder<SdtmClassDatasets> 
     */
    open class func mdrSdtmVersionClassesClassDatasetsGetWithRequestBuilder(version: String, _class: String) -> RequestBuilder<SdtmClassDatasets> {
        var localVariablePath = "/mdr/sdtm/{version}/classes/{class}/datasets"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let _classPreEscape = "\(APIHelper.mapValueToPathItem(_class))"
        let _classPostEscape = _classPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{class}", with: _classPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmClassDatasets>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SDTM Class Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionClassesClassGet(version: String, _class: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmClass?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionClassesClassGetWithRequestBuilder(version: version, _class: _class).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}/classes/{class}
     - Get SDTM Class
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SDTM Class Identifier 
     - returns: RequestBuilder<SdtmClass> 
     */
    open class func mdrSdtmVersionClassesClassGetWithRequestBuilder(version: String, _class: String) -> RequestBuilder<SdtmClass> {
        var localVariablePath = "/mdr/sdtm/{version}/classes/{class}"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let _classPreEscape = "\(APIHelper.mapValueToPathItem(_class))"
        let _classPostEscape = _classPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{class}", with: _classPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmClass>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SDTM Class Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionClassesClassVariablesGet(version: String, _class: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmClassVariables?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionClassesClassVariablesGetWithRequestBuilder(version: version, _class: _class).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}/classes/{class}/variables
     - Get SDTM Class Variable List
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SDTM Class Identifier 
     - returns: RequestBuilder<SdtmClassVariables> 
     */
    open class func mdrSdtmVersionClassesClassVariablesGetWithRequestBuilder(version: String, _class: String) -> RequestBuilder<SdtmClassVariables> {
        var localVariablePath = "/mdr/sdtm/{version}/classes/{class}/variables"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let _classPreEscape = "\(APIHelper.mapValueToPathItem(_class))"
        let _classPostEscape = _classPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{class}", with: _classPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmClassVariables>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SDTM Class Identifier 
     - parameter _var: (path) SDTM Variable Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionClassesClassVariablesVarGet(version: String, _class: String, _var: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmClassVariable?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionClassesClassVariablesVarGetWithRequestBuilder(version: version, _class: _class, _var: _var).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}/classes/{class}/variables/{var}
     - Get SDTM Class Variable
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SDTM Class Identifier 
     - parameter _var: (path) SDTM Variable Identifier 
     - returns: RequestBuilder<SdtmClassVariable> 
     */
    open class func mdrSdtmVersionClassesClassVariablesVarGetWithRequestBuilder(version: String, _class: String, _var: String) -> RequestBuilder<SdtmClassVariable> {
        var localVariablePath = "/mdr/sdtm/{version}/classes/{class}/variables/{var}"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let _classPreEscape = "\(APIHelper.mapValueToPathItem(_class))"
        let _classPostEscape = _classPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{class}", with: _classPostEscape, options: .literal, range: nil)
        let _varPreEscape = "\(APIHelper.mapValueToPathItem(_var))"
        let _varPostEscape = _varPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{var}", with: _varPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmClassVariable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionClassesGet(version: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmClasses?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionClassesGetWithRequestBuilder(version: version).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}/classes
     - Get SDTM Class List
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - returns: RequestBuilder<SdtmClasses> 
     */
    open class func mdrSdtmVersionClassesGetWithRequestBuilder(version: String) -> RequestBuilder<SdtmClasses> {
        var localVariablePath = "/mdr/sdtm/{version}/classes"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmClasses>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SDTM Dataset Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionDatasetsDatasetGet(version: String, dataset: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmDataset?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionDatasetsDatasetGetWithRequestBuilder(version: version, dataset: dataset).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}/datasets/{dataset}
     - Get SDTM Dataset
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SDTM Dataset Identifier 
     - returns: RequestBuilder<SdtmDataset> 
     */
    open class func mdrSdtmVersionDatasetsDatasetGetWithRequestBuilder(version: String, dataset: String) -> RequestBuilder<SdtmDataset> {
        var localVariablePath = "/mdr/sdtm/{version}/datasets/{dataset}"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let datasetPreEscape = "\(APIHelper.mapValueToPathItem(dataset))"
        let datasetPostEscape = datasetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{dataset}", with: datasetPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmDataset>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SDTM Dataset Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionDatasetsDatasetVariablesGet(version: String, dataset: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmDatasetVariables?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionDatasetsDatasetVariablesGetWithRequestBuilder(version: version, dataset: dataset).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}/datasets/{dataset}/variables
     - Get SDTM Dataset Variable List
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SDTM Dataset Identifier 
     - returns: RequestBuilder<SdtmDatasetVariables> 
     */
    open class func mdrSdtmVersionDatasetsDatasetVariablesGetWithRequestBuilder(version: String, dataset: String) -> RequestBuilder<SdtmDatasetVariables> {
        var localVariablePath = "/mdr/sdtm/{version}/datasets/{dataset}/variables"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let datasetPreEscape = "\(APIHelper.mapValueToPathItem(dataset))"
        let datasetPostEscape = datasetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{dataset}", with: datasetPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmDatasetVariables>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SDTM Dataset Identifier 
     - parameter _var: (path) SDTM Variable Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionDatasetsDatasetVariablesVarGet(version: String, dataset: String, _var: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmDatasetVariable?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionDatasetsDatasetVariablesVarGetWithRequestBuilder(version: version, dataset: dataset, _var: _var).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}/datasets/{dataset}/variables/{var}
     - Get SDTM Dataset Variable
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SDTM Dataset Identifier 
     - parameter _var: (path) SDTM Variable Identifier 
     - returns: RequestBuilder<SdtmDatasetVariable> 
     */
    open class func mdrSdtmVersionDatasetsDatasetVariablesVarGetWithRequestBuilder(version: String, dataset: String, _var: String) -> RequestBuilder<SdtmDatasetVariable> {
        var localVariablePath = "/mdr/sdtm/{version}/datasets/{dataset}/variables/{var}"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let datasetPreEscape = "\(APIHelper.mapValueToPathItem(dataset))"
        let datasetPostEscape = datasetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{dataset}", with: datasetPostEscape, options: .literal, range: nil)
        let _varPreEscape = "\(APIHelper.mapValueToPathItem(_var))"
        let _varPostEscape = _varPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{var}", with: _varPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmDatasetVariable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionDatasetsGet(version: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmDatasets?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionDatasetsGetWithRequestBuilder(version: version).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}/datasets
     - Get SDTM Dataset List
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - returns: RequestBuilder<SdtmDatasets> 
     */
    open class func mdrSdtmVersionDatasetsGetWithRequestBuilder(version: String) -> RequestBuilder<SdtmDatasets> {
        var localVariablePath = "/mdr/sdtm/{version}/datasets"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmDatasets>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSdtmVersionGet(version: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SdtmProduct?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSdtmVersionGetWithRequestBuilder(version: version).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sdtm/{version}
     - Get SDTM product
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - returns: RequestBuilder<SdtmProduct> 
     */
    open class func mdrSdtmVersionGetWithRequestBuilder(version: String) -> RequestBuilder<SdtmProduct> {
        var localVariablePath = "/mdr/sdtm/{version}"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SdtmProduct>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
