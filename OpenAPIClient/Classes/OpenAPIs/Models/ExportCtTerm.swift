//
// ExportCtTerm.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ExportCtTerm: Codable, JSONEncodable, Hashable {

    public var bundle1: String?
    public var cDISCSynonymS: [String]?
    public var bundle2: String?

    public init(bundle1: String? = nil, cDISCSynonymS: [String]? = nil, bundle2: String? = nil) {
        self.bundle1 = bundle1
        self.cDISCSynonymS = cDISCSynonymS
        self.bundle2 = bundle2
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bundle1 = "bundle-1"
        case cDISCSynonymS = "CDISC Synonym(s)"
        case bundle2 = "bundle-2"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(bundle1, forKey: .bundle1)
        try container.encodeIfPresent(cDISCSynonymS, forKey: .cDISCSynonymS)
        try container.encodeIfPresent(bundle2, forKey: .bundle2)
    }
}

