//
// CdashDomainFieldLinks.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CdashDomainFieldLinks: Codable, JSONEncodable, Hashable {

    public var _self: CdashDomainFieldRef?
    public var codelist: [RootCtCodelistRefElement]?
    public var parentProduct: CdashProductRef?
    public var parentClass: CdashClassRef?
    public var parentDomain: CdashDomainRef?
    public var rootItem: RootCdashDomainFieldRef?
    public var priorVersion: CdashDomainFieldRef?
    public var sdtmDatasetMappingTargets: [SdtmDatasetVariableRefTarget]?
    public var sdtmigDatasetMappingTargets: [SdtmigDatasetVariableRefTarget]?

    public init(_self: CdashDomainFieldRef? = nil, codelist: [RootCtCodelistRefElement]? = nil, parentProduct: CdashProductRef? = nil, parentClass: CdashClassRef? = nil, parentDomain: CdashDomainRef? = nil, rootItem: RootCdashDomainFieldRef? = nil, priorVersion: CdashDomainFieldRef? = nil, sdtmDatasetMappingTargets: [SdtmDatasetVariableRefTarget]? = nil, sdtmigDatasetMappingTargets: [SdtmigDatasetVariableRefTarget]? = nil) {
        self._self = _self
        self.codelist = codelist
        self.parentProduct = parentProduct
        self.parentClass = parentClass
        self.parentDomain = parentDomain
        self.rootItem = rootItem
        self.priorVersion = priorVersion
        self.sdtmDatasetMappingTargets = sdtmDatasetMappingTargets
        self.sdtmigDatasetMappingTargets = sdtmigDatasetMappingTargets
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _self = "self"
        case codelist
        case parentProduct
        case parentClass
        case parentDomain
        case rootItem
        case priorVersion
        case sdtmDatasetMappingTargets
        case sdtmigDatasetMappingTargets
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_self, forKey: ._self)
        try container.encodeIfPresent(codelist, forKey: .codelist)
        try container.encodeIfPresent(parentProduct, forKey: .parentProduct)
        try container.encodeIfPresent(parentClass, forKey: .parentClass)
        try container.encodeIfPresent(parentDomain, forKey: .parentDomain)
        try container.encodeIfPresent(rootItem, forKey: .rootItem)
        try container.encodeIfPresent(priorVersion, forKey: .priorVersion)
        try container.encodeIfPresent(sdtmDatasetMappingTargets, forKey: .sdtmDatasetMappingTargets)
        try container.encodeIfPresent(sdtmigDatasetMappingTargets, forKey: .sdtmigDatasetMappingTargets)
    }
}

