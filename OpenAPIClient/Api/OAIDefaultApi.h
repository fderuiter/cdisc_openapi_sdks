#import <Foundation/Foundation.h>
#import "OAIAbout.h"
#import "OAIDefaultErrorResponse.h"
#import "OAILastupdated.h"
#import "OAIProductgroupDataAnalysis.h"
#import "OAIProductgroupDataCollection.h"
#import "OAIProductgroupDataTabulation.h"
#import "OAIProductgroupQrs.h"
#import "OAIProductgroupTerminology.h"
#import "OAIProducts.h"
#import "OAIXmlAbout.h"
#import "OAIXmlLastupdated.h"
#import "OAIXmlProductgroupDataAnalysis.h"
#import "OAIXmlProductgroupDataCollection.h"
#import "OAIXmlProductgroupDataTabulation.h"
#import "OAIXmlProductgroupTerminology.h"
#import "OAIXmlProducts.h"
#import "OAIApi.h"

/**
* CDISC Library API
* REST API Documentation for CDISC Library in production server
*
* The version of the OpenAPI document: 1.1.0
* Contact: cdisc_library_support@cdisc.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIDefaultApi: NSObject <OAIApi>

extern NSString* kOAIDefaultApiErrorDomain;
extern NSInteger kOAIDefaultApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 
/// Get Information About CDISC Library
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAIAbout*
-(NSURLSessionTask*) mdrAboutGetWithCompletionHandler: 
    (void (^)(OAIAbout* output, NSError* error)) handler;


/// 
/// Get CDISC Library Last Updated
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAILastupdated*
-(NSURLSessionTask*) mdrLastupdatedGetWithCompletionHandler: 
    (void (^)(OAILastupdated* output, NSError* error)) handler;


/// 
/// Get CDISC Library Product Group Data Analysis
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAIProductgroupDataAnalysis*
-(NSURLSessionTask*) mdrProductsDataAnalysisGetWithCompletionHandler: 
    (void (^)(OAIProductgroupDataAnalysis* output, NSError* error)) handler;


/// 
/// Get CDISC Library Product Group Data Collection
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAIProductgroupDataCollection*
-(NSURLSessionTask*) mdrProductsDataCollectionGetWithCompletionHandler: 
    (void (^)(OAIProductgroupDataCollection* output, NSError* error)) handler;


/// 
/// Get CDISC Library Product Group Data Tabulation
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAIProductgroupDataTabulation*
-(NSURLSessionTask*) mdrProductsDataTabulationGetWithCompletionHandler: 
    (void (^)(OAIProductgroupDataTabulation* output, NSError* error)) handler;


/// 
/// Get CDISC Library Products
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAIProducts*
-(NSURLSessionTask*) mdrProductsGetWithCompletionHandler: 
    (void (^)(OAIProducts* output, NSError* error)) handler;


/// 
/// Get CDISC Library Product Group QRS
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAIProductgroupQrs*
-(NSURLSessionTask*) mdrProductsMeasuresGetWithCompletionHandler: 
    (void (^)(OAIProductgroupQrs* output, NSError* error)) handler;


/// 
/// Get CDISC Library Product Group Terminology
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAIProductgroupTerminology*
-(NSURLSessionTask*) mdrProductsTerminologyGetWithCompletionHandler: 
    (void (^)(OAIProductgroupTerminology* output, NSError* error)) handler;



@end
