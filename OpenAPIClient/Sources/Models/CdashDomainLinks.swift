//
// CdashDomainLinks.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct CdashDomainLinks: Codable {
    public var _self: CdashDomainRef?
    public var parentProduct: CdashProductRef?
    public var parentClass: CdashClassRef?
    public var priorVersion: CdashDomainRef?

    public init(_self: CdashDomainRef? = nil, parentProduct: CdashProductRef? = nil, parentClass: CdashClassRef? = nil, priorVersion: CdashDomainRef? = nil) {
        self._self = _self
        self.parentProduct = parentProduct
        self.parentClass = parentClass
        self.priorVersion = priorVersion
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _self = "self"
        case parentProduct
        case parentClass
        case priorVersion
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        _self = try container.decodeIfPresent(CdashDomainRef.self, forKey: ._self)
        parentProduct = try container.decodeIfPresent(CdashProductRef.self, forKey: .parentProduct)
        parentClass = try container.decodeIfPresent(CdashClassRef.self, forKey: .parentClass)
        priorVersion = try container.decodeIfPresent(CdashDomainRef.self, forKey: .priorVersion)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_self, forKey: ._self)
        try container.encodeIfPresent(parentProduct, forKey: .parentProduct)
        try container.encodeIfPresent(parentClass, forKey: .parentClass)
        try container.encodeIfPresent(priorVersion, forKey: .priorVersion)
    }
}
