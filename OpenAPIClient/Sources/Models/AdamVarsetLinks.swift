//
// AdamVarsetLinks.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct AdamVarsetLinks: Codable {
    public var _self: AdamVarsetRef?
    public var parentProduct: AdamProductRef?
    public var parentDatastructure: AdamDatastructureRef?
    public var priorVersion: AdamVarsetRef?

    public init(_self: AdamVarsetRef? = nil, parentProduct: AdamProductRef? = nil, parentDatastructure: AdamDatastructureRef? = nil, priorVersion: AdamVarsetRef? = nil) {
        self._self = _self
        self.parentProduct = parentProduct
        self.parentDatastructure = parentDatastructure
        self.priorVersion = priorVersion
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _self = "self"
        case parentProduct
        case parentDatastructure
        case priorVersion
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        _self = try container.decodeIfPresent(AdamVarsetRef.self, forKey: ._self)
        parentProduct = try container.decodeIfPresent(AdamProductRef.self, forKey: .parentProduct)
        parentDatastructure = try container.decodeIfPresent(AdamDatastructureRef.self, forKey: .parentDatastructure)
        priorVersion = try container.decodeIfPresent(AdamVarsetRef.self, forKey: .priorVersion)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_self, forKey: ._self)
        try container.encodeIfPresent(parentProduct, forKey: .parentProduct)
        try container.encodeIfPresent(parentDatastructure, forKey: .parentDatastructure)
        try container.encodeIfPresent(priorVersion, forKey: .priorVersion)
    }
}
