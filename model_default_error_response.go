/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DefaultErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultErrorResponse{}

// DefaultErrorResponse struct for DefaultErrorResponse
type DefaultErrorResponse struct {
	// HTTP Status Code
	StatusCode *string `json:"statusCode,omitempty"`
	// HTTP Reason Phrase
	ReasonPhrase *string `json:"reasonPhrase,omitempty"`
	// User Error Message
	UserMessage *string `json:"userMessage,omitempty"`
	// Admin Error Message
	AdminMessage *string `json:"adminMessage,omitempty"`
}

// NewDefaultErrorResponse instantiates a new DefaultErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultErrorResponse() *DefaultErrorResponse {
	this := DefaultErrorResponse{}
	return &this
}

// NewDefaultErrorResponseWithDefaults instantiates a new DefaultErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultErrorResponseWithDefaults() *DefaultErrorResponse {
	this := DefaultErrorResponse{}
	return &this
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *DefaultErrorResponse) GetStatusCode() string {
	if o == nil || IsNil(o.StatusCode) {
		var ret string
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultErrorResponse) GetStatusCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *DefaultErrorResponse) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given string and assigns it to the StatusCode field.
func (o *DefaultErrorResponse) SetStatusCode(v string) {
	o.StatusCode = &v
}

// GetReasonPhrase returns the ReasonPhrase field value if set, zero value otherwise.
func (o *DefaultErrorResponse) GetReasonPhrase() string {
	if o == nil || IsNil(o.ReasonPhrase) {
		var ret string
		return ret
	}
	return *o.ReasonPhrase
}

// GetReasonPhraseOk returns a tuple with the ReasonPhrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultErrorResponse) GetReasonPhraseOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonPhrase) {
		return nil, false
	}
	return o.ReasonPhrase, true
}

// HasReasonPhrase returns a boolean if a field has been set.
func (o *DefaultErrorResponse) HasReasonPhrase() bool {
	if o != nil && !IsNil(o.ReasonPhrase) {
		return true
	}

	return false
}

// SetReasonPhrase gets a reference to the given string and assigns it to the ReasonPhrase field.
func (o *DefaultErrorResponse) SetReasonPhrase(v string) {
	o.ReasonPhrase = &v
}

// GetUserMessage returns the UserMessage field value if set, zero value otherwise.
func (o *DefaultErrorResponse) GetUserMessage() string {
	if o == nil || IsNil(o.UserMessage) {
		var ret string
		return ret
	}
	return *o.UserMessage
}

// GetUserMessageOk returns a tuple with the UserMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultErrorResponse) GetUserMessageOk() (*string, bool) {
	if o == nil || IsNil(o.UserMessage) {
		return nil, false
	}
	return o.UserMessage, true
}

// HasUserMessage returns a boolean if a field has been set.
func (o *DefaultErrorResponse) HasUserMessage() bool {
	if o != nil && !IsNil(o.UserMessage) {
		return true
	}

	return false
}

// SetUserMessage gets a reference to the given string and assigns it to the UserMessage field.
func (o *DefaultErrorResponse) SetUserMessage(v string) {
	o.UserMessage = &v
}

// GetAdminMessage returns the AdminMessage field value if set, zero value otherwise.
func (o *DefaultErrorResponse) GetAdminMessage() string {
	if o == nil || IsNil(o.AdminMessage) {
		var ret string
		return ret
	}
	return *o.AdminMessage
}

// GetAdminMessageOk returns a tuple with the AdminMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultErrorResponse) GetAdminMessageOk() (*string, bool) {
	if o == nil || IsNil(o.AdminMessage) {
		return nil, false
	}
	return o.AdminMessage, true
}

// HasAdminMessage returns a boolean if a field has been set.
func (o *DefaultErrorResponse) HasAdminMessage() bool {
	if o != nil && !IsNil(o.AdminMessage) {
		return true
	}

	return false
}

// SetAdminMessage gets a reference to the given string and assigns it to the AdminMessage field.
func (o *DefaultErrorResponse) SetAdminMessage(v string) {
	o.AdminMessage = &v
}

func (o DefaultErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.ReasonPhrase) {
		toSerialize["reasonPhrase"] = o.ReasonPhrase
	}
	if !IsNil(o.UserMessage) {
		toSerialize["userMessage"] = o.UserMessage
	}
	if !IsNil(o.AdminMessage) {
		toSerialize["adminMessage"] = o.AdminMessage
	}
	return toSerialize, nil
}

type NullableDefaultErrorResponse struct {
	value *DefaultErrorResponse
	isSet bool
}

func (v NullableDefaultErrorResponse) Get() *DefaultErrorResponse {
	return v.value
}

func (v *NullableDefaultErrorResponse) Set(val *DefaultErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultErrorResponse(val *DefaultErrorResponse) *NullableDefaultErrorResponse {
	return &NullableDefaultErrorResponse{value: val, isSet: true}
}

func (v NullableDefaultErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


