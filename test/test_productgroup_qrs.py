# coding: utf-8

"""
    CDISC Library API

    REST API Documentation for CDISC Library in production server

    The version of the OpenAPI document: 1.1.0
    Contact: cdisc_library_support@cdisc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.productgroup_qrs import ProductgroupQrs  # noqa: E501

class TestProductgroupQrs(unittest.TestCase):
    """ProductgroupQrs unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductgroupQrs:
        """Test ProductgroupQrs
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductgroupQrs`
        """
        model = ProductgroupQrs()  # noqa: E501
        if include_optional:
            return ProductgroupQrs(
                links = openapi_client.models.productgroup_qrs_links.ProductgroupQrsLinks(
                    self = openapi_client.models.productgroup_ref.ProductgroupRef(
                        href = '/mdr/products/DataTabulation', 
                        title = 'Product Group Data Tabulation', 
                        type = 'CDISC Library Product Group', ), 
                    qrs = [
                        openapi_client.models.qrs_ref_element.QrsRefElement(
                            href = '/mdr/qrs/AIMS1/1-0', 
                            title = 'Abnormal Involuntary Movement Scale Version 1.0', 
                            type = 'QRS Measure', )
                        ], )
            )
        else:
            return ProductgroupQrs(
        )
        """

    def testProductgroupQrs(self):
        """Test ProductgroupQrs"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
