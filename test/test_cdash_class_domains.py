# coding: utf-8

"""
    CDISC Library API

    REST API Documentation for CDISC Library in production server

    The version of the OpenAPI document: 1.1.0
    Contact: cdisc_library_support@cdisc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cdash_class_domains import CdashClassDomains

class TestCdashClassDomains(unittest.TestCase):
    """CdashClassDomains unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CdashClassDomains:
        """Test CdashClassDomains
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CdashClassDomains`
        """
        model = CdashClassDomains()
        if include_optional:
            return CdashClassDomains(
                ordinal = '5',
                name = 'Special-Purpose',
                label = 'Special-Purpose',
                description = 'This SDTM class contains a set of domains which do not conform to the Findings, Events or Interventions observation classes. The domains included are DM, CO, SE and SV. (Source: CDISC Controlled Terminology, GNRLOBSC, C103377, 2018-06-29)',
                links = openapi_client.models.cdash_class_domains_links.CdashClassDomainsLinks(
                    self = openapi_client.models.cdash_class_domains_ref.CdashClassDomainsRef(
                        href = '/mdr/cdash/1-1/classes/SpecialPurpose/domains', 
                        title = 'Special-Purpose', 
                        type = 'CDASH Class Domain List', ), 
                    domains = [
                        openapi_client.models.cdash_domain_ref_element.CdashDomainRefElement(
                            href = '/mdr/cdash/1-1/domains/DM', 
                            title = 'Demographics', 
                            type = 'CDASH Domain', )
                        ], )
            )
        else:
            return CdashClassDomains(
        )
        """

    def testCdashClassDomains(self):
        """Test CdashClassDomains"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
