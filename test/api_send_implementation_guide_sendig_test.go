/*
CDISC Library API

Testing SENDImplementationGuideSENDIGAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_SENDImplementationGuideSENDIGAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SENDImplementationGuideSENDIGAPIService MdrRootSendigDatasetsDatasetVariablesVarGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var dataset string
		var var_ string

		resp, httpRes, err := apiClient.SENDImplementationGuideSENDIGAPI.MdrRootSendigDatasetsDatasetVariablesVarGet(context.Background(), dataset, var_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SENDImplementationGuideSENDIGAPIService MdrSendigVersionClassesClassDatasetsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.SENDImplementationGuideSENDIGAPI.MdrSendigVersionClassesClassDatasetsGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SENDImplementationGuideSENDIGAPIService MdrSendigVersionClassesClassGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.SENDImplementationGuideSENDIGAPI.MdrSendigVersionClassesClassGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SENDImplementationGuideSENDIGAPIService MdrSendigVersionClassesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.SENDImplementationGuideSENDIGAPI.MdrSendigVersionClassesGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SENDImplementationGuideSENDIGAPIService MdrSendigVersionDatasetsDatasetGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var dataset string

		resp, httpRes, err := apiClient.SENDImplementationGuideSENDIGAPI.MdrSendigVersionDatasetsDatasetGet(context.Background(), version, dataset).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SENDImplementationGuideSENDIGAPIService MdrSendigVersionDatasetsDatasetVariablesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var dataset string

		resp, httpRes, err := apiClient.SENDImplementationGuideSENDIGAPI.MdrSendigVersionDatasetsDatasetVariablesGet(context.Background(), version, dataset).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SENDImplementationGuideSENDIGAPIService MdrSendigVersionDatasetsDatasetVariablesVarGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var dataset string
		var var_ string

		resp, httpRes, err := apiClient.SENDImplementationGuideSENDIGAPI.MdrSendigVersionDatasetsDatasetVariablesVarGet(context.Background(), version, dataset, var_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SENDImplementationGuideSENDIGAPIService MdrSendigVersionDatasetsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.SENDImplementationGuideSENDIGAPI.MdrSendigVersionDatasetsGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SENDImplementationGuideSENDIGAPIService MdrSendigVersionGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.SENDImplementationGuideSENDIGAPI.MdrSendigVersionGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
