/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CdiscLibraryApi);
  }
}(this, function(expect, CdiscLibraryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CdiscLibraryApi.ClinicalDataAcquisitionStandardsHarmonizationCDASHApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClinicalDataAcquisitionStandardsHarmonizationCDASHApi', function() {
    describe('mdrCdashVersionClassesClassDomainsGet', function() {
      it('should call mdrCdashVersionClassesClassDomainsGet successfully', function(done) {
        //uncomment below and update the code to test mdrCdashVersionClassesClassDomainsGet
        //instance.mdrCdashVersionClassesClassDomainsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrCdashVersionClassesClassFieldsFieldGet', function() {
      it('should call mdrCdashVersionClassesClassFieldsFieldGet successfully', function(done) {
        //uncomment below and update the code to test mdrCdashVersionClassesClassFieldsFieldGet
        //instance.mdrCdashVersionClassesClassFieldsFieldGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrCdashVersionClassesClassGet', function() {
      it('should call mdrCdashVersionClassesClassGet successfully', function(done) {
        //uncomment below and update the code to test mdrCdashVersionClassesClassGet
        //instance.mdrCdashVersionClassesClassGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrCdashVersionClassesGet', function() {
      it('should call mdrCdashVersionClassesGet successfully', function(done) {
        //uncomment below and update the code to test mdrCdashVersionClassesGet
        //instance.mdrCdashVersionClassesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrCdashVersionDomainsDomainFieldsFieldGet', function() {
      it('should call mdrCdashVersionDomainsDomainFieldsFieldGet successfully', function(done) {
        //uncomment below and update the code to test mdrCdashVersionDomainsDomainFieldsFieldGet
        //instance.mdrCdashVersionDomainsDomainFieldsFieldGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrCdashVersionDomainsDomainFieldsGet', function() {
      it('should call mdrCdashVersionDomainsDomainFieldsGet successfully', function(done) {
        //uncomment below and update the code to test mdrCdashVersionDomainsDomainFieldsGet
        //instance.mdrCdashVersionDomainsDomainFieldsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrCdashVersionDomainsDomainGet', function() {
      it('should call mdrCdashVersionDomainsDomainGet successfully', function(done) {
        //uncomment below and update the code to test mdrCdashVersionDomainsDomainGet
        //instance.mdrCdashVersionDomainsDomainGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrCdashVersionDomainsGet', function() {
      it('should call mdrCdashVersionDomainsGet successfully', function(done) {
        //uncomment below and update the code to test mdrCdashVersionDomainsGet
        //instance.mdrCdashVersionDomainsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrCdashVersionGet', function() {
      it('should call mdrCdashVersionGet successfully', function(done) {
        //uncomment below and update the code to test mdrCdashVersionGet
        //instance.mdrCdashVersionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrRootCdashClassesClassFieldsFieldGet', function() {
      it('should call mdrRootCdashClassesClassFieldsFieldGet successfully', function(done) {
        //uncomment below and update the code to test mdrRootCdashClassesClassFieldsFieldGet
        //instance.mdrRootCdashClassesClassFieldsFieldGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mdrRootCdashDomainsDomainFieldsFieldGet', function() {
      it('should call mdrRootCdashDomainsDomainFieldsFieldGet successfully', function(done) {
        //uncomment below and update the code to test mdrRootCdashDomainsDomainFieldsFieldGet
        //instance.mdrRootCdashDomainsDomainFieldsFieldGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
