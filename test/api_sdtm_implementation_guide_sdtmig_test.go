/*
CDISC Library API

Testing SDTMImplementationGuideSDTMIGAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_SDTMImplementationGuideSDTMIGAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SDTMImplementationGuideSDTMIGAPIService MdrRootSdtmigDatasetsDatasetVariablesVarGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var dataset string
		var var_ string

		resp, httpRes, err := apiClient.SDTMImplementationGuideSDTMIGAPI.MdrRootSdtmigDatasetsDatasetVariablesVarGet(context.Background(), dataset, var_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SDTMImplementationGuideSDTMIGAPIService MdrSdtmigVersionClassesClassDatasetsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.SDTMImplementationGuideSDTMIGAPI.MdrSdtmigVersionClassesClassDatasetsGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SDTMImplementationGuideSDTMIGAPIService MdrSdtmigVersionClassesClassGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.SDTMImplementationGuideSDTMIGAPI.MdrSdtmigVersionClassesClassGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SDTMImplementationGuideSDTMIGAPIService MdrSdtmigVersionClassesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.SDTMImplementationGuideSDTMIGAPI.MdrSdtmigVersionClassesGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SDTMImplementationGuideSDTMIGAPIService MdrSdtmigVersionDatasetsDatasetGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var dataset string

		resp, httpRes, err := apiClient.SDTMImplementationGuideSDTMIGAPI.MdrSdtmigVersionDatasetsDatasetGet(context.Background(), version, dataset).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SDTMImplementationGuideSDTMIGAPIService MdrSdtmigVersionDatasetsDatasetVariablesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var dataset string

		resp, httpRes, err := apiClient.SDTMImplementationGuideSDTMIGAPI.MdrSdtmigVersionDatasetsDatasetVariablesGet(context.Background(), version, dataset).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SDTMImplementationGuideSDTMIGAPIService MdrSdtmigVersionDatasetsDatasetVariablesVarGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var dataset string
		var var_ string

		resp, httpRes, err := apiClient.SDTMImplementationGuideSDTMIGAPI.MdrSdtmigVersionDatasetsDatasetVariablesVarGet(context.Background(), version, dataset, var_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SDTMImplementationGuideSDTMIGAPIService MdrSdtmigVersionDatasetsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.SDTMImplementationGuideSDTMIGAPI.MdrSdtmigVersionDatasetsGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SDTMImplementationGuideSDTMIGAPIService MdrSdtmigVersionGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.SDTMImplementationGuideSDTMIGAPI.MdrSdtmigVersionGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
