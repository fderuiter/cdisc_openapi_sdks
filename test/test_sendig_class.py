# coding: utf-8

"""
    CDISC Library API

    REST API Documentation for CDISC Library in production server

    The version of the OpenAPI document: 1.1.0
    Contact: cdisc_library_support@cdisc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.sendig_class import SendigClass  # noqa: E501

class TestSendigClass(unittest.TestCase):
    """SendigClass unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SendigClass:
        """Test SendigClass
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SendigClass`
        """
        model = SendigClass()  # noqa: E501
        if include_optional:
            return SendigClass(
                ordinal = '5',
                name = 'Findings',
                label = 'Findings Observation Class',
                description = 'This SDTM class captures the observations resulting from planned evaluations to address specific tests or questions such as laboratory tests, ECG testing, and questions listed on questionnaires. (Source: CDISC Controlled Terminology, GNRLOBSC, C103373, 2018-06-29)',
                links = openapi_client.models.sendig_class_links.SendigClassLinks(
                    self = openapi_client.models.sendig_class_ref.SendigClassRef(
                        href = '/mdr/sendig/3-1/classes/Findings', 
                        title = 'Findings Observation Class', 
                        type = 'Class', ), 
                    model_class = openapi_client.models.sdtm_class_ref.SdtmClassRef(
                        href = '/mdr/sdtm/1-8/classes/Findings', 
                        title = 'Findings Observation Class', 
                        type = 'Class', ), 
                    parent_product = openapi_client.models.sendig_product_ref.SendigProductRef(
                        href = '/mdr/sendig/3-1', 
                        title = 'Standard for Exchange of Nonclinical Data Implementation Guide: Nonclinical Studies Version 3.1 (Final)', 
                        type = 'Implementation Guide', ), 
                    parent_class = openapi_client.models.sendig_class_ref.SendigClassRef(
                        href = '/mdr/sendig/3-1/classes/Findings', 
                        title = 'Findings Observation Class', 
                        type = 'Class', ), 
                    subclasses = [
                        openapi_client.models.sendig_class_ref_subclass.SendigClassRefSubclass(
                            href = '/mdr/sendig/3-1/classes/FindingsAbout', 
                            title = 'Findings About Observation Class', 
                            type = 'Class', )
                        ], 
                    prior_version = , ),
                datasets = [
                    openapi_client.models.sendig_dataset.SendigDataset(
                        ordinal = '20', 
                        name = 'VS', 
                        label = 'Vital Signs', 
                        description = 'A findings domain that contains measurements including but not limited to blood pressure, temperature, respiration, body surface area, body mass index, height and weight. (Source: CDISC Controlled Terminology, SDOMAIN, C49622, 2018-06-29)', 
                        dataset_structure = 'One record per measurement per observation time per subject', 
                        _links = openapi_client.models.sendig_dataset_links.SendigDatasetLinks(
                            self = openapi_client.models.sendig_dataset_ref.SendigDatasetRef(
                                href = '/mdr/sendig/3-1/datasets/VS', 
                                title = 'Vital Signs', 
                                type = 'SDTM Dataset', ), 
                            model_dataset = openapi_client.models.sdtm_dataset_ref.SdtmDatasetRef(
                                href = '/mdr/sdtm/1-8/datasets/DM', 
                                title = 'Demographics', 
                                type = 'SDTM Dataset', ), 
                            parent_product = openapi_client.models.sendig_product_ref.SendigProductRef(
                                href = '/mdr/sendig/3-1', 
                                title = 'Standard for Exchange of Nonclinical Data Implementation Guide: Nonclinical Studies Version 3.1 (Final)', 
                                type = 'Implementation Guide', ), 
                            parent_class = openapi_client.models.sendig_class_ref.SendigClassRef(
                                href = '/mdr/sendig/3-1/classes/Findings', 
                                title = 'Findings Observation Class', 
                                type = 'Class', ), 
                            prior_version = openapi_client.models.sendig_dataset_ref.SendigDatasetRef(
                                href = '/mdr/sendig/3-1/datasets/VS', 
                                title = 'Vital Signs', 
                                type = 'SDTM Dataset', ), ), 
                        dataset_variables = [
                            openapi_client.models.sendig_dataset_variable.SendigDatasetVariable(
                                ordinal = '8', 
                                name = 'VSTEST', 
                                label = 'Vital Signs Test Name', 
                                description = 'Long name for VSTESTCD. The value in VSTEST cannot be longer than 40 characters.', 
                                role = 'Synonym Qualifier', 
                                simple_datatype = 'Char', 
                                core = 'Req', 
                                described_value_domain = 'Value domain example', 
                                value_list = ["Value example 1","Value example 2"], )
                            ], )
                    ]
            )
        else:
            return SendigClass(
        )
        """

    def testSendigClass(self):
        """Test SendigClass"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
