/*
CDISC Library API

Testing StudyDataTabulationModelSDTMAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_StudyDataTabulationModelSDTMAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrRootSdtmClassesClassVariablesVarGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var class string
		var var_ string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrRootSdtmClassesClassVariablesVarGet(context.Background(), class, var_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrRootSdtmDatasetsDatasetVariablesVarGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var dataset string
		var var_ string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrRootSdtmDatasetsDatasetVariablesVarGet(context.Background(), dataset, var_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionClassesClassDatasetsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionClassesClassDatasetsGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionClassesClassGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionClassesClassGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionClassesClassVariablesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionClassesClassVariablesGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionClassesClassVariablesVarGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string
		var var_ string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionClassesClassVariablesVarGet(context.Background(), version, class, var_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionClassesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionClassesGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionDatasetsDatasetGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var dataset string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionDatasetsDatasetGet(context.Background(), version, dataset).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionDatasetsDatasetVariablesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var dataset string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionDatasetsDatasetVariablesGet(context.Background(), version, dataset).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionDatasetsDatasetVariablesVarGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var dataset string
		var var_ string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionDatasetsDatasetVariablesVarGet(context.Background(), version, dataset, var_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionDatasetsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionDatasetsGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudyDataTabulationModelSDTMAPIService MdrSdtmVersionGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.StudyDataTabulationModelSDTMAPI.MdrSdtmVersionGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
