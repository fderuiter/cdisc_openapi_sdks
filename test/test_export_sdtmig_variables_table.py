# coding: utf-8

"""
    CDISC Library API

    REST API Documentation for CDISC Library in production server

    The version of the OpenAPI document: 1.1.0
    Contact: cdisc_library_support@cdisc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.export_sdtmig_variables_table import ExportSdtmigVariablesTable

class TestExportSdtmigVariablesTable(unittest.TestCase):
    """ExportSdtmigVariablesTable unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExportSdtmigVariablesTable:
        """Test ExportSdtmigVariablesTable
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExportSdtmigVariablesTable`
        """
        model = ExportSdtmigVariablesTable()
        if include_optional:
            return ExportSdtmigVariablesTable(
                variables = [
                    openapi_client.models.export_sdtmig_variables_row.ExportSdtmigVariablesRow(
                        version = '', 
                        variable_order = '', 
                        class = '', 
                        dataset_name = '', 
                        variable_name = '', 
                        variable_label = '', 
                        type = '', 
                        controlled_terms,_codelist_or_format = '', 
                        role = '', 
                        cdisc_notes = '', 
                        core = '', )
                    ]
            )
        else:
            return ExportSdtmigVariablesTable(
        )
        """

    def testExportSdtmigVariablesTable(self):
        """Test ExportSdtmigVariablesTable"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
