# coding: utf-8

"""
    CDISC Library API

    REST API Documentation for CDISC Library in production server

    The version of the OpenAPI document: 1.1.0
    Contact: cdisc_library_support@cdisc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xml_products import XmlProducts

class TestXmlProducts(unittest.TestCase):
    """XmlProducts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XmlProducts:
        """Test XmlProducts
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XmlProducts`
        """
        model = XmlProducts()
        if include_optional:
            return XmlProducts(
                var_self = openapi_client.models.products.Products(
                    _links = openapi_client.models.products_links.ProductsLinks(
                        self = openapi_client.models.products_ref.ProductsRef(
                            href = '/mdr/products', 
                            title = 'CDISC Library Product List', 
                            type = 'CDISC Library Product List', ), 
                        data_collection = openapi_client.models.productgroup_data_collection.ProductgroupDataCollection(), 
                        data_tabulation = openapi_client.models.productgroup_data_tabulation.ProductgroupDataTabulation(), 
                        data_analysis = openapi_client.models.productgroup_data_analysis.ProductgroupDataAnalysis(), 
                        terminology = openapi_client.models.productgroup_terminology.ProductgroupTerminology(), 
                        measure = openapi_client.models.productgroup_qrs.ProductgroupQrs(), ), )
            )
        else:
            return XmlProducts(
        )
        """

    def testXmlProducts(self):
        """Test XmlProducts"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
