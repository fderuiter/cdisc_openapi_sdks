# coding: utf-8

"""
    CDISC Library API

    REST API Documentation for CDISC Library in production server

    The version of the OpenAPI document: 1.1.0
    Contact: cdisc_library_support@cdisc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xml_productgroup_terminology import XmlProductgroupTerminology

class TestXmlProductgroupTerminology(unittest.TestCase):
    """XmlProductgroupTerminology unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XmlProductgroupTerminology:
        """Test XmlProductgroupTerminology
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XmlProductgroupTerminology`
        """
        model = XmlProductgroupTerminology()
        if include_optional:
            return XmlProductgroupTerminology(
                var_self = openapi_client.models.productgroup_terminology.ProductgroupTerminology(
                    _links = openapi_client.models.productgroup_terminology_links.ProductgroupTerminologyLinks(
                        self = openapi_client.models.productgroup_ref.ProductgroupRef(
                            href = '/mdr/products/DataTabulation', 
                            title = 'Product Group Data Tabulation', 
                            type = 'CDISC Library Product Group', ), 
                        packages = [
                            openapi_client.models.ct_package_ref_element.CtPackageRefElement(
                                href = '/mdr/ct/packages/sdtmct-2019-12-20', 
                                title = 'SDTM Controlled Terminology Package 40 Effective 2019-12-20', 
                                type = 'Terminology', )
                            ], ), )
            )
        else:
            return XmlProductgroupTerminology(
        )
        """

    def testXmlProductgroupTerminology(self):
        """Test XmlProductgroupTerminology"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
