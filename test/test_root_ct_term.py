# coding: utf-8

"""
    CDISC Library API

    REST API Documentation for CDISC Library in production server

    The version of the OpenAPI document: 1.1.0
    Contact: cdisc_library_support@cdisc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.root_ct_term import RootCtTerm  # noqa: E501

class TestRootCtTerm(unittest.TestCase):
    """RootCtTerm unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RootCtTerm:
        """Test RootCtTerm
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RootCtTerm`
        """
        model = RootCtTerm()  # noqa: E501
        if include_optional:
            return RootCtTerm(
                links = openapi_client.models.root_ct_term_links.RootCtTermLinks(
                    self = openapi_client.models.root_ct_term_ref.RootCtTermRef(
                        href = '/mdr/root/ct/sdtmct/codelists/C67154/terms/C105585', 
                        title = 'Version-agnostic anchor resource for codelist term C67154.C105585', 
                        type = 'Root Value', ), 
                    versions = [
                        openapi_client.models.ct_term_ref_version.CtTermRefVersion(
                            href = '/mdr/ct/packages/sdtmct-2019-12-20/codelists/C67154/terms/C64796', 
                            title = 'Hematocrit Measurement', 
                            type = 'Code List Value', )
                        ], )
            )
        else:
            return RootCtTerm(
        )
        """

    def testRootCtTerm(self):
        """Test RootCtTerm"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
