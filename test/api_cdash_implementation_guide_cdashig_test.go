/*
CDISC Library API

Testing CDASHImplementationGuideCDASHIGAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_CDASHImplementationGuideCDASHIGAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionClassesClassDomainsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionClassesClassDomainsGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionClassesClassGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionClassesClassGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionClassesClassScenariosGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var class string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionClassesClassScenariosGet(context.Background(), version, class).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionClassesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionClassesGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionDomainsDomainFieldsFieldGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var domain string
		var field string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionDomainsDomainFieldsFieldGet(context.Background(), version, domain, field).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionDomainsDomainFieldsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var domain string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionDomainsDomainFieldsGet(context.Background(), version, domain).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionDomainsDomainGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var domain string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionDomainsDomainGet(context.Background(), version, domain).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionDomainsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionDomainsGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionScenariosDomainScenarioFieldsFieldGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var domain string
		var scenario string
		var field string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionScenariosDomainScenarioFieldsFieldGet(context.Background(), version, domain, scenario, field).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionScenariosDomainScenarioFieldsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var domain string
		var scenario string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionScenariosDomainScenarioFieldsGet(context.Background(), version, domain, scenario).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionScenariosDomainScenarioGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string
		var domain string
		var scenario string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionScenariosDomainScenarioGet(context.Background(), version, domain, scenario).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrCdashigVersionScenariosGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var version string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrCdashigVersionScenariosGet(context.Background(), version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrRootCdashigDomainsDomainFieldsFieldGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var domain string
		var field string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrRootCdashigDomainsDomainFieldsFieldGet(context.Background(), domain, field).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CDASHImplementationGuideCDASHIGAPIService MdrRootCdashigScenariosDomainScenarioFieldsFieldGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var domain string
		var scenario string
		var field string

		resp, httpRes, err := apiClient.CDASHImplementationGuideCDASHIGAPI.MdrRootCdashigScenariosDomainScenarioFieldsFieldGet(context.Background(), domain, scenario, field).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
