/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SdtmigClassLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdtmigClassLinks{}

// SdtmigClassLinks struct for SdtmigClassLinks
type SdtmigClassLinks struct {
	Self *SdtmigClassRef `json:"self,omitempty"`
	ModelClass *SdtmClassRef `json:"modelClass,omitempty"`
	ParentProduct *SdtmigProductRef `json:"parentProduct,omitempty"`
	ParentClass *SdtmigClassRef `json:"parentClass,omitempty"`
	Subclasses []SdtmigClassRefSubclass `json:"subclasses,omitempty"`
	PriorVersion *SdtmigClassRef `json:"priorVersion,omitempty"`
}

// NewSdtmigClassLinks instantiates a new SdtmigClassLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdtmigClassLinks() *SdtmigClassLinks {
	this := SdtmigClassLinks{}
	return &this
}

// NewSdtmigClassLinksWithDefaults instantiates a new SdtmigClassLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdtmigClassLinksWithDefaults() *SdtmigClassLinks {
	this := SdtmigClassLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SdtmigClassLinks) GetSelf() SdtmigClassRef {
	if o == nil || IsNil(o.Self) {
		var ret SdtmigClassRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigClassLinks) GetSelfOk() (*SdtmigClassRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SdtmigClassLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given SdtmigClassRef and assigns it to the Self field.
func (o *SdtmigClassLinks) SetSelf(v SdtmigClassRef) {
	o.Self = &v
}

// GetModelClass returns the ModelClass field value if set, zero value otherwise.
func (o *SdtmigClassLinks) GetModelClass() SdtmClassRef {
	if o == nil || IsNil(o.ModelClass) {
		var ret SdtmClassRef
		return ret
	}
	return *o.ModelClass
}

// GetModelClassOk returns a tuple with the ModelClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigClassLinks) GetModelClassOk() (*SdtmClassRef, bool) {
	if o == nil || IsNil(o.ModelClass) {
		return nil, false
	}
	return o.ModelClass, true
}

// HasModelClass returns a boolean if a field has been set.
func (o *SdtmigClassLinks) HasModelClass() bool {
	if o != nil && !IsNil(o.ModelClass) {
		return true
	}

	return false
}

// SetModelClass gets a reference to the given SdtmClassRef and assigns it to the ModelClass field.
func (o *SdtmigClassLinks) SetModelClass(v SdtmClassRef) {
	o.ModelClass = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *SdtmigClassLinks) GetParentProduct() SdtmigProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret SdtmigProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigClassLinks) GetParentProductOk() (*SdtmigProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *SdtmigClassLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given SdtmigProductRef and assigns it to the ParentProduct field.
func (o *SdtmigClassLinks) SetParentProduct(v SdtmigProductRef) {
	o.ParentProduct = &v
}

// GetParentClass returns the ParentClass field value if set, zero value otherwise.
func (o *SdtmigClassLinks) GetParentClass() SdtmigClassRef {
	if o == nil || IsNil(o.ParentClass) {
		var ret SdtmigClassRef
		return ret
	}
	return *o.ParentClass
}

// GetParentClassOk returns a tuple with the ParentClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigClassLinks) GetParentClassOk() (*SdtmigClassRef, bool) {
	if o == nil || IsNil(o.ParentClass) {
		return nil, false
	}
	return o.ParentClass, true
}

// HasParentClass returns a boolean if a field has been set.
func (o *SdtmigClassLinks) HasParentClass() bool {
	if o != nil && !IsNil(o.ParentClass) {
		return true
	}

	return false
}

// SetParentClass gets a reference to the given SdtmigClassRef and assigns it to the ParentClass field.
func (o *SdtmigClassLinks) SetParentClass(v SdtmigClassRef) {
	o.ParentClass = &v
}

// GetSubclasses returns the Subclasses field value if set, zero value otherwise.
func (o *SdtmigClassLinks) GetSubclasses() []SdtmigClassRefSubclass {
	if o == nil || IsNil(o.Subclasses) {
		var ret []SdtmigClassRefSubclass
		return ret
	}
	return o.Subclasses
}

// GetSubclassesOk returns a tuple with the Subclasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigClassLinks) GetSubclassesOk() ([]SdtmigClassRefSubclass, bool) {
	if o == nil || IsNil(o.Subclasses) {
		return nil, false
	}
	return o.Subclasses, true
}

// HasSubclasses returns a boolean if a field has been set.
func (o *SdtmigClassLinks) HasSubclasses() bool {
	if o != nil && !IsNil(o.Subclasses) {
		return true
	}

	return false
}

// SetSubclasses gets a reference to the given []SdtmigClassRefSubclass and assigns it to the Subclasses field.
func (o *SdtmigClassLinks) SetSubclasses(v []SdtmigClassRefSubclass) {
	o.Subclasses = v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *SdtmigClassLinks) GetPriorVersion() SdtmigClassRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret SdtmigClassRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigClassLinks) GetPriorVersionOk() (*SdtmigClassRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *SdtmigClassLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given SdtmigClassRef and assigns it to the PriorVersion field.
func (o *SdtmigClassLinks) SetPriorVersion(v SdtmigClassRef) {
	o.PriorVersion = &v
}

func (o SdtmigClassLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdtmigClassLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ModelClass) {
		toSerialize["modelClass"] = o.ModelClass
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.ParentClass) {
		toSerialize["parentClass"] = o.ParentClass
	}
	if !IsNil(o.Subclasses) {
		toSerialize["subclasses"] = o.Subclasses
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	return toSerialize, nil
}

type NullableSdtmigClassLinks struct {
	value *SdtmigClassLinks
	isSet bool
}

func (v NullableSdtmigClassLinks) Get() *SdtmigClassLinks {
	return v.value
}

func (v *NullableSdtmigClassLinks) Set(val *SdtmigClassLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSdtmigClassLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSdtmigClassLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdtmigClassLinks(val *SdtmigClassLinks) *NullableSdtmigClassLinks {
	return &NullableSdtmigClassLinks{value: val, isSet: true}
}

func (v NullableSdtmigClassLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdtmigClassLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


