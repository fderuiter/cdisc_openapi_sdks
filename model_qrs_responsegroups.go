/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QrsResponsegroups type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QrsResponsegroups{}

// QrsResponsegroups struct for QrsResponsegroups
type QrsResponsegroups struct {
	Name *string `json:"name,omitempty"`
	Label *string `json:"label,omitempty"`
	Description *string `json:"description,omitempty"`
	EffectiveDate *string `json:"effectiveDate,omitempty"`
	UntilDate *string `json:"untilDate,omitempty"`
	RegistrationStatus *string `json:"registrationStatus,omitempty"`
	Version *string `json:"version,omitempty"`
	QrsType *string `json:"qrsType,omitempty"`
	Links *QrsResponsegroupsLinks `json:"_links,omitempty"`
}

// NewQrsResponsegroups instantiates a new QrsResponsegroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQrsResponsegroups() *QrsResponsegroups {
	this := QrsResponsegroups{}
	return &this
}

// NewQrsResponsegroupsWithDefaults instantiates a new QrsResponsegroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQrsResponsegroupsWithDefaults() *QrsResponsegroups {
	this := QrsResponsegroups{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QrsResponsegroups) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroups) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QrsResponsegroups) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QrsResponsegroups) SetName(v string) {
	o.Name = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *QrsResponsegroups) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroups) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *QrsResponsegroups) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *QrsResponsegroups) SetLabel(v string) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *QrsResponsegroups) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroups) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *QrsResponsegroups) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *QrsResponsegroups) SetDescription(v string) {
	o.Description = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *QrsResponsegroups) GetEffectiveDate() string {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret string
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroups) GetEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *QrsResponsegroups) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given string and assigns it to the EffectiveDate field.
func (o *QrsResponsegroups) SetEffectiveDate(v string) {
	o.EffectiveDate = &v
}

// GetUntilDate returns the UntilDate field value if set, zero value otherwise.
func (o *QrsResponsegroups) GetUntilDate() string {
	if o == nil || IsNil(o.UntilDate) {
		var ret string
		return ret
	}
	return *o.UntilDate
}

// GetUntilDateOk returns a tuple with the UntilDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroups) GetUntilDateOk() (*string, bool) {
	if o == nil || IsNil(o.UntilDate) {
		return nil, false
	}
	return o.UntilDate, true
}

// HasUntilDate returns a boolean if a field has been set.
func (o *QrsResponsegroups) HasUntilDate() bool {
	if o != nil && !IsNil(o.UntilDate) {
		return true
	}

	return false
}

// SetUntilDate gets a reference to the given string and assigns it to the UntilDate field.
func (o *QrsResponsegroups) SetUntilDate(v string) {
	o.UntilDate = &v
}

// GetRegistrationStatus returns the RegistrationStatus field value if set, zero value otherwise.
func (o *QrsResponsegroups) GetRegistrationStatus() string {
	if o == nil || IsNil(o.RegistrationStatus) {
		var ret string
		return ret
	}
	return *o.RegistrationStatus
}

// GetRegistrationStatusOk returns a tuple with the RegistrationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroups) GetRegistrationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationStatus) {
		return nil, false
	}
	return o.RegistrationStatus, true
}

// HasRegistrationStatus returns a boolean if a field has been set.
func (o *QrsResponsegroups) HasRegistrationStatus() bool {
	if o != nil && !IsNil(o.RegistrationStatus) {
		return true
	}

	return false
}

// SetRegistrationStatus gets a reference to the given string and assigns it to the RegistrationStatus field.
func (o *QrsResponsegroups) SetRegistrationStatus(v string) {
	o.RegistrationStatus = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *QrsResponsegroups) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroups) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *QrsResponsegroups) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *QrsResponsegroups) SetVersion(v string) {
	o.Version = &v
}

// GetQrsType returns the QrsType field value if set, zero value otherwise.
func (o *QrsResponsegroups) GetQrsType() string {
	if o == nil || IsNil(o.QrsType) {
		var ret string
		return ret
	}
	return *o.QrsType
}

// GetQrsTypeOk returns a tuple with the QrsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroups) GetQrsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.QrsType) {
		return nil, false
	}
	return o.QrsType, true
}

// HasQrsType returns a boolean if a field has been set.
func (o *QrsResponsegroups) HasQrsType() bool {
	if o != nil && !IsNil(o.QrsType) {
		return true
	}

	return false
}

// SetQrsType gets a reference to the given string and assigns it to the QrsType field.
func (o *QrsResponsegroups) SetQrsType(v string) {
	o.QrsType = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *QrsResponsegroups) GetLinks() QrsResponsegroupsLinks {
	if o == nil || IsNil(o.Links) {
		var ret QrsResponsegroupsLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroups) GetLinksOk() (*QrsResponsegroupsLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *QrsResponsegroups) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given QrsResponsegroupsLinks and assigns it to the Links field.
func (o *QrsResponsegroups) SetLinks(v QrsResponsegroupsLinks) {
	o.Links = &v
}

func (o QrsResponsegroups) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QrsResponsegroups) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.UntilDate) {
		toSerialize["untilDate"] = o.UntilDate
	}
	if !IsNil(o.RegistrationStatus) {
		toSerialize["registrationStatus"] = o.RegistrationStatus
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.QrsType) {
		toSerialize["qrsType"] = o.QrsType
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableQrsResponsegroups struct {
	value *QrsResponsegroups
	isSet bool
}

func (v NullableQrsResponsegroups) Get() *QrsResponsegroups {
	return v.value
}

func (v *NullableQrsResponsegroups) Set(val *QrsResponsegroups) {
	v.value = val
	v.isSet = true
}

func (v NullableQrsResponsegroups) IsSet() bool {
	return v.isSet
}

func (v *NullableQrsResponsegroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQrsResponsegroups(val *QrsResponsegroups) *NullableQrsResponsegroups {
	return &NullableQrsResponsegroups{value: val, isSet: true}
}

func (v NullableQrsResponsegroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQrsResponsegroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


