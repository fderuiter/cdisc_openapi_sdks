/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SdtmigDatasetVariableLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdtmigDatasetVariableLinks{}

// SdtmigDatasetVariableLinks struct for SdtmigDatasetVariableLinks
type SdtmigDatasetVariableLinks struct {
	Self *SdtmigDatasetVariableRef `json:"self,omitempty"`
	Codelist []RootCtCodelistRefElement `json:"codelist,omitempty"`
	ModelClassVariable *SdtmClassVariableRef `json:"modelClassVariable,omitempty"`
	ModelDatasetVariable *SdtmDatasetVariableRef `json:"modelDatasetVariable,omitempty"`
	ParentProduct *SdtmigProductRef `json:"parentProduct,omitempty"`
	ParentDataset *SdtmigDatasetRef `json:"parentDataset,omitempty"`
	RootItem *RootSdtmigDatasetVariableRef `json:"rootItem,omitempty"`
	PriorVersion *SdtmigDatasetVariableRef `json:"priorVersion,omitempty"`
}

// NewSdtmigDatasetVariableLinks instantiates a new SdtmigDatasetVariableLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdtmigDatasetVariableLinks() *SdtmigDatasetVariableLinks {
	this := SdtmigDatasetVariableLinks{}
	return &this
}

// NewSdtmigDatasetVariableLinksWithDefaults instantiates a new SdtmigDatasetVariableLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdtmigDatasetVariableLinksWithDefaults() *SdtmigDatasetVariableLinks {
	this := SdtmigDatasetVariableLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SdtmigDatasetVariableLinks) GetSelf() SdtmigDatasetVariableRef {
	if o == nil || IsNil(o.Self) {
		var ret SdtmigDatasetVariableRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetVariableLinks) GetSelfOk() (*SdtmigDatasetVariableRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SdtmigDatasetVariableLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given SdtmigDatasetVariableRef and assigns it to the Self field.
func (o *SdtmigDatasetVariableLinks) SetSelf(v SdtmigDatasetVariableRef) {
	o.Self = &v
}

// GetCodelist returns the Codelist field value if set, zero value otherwise.
func (o *SdtmigDatasetVariableLinks) GetCodelist() []RootCtCodelistRefElement {
	if o == nil || IsNil(o.Codelist) {
		var ret []RootCtCodelistRefElement
		return ret
	}
	return o.Codelist
}

// GetCodelistOk returns a tuple with the Codelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetVariableLinks) GetCodelistOk() ([]RootCtCodelistRefElement, bool) {
	if o == nil || IsNil(o.Codelist) {
		return nil, false
	}
	return o.Codelist, true
}

// HasCodelist returns a boolean if a field has been set.
func (o *SdtmigDatasetVariableLinks) HasCodelist() bool {
	if o != nil && !IsNil(o.Codelist) {
		return true
	}

	return false
}

// SetCodelist gets a reference to the given []RootCtCodelistRefElement and assigns it to the Codelist field.
func (o *SdtmigDatasetVariableLinks) SetCodelist(v []RootCtCodelistRefElement) {
	o.Codelist = v
}

// GetModelClassVariable returns the ModelClassVariable field value if set, zero value otherwise.
func (o *SdtmigDatasetVariableLinks) GetModelClassVariable() SdtmClassVariableRef {
	if o == nil || IsNil(o.ModelClassVariable) {
		var ret SdtmClassVariableRef
		return ret
	}
	return *o.ModelClassVariable
}

// GetModelClassVariableOk returns a tuple with the ModelClassVariable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetVariableLinks) GetModelClassVariableOk() (*SdtmClassVariableRef, bool) {
	if o == nil || IsNil(o.ModelClassVariable) {
		return nil, false
	}
	return o.ModelClassVariable, true
}

// HasModelClassVariable returns a boolean if a field has been set.
func (o *SdtmigDatasetVariableLinks) HasModelClassVariable() bool {
	if o != nil && !IsNil(o.ModelClassVariable) {
		return true
	}

	return false
}

// SetModelClassVariable gets a reference to the given SdtmClassVariableRef and assigns it to the ModelClassVariable field.
func (o *SdtmigDatasetVariableLinks) SetModelClassVariable(v SdtmClassVariableRef) {
	o.ModelClassVariable = &v
}

// GetModelDatasetVariable returns the ModelDatasetVariable field value if set, zero value otherwise.
func (o *SdtmigDatasetVariableLinks) GetModelDatasetVariable() SdtmDatasetVariableRef {
	if o == nil || IsNil(o.ModelDatasetVariable) {
		var ret SdtmDatasetVariableRef
		return ret
	}
	return *o.ModelDatasetVariable
}

// GetModelDatasetVariableOk returns a tuple with the ModelDatasetVariable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetVariableLinks) GetModelDatasetVariableOk() (*SdtmDatasetVariableRef, bool) {
	if o == nil || IsNil(o.ModelDatasetVariable) {
		return nil, false
	}
	return o.ModelDatasetVariable, true
}

// HasModelDatasetVariable returns a boolean if a field has been set.
func (o *SdtmigDatasetVariableLinks) HasModelDatasetVariable() bool {
	if o != nil && !IsNil(o.ModelDatasetVariable) {
		return true
	}

	return false
}

// SetModelDatasetVariable gets a reference to the given SdtmDatasetVariableRef and assigns it to the ModelDatasetVariable field.
func (o *SdtmigDatasetVariableLinks) SetModelDatasetVariable(v SdtmDatasetVariableRef) {
	o.ModelDatasetVariable = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *SdtmigDatasetVariableLinks) GetParentProduct() SdtmigProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret SdtmigProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetVariableLinks) GetParentProductOk() (*SdtmigProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *SdtmigDatasetVariableLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given SdtmigProductRef and assigns it to the ParentProduct field.
func (o *SdtmigDatasetVariableLinks) SetParentProduct(v SdtmigProductRef) {
	o.ParentProduct = &v
}

// GetParentDataset returns the ParentDataset field value if set, zero value otherwise.
func (o *SdtmigDatasetVariableLinks) GetParentDataset() SdtmigDatasetRef {
	if o == nil || IsNil(o.ParentDataset) {
		var ret SdtmigDatasetRef
		return ret
	}
	return *o.ParentDataset
}

// GetParentDatasetOk returns a tuple with the ParentDataset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetVariableLinks) GetParentDatasetOk() (*SdtmigDatasetRef, bool) {
	if o == nil || IsNil(o.ParentDataset) {
		return nil, false
	}
	return o.ParentDataset, true
}

// HasParentDataset returns a boolean if a field has been set.
func (o *SdtmigDatasetVariableLinks) HasParentDataset() bool {
	if o != nil && !IsNil(o.ParentDataset) {
		return true
	}

	return false
}

// SetParentDataset gets a reference to the given SdtmigDatasetRef and assigns it to the ParentDataset field.
func (o *SdtmigDatasetVariableLinks) SetParentDataset(v SdtmigDatasetRef) {
	o.ParentDataset = &v
}

// GetRootItem returns the RootItem field value if set, zero value otherwise.
func (o *SdtmigDatasetVariableLinks) GetRootItem() RootSdtmigDatasetVariableRef {
	if o == nil || IsNil(o.RootItem) {
		var ret RootSdtmigDatasetVariableRef
		return ret
	}
	return *o.RootItem
}

// GetRootItemOk returns a tuple with the RootItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetVariableLinks) GetRootItemOk() (*RootSdtmigDatasetVariableRef, bool) {
	if o == nil || IsNil(o.RootItem) {
		return nil, false
	}
	return o.RootItem, true
}

// HasRootItem returns a boolean if a field has been set.
func (o *SdtmigDatasetVariableLinks) HasRootItem() bool {
	if o != nil && !IsNil(o.RootItem) {
		return true
	}

	return false
}

// SetRootItem gets a reference to the given RootSdtmigDatasetVariableRef and assigns it to the RootItem field.
func (o *SdtmigDatasetVariableLinks) SetRootItem(v RootSdtmigDatasetVariableRef) {
	o.RootItem = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *SdtmigDatasetVariableLinks) GetPriorVersion() SdtmigDatasetVariableRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret SdtmigDatasetVariableRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetVariableLinks) GetPriorVersionOk() (*SdtmigDatasetVariableRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *SdtmigDatasetVariableLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given SdtmigDatasetVariableRef and assigns it to the PriorVersion field.
func (o *SdtmigDatasetVariableLinks) SetPriorVersion(v SdtmigDatasetVariableRef) {
	o.PriorVersion = &v
}

func (o SdtmigDatasetVariableLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdtmigDatasetVariableLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Codelist) {
		toSerialize["codelist"] = o.Codelist
	}
	if !IsNil(o.ModelClassVariable) {
		toSerialize["modelClassVariable"] = o.ModelClassVariable
	}
	if !IsNil(o.ModelDatasetVariable) {
		toSerialize["modelDatasetVariable"] = o.ModelDatasetVariable
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.ParentDataset) {
		toSerialize["parentDataset"] = o.ParentDataset
	}
	if !IsNil(o.RootItem) {
		toSerialize["rootItem"] = o.RootItem
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	return toSerialize, nil
}

type NullableSdtmigDatasetVariableLinks struct {
	value *SdtmigDatasetVariableLinks
	isSet bool
}

func (v NullableSdtmigDatasetVariableLinks) Get() *SdtmigDatasetVariableLinks {
	return v.value
}

func (v *NullableSdtmigDatasetVariableLinks) Set(val *SdtmigDatasetVariableLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSdtmigDatasetVariableLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSdtmigDatasetVariableLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdtmigDatasetVariableLinks(val *SdtmigDatasetVariableLinks) *NullableSdtmigDatasetVariableLinks {
	return &NullableSdtmigDatasetVariableLinks{value: val, isSet: true}
}

func (v NullableSdtmigDatasetVariableLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdtmigDatasetVariableLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


