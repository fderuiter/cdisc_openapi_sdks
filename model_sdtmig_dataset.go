/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SdtmigDataset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdtmigDataset{}

// SdtmigDataset struct for SdtmigDataset
type SdtmigDataset struct {
	Ordinal *string `json:"ordinal,omitempty"`
	Name *string `json:"name,omitempty"`
	Label *string `json:"label,omitempty"`
	Description *string `json:"description,omitempty"`
	DatasetStructure *string `json:"datasetStructure,omitempty"`
	Links *SdtmigDatasetLinks `json:"_links,omitempty"`
	DatasetVariables []SdtmigDatasetVariable `json:"datasetVariables,omitempty"`
}

// NewSdtmigDataset instantiates a new SdtmigDataset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdtmigDataset() *SdtmigDataset {
	this := SdtmigDataset{}
	return &this
}

// NewSdtmigDatasetWithDefaults instantiates a new SdtmigDataset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdtmigDatasetWithDefaults() *SdtmigDataset {
	this := SdtmigDataset{}
	return &this
}

// GetOrdinal returns the Ordinal field value if set, zero value otherwise.
func (o *SdtmigDataset) GetOrdinal() string {
	if o == nil || IsNil(o.Ordinal) {
		var ret string
		return ret
	}
	return *o.Ordinal
}

// GetOrdinalOk returns a tuple with the Ordinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDataset) GetOrdinalOk() (*string, bool) {
	if o == nil || IsNil(o.Ordinal) {
		return nil, false
	}
	return o.Ordinal, true
}

// HasOrdinal returns a boolean if a field has been set.
func (o *SdtmigDataset) HasOrdinal() bool {
	if o != nil && !IsNil(o.Ordinal) {
		return true
	}

	return false
}

// SetOrdinal gets a reference to the given string and assigns it to the Ordinal field.
func (o *SdtmigDataset) SetOrdinal(v string) {
	o.Ordinal = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SdtmigDataset) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDataset) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SdtmigDataset) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SdtmigDataset) SetName(v string) {
	o.Name = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *SdtmigDataset) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDataset) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *SdtmigDataset) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *SdtmigDataset) SetLabel(v string) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SdtmigDataset) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDataset) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SdtmigDataset) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SdtmigDataset) SetDescription(v string) {
	o.Description = &v
}

// GetDatasetStructure returns the DatasetStructure field value if set, zero value otherwise.
func (o *SdtmigDataset) GetDatasetStructure() string {
	if o == nil || IsNil(o.DatasetStructure) {
		var ret string
		return ret
	}
	return *o.DatasetStructure
}

// GetDatasetStructureOk returns a tuple with the DatasetStructure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDataset) GetDatasetStructureOk() (*string, bool) {
	if o == nil || IsNil(o.DatasetStructure) {
		return nil, false
	}
	return o.DatasetStructure, true
}

// HasDatasetStructure returns a boolean if a field has been set.
func (o *SdtmigDataset) HasDatasetStructure() bool {
	if o != nil && !IsNil(o.DatasetStructure) {
		return true
	}

	return false
}

// SetDatasetStructure gets a reference to the given string and assigns it to the DatasetStructure field.
func (o *SdtmigDataset) SetDatasetStructure(v string) {
	o.DatasetStructure = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SdtmigDataset) GetLinks() SdtmigDatasetLinks {
	if o == nil || IsNil(o.Links) {
		var ret SdtmigDatasetLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDataset) GetLinksOk() (*SdtmigDatasetLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SdtmigDataset) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SdtmigDatasetLinks and assigns it to the Links field.
func (o *SdtmigDataset) SetLinks(v SdtmigDatasetLinks) {
	o.Links = &v
}

// GetDatasetVariables returns the DatasetVariables field value if set, zero value otherwise.
func (o *SdtmigDataset) GetDatasetVariables() []SdtmigDatasetVariable {
	if o == nil || IsNil(o.DatasetVariables) {
		var ret []SdtmigDatasetVariable
		return ret
	}
	return o.DatasetVariables
}

// GetDatasetVariablesOk returns a tuple with the DatasetVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDataset) GetDatasetVariablesOk() ([]SdtmigDatasetVariable, bool) {
	if o == nil || IsNil(o.DatasetVariables) {
		return nil, false
	}
	return o.DatasetVariables, true
}

// HasDatasetVariables returns a boolean if a field has been set.
func (o *SdtmigDataset) HasDatasetVariables() bool {
	if o != nil && !IsNil(o.DatasetVariables) {
		return true
	}

	return false
}

// SetDatasetVariables gets a reference to the given []SdtmigDatasetVariable and assigns it to the DatasetVariables field.
func (o *SdtmigDataset) SetDatasetVariables(v []SdtmigDatasetVariable) {
	o.DatasetVariables = v
}

func (o SdtmigDataset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdtmigDataset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ordinal) {
		toSerialize["ordinal"] = o.Ordinal
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DatasetStructure) {
		toSerialize["datasetStructure"] = o.DatasetStructure
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.DatasetVariables) {
		toSerialize["datasetVariables"] = o.DatasetVariables
	}
	return toSerialize, nil
}

type NullableSdtmigDataset struct {
	value *SdtmigDataset
	isSet bool
}

func (v NullableSdtmigDataset) Get() *SdtmigDataset {
	return v.value
}

func (v *NullableSdtmigDataset) Set(val *SdtmigDataset) {
	v.value = val
	v.isSet = true
}

func (v NullableSdtmigDataset) IsSet() bool {
	return v.isSet
}

func (v *NullableSdtmigDataset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdtmigDataset(val *SdtmigDataset) *NullableSdtmigDataset {
	return &NullableSdtmigDataset{value: val, isSet: true}
}

func (v NullableSdtmigDataset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdtmigDataset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


