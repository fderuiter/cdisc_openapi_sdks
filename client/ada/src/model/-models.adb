--  CDISC Library API
--  REST API Documentation for CDISC Library in production server
--
--  The version of the OpenAPI document: 1.1.0
--  Contact: cdisc_library_support@cdisc.org
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
--  https://openapi-generator.tech
--  Do not edit the class manually.

package body .Models is
   pragma Style_Checks ("-bmrIu");

   pragma Warnings (Off, "*use clause for package*");

   use Swagger.Streams;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AboutRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AboutRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AboutRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AboutRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AboutRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructureRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructureRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructureRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructureRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructureRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructureRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructureRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructureRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructureRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructureRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructureVariablesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructureVariablesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructureVariablesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructureVariablesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructureVariablesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructureVarsetsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructureVarsetsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructureVarsetsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructureVarsetsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructureVarsetsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamProductDatastructuresRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamProductDatastructuresRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamProductDatastructuresRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamProductDatastructuresRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamProductDatastructuresRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamProductRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamProductRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamProductRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamProductRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamProductRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamProductRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamProductRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamProductRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamProductRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamProductRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamVariableRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamVariableRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamVariableRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamVariableRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamVariableRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamVariableRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamVariableRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamVariableRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamVariableRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamVariableRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamVarsetRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamVarsetRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamVarsetRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamVarsetRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamVarsetRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamVarsetRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamVarsetRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamVarsetRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamVarsetRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamVarsetRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassDomainsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassDomainsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassDomainsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassDomainsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassDomainsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassFieldRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassFieldRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassFieldRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassFieldRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassFieldRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassFieldRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassFieldRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassFieldRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassFieldRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassFieldRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainFieldRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainFieldRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainFieldRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainFieldRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainFieldRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainFieldRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainFieldRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainFieldRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainFieldRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainFieldRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainFieldRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainFieldRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainFieldRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainFieldRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainFieldRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainFieldsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainFieldsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainFieldsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainFieldsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainFieldsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProductClassesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProductClassesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProductClassesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProductClassesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProductClassesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProductDomainsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProductDomainsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProductDomainsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProductDomainsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProductDomainsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProductRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProductRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProductRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProductRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProductRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProductRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProductRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProductRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProductRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProductRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassDomainsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassDomainsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassDomainsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassDomainsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassDomainsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassRefSubclass_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassRefSubclass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassRefSubclass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassRefSubclass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassRefSubclass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassScenariosRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassScenariosRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassScenariosRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassScenariosRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassScenariosRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainFieldRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainFieldRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainFieldRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainFieldRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainFieldRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainFieldRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainFieldRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainFieldRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainFieldRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainFieldRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainFieldRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainFieldRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainFieldRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainFieldRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainFieldRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainFieldsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainFieldsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainFieldsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainFieldsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainFieldsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductClassesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductClassesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductClassesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductClassesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductClassesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductDomainsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductDomainsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductDomainsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductDomainsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductDomainsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductScenariosRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductScenariosRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductScenariosRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductScenariosRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductScenariosRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioFieldRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioFieldRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioFieldRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioFieldRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioFieldRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioFieldRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioFieldRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioFieldRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioFieldRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioFieldRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioFieldRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioFieldRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioFieldRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioFieldRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioFieldRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioFieldsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioFieldsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioFieldsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioFieldsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioFieldsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtCodelistRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtCodelistRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtCodelistRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtCodelistRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtCodelistRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtCodelistRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtCodelistRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtCodelistRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtCodelistRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtCodelistRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtCodelistRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtCodelistRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtCodelistRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtCodelistRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtCodelistRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtCodelistTermsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtCodelistTermsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtCodelistTermsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtCodelistTermsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtCodelistTermsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackageCodelistsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackageCodelistsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackageCodelistsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackageCodelistsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackageCodelistsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackageRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackageRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackageRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackageRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackageRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackageRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackageRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackageRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackageRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackageRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackageTerm_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Concept_Id.Is_Null then
         Into.Write_Entity ("conceptId", Value.Concept_Id);
      end if;
      if not Value.Submission_Value.Is_Null then
         Into.Write_Entity ("submissionValue", Value.Submission_Value);
      end if;
      if not Value.Definition.Is_Null then
         Into.Write_Entity ("definition", Value.Definition);
      end if;
      if not Value.Preferred_Term.Is_Null then
         Into.Write_Entity ("preferredTerm", Value.Preferred_Term);
      end if;
      Serialize (Into, "synonyms", Value.Synonyms);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackageTerm_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackageTerm_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "conceptId", Value.Concept_Id);
      Swagger.Streams.Deserialize (Object, "submissionValue", Value.Submission_Value);
      Swagger.Streams.Deserialize (Object, "definition", Value.Definition);
      Swagger.Streams.Deserialize (Object, "preferredTerm", Value.Preferred_Term);
      Swagger.Streams.Deserialize (Object, "synonyms", Value.Synonyms);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackageTerm_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackageTerm_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackagesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackagesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackagesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackagesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackagesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtTermRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtTermRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtTermRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtTermRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtTermRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtTermRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtTermRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtTermRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtTermRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtTermRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtTermRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtTermRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtTermRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtTermRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtTermRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DefaultErrorResponse_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Status_Code.Is_Null then
         Into.Write_Entity ("statusCode", Value.Status_Code);
      end if;
      if not Value.Reason_Phrase.Is_Null then
         Into.Write_Entity ("reasonPhrase", Value.Reason_Phrase);
      end if;
      if not Value.User_Message.Is_Null then
         Into.Write_Entity ("userMessage", Value.User_Message);
      end if;
      if not Value.Admin_Message.Is_Null then
         Into.Write_Entity ("adminMessage", Value.Admin_Message);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DefaultErrorResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DefaultErrorResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "statusCode", Value.Status_Code);
      Swagger.Streams.Deserialize (Object, "reasonPhrase", Value.Reason_Phrase);
      Swagger.Streams.Deserialize (Object, "userMessage", Value.User_Message);
      Swagger.Streams.Deserialize (Object, "adminMessage", Value.Admin_Message);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DefaultErrorResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.DefaultErrorResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DefaultSearchResponseHitsInner_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("href", Value.Href);
      Into.Write_Entity ("type", Value.P_Type);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DefaultSearchResponseHitsInner_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DefaultSearchResponseHitsInner_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DefaultSearchResponseHitsInner_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.DefaultSearchResponseHitsInner_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;


   function To_DefaultSearchScopes_Type (Value : in String) return .Models.DefaultSearchScopes_Type is
   begin
      if Value = "class" then
         return CLASS;
      end if;
      if Value = "codelist" then
         return CODELIST;
      end if;
      if Value = "conceptId" then
         return CONCEPTID;
      end if;
      if Value = "core" then
         return CORE;
      end if;
      if Value = "dataStructure" then
         return DATASTRUCTURE;
      end if;
      if Value = "datasetStructure" then
         return DATASETSTRUCTURE;
      end if;
      if Value = "definition" then
         return DEFINITION;
      end if;
      if Value = "description" then
         return DESCRIPTION;
      end if;
      if Value = "domain" then
         return DOMAIN;
      end if;
      if Value = "effectiveDate" then
         return EFFECTIVEDATE;
      end if;
      if Value = "extensible" then
         return EXTENSIBLE;
      end if;
      if Value = "href" then
         return HREF;
      end if;
      if Value = "label" then
         return LABEL;
      end if;
      if Value = "measureType" then
         return MEASURETYPE;
      end if;
      if Value = "name" then
         return NAME;
      end if;
      if Value = "preferredTerm" then
         return PREFERREDTERM;
      end if;
      if Value = "product" then
         return PRODUCT;
      end if;
      if Value = "productGroup" then
         return PRODUCTGROUP;
      end if;
      if Value = "registrationStatus" then
         return REGISTRATIONSTATUS;
      end if;
      if Value = "roleDescription" then
         return ROLEDESCRIPTION;
      end if;
      if Value = "sdtmTarget" then
         return SDTMTARGET;
      end if;
      if Value = "simpleDatatype" then
         return SIMPLEDATATYPE;
      end if;
      if Value = "submissionValue" then
         return SUBMISSIONVALUE;
      end if;
      if Value = "synonyms" then
         return SYNONYMS;
      end if;
      if Value = "type" then
         return TYPE;
      end if;
      if Value = "uiHref" then
         return UIHREF;
      end if;
      if Value = "valueDomain" then
         return VALUEDOMAIN;
      end if;
      if Value = "variableSet" then
         return VARIABLESET;
      end if;
      if Value = "version" then
         return VERSION;
      end if;
      raise Constraint_Error;
   end To_DefaultSearchScopes_Type;

   function To_String (Value : in .Models.DefaultSearchScopes_Type) return String is
   begin
      case Value is
         when CLASS =>
            return "class";

         when CODELIST =>
            return "codelist";

         when CONCEPTID =>
            return "conceptId";

         when CORE =>
            return "core";

         when DATASTRUCTURE =>
            return "dataStructure";

         when DATASETSTRUCTURE =>
            return "datasetStructure";

         when DEFINITION =>
            return "definition";

         when DESCRIPTION =>
            return "description";

         when DOMAIN =>
            return "domain";

         when EFFECTIVEDATE =>
            return "effectiveDate";

         when EXTENSIBLE =>
            return "extensible";

         when HREF =>
            return "href";

         when LABEL =>
            return "label";

         when MEASURETYPE =>
            return "measureType";

         when NAME =>
            return "name";

         when PREFERREDTERM =>
            return "preferredTerm";

         when PRODUCT =>
            return "product";

         when PRODUCTGROUP =>
            return "productGroup";

         when REGISTRATIONSTATUS =>
            return "registrationStatus";

         when ROLEDESCRIPTION =>
            return "roleDescription";

         when SDTMTARGET =>
            return "sdtmTarget";

         when SIMPLEDATATYPE =>
            return "simpleDatatype";

         when SUBMISSIONVALUE =>
            return "submissionValue";

         when SYNONYMS =>
            return "synonyms";

         when TYPE =>
            return "type";

         when UIHREF =>
            return "uiHref";

         when VALUEDOMAIN =>
            return "valueDomain";

         when VARIABLESET =>
            return "variableSet";

         when VERSION =>
            return "version";

      end case;
   end To_String;
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DefaultSearchScopes_Type) is
   begin
      Into.Write_Entity (Name, To_String (Value));   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DefaultSearchScopes_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DefaultSearchScopes_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Value := To_DefaultSearchScopes_Type (Swagger.To_String (Object));
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DefaultSearchScopes_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.DefaultSearchScopes_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportAdamDatastructuresRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Data_Structure_Name.Is_Null then
         Into.Write_Entity ("Data Structure Name", Value.Data_Structure_Name);
      end if;
      if not Value.Dataset_Name.Is_Null then
         Into.Write_Entity ("Dataset Name", Value.Dataset_Name);
      end if;
      if not Value.Dataset_Label.Is_Null then
         Into.Write_Entity ("Dataset Label", Value.Dataset_Label);
      end if;
      if not Value.Dataset_Description.Is_Null then
         Into.Write_Entity ("Dataset Description", Value.Dataset_Description);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportAdamDatastructuresRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportAdamDatastructuresRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Data Structure Name", Value.Data_Structure_Name);
      Swagger.Streams.Deserialize (Object, "Dataset Name", Value.Dataset_Name);
      Swagger.Streams.Deserialize (Object, "Dataset Label", Value.Dataset_Label);
      Swagger.Streams.Deserialize (Object, "Dataset Description", Value.Dataset_Description);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportAdamDatastructuresRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportAdamDatastructuresRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportAdamVariablesRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Data_Structure_Name.Is_Null then
         Into.Write_Entity ("Data Structure Name", Value.Data_Structure_Name);
      end if;
      if not Value.Dataset_Name.Is_Null then
         Into.Write_Entity ("Dataset Name", Value.Dataset_Name);
      end if;
      if not Value.Variable_Group.Is_Null then
         Into.Write_Entity ("Variable Group", Value.Variable_Group);
      end if;
      if not Value.Variable_Name.Is_Null then
         Into.Write_Entity ("Variable Name", Value.Variable_Name);
      end if;
      if not Value.Variable_Label.Is_Null then
         Into.Write_Entity ("Variable Label", Value.Variable_Label);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      if not Value.Codelist_Controlled_Terms.Is_Null then
         Into.Write_Entity ("Codelist/Controlled Terms", Value.Codelist_Controlled_Terms);
      end if;
      if not Value.Core.Is_Null then
         Into.Write_Entity ("Core", Value.Core);
      end if;
      if not Value.CDISC_Notes.Is_Null then
         Into.Write_Entity ("CDISC Notes", Value.CDISC_Notes);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportAdamVariablesRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportAdamVariablesRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Data Structure Name", Value.Data_Structure_Name);
      Swagger.Streams.Deserialize (Object, "Dataset Name", Value.Dataset_Name);
      Swagger.Streams.Deserialize (Object, "Variable Group", Value.Variable_Group);
      Swagger.Streams.Deserialize (Object, "Variable Name", Value.Variable_Name);
      Swagger.Streams.Deserialize (Object, "Variable Label", Value.Variable_Label);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "Codelist/Controlled Terms", Value.Codelist_Controlled_Terms);
      Swagger.Streams.Deserialize (Object, "Core", Value.Core);
      Swagger.Streams.Deserialize (Object, "CDISC Notes", Value.CDISC_Notes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportAdamVariablesRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportAdamVariablesRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportCdashClassVariablesRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Domain.Is_Null then
         Into.Write_Entity ("Domain", Value.Domain);
      end if;
      if not Value.Variable_Order.Is_Null then
         Into.Write_Entity ("Variable Order", Value.Variable_Order);
      end if;
      if not Value.CDASH_Variable.Is_Null then
         Into.Write_Entity ("CDASH Variable", Value.CDASH_Variable);
      end if;
      if not Value.CDASH_Variable_Label.Is_Null then
         Into.Write_Entity ("CDASH Variable Label", Value.CDASH_Variable_Label);
      end if;
      if not Value.DRAFT_CDASH_Definition.Is_Null then
         Into.Write_Entity ("DRAFT CDASH Definition", Value.DRAFT_CDASH_Definition);
      end if;
      if not Value.Domain_Specific.Is_Null then
         Into.Write_Entity ("Domain Specific", Value.Domain_Specific);
      end if;
      if not Value.Question_Text.Is_Null then
         Into.Write_Entity ("Question Text", Value.Question_Text);
      end if;
      if not Value.Prompt.Is_Null then
         Into.Write_Entity ("Prompt", Value.Prompt);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      Serialize (Into, "SDTM Target", Value.SDTM_Target);
      if not Value.Mapping_Instructions.Is_Null then
         Into.Write_Entity ("Mapping Instructions", Value.Mapping_Instructions);
      end if;
      if not Value.Controlled_Terminology_Codelist_Name.Is_Null then
         Into.Write_Entity ("Controlled Terminology Codelist Name", Value.Controlled_Terminology_Codelist_Name);
      end if;
      if not Value.Implementation_Notes.Is_Null then
         Into.Write_Entity ("Implementation Notes", Value.Implementation_Notes);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportCdashClassVariablesRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportCdashClassVariablesRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Domain", Value.Domain);
      Swagger.Streams.Deserialize (Object, "Variable Order", Value.Variable_Order);
      Swagger.Streams.Deserialize (Object, "CDASH Variable", Value.CDASH_Variable);
      Swagger.Streams.Deserialize (Object, "CDASH Variable Label", Value.CDASH_Variable_Label);
      Swagger.Streams.Deserialize (Object, "DRAFT CDASH Definition", Value.DRAFT_CDASH_Definition);
      Swagger.Streams.Deserialize (Object, "Domain Specific", Value.Domain_Specific);
      Swagger.Streams.Deserialize (Object, "Question Text", Value.Question_Text);
      Swagger.Streams.Deserialize (Object, "Prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "SDTM Target", Value.SDTM_Target);
      Swagger.Streams.Deserialize (Object, "Mapping Instructions", Value.Mapping_Instructions);
      Swagger.Streams.Deserialize (Object, "Controlled Terminology Codelist Name", Value.Controlled_Terminology_Codelist_Name);
      Swagger.Streams.Deserialize (Object, "Implementation Notes", Value.Implementation_Notes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportCdashClassVariablesRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportCdashClassVariablesRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportCdashDomainVariablesRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Domain.Is_Null then
         Into.Write_Entity ("Domain", Value.Domain);
      end if;
      if not Value.Variable_Order.Is_Null then
         Into.Write_Entity ("Variable Order", Value.Variable_Order);
      end if;
      if not Value.CDASH_Variable.Is_Null then
         Into.Write_Entity ("CDASH Variable", Value.CDASH_Variable);
      end if;
      if not Value.CDASH_Variable_Label.Is_Null then
         Into.Write_Entity ("CDASH Variable Label", Value.CDASH_Variable_Label);
      end if;
      if not Value.DRAFT_CDASH_Definition.Is_Null then
         Into.Write_Entity ("DRAFT CDASH Definition", Value.DRAFT_CDASH_Definition);
      end if;
      if not Value.Domain_Specific.Is_Null then
         Into.Write_Entity ("Domain Specific", Value.Domain_Specific);
      end if;
      if not Value.Question_Text.Is_Null then
         Into.Write_Entity ("Question Text", Value.Question_Text);
      end if;
      if not Value.Prompt.Is_Null then
         Into.Write_Entity ("Prompt", Value.Prompt);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      Serialize (Into, "SDTM Target", Value.SDTM_Target);
      if not Value.Mapping_Instructions.Is_Null then
         Into.Write_Entity ("Mapping Instructions", Value.Mapping_Instructions);
      end if;
      if not Value.Controlled_Terminology_Codelist_Name.Is_Null then
         Into.Write_Entity ("Controlled Terminology Codelist Name", Value.Controlled_Terminology_Codelist_Name);
      end if;
      if not Value.Implementation_Notes.Is_Null then
         Into.Write_Entity ("Implementation Notes", Value.Implementation_Notes);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportCdashDomainVariablesRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportCdashDomainVariablesRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Domain", Value.Domain);
      Swagger.Streams.Deserialize (Object, "Variable Order", Value.Variable_Order);
      Swagger.Streams.Deserialize (Object, "CDASH Variable", Value.CDASH_Variable);
      Swagger.Streams.Deserialize (Object, "CDASH Variable Label", Value.CDASH_Variable_Label);
      Swagger.Streams.Deserialize (Object, "DRAFT CDASH Definition", Value.DRAFT_CDASH_Definition);
      Swagger.Streams.Deserialize (Object, "Domain Specific", Value.Domain_Specific);
      Swagger.Streams.Deserialize (Object, "Question Text", Value.Question_Text);
      Swagger.Streams.Deserialize (Object, "Prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "SDTM Target", Value.SDTM_Target);
      Swagger.Streams.Deserialize (Object, "Mapping Instructions", Value.Mapping_Instructions);
      Swagger.Streams.Deserialize (Object, "Controlled Terminology Codelist Name", Value.Controlled_Terminology_Codelist_Name);
      Swagger.Streams.Deserialize (Object, "Implementation Notes", Value.Implementation_Notes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportCdashDomainVariablesRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportCdashDomainVariablesRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportCdashigDomainVariablesRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Domain.Is_Null then
         Into.Write_Entity ("Domain", Value.Domain);
      end if;
      if not Value.Data_Collection_Scenario.Is_Null then
         Into.Write_Entity ("Data Collection Scenario", Value.Data_Collection_Scenario);
      end if;
      if not Value.Variable_Order.Is_Null then
         Into.Write_Entity ("Variable Order", Value.Variable_Order);
      end if;
      if not Value.CDASHIG_Variable.Is_Null then
         Into.Write_Entity ("CDASHIG Variable", Value.CDASHIG_Variable);
      end if;
      if not Value.CDASHIG_Variable_Label.Is_Null then
         Into.Write_Entity ("CDASHIG Variable Label", Value.CDASHIG_Variable_Label);
      end if;
      if not Value.DRAFT_CDASHIG_Definition.Is_Null then
         Into.Write_Entity ("DRAFT CDASHIG Definition", Value.DRAFT_CDASHIG_Definition);
      end if;
      if not Value.Question_Text.Is_Null then
         Into.Write_Entity ("Question Text", Value.Question_Text);
      end if;
      if not Value.Prompt.Is_Null then
         Into.Write_Entity ("Prompt", Value.Prompt);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      if not Value.CDASHIG_Core.Is_Null then
         Into.Write_Entity ("CDASHIG Core", Value.CDASHIG_Core);
      end if;
      if not Value.Case_Report_Form_Completion_Instructions.Is_Null then
         Into.Write_Entity ("Case Report Form Completion Instructions", Value.Case_Report_Form_Completion_Instructions);
      end if;
      Serialize (Into, "SDTMIG Target", Value.SDTMIG_Target);
      if not Value.Mapping_Instructions.Is_Null then
         Into.Write_Entity ("Mapping Instructions", Value.Mapping_Instructions);
      end if;
      if not Value.Controlled_Terminology_Codelist_Name.Is_Null then
         Into.Write_Entity ("Controlled Terminology Codelist Name", Value.Controlled_Terminology_Codelist_Name);
      end if;
      if not Value.Implementation_Notes.Is_Null then
         Into.Write_Entity ("Implementation Notes", Value.Implementation_Notes);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportCdashigDomainVariablesRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportCdashigDomainVariablesRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Domain", Value.Domain);
      Swagger.Streams.Deserialize (Object, "Data Collection Scenario", Value.Data_Collection_Scenario);
      Swagger.Streams.Deserialize (Object, "Variable Order", Value.Variable_Order);
      Swagger.Streams.Deserialize (Object, "CDASHIG Variable", Value.CDASHIG_Variable);
      Swagger.Streams.Deserialize (Object, "CDASHIG Variable Label", Value.CDASHIG_Variable_Label);
      Swagger.Streams.Deserialize (Object, "DRAFT CDASHIG Definition", Value.DRAFT_CDASHIG_Definition);
      Swagger.Streams.Deserialize (Object, "Question Text", Value.Question_Text);
      Swagger.Streams.Deserialize (Object, "Prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "CDASHIG Core", Value.CDASHIG_Core);
      Swagger.Streams.Deserialize (Object, "Case Report Form Completion Instructions", Value.Case_Report_Form_Completion_Instructions);
      Swagger.Streams.Deserialize (Object, "SDTMIG Target", Value.SDTMIG_Target);
      Swagger.Streams.Deserialize (Object, "Mapping Instructions", Value.Mapping_Instructions);
      Swagger.Streams.Deserialize (Object, "Controlled Terminology Codelist Name", Value.Controlled_Terminology_Codelist_Name);
      Swagger.Streams.Deserialize (Object, "Implementation Notes", Value.Implementation_Notes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportCdashigDomainVariablesRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportCdashigDomainVariablesRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportCdashigScenarioVariablesRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Domain.Is_Null then
         Into.Write_Entity ("Domain", Value.Domain);
      end if;
      if not Value.Data_Collection_Scenario.Is_Null then
         Into.Write_Entity ("Data Collection Scenario", Value.Data_Collection_Scenario);
      end if;
      if not Value.Variable_Order.Is_Null then
         Into.Write_Entity ("Variable Order", Value.Variable_Order);
      end if;
      if not Value.CDASHIG_Variable.Is_Null then
         Into.Write_Entity ("CDASHIG Variable", Value.CDASHIG_Variable);
      end if;
      if not Value.CDASHIG_Variable_Label.Is_Null then
         Into.Write_Entity ("CDASHIG Variable Label", Value.CDASHIG_Variable_Label);
      end if;
      if not Value.DRAFT_CDASHIG_Definition.Is_Null then
         Into.Write_Entity ("DRAFT CDASHIG Definition", Value.DRAFT_CDASHIG_Definition);
      end if;
      if not Value.Question_Text.Is_Null then
         Into.Write_Entity ("Question Text", Value.Question_Text);
      end if;
      if not Value.Prompt.Is_Null then
         Into.Write_Entity ("Prompt", Value.Prompt);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      if not Value.CDASHIG_Core.Is_Null then
         Into.Write_Entity ("CDASHIG Core", Value.CDASHIG_Core);
      end if;
      if not Value.Case_Report_Form_Completion_Instructions.Is_Null then
         Into.Write_Entity ("Case Report Form Completion Instructions", Value.Case_Report_Form_Completion_Instructions);
      end if;
      Serialize (Into, "SDTMIG Target", Value.SDTMIG_Target);
      if not Value.Mapping_Instructions.Is_Null then
         Into.Write_Entity ("Mapping Instructions", Value.Mapping_Instructions);
      end if;
      if not Value.Controlled_Terminology_Codelist_Name.Is_Null then
         Into.Write_Entity ("Controlled Terminology Codelist Name", Value.Controlled_Terminology_Codelist_Name);
      end if;
      if not Value.Implementation_Notes.Is_Null then
         Into.Write_Entity ("Implementation Notes", Value.Implementation_Notes);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportCdashigScenarioVariablesRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportCdashigScenarioVariablesRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Domain", Value.Domain);
      Swagger.Streams.Deserialize (Object, "Data Collection Scenario", Value.Data_Collection_Scenario);
      Swagger.Streams.Deserialize (Object, "Variable Order", Value.Variable_Order);
      Swagger.Streams.Deserialize (Object, "CDASHIG Variable", Value.CDASHIG_Variable);
      Swagger.Streams.Deserialize (Object, "CDASHIG Variable Label", Value.CDASHIG_Variable_Label);
      Swagger.Streams.Deserialize (Object, "DRAFT CDASHIG Definition", Value.DRAFT_CDASHIG_Definition);
      Swagger.Streams.Deserialize (Object, "Question Text", Value.Question_Text);
      Swagger.Streams.Deserialize (Object, "Prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "CDASHIG Core", Value.CDASHIG_Core);
      Swagger.Streams.Deserialize (Object, "Case Report Form Completion Instructions", Value.Case_Report_Form_Completion_Instructions);
      Swagger.Streams.Deserialize (Object, "SDTMIG Target", Value.SDTMIG_Target);
      Swagger.Streams.Deserialize (Object, "Mapping Instructions", Value.Mapping_Instructions);
      Swagger.Streams.Deserialize (Object, "Controlled Terminology Codelist Name", Value.Controlled_Terminology_Codelist_Name);
      Swagger.Streams.Deserialize (Object, "Implementation Notes", Value.Implementation_Notes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportCdashigScenarioVariablesRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportCdashigScenarioVariablesRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportCtTerm_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Bundle_1.Is_Null then
         Into.Write_Entity ("bundle-1", Value.Bundle_1);
      end if;
      Serialize (Into, "CDISC Synonym(s)", Value.CDISC_Synonym_S);
      if not Value.Bundle_2.Is_Null then
         Into.Write_Entity ("bundle-2", Value.Bundle_2);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportCtTerm_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportCtTerm_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "bundle-1", Value.Bundle_1);
      Swagger.Streams.Deserialize (Object, "CDISC Synonym(s)", Value.CDISC_Synonym_S);
      Swagger.Streams.Deserialize (Object, "bundle-2", Value.Bundle_2);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportCtTerm_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportCtTerm_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportQrsCsvItemsRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.QRS_Measure_Name.Is_Null then
         Into.Write_Entity ("QRS Measure Name", Value.QRS_Measure_Name);
      end if;
      if not Value.QRS_Measure_Label.Is_Null then
         Into.Write_Entity ("QRS Measure Label", Value.QRS_Measure_Label);
      end if;
      if not Value.QRS_Measure_Type.Is_Null then
         Into.Write_Entity ("QRS Measure Type", Value.QRS_Measure_Type);
      end if;
      if not Value.Item_Sequence.Is_Null then
         Into.Write_Entity ("Item Sequence", Value.Item_Sequence);
      end if;
      if not Value.Test_Name.Is_Null then
         Into.Write_Entity ("Test Name", Value.Test_Name);
      end if;
      if not Value.Item_Text.Is_Null then
         Into.Write_Entity ("Item Text", Value.Item_Text);
      end if;
      if not Value.Tests_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Test's Codelist C-Code", Value.Tests_Codelist_C_Code);
      end if;
      if not Value.Tests_Term_C_Code.Is_Null then
         Into.Write_Entity ("Test's Term C-Code", Value.Tests_Term_C_Code);
      end if;
      if not Value.Test_Codes_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Test Code's Codelist C-Code", Value.Test_Codes_Codelist_C_Code);
      end if;
      if not Value.Test_Codes_Term_C_Code.Is_Null then
         Into.Write_Entity ("Test Code's Term C-Code", Value.Test_Codes_Term_C_Code);
      end if;
      if not Value.Subcategorys_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Subcategory's Codelist C-Code", Value.Subcategorys_Codelist_C_Code);
      end if;
      if not Value.Subcategorys_Term_C_Code.Is_Null then
         Into.Write_Entity ("Subcategory's Term C-Code", Value.Subcategorys_Term_C_Code);
      end if;
      if not Value.Evaluators_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Evaluator's Codelist C-Code", Value.Evaluators_Codelist_C_Code);
      end if;
      if not Value.Evaluators_Term_C_Code.Is_Null then
         Into.Write_Entity ("Evaluator's Term C-Code", Value.Evaluators_Term_C_Code);
      end if;
      if not Value.Free_Form_Responses_Datatype.Is_Null then
         Into.Write_Entity ("Free-form Response's Datatype", Value.Free_Form_Responses_Datatype);
      end if;
      if not Value.Response_Group.Is_Null then
         Into.Write_Entity ("Response Group", Value.Response_Group);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportQrsCsvItemsRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportQrsCsvItemsRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "QRS Measure Name", Value.QRS_Measure_Name);
      Swagger.Streams.Deserialize (Object, "QRS Measure Label", Value.QRS_Measure_Label);
      Swagger.Streams.Deserialize (Object, "QRS Measure Type", Value.QRS_Measure_Type);
      Swagger.Streams.Deserialize (Object, "Item Sequence", Value.Item_Sequence);
      Swagger.Streams.Deserialize (Object, "Test Name", Value.Test_Name);
      Swagger.Streams.Deserialize (Object, "Item Text", Value.Item_Text);
      Swagger.Streams.Deserialize (Object, "Test's Codelist C-Code", Value.Tests_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Test's Term C-Code", Value.Tests_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Test Code's Codelist C-Code", Value.Test_Codes_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Test Code's Term C-Code", Value.Test_Codes_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Subcategory's Codelist C-Code", Value.Subcategorys_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Subcategory's Term C-Code", Value.Subcategorys_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Evaluator's Codelist C-Code", Value.Evaluators_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Evaluator's Term C-Code", Value.Evaluators_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Free-form Response's Datatype", Value.Free_Form_Responses_Datatype);
      Swagger.Streams.Deserialize (Object, "Response Group", Value.Response_Group);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportQrsCsvItemsRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportQrsCsvItemsRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportQrsGeneral_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("Name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("Label", Value.Label);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("Effective Date", Value.Effective_Date);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("Description", Value.Description);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      if not Value.Categorys_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Category's Codelist C-Code", Value.Categorys_Codelist_C_Code);
      end if;
      if not Value.Categorys_Term_C_Code.Is_Null then
         Into.Write_Entity ("Category's Term C-Code", Value.Categorys_Term_C_Code);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportQrsGeneral_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportQrsGeneral_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Name", Value.Name);
      Swagger.Streams.Deserialize (Object, "Label", Value.Label);
      Swagger.Streams.Deserialize (Object, "Effective Date", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "Description", Value.Description);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "Category's Codelist C-Code", Value.Categorys_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Category's Term C-Code", Value.Categorys_Term_C_Code);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportQrsGeneral_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportQrsGeneral_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportQrsResponses_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Response_Group.Is_Null then
         Into.Write_Entity ("Response Group", Value.Response_Group);
      end if;
      if not Value.Sequence.Is_Null then
         Into.Write_Entity ("Sequence", Value.Sequence);
      end if;
      if not Value.Responses_Original_Result_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Response's Original Result Codelist C-Code", Value.Responses_Original_Result_Codelist_C_Code);
      end if;
      if not Value.Responses_Original_Result_Term_C_Code.Is_Null then
         Into.Write_Entity ("Response's Original Result Term C-Code", Value.Responses_Original_Result_Term_C_Code);
      end if;
      if not Value.Responses_Original_Result_Unit_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Response's Original Result Unit Codelist C-Code", Value.Responses_Original_Result_Unit_Codelist_C_Code);
      end if;
      if not Value.Responses_Original_Result_Unit_Term_C_Code.Is_Null then
         Into.Write_Entity ("Response's Original Result Unit Term C-Code", Value.Responses_Original_Result_Unit_Term_C_Code);
      end if;
      if not Value.Responses_Standardized_Result_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Response's Standardized Result Codelist C-Code", Value.Responses_Standardized_Result_Codelist_C_Code);
      end if;
      if not Value.Responses_Standardized_Result_Term_C_Code.Is_Null then
         Into.Write_Entity ("Response's Standardized Result Term C-Code", Value.Responses_Standardized_Result_Term_C_Code);
      end if;
      if not Value.Responses_Standardized_Result_Unit_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Response's Standardized Result Unit Codelist C-Code", Value.Responses_Standardized_Result_Unit_Codelist_C_Code);
      end if;
      if not Value.Responses_Standardized_Result_Unit_Term_C_Code.Is_Null then
         Into.Write_Entity ("Response's Standardized Result Unit Term C-Code", Value.Responses_Standardized_Result_Unit_Term_C_Code);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportQrsResponses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportQrsResponses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Response Group", Value.Response_Group);
      Swagger.Streams.Deserialize (Object, "Sequence", Value.Sequence);
      Swagger.Streams.Deserialize (Object, "Response's Original Result Codelist C-Code", Value.Responses_Original_Result_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Response's Original Result Term C-Code", Value.Responses_Original_Result_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Response's Original Result Unit Codelist C-Code", Value.Responses_Original_Result_Unit_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Response's Original Result Unit Term C-Code", Value.Responses_Original_Result_Unit_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Response's Standardized Result Codelist C-Code", Value.Responses_Standardized_Result_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Response's Standardized Result Term C-Code", Value.Responses_Standardized_Result_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Response's Standardized Result Unit Codelist C-Code", Value.Responses_Standardized_Result_Unit_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Response's Standardized Result Unit Term C-Code", Value.Responses_Standardized_Result_Unit_Term_C_Code);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportQrsResponses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportQrsResponses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportQrsWorkbookItemsRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Item_Sequence.Is_Null then
         Into.Write_Entity ("Item Sequence", Value.Item_Sequence);
      end if;
      if not Value.Test_Name.Is_Null then
         Into.Write_Entity ("Test Name", Value.Test_Name);
      end if;
      if not Value.Item_Text.Is_Null then
         Into.Write_Entity ("Item Text", Value.Item_Text);
      end if;
      if not Value.Tests_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Test's Codelist C-Code", Value.Tests_Codelist_C_Code);
      end if;
      if not Value.Tests_Term_C_Code.Is_Null then
         Into.Write_Entity ("Test's Term C-Code", Value.Tests_Term_C_Code);
      end if;
      if not Value.Test_Codes_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Test Code's Codelist C-Code", Value.Test_Codes_Codelist_C_Code);
      end if;
      if not Value.Test_Codes_Term_C_Code.Is_Null then
         Into.Write_Entity ("Test Code's Term C-Code", Value.Test_Codes_Term_C_Code);
      end if;
      if not Value.Subcategorys_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Subcategory's Codelist C-Code", Value.Subcategorys_Codelist_C_Code);
      end if;
      if not Value.Subcategorys_Term_C_Code.Is_Null then
         Into.Write_Entity ("Subcategory's Term C-Code", Value.Subcategorys_Term_C_Code);
      end if;
      if not Value.Evaluators_Codelist_C_Code.Is_Null then
         Into.Write_Entity ("Evaluator's Codelist C-Code", Value.Evaluators_Codelist_C_Code);
      end if;
      if not Value.Evaluators_Term_C_Code.Is_Null then
         Into.Write_Entity ("Evaluator's Term C-Code", Value.Evaluators_Term_C_Code);
      end if;
      if not Value.Free_Form_Responses_Datatype.Is_Null then
         Into.Write_Entity ("Free-form Response's Datatype", Value.Free_Form_Responses_Datatype);
      end if;
      if not Value.Response_Group.Is_Null then
         Into.Write_Entity ("Response Group", Value.Response_Group);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportQrsWorkbookItemsRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportQrsWorkbookItemsRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Item Sequence", Value.Item_Sequence);
      Swagger.Streams.Deserialize (Object, "Test Name", Value.Test_Name);
      Swagger.Streams.Deserialize (Object, "Item Text", Value.Item_Text);
      Swagger.Streams.Deserialize (Object, "Test's Codelist C-Code", Value.Tests_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Test's Term C-Code", Value.Tests_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Test Code's Codelist C-Code", Value.Test_Codes_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Test Code's Term C-Code", Value.Test_Codes_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Subcategory's Codelist C-Code", Value.Subcategorys_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Subcategory's Term C-Code", Value.Subcategorys_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Evaluator's Codelist C-Code", Value.Evaluators_Codelist_C_Code);
      Swagger.Streams.Deserialize (Object, "Evaluator's Term C-Code", Value.Evaluators_Term_C_Code);
      Swagger.Streams.Deserialize (Object, "Free-form Response's Datatype", Value.Free_Form_Responses_Datatype);
      Swagger.Streams.Deserialize (Object, "Response Group", Value.Response_Group);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportQrsWorkbookItemsRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportQrsWorkbookItemsRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmClassVariablesRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Variable_Order.Is_Null then
         Into.Write_Entity ("Variable Order", Value.Variable_Order);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Dataset_Name.Is_Null then
         Into.Write_Entity ("Dataset Name", Value.Dataset_Name);
      end if;
      if not Value.Variable_Name.Is_Null then
         Into.Write_Entity ("Variable Name", Value.Variable_Name);
      end if;
      if not Value.Variable_Label.Is_Null then
         Into.Write_Entity ("Variable Label", Value.Variable_Label);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      if not Value.Controlled_Terms_Codelist_Or_Format.Is_Null then
         Into.Write_Entity ("Controlled Terms, Codelist or Format", Value.Controlled_Terms_Codelist_Or_Format);
      end if;
      if not Value.Role.Is_Null then
         Into.Write_Entity ("Role", Value.Role);
      end if;
      if not Value.Role_Description.Is_Null then
         Into.Write_Entity ("Role Description", Value.Role_Description);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("Description", Value.Description);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmClassVariablesRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmClassVariablesRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Variable Order", Value.Variable_Order);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Dataset Name", Value.Dataset_Name);
      Swagger.Streams.Deserialize (Object, "Variable Name", Value.Variable_Name);
      Swagger.Streams.Deserialize (Object, "Variable Label", Value.Variable_Label);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "Controlled Terms, Codelist or Format", Value.Controlled_Terms_Codelist_Or_Format);
      Swagger.Streams.Deserialize (Object, "Role", Value.Role);
      Swagger.Streams.Deserialize (Object, "Role Description", Value.Role_Description);
      Swagger.Streams.Deserialize (Object, "Description", Value.Description);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmClassVariablesRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmClassVariablesRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmDatasetVariablesRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Variable_Order.Is_Null then
         Into.Write_Entity ("Variable Order", Value.Variable_Order);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Dataset_Name.Is_Null then
         Into.Write_Entity ("Dataset Name", Value.Dataset_Name);
      end if;
      if not Value.Variable_Name.Is_Null then
         Into.Write_Entity ("Variable Name", Value.Variable_Name);
      end if;
      if not Value.Variable_Label.Is_Null then
         Into.Write_Entity ("Variable Label", Value.Variable_Label);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      if not Value.Controlled_Terms_Codelist_Or_Format.Is_Null then
         Into.Write_Entity ("Controlled Terms, Codelist or Format", Value.Controlled_Terms_Codelist_Or_Format);
      end if;
      if not Value.Role.Is_Null then
         Into.Write_Entity ("Role", Value.Role);
      end if;
      if not Value.Role_Description.Is_Null then
         Into.Write_Entity ("Role Description", Value.Role_Description);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("Description", Value.Description);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmDatasetVariablesRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmDatasetVariablesRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Variable Order", Value.Variable_Order);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Dataset Name", Value.Dataset_Name);
      Swagger.Streams.Deserialize (Object, "Variable Name", Value.Variable_Name);
      Swagger.Streams.Deserialize (Object, "Variable Label", Value.Variable_Label);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "Controlled Terms, Codelist or Format", Value.Controlled_Terms_Codelist_Or_Format);
      Swagger.Streams.Deserialize (Object, "Role", Value.Role);
      Swagger.Streams.Deserialize (Object, "Role Description", Value.Role_Description);
      Swagger.Streams.Deserialize (Object, "Description", Value.Description);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmDatasetVariablesRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmDatasetVariablesRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmDatasetsRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Dataset_Name.Is_Null then
         Into.Write_Entity ("Dataset Name", Value.Dataset_Name);
      end if;
      if not Value.Dataset_Label.Is_Null then
         Into.Write_Entity ("Dataset Label", Value.Dataset_Label);
      end if;
      if not Value.Structure.Is_Null then
         Into.Write_Entity ("Structure", Value.Structure);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmDatasetsRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmDatasetsRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Dataset Name", Value.Dataset_Name);
      Swagger.Streams.Deserialize (Object, "Dataset Label", Value.Dataset_Label);
      Swagger.Streams.Deserialize (Object, "Structure", Value.Structure);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmDatasetsRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmDatasetsRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmigDatasetsRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Dataset_Name.Is_Null then
         Into.Write_Entity ("Dataset Name", Value.Dataset_Name);
      end if;
      if not Value.Dataset_Label.Is_Null then
         Into.Write_Entity ("Dataset Label", Value.Dataset_Label);
      end if;
      if not Value.Structure.Is_Null then
         Into.Write_Entity ("Structure", Value.Structure);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmigDatasetsRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmigDatasetsRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Dataset Name", Value.Dataset_Name);
      Swagger.Streams.Deserialize (Object, "Dataset Label", Value.Dataset_Label);
      Swagger.Streams.Deserialize (Object, "Structure", Value.Structure);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmigDatasetsRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmigDatasetsRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmigVariablesRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Variable_Order.Is_Null then
         Into.Write_Entity ("Variable Order", Value.Variable_Order);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Dataset_Name.Is_Null then
         Into.Write_Entity ("Dataset Name", Value.Dataset_Name);
      end if;
      if not Value.Variable_Name.Is_Null then
         Into.Write_Entity ("Variable Name", Value.Variable_Name);
      end if;
      if not Value.Variable_Label.Is_Null then
         Into.Write_Entity ("Variable Label", Value.Variable_Label);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      if not Value.Controlled_Terms_Codelist_Or_Format.Is_Null then
         Into.Write_Entity ("Controlled Terms, Codelist or Format", Value.Controlled_Terms_Codelist_Or_Format);
      end if;
      if not Value.Role.Is_Null then
         Into.Write_Entity ("Role", Value.Role);
      end if;
      if not Value.CDISC_Notes.Is_Null then
         Into.Write_Entity ("CDISC Notes", Value.CDISC_Notes);
      end if;
      if not Value.Core.Is_Null then
         Into.Write_Entity ("Core", Value.Core);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmigVariablesRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmigVariablesRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Variable Order", Value.Variable_Order);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Dataset Name", Value.Dataset_Name);
      Swagger.Streams.Deserialize (Object, "Variable Name", Value.Variable_Name);
      Swagger.Streams.Deserialize (Object, "Variable Label", Value.Variable_Label);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "Controlled Terms, Codelist or Format", Value.Controlled_Terms_Codelist_Or_Format);
      Swagger.Streams.Deserialize (Object, "Role", Value.Role);
      Swagger.Streams.Deserialize (Object, "CDISC Notes", Value.CDISC_Notes);
      Swagger.Streams.Deserialize (Object, "Core", Value.Core);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmigVariablesRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmigVariablesRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSendigDatasetsRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Dataset_Name.Is_Null then
         Into.Write_Entity ("Dataset Name", Value.Dataset_Name);
      end if;
      if not Value.Dataset_Label.Is_Null then
         Into.Write_Entity ("Dataset Label", Value.Dataset_Label);
      end if;
      if not Value.Structure.Is_Null then
         Into.Write_Entity ("Structure", Value.Structure);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSendigDatasetsRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSendigDatasetsRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Dataset Name", Value.Dataset_Name);
      Swagger.Streams.Deserialize (Object, "Dataset Label", Value.Dataset_Label);
      Swagger.Streams.Deserialize (Object, "Structure", Value.Structure);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSendigDatasetsRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSendigDatasetsRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSendigVariablesRow_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Version.Is_Null then
         Into.Write_Entity ("Version", Value.Version);
      end if;
      if not Value.Variable_Order.Is_Null then
         Into.Write_Entity ("Variable Order", Value.Variable_Order);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("Class", Value.Class);
      end if;
      if not Value.Dataset_Name.Is_Null then
         Into.Write_Entity ("Dataset Name", Value.Dataset_Name);
      end if;
      if not Value.Variable_Name.Is_Null then
         Into.Write_Entity ("Variable Name", Value.Variable_Name);
      end if;
      if not Value.Variable_Label.Is_Null then
         Into.Write_Entity ("Variable Label", Value.Variable_Label);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("Type", Value.P_Type);
      end if;
      if not Value.Controlled_Terms_Codelist_Or_Format.Is_Null then
         Into.Write_Entity ("Controlled Terms, Codelist or Format", Value.Controlled_Terms_Codelist_Or_Format);
      end if;
      if not Value.Role.Is_Null then
         Into.Write_Entity ("Role", Value.Role);
      end if;
      if not Value.CDISC_Notes.Is_Null then
         Into.Write_Entity ("CDISC Notes", Value.CDISC_Notes);
      end if;
      if not Value.Core.Is_Null then
         Into.Write_Entity ("Core", Value.Core);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSendigVariablesRow_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSendigVariablesRow_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Version", Value.Version);
      Swagger.Streams.Deserialize (Object, "Variable Order", Value.Variable_Order);
      Swagger.Streams.Deserialize (Object, "Class", Value.Class);
      Swagger.Streams.Deserialize (Object, "Dataset Name", Value.Dataset_Name);
      Swagger.Streams.Deserialize (Object, "Variable Name", Value.Variable_Name);
      Swagger.Streams.Deserialize (Object, "Variable Label", Value.Variable_Label);
      Swagger.Streams.Deserialize (Object, "Type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "Controlled Terms, Codelist or Format", Value.Controlled_Terms_Codelist_Or_Format);
      Swagger.Streams.Deserialize (Object, "Role", Value.Role);
      Swagger.Streams.Deserialize (Object, "CDISC Notes", Value.CDISC_Notes);
      Swagger.Streams.Deserialize (Object, "Core", Value.Core);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSendigVariablesRow_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSendigVariablesRow_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Health_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Healthy.Is_Null then
         Into.Write_Entity ("healthy", Value.Healthy);
      end if;
      if not Value.Ldap_Authentication_Healthy.Is_Null then
         Into.Write_Entity ("ldapAuthenticationHealthy", Value.Ldap_Authentication_Healthy);
      end if;
      if not Value.Ldap_Authorization_Healthy.Is_Null then
         Into.Write_Entity ("ldapAuthorizationHealthy", Value.Ldap_Authorization_Healthy);
      end if;
      if not Value.Database_Healthy.Is_Null then
         Into.Write_Entity ("databaseHealthy", Value.Database_Healthy);
      end if;
      if not Value.Es_Healthy.Is_Null then
         Into.Write_Entity ("esHealthy", Value.Es_Healthy);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Health_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Health_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "healthy", Value.Healthy);
      Swagger.Streams.Deserialize (Object, "ldapAuthenticationHealthy", Value.Ldap_Authentication_Healthy);
      Swagger.Streams.Deserialize (Object, "ldapAuthorizationHealthy", Value.Ldap_Authorization_Healthy);
      Swagger.Streams.Deserialize (Object, "databaseHealthy", Value.Database_Healthy);
      Swagger.Streams.Deserialize (Object, "esHealthy", Value.Es_Healthy);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Health_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.Health_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LastupdatedRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LastupdatedRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LastupdatedRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LastupdatedRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.LastupdatedRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MaintenanceBody_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Maintenance_Mode.Is_Null then
         Into.Write_Entity ("maintenanceMode", Value.Maintenance_Mode);
      end if;
      if not Value.Maintenance_Message.Is_Null then
         Into.Write_Entity ("maintenanceMessage", Value.Maintenance_Message);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MaintenanceBody_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MaintenanceBody_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "maintenanceMode", Value.Maintenance_Mode);
      Swagger.Streams.Deserialize (Object, "maintenanceMessage", Value.Maintenance_Message);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MaintenanceBody_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.MaintenanceBody_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsItemRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsItemRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsItemRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsItemRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsItemRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsItemsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsItemsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsItemsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsItemsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsItemsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsProductRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsProductRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsProductRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsProductRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsProductRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsResponsegroupRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsResponsegroupRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsResponsegroupRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsResponsegroupRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsResponsegroupRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsResponsegroupRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsResponsegroupRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsResponsegroupRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsResponsegroupRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsResponsegroupRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsResponsegroupsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsResponsegroupsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsResponsegroupsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsResponsegroupsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsResponsegroupsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashClassFieldRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashClassFieldRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashClassFieldRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashClassFieldRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashClassFieldRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashDomainFieldRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashDomainFieldRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashDomainFieldRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashDomainFieldRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashDomainFieldRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashigDomainFieldRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashigDomainFieldRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashigDomainFieldRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashigDomainFieldRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashigDomainFieldRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashigScenarioFieldRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashigScenarioFieldRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashigScenarioFieldRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashigScenarioFieldRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashigScenarioFieldRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCtCodelistRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCtCodelistRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCtCodelistRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCtCodelistRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCtCodelistRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCtCodelistRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCtCodelistRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCtCodelistRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCtCodelistRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCtCodelistRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCtTermRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCtTermRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCtTermRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCtTermRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCtTermRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSdtmClassVariableRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSdtmClassVariableRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSdtmClassVariableRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSdtmClassVariableRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSdtmClassVariableRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSdtmDatasetVariableRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSdtmDatasetVariableRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSdtmDatasetVariableRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSdtmDatasetVariableRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSdtmDatasetVariableRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSdtmigDatasetVariableRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSdtmigDatasetVariableRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSdtmigDatasetVariableRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSdtmigDatasetVariableRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSdtmigDatasetVariableRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSendigDatasetVariableRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSendigDatasetVariableRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSendigDatasetVariableRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSendigDatasetVariableRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSendigDatasetVariableRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ScopeValues_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "total", Value.Total);
      if not Value.Has_More.Is_Null then
         Into.Write_Entity ("hasMore", Value.Has_More);
      end if;
      Serialize (Into, "values", Value.Values);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ScopeValues_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ScopeValues_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "total", Value.Total);
      Swagger.Streams.Deserialize (Object, "hasMore", Value.Has_More);
      Swagger.Streams.Deserialize (Object, "values", Value.Values);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ScopeValues_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ScopeValues_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassDatasetsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassDatasetsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassDatasetsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassDatasetsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassDatasetsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassRefSubclass_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassRefSubclass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassRefSubclass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassRefSubclass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassRefSubclass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariableRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariableRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariableRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariableRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariableRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariableRefQualifies_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariableRefQualifies_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariableRefQualifies_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariableRefQualifies_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariableRefQualifies_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariableRefTarget_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariableRefTarget_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariableRefTarget_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariableRefTarget_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariableRefTarget_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariableRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariableRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariableRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariableRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariableRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariableRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariableRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariableRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariableRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariableRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariablesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariablesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariablesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariablesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariablesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetVariableRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetVariableRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetVariableRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetVariableRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetVariableRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetVariableRefTarget_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetVariableRefTarget_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetVariableRefTarget_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetVariableRefTarget_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetVariableRefTarget_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetVariableRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetVariableRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetVariableRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetVariableRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetVariableRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetVariableRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetVariableRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetVariableRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetVariableRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetVariableRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetVariablesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetVariablesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetVariablesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetVariablesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetVariablesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmProductRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmProductRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmProductRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmProductRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmProductRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmProductRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmProductRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmProductRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmProductRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmProductRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClassDatasetsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClassDatasetsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClassDatasetsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClassDatasetsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClassDatasetsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClassRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClassRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClassRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClassRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClassRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClassRefSubclass_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClassRefSubclass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClassRefSubclass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClassRefSubclass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClassRefSubclass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClassRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClassRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClassRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClassRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClassRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClassesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClassesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClassesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClassesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClassesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetVariableRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetVariableRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetVariableRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetVariableRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetVariableRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetVariableRefTarget_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetVariableRefTarget_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetVariableRefTarget_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetVariableRefTarget_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetVariableRefTarget_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetVariableRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetVariableRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetVariableRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetVariableRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetVariableRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetVariableRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetVariableRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetVariableRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetVariableRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetVariableRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetVariablesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetVariablesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetVariablesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetVariablesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetVariablesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigProductRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigProductRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigProductRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigProductRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigProductRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigProductRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigProductRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigProductRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigProductRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigProductRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClassDatasetsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClassDatasetsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClassDatasetsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClassDatasetsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClassDatasetsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClassRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClassRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClassRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClassRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClassRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClassRefSubclass_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClassRefSubclass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClassRefSubclass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClassRefSubclass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClassRefSubclass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClassRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClassRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClassRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClassRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClassRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClassesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClassesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClassesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClassesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClassesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetVariableRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetVariableRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetVariableRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetVariableRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetVariableRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetVariableRefVersion_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetVariableRefVersion_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetVariableRefVersion_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetVariableRefVersion_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetVariableRefVersion_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetVariableRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetVariableRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetVariableRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetVariableRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetVariableRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetVariablesRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetVariablesRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetVariablesRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetVariablesRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetVariablesRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetsRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetsRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetsRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetsRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetsRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigProductRefElement_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigProductRefElement_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigProductRefElement_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigProductRefElement_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigProductRefElement_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigProductRef_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Href.Is_Null then
         Into.Write_Entity ("href", Value.Href);
      end if;
      if not Value.Title.Is_Null then
         Into.Write_Entity ("title", Value.Title);
      end if;
      if not Value.P_Type.Is_Null then
         Into.Write_Entity ("type", Value.P_Type);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigProductRef_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigProductRef_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigProductRef_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigProductRef_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructureVariablesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "analysisVariables", Value.Analysis_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructureVariablesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructureVariablesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "analysisVariables", Value.Analysis_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructureVariablesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructureVariablesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructureVariables_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("class", Value.Class);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructureVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructureVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "class", Value.Class);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructureVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructureVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructureVarsetsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "analysisVariableSets", Value.Analysis_Variable_Sets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructureVarsetsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructureVarsetsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "analysisVariableSets", Value.Analysis_Variable_Sets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructureVarsetsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructureVarsetsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructureVarsets_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("class", Value.Class);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructureVarsets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructureVarsets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "class", Value.Class);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructureVarsets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructureVarsets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamProductDatastructuresLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "dataStructures", Value.Data_Structures);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamProductDatastructuresLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamProductDatastructuresLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "dataStructures", Value.Data_Structures);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamProductDatastructuresLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamProductDatastructuresLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamProductDatastructures_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamProductDatastructures_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamProductDatastructures_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamProductDatastructures_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamProductDatastructures_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamProductLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "model", Value.Model);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamProductLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamProductLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamProductLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamProductLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamVariableLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "codelist", Value.Codelist);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentDatastructure", Value.Parent_Datastructure);
      Serialize (Into, "parentVariableSet", Value.Parent_Variable_Set);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamVariableLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamVariableLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "codelist", Value.Codelist);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentDatastructure", Value.Parent_Datastructure);
      Deserialize (Object, "parentVariableSet", Value.Parent_Variable_Set);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamVariableLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamVariableLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamVariable_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Core.Is_Null then
         Into.Write_Entity ("core", Value.Core);
      end if;
      if not Value.Simple_Datatype.Is_Null then
         Into.Write_Entity ("simpleDatatype", Value.Simple_Datatype);
      end if;
      if not Value.Described_Value_Domain.Is_Null then
         Into.Write_Entity ("describedValueDomain", Value.Described_Value_Domain);
      end if;
      Serialize (Into, "valueList", Value.Value_List);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "core", Value.Core);
      Swagger.Streams.Deserialize (Object, "simpleDatatype", Value.Simple_Datatype);
      Swagger.Streams.Deserialize (Object, "describedValueDomain", Value.Described_Value_Domain);
      Swagger.Streams.Deserialize (Object, "valueList", Value.Value_List);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassDomainsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "domains", Value.Domains);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassDomainsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassDomainsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "domains", Value.Domains);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassDomainsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassDomainsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassDomains_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassDomains_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassDomains_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassDomains_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassDomains_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassFieldLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "codelist", Value.Codelist);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "sdtmClassMappingTargets", Value.Sdtm_Class_Mapping_Targets);
      Serialize (Into, "sdtmDatasetMappingTargets", Value.Sdtm_Dataset_Mapping_Targets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassFieldLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassFieldLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "codelist", Value.Codelist);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "sdtmClassMappingTargets", Value.Sdtm_Class_Mapping_Targets);
      Deserialize (Object, "sdtmDatasetMappingTargets", Value.Sdtm_Dataset_Mapping_Targets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassFieldLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassFieldLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassField_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Definition.Is_Null then
         Into.Write_Entity ("definition", Value.Definition);
      end if;
      if not Value.Question_Text.Is_Null then
         Into.Write_Entity ("questionText", Value.Question_Text);
      end if;
      if not Value.Prompt.Is_Null then
         Into.Write_Entity ("prompt", Value.Prompt);
      end if;
      if not Value.Simple_Datatype.Is_Null then
         Into.Write_Entity ("simpleDatatype", Value.Simple_Datatype);
      end if;
      if not Value.Implementation_Notes.Is_Null then
         Into.Write_Entity ("implementationNotes", Value.Implementation_Notes);
      end if;
      if not Value.Mapping_Instructions.Is_Null then
         Into.Write_Entity ("mappingInstructions", Value.Mapping_Instructions);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "definition", Value.Definition);
      Swagger.Streams.Deserialize (Object, "questionText", Value.Question_Text);
      Swagger.Streams.Deserialize (Object, "prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "simpleDatatype", Value.Simple_Datatype);
      Swagger.Streams.Deserialize (Object, "implementationNotes", Value.Implementation_Notes);
      Swagger.Streams.Deserialize (Object, "mappingInstructions", Value.Mapping_Instructions);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainFieldLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "codelist", Value.Codelist);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "parentDomain", Value.Parent_Domain);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "sdtmDatasetMappingTargets", Value.Sdtm_Dataset_Mapping_Targets);
      Serialize (Into, "sdtmigDatasetMappingTargets", Value.Sdtmig_Dataset_Mapping_Targets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainFieldLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainFieldLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "codelist", Value.Codelist);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "parentDomain", Value.Parent_Domain);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "sdtmDatasetMappingTargets", Value.Sdtm_Dataset_Mapping_Targets);
      Deserialize (Object, "sdtmigDatasetMappingTargets", Value.Sdtmig_Dataset_Mapping_Targets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainFieldLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainFieldLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainField_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Definition.Is_Null then
         Into.Write_Entity ("definition", Value.Definition);
      end if;
      if not Value.Domain_Specific.Is_Null then
         Into.Write_Entity ("domainSpecific", Value.Domain_Specific);
      end if;
      if not Value.Question_Text.Is_Null then
         Into.Write_Entity ("questionText", Value.Question_Text);
      end if;
      if not Value.Prompt.Is_Null then
         Into.Write_Entity ("prompt", Value.Prompt);
      end if;
      if not Value.Simple_Datatype.Is_Null then
         Into.Write_Entity ("simpleDatatype", Value.Simple_Datatype);
      end if;
      if not Value.Implementation_Notes.Is_Null then
         Into.Write_Entity ("implementationNotes", Value.Implementation_Notes);
      end if;
      if not Value.Mapping_Instructions.Is_Null then
         Into.Write_Entity ("mappingInstructions", Value.Mapping_Instructions);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "definition", Value.Definition);
      Swagger.Streams.Deserialize (Object, "domainSpecific", Value.Domain_Specific);
      Swagger.Streams.Deserialize (Object, "questionText", Value.Question_Text);
      Swagger.Streams.Deserialize (Object, "prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "simpleDatatype", Value.Simple_Datatype);
      Swagger.Streams.Deserialize (Object, "implementationNotes", Value.Implementation_Notes);
      Swagger.Streams.Deserialize (Object, "mappingInstructions", Value.Mapping_Instructions);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainFieldsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "fields", Value.Fields);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainFieldsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainFieldsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "fields", Value.Fields);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainFieldsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainFieldsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainFields_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainFields_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainFields_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainFields_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainFields_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProductClassesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "classes", Value.Classes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProductClassesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProductClassesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "classes", Value.Classes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProductClassesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProductClassesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProductClasses_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProductClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProductClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProductClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProductClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProductDomainsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "domains", Value.Domains);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProductDomainsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProductDomainsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "domains", Value.Domains);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProductDomainsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProductDomainsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProductDomains_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProductDomains_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProductDomains_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProductDomains_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProductDomains_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProductLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProductLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProductLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProductLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProductLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassDomainsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "domains", Value.Domains);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassDomainsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassDomainsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "domains", Value.Domains);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassDomainsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassDomainsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassDomains_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassDomains_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassDomains_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassDomains_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassDomains_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassScenariosLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "scenarios", Value.Scenarios);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassScenariosLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassScenariosLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "scenarios", Value.Scenarios);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassScenariosLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassScenariosLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassScenarios_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassScenarios_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassScenarios_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassScenarios_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassScenarios_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainFieldLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "codelist", Value.Codelist);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentDomain", Value.Parent_Domain);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "sdtmClassMappingTargets", Value.Sdtm_Class_Mapping_Targets);
      Serialize (Into, "sdtmigDatasetMappingTargets", Value.Sdtmig_Dataset_Mapping_Targets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainFieldLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainFieldLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "codelist", Value.Codelist);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentDomain", Value.Parent_Domain);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "sdtmClassMappingTargets", Value.Sdtm_Class_Mapping_Targets);
      Deserialize (Object, "sdtmigDatasetMappingTargets", Value.Sdtmig_Dataset_Mapping_Targets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainFieldLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainFieldLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainField_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Definition.Is_Null then
         Into.Write_Entity ("definition", Value.Definition);
      end if;
      if not Value.Question_Text.Is_Null then
         Into.Write_Entity ("questionText", Value.Question_Text);
      end if;
      if not Value.Prompt.Is_Null then
         Into.Write_Entity ("prompt", Value.Prompt);
      end if;
      if not Value.Completion_Instructions.Is_Null then
         Into.Write_Entity ("completionInstructions", Value.Completion_Instructions);
      end if;
      if not Value.Implementation_Notes.Is_Null then
         Into.Write_Entity ("implementationNotes", Value.Implementation_Notes);
      end if;
      if not Value.Simple_Datatype.Is_Null then
         Into.Write_Entity ("simpleDatatype", Value.Simple_Datatype);
      end if;
      if not Value.Mapping_Instructions.Is_Null then
         Into.Write_Entity ("mappingInstructions", Value.Mapping_Instructions);
      end if;
      if not Value.Core.Is_Null then
         Into.Write_Entity ("core", Value.Core);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "definition", Value.Definition);
      Swagger.Streams.Deserialize (Object, "questionText", Value.Question_Text);
      Swagger.Streams.Deserialize (Object, "prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "completionInstructions", Value.Completion_Instructions);
      Swagger.Streams.Deserialize (Object, "implementationNotes", Value.Implementation_Notes);
      Swagger.Streams.Deserialize (Object, "simpleDatatype", Value.Simple_Datatype);
      Swagger.Streams.Deserialize (Object, "mappingInstructions", Value.Mapping_Instructions);
      Swagger.Streams.Deserialize (Object, "core", Value.Core);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainFieldsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "fields", Value.Fields);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainFieldsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainFieldsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "fields", Value.Fields);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainFieldsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainFieldsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainFields_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainFields_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainFields_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainFields_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainFields_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductClassesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "classes", Value.Classes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductClassesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductClassesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "classes", Value.Classes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductClassesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductClassesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductClasses_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductDomainsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "domains", Value.Domains);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductDomainsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductDomainsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "domains", Value.Domains);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductDomainsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductDomainsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductDomains_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductDomains_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductDomains_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductDomains_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductDomains_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductScenariosLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "scenarios", Value.Scenarios);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductScenariosLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductScenariosLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "scenarios", Value.Scenarios);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductScenariosLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductScenariosLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductScenarios_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductScenarios_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductScenarios_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductScenarios_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductScenarios_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioFieldLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "codelist", Value.Codelist);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentDomain", Value.Parent_Domain);
      Serialize (Into, "parentScenario", Value.Parent_Scenario);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "sdtmigDatasetMappingTargets", Value.Sdtmig_Dataset_Mapping_Targets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioFieldLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioFieldLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "codelist", Value.Codelist);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentDomain", Value.Parent_Domain);
      Deserialize (Object, "parentScenario", Value.Parent_Scenario);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "sdtmigDatasetMappingTargets", Value.Sdtmig_Dataset_Mapping_Targets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioFieldLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioFieldLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioField_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Definition.Is_Null then
         Into.Write_Entity ("definition", Value.Definition);
      end if;
      if not Value.Question_Text.Is_Null then
         Into.Write_Entity ("questionText", Value.Question_Text);
      end if;
      if not Value.Prompt.Is_Null then
         Into.Write_Entity ("prompt", Value.Prompt);
      end if;
      if not Value.Completion_Instructions.Is_Null then
         Into.Write_Entity ("completionInstructions", Value.Completion_Instructions);
      end if;
      if not Value.Implementation_Notes.Is_Null then
         Into.Write_Entity ("implementationNotes", Value.Implementation_Notes);
      end if;
      if not Value.Simple_Datatype.Is_Null then
         Into.Write_Entity ("simpleDatatype", Value.Simple_Datatype);
      end if;
      if not Value.Mapping_Instructions.Is_Null then
         Into.Write_Entity ("mappingInstructions", Value.Mapping_Instructions);
      end if;
      if not Value.Core.Is_Null then
         Into.Write_Entity ("core", Value.Core);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "definition", Value.Definition);
      Swagger.Streams.Deserialize (Object, "questionText", Value.Question_Text);
      Swagger.Streams.Deserialize (Object, "prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "completionInstructions", Value.Completion_Instructions);
      Swagger.Streams.Deserialize (Object, "implementationNotes", Value.Implementation_Notes);
      Swagger.Streams.Deserialize (Object, "simpleDatatype", Value.Simple_Datatype);
      Swagger.Streams.Deserialize (Object, "mappingInstructions", Value.Mapping_Instructions);
      Swagger.Streams.Deserialize (Object, "core", Value.Core);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioFieldsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "parentDomain", Value.Parent_Domain);
      Serialize (Into, "fields", Value.Fields);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioFieldsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioFieldsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "parentDomain", Value.Parent_Domain);
      Deserialize (Object, "fields", Value.Fields);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioFieldsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioFieldsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioFields_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Domain.Is_Null then
         Into.Write_Entity ("domain", Value.Domain);
      end if;
      if not Value.Scenario.Is_Null then
         Into.Write_Entity ("scenario", Value.Scenario);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioFields_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioFields_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "domain", Value.Domain);
      Swagger.Streams.Deserialize (Object, "scenario", Value.Scenario);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioFields_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioFields_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtCodelistTermsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentPackage", Value.Parent_Package);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "terms", Value.Terms);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtCodelistTermsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtCodelistTermsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentPackage", Value.Parent_Package);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "terms", Value.Terms);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtCodelistTermsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtCodelistTermsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtCodelistTerms_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Concept_Id.Is_Null then
         Into.Write_Entity ("conceptId", Value.Concept_Id);
      end if;
      if not Value.Extensible.Is_Null then
         Into.Write_Entity ("extensible", Value.Extensible);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Submission_Value.Is_Null then
         Into.Write_Entity ("submissionValue", Value.Submission_Value);
      end if;
      if not Value.Definition.Is_Null then
         Into.Write_Entity ("definition", Value.Definition);
      end if;
      if not Value.Preferred_Term.Is_Null then
         Into.Write_Entity ("preferredTerm", Value.Preferred_Term);
      end if;
      Serialize (Into, "synonyms", Value.Synonyms);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtCodelistTerms_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtCodelistTerms_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "conceptId", Value.Concept_Id);
      Swagger.Streams.Deserialize (Object, "extensible", Value.Extensible);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "submissionValue", Value.Submission_Value);
      Swagger.Streams.Deserialize (Object, "definition", Value.Definition);
      Swagger.Streams.Deserialize (Object, "preferredTerm", Value.Preferred_Term);
      Swagger.Streams.Deserialize (Object, "synonyms", Value.Synonyms);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtCodelistTerms_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtCodelistTerms_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackageCodelistsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "codelists", Value.Codelists);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackageCodelistsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackageCodelistsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "codelists", Value.Codelists);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackageCodelistsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackageCodelistsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackageCodelists_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackageCodelists_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackageCodelists_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackageCodelists_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackageCodelists_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackageLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackageLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackageLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackageLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackageLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackagesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "packages", Value.Packages);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackagesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackagesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "packages", Value.Packages);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackagesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackagesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackages_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackages_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackages_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackages_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackages_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtTermLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentPackage", Value.Parent_Package);
      Serialize (Into, "parentCodelist", Value.Parent_Codelist);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtTermLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtTermLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentPackage", Value.Parent_Package);
      Deserialize (Object, "parentCodelist", Value.Parent_Codelist);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtTermLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtTermLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtTerm_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Concept_Id.Is_Null then
         Into.Write_Entity ("conceptId", Value.Concept_Id);
      end if;
      if not Value.Submission_Value.Is_Null then
         Into.Write_Entity ("submissionValue", Value.Submission_Value);
      end if;
      if not Value.Definition.Is_Null then
         Into.Write_Entity ("definition", Value.Definition);
      end if;
      if not Value.Preferred_Term.Is_Null then
         Into.Write_Entity ("preferredTerm", Value.Preferred_Term);
      end if;
      Serialize (Into, "synonyms", Value.Synonyms);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtTerm_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtTerm_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "conceptId", Value.Concept_Id);
      Swagger.Streams.Deserialize (Object, "submissionValue", Value.Submission_Value);
      Swagger.Streams.Deserialize (Object, "definition", Value.Definition);
      Swagger.Streams.Deserialize (Object, "preferredTerm", Value.Preferred_Term);
      Swagger.Streams.Deserialize (Object, "synonyms", Value.Synonyms);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtTerm_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtTerm_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DefaultSearchResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "hits", Value.Hits);
      Serialize (Into, "totalHits", Value.Total_Hits);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DefaultSearchResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DefaultSearchResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "hits", Value.Hits);
      Swagger.Streams.Deserialize (Object, "totalHits", Value.Total_Hits);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DefaultSearchResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.DefaultSearchResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportAdamDatastructuresTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "datastructures", Value.Datastructures);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportAdamDatastructuresTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportAdamDatastructuresTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "datastructures", Value.Datastructures);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportAdamDatastructuresTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportAdamDatastructuresTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportAdamVariablesTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "variables", Value.Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportAdamVariablesTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportAdamVariablesTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "variables", Value.Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportAdamVariablesTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportAdamVariablesTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportCtCodelist_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Code.Is_Null then
         Into.Write_Entity ("Code", Value.Code);
      end if;
      if not Value.Codelist_Code.Is_Null then
         Into.Write_Entity ("Codelist Code", Value.Codelist_Code);
      end if;
      if not Value.Codelist_Extensible___Yes_No.Is_Null then
         Into.Write_Entity ("Codelist Extensible (Yes/No)", Value.Codelist_Extensible___Yes_No);
      end if;
      if not Value.Codelist_Name.Is_Null then
         Into.Write_Entity ("Codelist Name", Value.Codelist_Name);
      end if;
      if not Value.CDISC_Submission_Value.Is_Null then
         Into.Write_Entity ("CDISC Submission Value", Value.CDISC_Submission_Value);
      end if;
      Serialize (Into, "CDISC Synonym(s)", Value.CDISC_Synonym_S);
      if not Value.CDISC_Definition.Is_Null then
         Into.Write_Entity ("CDISC Definition", Value.CDISC_Definition);
      end if;
      if not Value.NCI_Preferred_Term.Is_Null then
         Into.Write_Entity ("NCI Preferred Term", Value.NCI_Preferred_Term);
      end if;
      if not Value.Standard_And_Date.Is_Null then
         Into.Write_Entity ("Standard and Date", Value.Standard_And_Date);
      end if;
      Serialize (Into, "", Value.P_);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportCtCodelist_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportCtCodelist_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "Code", Value.Code);
      Swagger.Streams.Deserialize (Object, "Codelist Code", Value.Codelist_Code);
      Swagger.Streams.Deserialize (Object, "Codelist Extensible (Yes/No)", Value.Codelist_Extensible___Yes_No);
      Swagger.Streams.Deserialize (Object, "Codelist Name", Value.Codelist_Name);
      Swagger.Streams.Deserialize (Object, "CDISC Submission Value", Value.CDISC_Submission_Value);
      Swagger.Streams.Deserialize (Object, "CDISC Synonym(s)", Value.CDISC_Synonym_S);
      Swagger.Streams.Deserialize (Object, "CDISC Definition", Value.CDISC_Definition);
      Swagger.Streams.Deserialize (Object, "NCI Preferred Term", Value.NCI_Preferred_Term);
      Swagger.Streams.Deserialize (Object, "Standard and Date", Value.Standard_And_Date);
      Deserialize (Object, "", Value.P_);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportCtCodelist_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportCtCodelist_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportCtTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "ct", Value.Ct);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportCtTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportCtTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "ct", Value.Ct);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportCtTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportCtTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportQrsItemsTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "items", Value.Items);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportQrsItemsTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportQrsItemsTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "items", Value.Items);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportQrsItemsTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportQrsItemsTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmDatasetsTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmDatasetsTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmDatasetsTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmDatasetsTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmDatasetsTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmigDatasetsTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmigDatasetsTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmigDatasetsTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmigDatasetsTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmigDatasetsTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmigVariablesTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "variables", Value.Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmigVariablesTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmigVariablesTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "variables", Value.Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmigVariablesTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmigVariablesTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSendigDatasetsTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSendigDatasetsTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSendigDatasetsTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSendigDatasetsTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSendigDatasetsTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSendigVariablesTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "variables", Value.Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSendigVariablesTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSendigVariablesTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "variables", Value.Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSendigVariablesTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSendigVariablesTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LastupdatedLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LastupdatedLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LastupdatedLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LastupdatedLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.LastupdatedLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Lastupdated_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      if not Value.Overall.Is_Null then
         Into.Write_Entity ("overall", Value.Overall);
      end if;
      if not Value.Data_Analysis.Is_Null then
         Into.Write_Entity ("data-analysis", Value.Data_Analysis);
      end if;
      if not Value.Data_Collection.Is_Null then
         Into.Write_Entity ("data-collection", Value.Data_Collection);
      end if;
      if not Value.Data_Tabulation.Is_Null then
         Into.Write_Entity ("data-tabulation", Value.Data_Tabulation);
      end if;
      if not Value.Measure.Is_Null then
         Into.Write_Entity ("measure", Value.Measure);
      end if;
      if not Value.Terminology.Is_Null then
         Into.Write_Entity ("terminology", Value.Terminology);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Lastupdated_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Lastupdated_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "overall", Value.Overall);
      Swagger.Streams.Deserialize (Object, "data-analysis", Value.Data_Analysis);
      Swagger.Streams.Deserialize (Object, "data-collection", Value.Data_Collection);
      Swagger.Streams.Deserialize (Object, "data-tabulation", Value.Data_Tabulation);
      Swagger.Streams.Deserialize (Object, "measure", Value.Measure);
      Swagger.Streams.Deserialize (Object, "terminology", Value.Terminology);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Lastupdated_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.Lastupdated_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MdrSearchScopesGet200Response_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "scopes", Value.Scopes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MdrSearchScopesGet200Response_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MdrSearchScopesGet200Response_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "scopes", Value.Scopes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MdrSearchScopesGet200Response_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.MdrSearchScopesGet200Response_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupDataAnalysisLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "adam", Value.Adam);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupDataAnalysisLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupDataAnalysisLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "adam", Value.Adam);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupDataAnalysisLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupDataAnalysisLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupDataAnalysis_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupDataAnalysis_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupDataAnalysis_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupDataAnalysis_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupDataAnalysis_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupDataCollectionLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "cdash", Value.Cdash);
      Serialize (Into, "cdashig", Value.Cdashig);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupDataCollectionLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupDataCollectionLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "cdash", Value.Cdash);
      Deserialize (Object, "cdashig", Value.Cdashig);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupDataCollectionLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupDataCollectionLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupDataCollection_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupDataCollection_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupDataCollection_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupDataCollection_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupDataCollection_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupDataTabulationLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "sdtm", Value.Sdtm);
      Serialize (Into, "sdtmig", Value.Sdtmig);
      Serialize (Into, "sendig", Value.Sendig);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupDataTabulationLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupDataTabulationLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "sdtm", Value.Sdtm);
      Deserialize (Object, "sdtmig", Value.Sdtmig);
      Deserialize (Object, "sendig", Value.Sendig);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupDataTabulationLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupDataTabulationLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupDataTabulation_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupDataTabulation_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupDataTabulation_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupDataTabulation_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupDataTabulation_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupQrsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "qrs", Value.Qrs);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupQrsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupQrsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "qrs", Value.Qrs);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupQrsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupQrsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupQrs_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupQrs_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupQrs_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupQrs_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupQrs_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupTerminologyLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "packages", Value.Packages);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupTerminologyLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupTerminologyLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "packages", Value.Packages);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupTerminologyLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupTerminologyLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductgroupTerminology_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductgroupTerminology_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductgroupTerminology_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductgroupTerminology_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductgroupTerminology_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "data-collection", Value.Data_Collection);
      Serialize (Into, "data-tabulation", Value.Data_Tabulation);
      Serialize (Into, "data-analysis", Value.Data_Analysis);
      Serialize (Into, "terminology", Value.Terminology);
      Serialize (Into, "measure", Value.Measure);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "data-collection", Value.Data_Collection);
      Deserialize (Object, "data-tabulation", Value.Data_Tabulation);
      Deserialize (Object, "data-analysis", Value.Data_Analysis);
      Deserialize (Object, "terminology", Value.Terminology);
      Deserialize (Object, "measure", Value.Measure);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ProductsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Products_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Products_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Products_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Products_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.Products_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsItemLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "qrsItemTEST", Value.Qrs_Item_TEST);
      Serialize (Into, "qrsItemTESTCD", Value.Qrs_Item_TESTCD);
      Serialize (Into, "qrsItemEVAL", Value.Qrs_Item_EVAL);
      Serialize (Into, "qrsItemSCAT", Value.Qrs_Item_SCAT);
      Serialize (Into, "responsegroup", Value.Responsegroup);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsItemLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsItemLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "qrsItemTEST", Value.Qrs_Item_TEST);
      Deserialize (Object, "qrsItemTESTCD", Value.Qrs_Item_TESTCD);
      Deserialize (Object, "qrsItemEVAL", Value.Qrs_Item_EVAL);
      Deserialize (Object, "qrsItemSCAT", Value.Qrs_Item_SCAT);
      Deserialize (Object, "responsegroup", Value.Responsegroup);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsItemLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsItemLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsItem_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Question_Text.Is_Null then
         Into.Write_Entity ("questionText", Value.Question_Text);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsItem_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsItem_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "questionText", Value.Question_Text);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsItem_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsItem_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsItemsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "items", Value.Items);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsItemsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsItemsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "items", Value.Items);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsItemsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsItemsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsItems_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Until_Date.Is_Null then
         Into.Write_Entity ("untilDate", Value.Until_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      if not Value.Qrs_Type.Is_Null then
         Into.Write_Entity ("qrsType", Value.Qrs_Type);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsItems_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsItems_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "untilDate", Value.Until_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Swagger.Streams.Deserialize (Object, "qrsType", Value.Qrs_Type);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsItems_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsItems_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsResponseLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "qrsResponseORRES", Value.Qrs_Response_ORRES);
      Serialize (Into, "qrsResponseORRESU", Value.Qrs_Response_ORRESU);
      Serialize (Into, "qrsResponseSTRESC", Value.Qrs_Response_STRESC);
      Serialize (Into, "qrsResponseSTRESCU", Value.Qrs_Response_STRESCU);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsResponseLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsResponseLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "qrsResponseORRES", Value.Qrs_Response_ORRES);
      Deserialize (Object, "qrsResponseORRESU", Value.Qrs_Response_ORRESU);
      Deserialize (Object, "qrsResponseSTRESC", Value.Qrs_Response_STRESC);
      Deserialize (Object, "qrsResponseSTRESCU", Value.Qrs_Response_STRESCU);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsResponseLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsResponseLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsResponsegroupLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "responses", Value.Responses);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsResponsegroupLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsResponsegroupLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "responses", Value.Responses);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsResponsegroupLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsResponsegroupLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsResponsegroup_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsResponsegroup_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsResponsegroup_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsResponsegroup_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsResponsegroup_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsResponsegroupsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "responsegroups", Value.Responsegroups);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsResponsegroupsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsResponsegroupsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "responsegroups", Value.Responsegroups);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsResponsegroupsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsResponsegroupsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsResponsegroups_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Until_Date.Is_Null then
         Into.Write_Entity ("untilDate", Value.Until_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      if not Value.Qrs_Type.Is_Null then
         Into.Write_Entity ("qrsType", Value.Qrs_Type);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsResponsegroups_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsResponsegroups_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "untilDate", Value.Until_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Swagger.Streams.Deserialize (Object, "qrsType", Value.Qrs_Type);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsResponsegroups_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsResponsegroups_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsResponses_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsResponses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsResponses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsResponses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsResponses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashClassFieldLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashClassFieldLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashClassFieldLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashClassFieldLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashClassFieldLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashClassField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashClassField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashClassField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashClassField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashClassField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashDomainFieldLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashDomainFieldLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashDomainFieldLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashDomainFieldLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashDomainFieldLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashDomainField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashDomainField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashDomainField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashDomainField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashDomainField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashigDomainFieldLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashigDomainFieldLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashigDomainFieldLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashigDomainFieldLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashigDomainFieldLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashigDomainField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashigDomainField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashigDomainField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashigDomainField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashigDomainField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashigScenarioFieldLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashigScenarioFieldLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashigScenarioFieldLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashigScenarioFieldLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashigScenarioFieldLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCdashigScenarioField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCdashigScenarioField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCdashigScenarioField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCdashigScenarioField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCdashigScenarioField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCtCodelistLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCtCodelistLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCtCodelistLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCtCodelistLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCtCodelistLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCtCodelist_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCtCodelist_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCtCodelist_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCtCodelist_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCtCodelist_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCtTermLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCtTermLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCtTermLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCtTermLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCtTermLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootCtTerm_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootCtTerm_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootCtTerm_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootCtTerm_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootCtTerm_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSdtmClassVariableLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSdtmClassVariableLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSdtmClassVariableLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSdtmClassVariableLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSdtmClassVariableLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSdtmClassVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSdtmClassVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSdtmClassVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSdtmClassVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSdtmClassVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSdtmDatasetVariableLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSdtmDatasetVariableLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSdtmDatasetVariableLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSdtmDatasetVariableLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSdtmDatasetVariableLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSdtmDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSdtmDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSdtmDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSdtmDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSdtmDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSdtmigDatasetVariableLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSdtmigDatasetVariableLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSdtmigDatasetVariableLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSdtmigDatasetVariableLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSdtmigDatasetVariableLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSdtmigDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSdtmigDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSdtmigDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSdtmigDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSdtmigDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSendigDatasetVariableLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "versions", Value.Versions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSendigDatasetVariableLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSendigDatasetVariableLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "versions", Value.Versions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSendigDatasetVariableLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSendigDatasetVariableLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RootSendigDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RootSendigDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RootSendigDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RootSendigDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.RootSendigDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassDatasetsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassDatasetsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassDatasetsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassDatasetsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassDatasetsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariableLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "qualifiesVariables", Value.Qualifies_Variables);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariableLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariableLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "qualifiesVariables", Value.Qualifies_Variables);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariableLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariableLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariable_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Role.Is_Null then
         Into.Write_Entity ("role", Value.Role);
      end if;
      if not Value.Role_Description.Is_Null then
         Into.Write_Entity ("roleDescription", Value.Role_Description);
      end if;
      if not Value.Simple_Datatype.Is_Null then
         Into.Write_Entity ("simpleDatatype", Value.Simple_Datatype);
      end if;
      if not Value.Described_Value_Domain.Is_Null then
         Into.Write_Entity ("describedValueDomain", Value.Described_Value_Domain);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "role", Value.Role);
      Swagger.Streams.Deserialize (Object, "roleDescription", Value.Role_Description);
      Swagger.Streams.Deserialize (Object, "simpleDatatype", Value.Simple_Datatype);
      Swagger.Streams.Deserialize (Object, "describedValueDomain", Value.Described_Value_Domain);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariablesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "classVariables", Value.Class_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariablesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariablesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "classVariables", Value.Class_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariablesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariablesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassVariables_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "classes", Value.Classes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "classes", Value.Classes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClasses_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetVariableLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentDataset", Value.Parent_Dataset);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetVariableLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetVariableLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentDataset", Value.Parent_Dataset);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetVariableLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetVariableLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Role.Is_Null then
         Into.Write_Entity ("role", Value.Role);
      end if;
      if not Value.Role_Description.Is_Null then
         Into.Write_Entity ("roleDescription", Value.Role_Description);
      end if;
      if not Value.Simple_Datatype.Is_Null then
         Into.Write_Entity ("simpleDatatype", Value.Simple_Datatype);
      end if;
      if not Value.Described_Value_Domain.Is_Null then
         Into.Write_Entity ("describedValueDomain", Value.Described_Value_Domain);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "role", Value.Role);
      Swagger.Streams.Deserialize (Object, "roleDescription", Value.Role_Description);
      Swagger.Streams.Deserialize (Object, "simpleDatatype", Value.Simple_Datatype);
      Swagger.Streams.Deserialize (Object, "describedValueDomain", Value.Described_Value_Domain);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetVariablesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "datasetVariables", Value.Dataset_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetVariablesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetVariablesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "datasetVariables", Value.Dataset_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetVariablesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetVariablesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetVariables_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Dataset_Structure.Is_Null then
         Into.Write_Entity ("datasetStructure", Value.Dataset_Structure);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "datasetStructure", Value.Dataset_Structure);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmProductLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmProductLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmProductLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmProductLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmProductLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClassDatasetsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClassDatasetsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClassDatasetsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClassDatasetsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClassDatasetsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClassDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClassDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClassDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClassDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClassDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClassesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "classes", Value.Classes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClassesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClassesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "classes", Value.Classes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClassesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClassesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClasses_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetVariableLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "codelist", Value.Codelist);
      Serialize (Into, "modelClassVariable", Value.Model_Class_Variable);
      Serialize (Into, "modelDatasetVariable", Value.Model_Dataset_Variable);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentDataset", Value.Parent_Dataset);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetVariableLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetVariableLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "codelist", Value.Codelist);
      Deserialize (Object, "modelClassVariable", Value.Model_Class_Variable);
      Deserialize (Object, "modelDatasetVariable", Value.Model_Dataset_Variable);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentDataset", Value.Parent_Dataset);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetVariableLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetVariableLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Role.Is_Null then
         Into.Write_Entity ("role", Value.Role);
      end if;
      if not Value.Simple_Datatype.Is_Null then
         Into.Write_Entity ("simpleDatatype", Value.Simple_Datatype);
      end if;
      if not Value.Core.Is_Null then
         Into.Write_Entity ("core", Value.Core);
      end if;
      if not Value.Described_Value_Domain.Is_Null then
         Into.Write_Entity ("describedValueDomain", Value.Described_Value_Domain);
      end if;
      Serialize (Into, "valueList", Value.Value_List);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "role", Value.Role);
      Swagger.Streams.Deserialize (Object, "simpleDatatype", Value.Simple_Datatype);
      Swagger.Streams.Deserialize (Object, "core", Value.Core);
      Swagger.Streams.Deserialize (Object, "describedValueDomain", Value.Described_Value_Domain);
      Swagger.Streams.Deserialize (Object, "valueList", Value.Value_List);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetVariablesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "modelDataset", Value.Model_Dataset);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "datasetVariables", Value.Dataset_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetVariablesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetVariablesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "modelDataset", Value.Model_Dataset);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "datasetVariables", Value.Dataset_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetVariablesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetVariablesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetVariables_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Dataset_Structure.Is_Null then
         Into.Write_Entity ("datasetStructure", Value.Dataset_Structure);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "datasetStructure", Value.Dataset_Structure);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClassDatasetsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClassDatasetsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClassDatasetsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClassDatasetsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClassDatasetsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClassDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClassDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClassDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClassDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClassDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClassesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "classes", Value.Classes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClassesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClassesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "classes", Value.Classes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClassesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClassesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClasses_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetVariableLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "codelist", Value.Codelist);
      Serialize (Into, "modelClassVariable", Value.Model_Class_Variable);
      Serialize (Into, "modelDatasetVariable", Value.Model_Dataset_Variable);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentDataset", Value.Parent_Dataset);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetVariableLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetVariableLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "codelist", Value.Codelist);
      Deserialize (Object, "modelClassVariable", Value.Model_Class_Variable);
      Deserialize (Object, "modelDatasetVariable", Value.Model_Dataset_Variable);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentDataset", Value.Parent_Dataset);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetVariableLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetVariableLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Role.Is_Null then
         Into.Write_Entity ("role", Value.Role);
      end if;
      if not Value.Simple_Datatype.Is_Null then
         Into.Write_Entity ("simpleDatatype", Value.Simple_Datatype);
      end if;
      if not Value.Core.Is_Null then
         Into.Write_Entity ("core", Value.Core);
      end if;
      if not Value.Described_Value_Domain.Is_Null then
         Into.Write_Entity ("describedValueDomain", Value.Described_Value_Domain);
      end if;
      Serialize (Into, "valueList", Value.Value_List);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "role", Value.Role);
      Swagger.Streams.Deserialize (Object, "simpleDatatype", Value.Simple_Datatype);
      Swagger.Streams.Deserialize (Object, "core", Value.Core);
      Swagger.Streams.Deserialize (Object, "describedValueDomain", Value.Described_Value_Domain);
      Swagger.Streams.Deserialize (Object, "valueList", Value.Value_List);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetVariablesLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "modelDataset", Value.Model_Dataset);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "datasetVariables", Value.Dataset_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetVariablesLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetVariablesLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "modelDataset", Value.Model_Dataset);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "datasetVariables", Value.Dataset_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetVariablesLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetVariablesLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetVariables_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Dataset_Structure.Is_Null then
         Into.Write_Entity ("datasetStructure", Value.Dataset_Structure);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "datasetStructure", Value.Dataset_Structure);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.About_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      if not Value.Release_Notes.Is_Null then
         Into.Write_Entity ("release-notes", Value.Release_Notes);
      end if;
      if not Value.Api_Documentation.Is_Null then
         Into.Write_Entity ("api-documentation", Value.Api_Documentation);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in About_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.About_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "release-notes", Value.Release_Notes);
      Swagger.Streams.Deserialize (Object, "api-documentation", Value.Api_Documentation);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out About_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.About_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlAbout_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlAbout_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlAbout_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlAbout_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlAbout_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlAdamDatastructureVariables_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlAdamDatastructureVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlAdamDatastructureVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlAdamDatastructureVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlAdamDatastructureVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlAdamDatastructureVarsets_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlAdamDatastructureVarsets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlAdamDatastructureVarsets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlAdamDatastructureVarsets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlAdamDatastructureVarsets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamVarsetLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentDatastructure", Value.Parent_Datastructure);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamVarsetLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamVarsetLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentDatastructure", Value.Parent_Datastructure);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamVarsetLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamVarsetLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamVarset_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "analysisVariables", Value.Analysis_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamVarset_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamVarset_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "analysisVariables", Value.Analysis_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamVarset_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamVarset_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructure_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Class.Is_Null then
         Into.Write_Entity ("class", Value.Class);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "analysisVariableSets", Value.Analysis_Variable_Sets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructure_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructure_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "class", Value.Class);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "analysisVariableSets", Value.Analysis_Variable_Sets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructure_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructure_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlAdamDatastructure_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlAdamDatastructure_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlAdamDatastructure_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlAdamDatastructure_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlAdamDatastructure_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlAdamProductDatastructures_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlAdamProductDatastructures_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlAdamProductDatastructures_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlAdamProductDatastructures_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlAdamProductDatastructures_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamProduct_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "dataStructures", Value.Data_Structures);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "dataStructures", Value.Data_Structures);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlAdamProduct_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlAdamProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlAdamProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlAdamProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlAdamProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlAdamVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlAdamVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlAdamVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlAdamVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlAdamVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlAdamVarset_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlAdamVarset_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlAdamVarset_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlAdamVarset_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlAdamVarset_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashClassDomains_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashClassDomains_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashClassDomains_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashClassDomains_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashClassDomains_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashClassField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashClassField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashClassField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashClassField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashClassField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClass_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "cdashModelFields", Value.Cdash_Model_Fields);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "cdashModelFields", Value.Cdash_Model_Fields);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashClass_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashDomainField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashDomainField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashDomainField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashDomainField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashDomainField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashDomainFields_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashDomainFields_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashDomainFields_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashDomainFields_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashDomainFields_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomainLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomainLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomainLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomainLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomainLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashDomain_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "fields", Value.Fields);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashDomain_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashDomain_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "fields", Value.Fields);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashDomain_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashDomain_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashDomain_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashDomain_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashDomain_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashDomain_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashDomain_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashProductClasses_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashProductClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashProductClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashProductClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashProductClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashProductDomains_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashProductDomains_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashProductDomains_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashProductDomains_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashProductDomains_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashProduct_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "classes", Value.Classes);
      Serialize (Into, "domains", Value.Domains);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "classes", Value.Classes);
      Deserialize (Object, "domains", Value.Domains);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashProduct_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigClassDomains_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigClassDomains_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigClassDomains_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigClassDomains_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigClassDomains_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigClassScenarios_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigClassScenarios_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigClassScenarios_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigClassScenarios_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigClassScenarios_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClassLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "modelClass", Value.Model_Class);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "subclasses", Value.Subclasses);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClassLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClassLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "modelClass", Value.Model_Class);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "subclasses", Value.Subclasses);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClassLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClassLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigClass_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "domains", Value.Domains);
      Serialize (Into, "scenarios", Value.Scenarios);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "domains", Value.Domains);
      Deserialize (Object, "scenarios", Value.Scenarios);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigClass_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigDomainField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigDomainField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigDomainField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigDomainField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigDomainField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigDomainFields_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigDomainFields_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigDomainFields_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigDomainFields_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigDomainFields_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomainLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "scenarios", Value.Scenarios);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomainLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomainLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "scenarios", Value.Scenarios);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomainLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomainLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigDomain_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "fields", Value.Fields);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigDomain_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigDomain_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "fields", Value.Fields);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigDomain_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigDomain_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigDomain_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigDomain_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigDomain_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigDomain_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigDomain_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigProductClasses_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigProductClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigProductClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigProductClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigProductClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigProductDomains_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigProductDomains_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigProductDomains_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigProductDomains_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigProductDomains_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigProductScenarios_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigProductScenarios_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigProductScenarios_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigProductScenarios_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigProductScenarios_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProduct_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "classes", Value.Classes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "classes", Value.Classes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigProduct_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigScenarioField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigScenarioField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigScenarioField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigScenarioField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigScenarioField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigScenarioFields_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigScenarioFields_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigScenarioFields_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigScenarioFields_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigScenarioFields_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenarioLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "parentDomain", Value.Parent_Domain);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenarioLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenarioLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "parentDomain", Value.Parent_Domain);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenarioLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenarioLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigScenario_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Domain.Is_Null then
         Into.Write_Entity ("domain", Value.Domain);
      end if;
      if not Value.Scenario.Is_Null then
         Into.Write_Entity ("scenario", Value.Scenario);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "fields", Value.Fields);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigScenario_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigScenario_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "domain", Value.Domain);
      Swagger.Streams.Deserialize (Object, "scenario", Value.Scenario);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "fields", Value.Fields);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigScenario_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigScenario_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCdashigScenario_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCdashigScenario_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCdashigScenario_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCdashigScenario_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCdashigScenario_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCtCodelistTerms_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCtCodelistTerms_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCtCodelistTerms_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCtCodelistTerms_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCtCodelistTerms_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtCodelistLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentPackage", Value.Parent_Package);
      Serialize (Into, "rootItem", Value.Root_Item);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtCodelistLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtCodelistLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentPackage", Value.Parent_Package);
      Deserialize (Object, "rootItem", Value.Root_Item);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtCodelistLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtCodelistLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtCodelist_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Concept_Id.Is_Null then
         Into.Write_Entity ("conceptId", Value.Concept_Id);
      end if;
      if not Value.Extensible.Is_Null then
         Into.Write_Entity ("extensible", Value.Extensible);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Submission_Value.Is_Null then
         Into.Write_Entity ("submissionValue", Value.Submission_Value);
      end if;
      if not Value.Definition.Is_Null then
         Into.Write_Entity ("definition", Value.Definition);
      end if;
      if not Value.Preferred_Term.Is_Null then
         Into.Write_Entity ("preferredTerm", Value.Preferred_Term);
      end if;
      Serialize (Into, "synonyms", Value.Synonyms);
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "terms", Value.Terms);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtCodelist_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtCodelist_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "conceptId", Value.Concept_Id);
      Swagger.Streams.Deserialize (Object, "extensible", Value.Extensible);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "submissionValue", Value.Submission_Value);
      Swagger.Streams.Deserialize (Object, "definition", Value.Definition);
      Swagger.Streams.Deserialize (Object, "preferredTerm", Value.Preferred_Term);
      Swagger.Streams.Deserialize (Object, "synonyms", Value.Synonyms);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "terms", Value.Terms);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtCodelist_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtCodelist_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCtCodelist_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCtCodelist_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCtCodelist_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCtCodelist_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCtCodelist_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCtPackageCodelists_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCtPackageCodelists_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCtPackageCodelists_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCtPackageCodelists_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCtPackageCodelists_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CtPackage_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "codelists", Value.Codelists);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CtPackage_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CtPackage_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "codelists", Value.Codelists);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CtPackage_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CtPackage_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCtPackage_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCtPackage_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCtPackage_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCtPackage_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCtPackage_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCtPackages_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCtPackages_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCtPackages_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCtPackages_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCtPackages_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlCtTerm_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlCtTerm_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlCtTerm_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlCtTerm_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlCtTerm_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlLastupdated_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlLastupdated_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlLastupdated_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlLastupdated_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlLastupdated_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlProductgroupDataAnalysis_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlProductgroupDataAnalysis_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlProductgroupDataAnalysis_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlProductgroupDataAnalysis_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlProductgroupDataAnalysis_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlProductgroupDataCollection_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlProductgroupDataCollection_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlProductgroupDataCollection_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlProductgroupDataCollection_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlProductgroupDataCollection_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlProductgroupDataTabulation_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlProductgroupDataTabulation_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlProductgroupDataTabulation_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlProductgroupDataTabulation_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlProductgroupDataTabulation_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlProductgroupTerminology_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlProductgroupTerminology_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlProductgroupTerminology_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlProductgroupTerminology_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlProductgroupTerminology_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlProducts_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlProducts_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlProducts_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlProducts_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlProducts_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlQrsItem_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlQrsItem_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlQrsItem_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlQrsItem_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlQrsItem_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlQrsItems_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlQrsItems_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlQrsItems_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlQrsItems_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlQrsItems_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsProductLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Serialize (Into, "qrsTermCAT", Value.Qrs_Term_CAT);
      Serialize (Into, "qrsItems", Value.Qrs_Items);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsProductLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsProductLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
      Deserialize (Object, "qrsTermCAT", Value.Qrs_Term_CAT);
      Deserialize (Object, "qrsItems", Value.Qrs_Items);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsProductLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsProductLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QrsProduct_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Until_Date.Is_Null then
         Into.Write_Entity ("untilDate", Value.Until_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      if not Value.Qrs_Type.Is_Null then
         Into.Write_Entity ("qrsType", Value.Qrs_Type);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "items", Value.Items);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QrsProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QrsProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "untilDate", Value.Until_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Swagger.Streams.Deserialize (Object, "qrsType", Value.Qrs_Type);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "items", Value.Items);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QrsProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.QrsProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlQrsProduct_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlQrsProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlQrsProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlQrsProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlQrsProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlQrsResponsegroup_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlQrsResponsegroup_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlQrsResponsegroup_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlQrsResponsegroup_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlQrsResponsegroup_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlQrsResponsegroups_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlQrsResponsegroups_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlQrsResponsegroups_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlQrsResponsegroups_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlQrsResponsegroups_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootCdashClassField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootCdashClassField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootCdashClassField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootCdashClassField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootCdashClassField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootCdashDomainField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootCdashDomainField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootCdashDomainField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootCdashDomainField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootCdashDomainField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootCdashigDomainField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootCdashigDomainField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootCdashigDomainField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootCdashigDomainField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootCdashigDomainField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootCdashigScenarioField_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootCdashigScenarioField_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootCdashigScenarioField_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootCdashigScenarioField_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootCdashigScenarioField_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootCtCodelist_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootCtCodelist_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootCtCodelist_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootCtCodelist_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootCtCodelist_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootCtTerm_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootCtTerm_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootCtTerm_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootCtTerm_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootCtTerm_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootSdtmClassVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootSdtmClassVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootSdtmClassVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootSdtmClassVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootSdtmClassVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootSdtmDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootSdtmDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootSdtmDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootSdtmDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootSdtmDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootSdtmigDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootSdtmigDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootSdtmigDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootSdtmigDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootSdtmigDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlRootSendigDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlRootSendigDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlRootSendigDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlRootSendigDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlRootSendigDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmClassDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmClassDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmClassDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmClassDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmClassDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmClassVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmClassVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmClassVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmClassVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmClassVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmClassVariables_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmClassVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmClassVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmClassVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmClassVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClass_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "classVariables", Value.Class_Variables);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "classVariables", Value.Class_Variables);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmClass_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmClasses_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmDatasetVariables_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmDatasetVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmDatasetVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmDatasetVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmDatasetVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDatasetLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDatasetLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDatasetLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDatasetLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDatasetLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmDataset_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Dataset_Structure.Is_Null then
         Into.Write_Entity ("datasetStructure", Value.Dataset_Structure);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "datasetVariables", Value.Dataset_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmDataset_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmDataset_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "datasetStructure", Value.Dataset_Structure);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "datasetVariables", Value.Dataset_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmDataset_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmDataset_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmDataset_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmDataset_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmDataset_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmDataset_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmDataset_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmProduct_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "classes", Value.Classes);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "classes", Value.Classes);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmProduct_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmigClassDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmigClassDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmigClassDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmigClassDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmigClassDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDatasetLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "modelDataset", Value.Model_Dataset);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDatasetLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDatasetLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "modelDataset", Value.Model_Dataset);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDatasetLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDatasetLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigDataset_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Dataset_Structure.Is_Null then
         Into.Write_Entity ("datasetStructure", Value.Dataset_Structure);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "datasetVariables", Value.Dataset_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigDataset_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigDataset_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "datasetStructure", Value.Dataset_Structure);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "datasetVariables", Value.Dataset_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigDataset_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigDataset_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClassLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "modelClass", Value.Model_Class);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "subclasses", Value.Subclasses);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClassLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClassLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "modelClass", Value.Model_Class);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "subclasses", Value.Subclasses);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClassLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClassLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigClass_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmigClass_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmigClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmigClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmigClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmigClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmigClasses_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmigClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmigClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmigClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmigClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmigDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmigDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmigDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmigDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmigDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmigDatasetVariables_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmigDatasetVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmigDatasetVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmigDatasetVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmigDatasetVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmigDataset_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmigDataset_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmigDataset_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmigDataset_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmigDataset_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmigDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmigDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmigDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmigDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmigDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigProduct_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "classes", Value.Classes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "classes", Value.Classes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSdtmigProduct_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSdtmigProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSdtmigProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSdtmigProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSdtmigProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSendigClassDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSendigClassDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSendigClassDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSendigClassDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSendigClassDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDatasetLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "modelDataset", Value.Model_Dataset);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDatasetLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDatasetLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "modelDataset", Value.Model_Dataset);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDatasetLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDatasetLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigDataset_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Dataset_Structure.Is_Null then
         Into.Write_Entity ("datasetStructure", Value.Dataset_Structure);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "datasetVariables", Value.Dataset_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigDataset_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigDataset_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "datasetStructure", Value.Dataset_Structure);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "datasetVariables", Value.Dataset_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigDataset_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigDataset_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClassLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "modelClass", Value.Model_Class);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "subclasses", Value.Subclasses);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClassLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClassLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "modelClass", Value.Model_Class);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "subclasses", Value.Subclasses);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClassLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClassLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigClass_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Ordinal.Is_Null then
         Into.Write_Entity ("ordinal", Value.Ordinal);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "ordinal", Value.Ordinal);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSendigClass_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSendigClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSendigClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSendigClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSendigClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSendigClasses_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSendigClasses_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSendigClasses_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSendigClasses_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSendigClasses_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSendigDatasetVariable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSendigDatasetVariable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSendigDatasetVariable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSendigDatasetVariable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSendigDatasetVariable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSendigDatasetVariables_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSendigDatasetVariables_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSendigDatasetVariables_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSendigDatasetVariables_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSendigDatasetVariables_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSendigDataset_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSendigDataset_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSendigDataset_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSendigDataset_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSendigDataset_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSendigDatasets_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSendigDatasets_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSendigDatasets_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSendigDatasets_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSendigDatasets_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigProduct_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Label.Is_Null then
         Into.Write_Entity ("label", Value.Label);
      end if;
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      if not Value.Source.Is_Null then
         Into.Write_Entity ("source", Value.Source);
      end if;
      if not Value.Effective_Date.Is_Null then
         Into.Write_Entity ("effectiveDate", Value.Effective_Date);
      end if;
      if not Value.Registration_Status.Is_Null then
         Into.Write_Entity ("registrationStatus", Value.Registration_Status);
      end if;
      if not Value.Version.Is_Null then
         Into.Write_Entity ("version", Value.Version);
      end if;
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "classes", Value.Classes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "label", Value.Label);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "source", Value.Source);
      Swagger.Streams.Deserialize (Object, "effectiveDate", Value.Effective_Date);
      Swagger.Streams.Deserialize (Object, "registrationStatus", Value.Registration_Status);
      Swagger.Streams.Deserialize (Object, "version", Value.Version);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "classes", Value.Classes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.XmlSendigProduct_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in XmlSendigProduct_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.XmlSendigProduct_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out XmlSendigProduct_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.XmlSendigProduct_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AboutLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "lastupdated", Value.Lastupdated);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AboutLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AboutLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "lastupdated", Value.Lastupdated);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AboutLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AboutLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdamDatastructureLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdamDatastructureLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdamDatastructureLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdamDatastructureLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.AdamDatastructureLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashClassLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashClassLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashClassLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashClassLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashClassLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CdashigProductLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "model", Value.Model);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CdashigProductLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CdashigProductLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CdashigProductLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CdashigProductLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportAdamWorkbook_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "variables", Value.Variables);
      Serialize (Into, "datastructures", Value.Datastructures);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportAdamWorkbook_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportAdamWorkbook_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "variables", Value.Variables);
      Deserialize (Object, "datastructures", Value.Datastructures);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportAdamWorkbook_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportAdamWorkbook_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportCdashTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "class-variables", Value.Class_Variables);
      Serialize (Into, "domain-variables", Value.Domain_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportCdashTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportCdashTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "class-variables", Value.Class_Variables);
      Deserialize (Object, "domain-variables", Value.Domain_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportCdashTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportCdashTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportCdashigTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "domain-variables", Value.Domain_Variables);
      Serialize (Into, "scenario-variables", Value.Scenario_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportCdashigTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportCdashigTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "domain-variables", Value.Domain_Variables);
      Deserialize (Object, "scenario-variables", Value.Scenario_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportCdashigTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportCdashigTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmVariablesTable_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "class-variables", Value.Class_Variables);
      Serialize (Into, "dataset-variables", Value.Dataset_Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmVariablesTable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmVariablesTable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "class-variables", Value.Class_Variables);
      Deserialize (Object, "dataset-variables", Value.Dataset_Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmVariablesTable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmVariablesTable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmigWorkbook_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "variables", Value.Variables);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmigWorkbook_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmigWorkbook_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "variables", Value.Variables);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmigWorkbook_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmigWorkbook_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSendigWorkbook_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "variables", Value.Variables);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSendigWorkbook_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSendigWorkbook_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "variables", Value.Variables);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSendigWorkbook_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSendigWorkbook_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmigProductLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "model", Value.Model);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmigProductLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmigProductLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmigProductLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmigProductLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendigProductLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "model", Value.Model);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendigProductLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendigProductLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendigProductLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SendigProductLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportQrsWorkbook_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "items", Value.Items);
      Serialize (Into, "responses", Value.Responses);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportQrsWorkbook_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportQrsWorkbook_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "items", Value.Items);
      Deserialize (Object, "responses", Value.Responses);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportQrsWorkbook_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportQrsWorkbook_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ExportSdtmWorkbook_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "class-variables", Value.Class_Variables);
      Serialize (Into, "dataset-variables", Value.Dataset_Variables);
      Serialize (Into, "datasets", Value.Datasets);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExportSdtmWorkbook_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ExportSdtmWorkbook_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "class-variables", Value.Class_Variables);
      Deserialize (Object, "dataset-variables", Value.Dataset_Variables);
      Deserialize (Object, "datasets", Value.Datasets);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ExportSdtmWorkbook_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ExportSdtmWorkbook_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SdtmClassLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "parentProduct", Value.Parent_Product);
      Serialize (Into, "parentClass", Value.Parent_Class);
      Serialize (Into, "subclasses", Value.Subclasses);
      Serialize (Into, "priorVersion", Value.Prior_Version);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SdtmClassLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SdtmClassLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "parentProduct", Value.Parent_Product);
      Deserialize (Object, "parentClass", Value.Parent_Class);
      Deserialize (Object, "subclasses", Value.Subclasses);
      Deserialize (Object, "priorVersion", Value.Prior_Version);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SdtmClassLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.SdtmClassLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;


end .Models;
