(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let mdr_root_sdtm_classes_class_variables_var_get ~_class ~var =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/root/sdtm/classes/{class}/variables/{var}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "class" (fun x -> x) _class in
    let uri = Request.replace_path_param uri "var" (fun x -> x) var in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Root_sdtm_class_variable.of_yojson) resp body

let mdr_root_sdtm_datasets_dataset_variables_var_get ~dataset ~var =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/root/sdtm/datasets/{dataset}/variables/{var}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "dataset" (fun x -> x) dataset in
    let uri = Request.replace_path_param uri "var" (fun x -> x) var in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Root_sdtm_dataset_variable.of_yojson) resp body

let mdr_sdtm_version_classes_class_datasets_get ~version ~_class =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}/classes/{class}/datasets" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "class" (fun x -> x) _class in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_class_datasets.of_yojson) resp body

let mdr_sdtm_version_classes_class_get ~version ~_class =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}/classes/{class}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "class" (fun x -> x) _class in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_class.of_yojson) resp body

let mdr_sdtm_version_classes_class_variables_get ~version ~_class =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}/classes/{class}/variables" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "class" (fun x -> x) _class in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_class_variables.of_yojson) resp body

let mdr_sdtm_version_classes_class_variables_var_get ~version ~_class ~var =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}/classes/{class}/variables/{var}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "class" (fun x -> x) _class in
    let uri = Request.replace_path_param uri "var" (fun x -> x) var in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_class_variable.of_yojson) resp body

let mdr_sdtm_version_classes_get ~version =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}/classes" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_classes.of_yojson) resp body

let mdr_sdtm_version_datasets_dataset_get ~version ~dataset =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}/datasets/{dataset}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "dataset" (fun x -> x) dataset in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_dataset.of_yojson) resp body

let mdr_sdtm_version_datasets_dataset_variables_get ~version ~dataset =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}/datasets/{dataset}/variables" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "dataset" (fun x -> x) dataset in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_dataset_variables.of_yojson) resp body

let mdr_sdtm_version_datasets_dataset_variables_var_get ~version ~dataset ~var =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}/datasets/{dataset}/variables/{var}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "dataset" (fun x -> x) dataset in
    let uri = Request.replace_path_param uri "var" (fun x -> x) var in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_dataset_variable.of_yojson) resp body

let mdr_sdtm_version_datasets_get ~version =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}/datasets" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_datasets.of_yojson) resp body

let mdr_sdtm_version_get ~version =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/sdtm/{version}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sdtm_product.of_yojson) resp body

