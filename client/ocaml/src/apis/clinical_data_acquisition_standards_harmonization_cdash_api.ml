(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let mdr_cdash_version_classes_class_domains_get ~version ~_class =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/cdash/{version}/classes/{class}/domains" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "class" (fun x -> x) _class in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Cdash_class_domains.of_yojson) resp body

let mdr_cdash_version_classes_class_fields_field_get ~version ~_class ~field =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/cdash/{version}/classes/{class}/fields/{field}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "class" (fun x -> x) _class in
    let uri = Request.replace_path_param uri "field" (fun x -> x) field in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Cdash_class_field.of_yojson) resp body

let mdr_cdash_version_classes_class_get ~version ~_class =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/cdash/{version}/classes/{class}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "class" (fun x -> x) _class in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Cdash_class.of_yojson) resp body

let mdr_cdash_version_classes_get ~version =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/cdash/{version}/classes" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Cdash_product_classes.of_yojson) resp body

let mdr_cdash_version_domains_domain_fields_field_get ~version ~domain ~field =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/cdash/{version}/domains/{domain}/fields/{field}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "domain" (fun x -> x) domain in
    let uri = Request.replace_path_param uri "field" (fun x -> x) field in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Cdash_domain_field.of_yojson) resp body

let mdr_cdash_version_domains_domain_fields_get ~version ~domain =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/cdash/{version}/domains/{domain}/fields" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "domain" (fun x -> x) domain in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Cdash_domain_fields.of_yojson) resp body

let mdr_cdash_version_domains_domain_get ~version ~domain =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/cdash/{version}/domains/{domain}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "domain" (fun x -> x) domain in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Cdash_domain.of_yojson) resp body

let mdr_cdash_version_domains_get ~version =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/cdash/{version}/domains" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Cdash_product_domains.of_yojson) resp body

let mdr_cdash_version_get ~version =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/cdash/{version}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Cdash_product.of_yojson) resp body

let mdr_root_cdash_classes_class_fields_field_get ~_class ~field =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/root/cdash/classes/{class}/fields/{field}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "class" (fun x -> x) _class in
    let uri = Request.replace_path_param uri "field" (fun x -> x) field in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Root_cdash_class_field.of_yojson) resp body

let mdr_root_cdash_domains_domain_fields_field_get ~domain ~field =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/root/cdash/domains/{domain}/fields/{field}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "domain" (fun x -> x) domain in
    let uri = Request.replace_path_param uri "field" (fun x -> x) field in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Root_cdash_domain_field.of_yojson) resp body

