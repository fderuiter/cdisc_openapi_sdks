(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let mdr_search_get ~q ?highlight ?(start = 0.) ?(page_size = 100.) ?_class ?codelist ?concept_id ?core ?data_structure ?dataset_structure ?definition ?description ?domain ?effective_date ?extensible ?href ?label ?measure_type ?name ?preferred_term ?product ?product_group ?registration_status ?role_description ?sdtm_target ?simple_datatype ?submission_value ?synonyms ?_type ?ui_href ?value_domain ?variable_set ?version () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/search" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "q" (fun x -> x) q in
    let uri = Request.maybe_add_query_param uri "highlight" (fun x -> x) highlight in
    let uri = Request.add_query_param uri "start" string_of_float start in
    let uri = Request.add_query_param uri "pageSize" string_of_float page_size in
    let uri = Request.maybe_add_query_param uri "class" (fun x -> x) _class in
    let uri = Request.maybe_add_query_param uri "codelist" (fun x -> x) codelist in
    let uri = Request.maybe_add_query_param uri "conceptId" (fun x -> x) concept_id in
    let uri = Request.maybe_add_query_param uri "core" (fun x -> x) core in
    let uri = Request.maybe_add_query_param uri "dataStructure" (fun x -> x) data_structure in
    let uri = Request.maybe_add_query_param uri "datasetStructure" (fun x -> x) dataset_structure in
    let uri = Request.maybe_add_query_param uri "definition" (fun x -> x) definition in
    let uri = Request.maybe_add_query_param uri "description" (fun x -> x) description in
    let uri = Request.maybe_add_query_param uri "domain" (fun x -> x) domain in
    let uri = Request.maybe_add_query_param uri "effectiveDate" (fun x -> x) effective_date in
    let uri = Request.maybe_add_query_param uri "extensible" (fun x -> x) extensible in
    let uri = Request.maybe_add_query_param uri "href" (fun x -> x) href in
    let uri = Request.maybe_add_query_param uri "label" (fun x -> x) label in
    let uri = Request.maybe_add_query_param uri "measureType" (fun x -> x) measure_type in
    let uri = Request.maybe_add_query_param uri "name" (fun x -> x) name in
    let uri = Request.maybe_add_query_param uri "preferredTerm" (fun x -> x) preferred_term in
    let uri = Request.maybe_add_query_param uri "product" (fun x -> x) product in
    let uri = Request.maybe_add_query_param uri "productGroup" (fun x -> x) product_group in
    let uri = Request.maybe_add_query_param uri "registrationStatus" (fun x -> x) registration_status in
    let uri = Request.maybe_add_query_param uri "roleDescription" (fun x -> x) role_description in
    let uri = Request.maybe_add_query_param uri "sdtmTarget" (fun x -> x) sdtm_target in
    let uri = Request.maybe_add_query_param uri "simpleDatatype" (fun x -> x) simple_datatype in
    let uri = Request.maybe_add_query_param uri "submissionValue" (fun x -> x) submission_value in
    let uri = Request.maybe_add_query_param uri "synonyms" (fun x -> x) synonyms in
    let uri = Request.maybe_add_query_param uri "type" (fun x -> x) _type in
    let uri = Request.maybe_add_query_param uri "uiHref" (fun x -> x) ui_href in
    let uri = Request.maybe_add_query_param uri "valueDomain" (fun x -> x) value_domain in
    let uri = Request.maybe_add_query_param uri "variableSet" (fun x -> x) variable_set in
    let uri = Request.maybe_add_query_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Default_search_response.of_yojson) resp body

let mdr_search_scopes_get () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/search/scopes" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Model__mdr_search_scopes_get_200_response.of_yojson) resp body

let mdr_search_scopes_scope_get ~scope =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/search/scopes/{scope}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "scope"  scope in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Scope_values.of_yojson) resp body

