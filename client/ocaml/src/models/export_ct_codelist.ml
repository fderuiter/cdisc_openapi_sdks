(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type t = {
      code: string
          
           option [@default None]
        
        ; [@key "Code"]
      codelist_code: string
          
           option [@default None]
        
        ; [@key "Codelist Code"]
      codelist_extensible__yes_no: string
          
           option [@default None]
        
        ; [@key "Codelist Extensible (Yes/No)"]
      codelist_name: string
          
           option [@default None]
        
        ; [@key "Codelist Name"]
      cdisc_submission_value: string
          
           option [@default None]
        
        ; [@key "CDISC Submission Value"]
      cdisc_synonym_s: string list
         [@default []]
        ; [@key "CDISC Synonym(s)"]
      cdisc_definition: string
          
           option [@default None]
        
        ; [@key "CDISC Definition"]
      nci_preferred_term: string
          
           option [@default None]
        
        ; [@key "NCI Preferred Term"]
      standard_and_date: string
          
           option [@default None]
        
        ; [@key "Standard and Date"]
      : Export_ct_term.t list
         [@default []]
        ; [@key ""]
} [@@deriving yojson { strict = false }, show, eq ];;

let create () : t = {
    code = None;
    codelist_code = None;
    codelist_extensible__yes_no = None;
    codelist_name = None;
    cdisc_submission_value = None;
    cdisc_synonym_s = [];
    cdisc_definition = None;
    nci_preferred_term = None;
    standard_and_date = None;
     = [];
}

