/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.DefaultErrorResponse
import org.openapitools.client.model.ExportSendigDatasetsTable
import org.openapitools.client.model.ExportSendigVariablesTable
import org.openapitools.client.model.ExportSendigWorkbook
import org.openapitools.client.model.RootSendigDatasetVariable
import org.openapitools.client.model.SendigClass
import org.openapitools.client.model.SendigClassDatasets
import org.openapitools.client.model.SendigClasses
import org.openapitools.client.model.SendigDataset
import org.openapitools.client.model.SendigDatasetVariable
import org.openapitools.client.model.SendigDatasetVariables
import org.openapitools.client.model.SendigDatasets
import org.openapitools.client.model.SendigProduct
import org.openapitools.client.model.XmlRootSendigDatasetVariable
import org.openapitools.client.model.XmlSendigClass
import org.openapitools.client.model.XmlSendigClassDatasets
import org.openapitools.client.model.XmlSendigClasses
import org.openapitools.client.model.XmlSendigDataset
import org.openapitools.client.model.XmlSendigDatasetVariable
import org.openapitools.client.model.XmlSendigDatasetVariables
import org.openapitools.client.model.XmlSendigDatasets
import org.openapitools.client.model.XmlSendigProduct
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object SENDImplementationGuideSENDIGApi {

  def apply(baseUrl: String = "https://library.cdisc.org/api") = new SENDImplementationGuideSENDIGApi(baseUrl)
}

class SENDImplementationGuideSENDIGApi(baseUrl: String) {

  /**
   * Get Root SENDIG Dataset Variable
   * 
   * Expected answers:
   *   code 200 : RootSendigDatasetVariable (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param dataset SENDIG Dataset Identifier
   * @param `var` SENDIG Variable Identifier
   */
  def mdrRootSendigDatasetsDatasetVariablesVarGet(dataset: String, `var`: String)(implicit basicAuth: BasicCredentials): ApiRequest[RootSendigDatasetVariable] =
    ApiRequest[RootSendigDatasetVariable](ApiMethods.GET, baseUrl, "/mdr/root/sendig/datasets/{dataset}/variables/{var}", "application/json")
      .withCredentials(basicAuth).withPathParam("dataset", dataset)
      .withPathParam("var", `var`)
      .withSuccessResponse[RootSendigDatasetVariable](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SENDIG Class Dataset List
   * 
   * Expected answers:
   *   code 200 : SendigClassDatasets (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` SENDIG Class Identifier
   */
  def mdrSendigVersionClassesClassDatasetsGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SendigClassDatasets] =
    ApiRequest[SendigClassDatasets](ApiMethods.GET, baseUrl, "/mdr/sendig/{version}/classes/{class}/datasets", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[SendigClassDatasets](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SENDIG Class
   * 
   * Expected answers:
   *   code 200 : SendigClass (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` SENDIG Class Identifier
   */
  def mdrSendigVersionClassesClassGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SendigClass] =
    ApiRequest[SendigClass](ApiMethods.GET, baseUrl, "/mdr/sendig/{version}/classes/{class}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[SendigClass](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SENDIG Class List
   * 
   * Expected answers:
   *   code 200 : SendigClasses (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrSendigVersionClassesGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[SendigClasses] =
    ApiRequest[SendigClasses](ApiMethods.GET, baseUrl, "/mdr/sendig/{version}/classes", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[SendigClasses](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SENDIG Dataset
   * 
   * Expected answers:
   *   code 200 : SendigDataset (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param dataset SENDIG Class Identifier
   */
  def mdrSendigVersionDatasetsDatasetGet(version: String, dataset: String)(implicit basicAuth: BasicCredentials): ApiRequest[SendigDataset] =
    ApiRequest[SendigDataset](ApiMethods.GET, baseUrl, "/mdr/sendig/{version}/datasets/{dataset}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("dataset", dataset)
      .withSuccessResponse[SendigDataset](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SENDIG Dataset Variable List
   * 
   * Expected answers:
   *   code 200 : SendigDatasetVariables (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param dataset SENDIG Class Identifier
   */
  def mdrSendigVersionDatasetsDatasetVariablesGet(version: String, dataset: String)(implicit basicAuth: BasicCredentials): ApiRequest[SendigDatasetVariables] =
    ApiRequest[SendigDatasetVariables](ApiMethods.GET, baseUrl, "/mdr/sendig/{version}/datasets/{dataset}/variables", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("dataset", dataset)
      .withSuccessResponse[SendigDatasetVariables](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SENDIG Dataset Variable
   * 
   * Expected answers:
   *   code 200 : SendigDatasetVariable (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param dataset SENDIG Class Identifier
   * @param `var` SENDIG Variable Identifier
   */
  def mdrSendigVersionDatasetsDatasetVariablesVarGet(version: String, dataset: String, `var`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SendigDatasetVariable] =
    ApiRequest[SendigDatasetVariable](ApiMethods.GET, baseUrl, "/mdr/sendig/{version}/datasets/{dataset}/variables/{var}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("dataset", dataset)
      .withPathParam("var", `var`)
      .withSuccessResponse[SendigDatasetVariable](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SENDIG Dataset List
   * 
   * Expected answers:
   *   code 200 : SendigDatasets (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrSendigVersionDatasetsGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[SendigDatasets] =
    ApiRequest[SendigDatasets](ApiMethods.GET, baseUrl, "/mdr/sendig/{version}/datasets", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[SendigDatasets](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SENDIG product
   * 
   * Expected answers:
   *   code 200 : SendigProduct (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrSendigVersionGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[SendigProduct] =
    ApiRequest[SendigProduct](ApiMethods.GET, baseUrl, "/mdr/sendig/{version}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[SendigProduct](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      



}

