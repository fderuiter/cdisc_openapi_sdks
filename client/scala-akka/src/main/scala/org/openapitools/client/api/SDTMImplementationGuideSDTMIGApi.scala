/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.DefaultErrorResponse
import org.openapitools.client.model.ExportSdtmigDatasetsTable
import org.openapitools.client.model.ExportSdtmigVariablesTable
import org.openapitools.client.model.ExportSdtmigWorkbook
import org.openapitools.client.model.RootSdtmigDatasetVariable
import org.openapitools.client.model.SdtmigClass
import org.openapitools.client.model.SdtmigClassDatasets
import org.openapitools.client.model.SdtmigClasses
import org.openapitools.client.model.SdtmigDataset
import org.openapitools.client.model.SdtmigDatasetVariable
import org.openapitools.client.model.SdtmigDatasetVariables
import org.openapitools.client.model.SdtmigDatasets
import org.openapitools.client.model.SdtmigProduct
import org.openapitools.client.model.XmlRootSdtmigDatasetVariable
import org.openapitools.client.model.XmlSdtmigClass
import org.openapitools.client.model.XmlSdtmigClassDatasets
import org.openapitools.client.model.XmlSdtmigClasses
import org.openapitools.client.model.XmlSdtmigDataset
import org.openapitools.client.model.XmlSdtmigDatasetVariable
import org.openapitools.client.model.XmlSdtmigDatasetVariables
import org.openapitools.client.model.XmlSdtmigDatasets
import org.openapitools.client.model.XmlSdtmigProduct
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object SDTMImplementationGuideSDTMIGApi {

  def apply(baseUrl: String = "https://library.cdisc.org/api") = new SDTMImplementationGuideSDTMIGApi(baseUrl)
}

class SDTMImplementationGuideSDTMIGApi(baseUrl: String) {

  /**
   * Get Root SDTMIG Dataset Variable
   * 
   * Expected answers:
   *   code 200 : RootSdtmigDatasetVariable (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param dataset SDTMIG Dataset Identifier
   * @param `var` SDTMIG Variable Identifier
   */
  def mdrRootSdtmigDatasetsDatasetVariablesVarGet(dataset: String, `var`: String)(implicit basicAuth: BasicCredentials): ApiRequest[RootSdtmigDatasetVariable] =
    ApiRequest[RootSdtmigDatasetVariable](ApiMethods.GET, baseUrl, "/mdr/root/sdtmig/datasets/{dataset}/variables/{var}", "application/json")
      .withCredentials(basicAuth).withPathParam("dataset", dataset)
      .withPathParam("var", `var`)
      .withSuccessResponse[RootSdtmigDatasetVariable](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTMIG Class Dataset List
   * 
   * Expected answers:
   *   code 200 : SdtmigClassDatasets (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` SDTMIG Class Identifier
   */
  def mdrSdtmigVersionClassesClassDatasetsGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmigClassDatasets] =
    ApiRequest[SdtmigClassDatasets](ApiMethods.GET, baseUrl, "/mdr/sdtmig/{version}/classes/{class}/datasets", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[SdtmigClassDatasets](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTMIG Class
   * 
   * Expected answers:
   *   code 200 : SdtmigClass (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` SDTMIG Class Identifier
   */
  def mdrSdtmigVersionClassesClassGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmigClass] =
    ApiRequest[SdtmigClass](ApiMethods.GET, baseUrl, "/mdr/sdtmig/{version}/classes/{class}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[SdtmigClass](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTMIG Class List
   * 
   * Expected answers:
   *   code 200 : SdtmigClasses (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrSdtmigVersionClassesGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmigClasses] =
    ApiRequest[SdtmigClasses](ApiMethods.GET, baseUrl, "/mdr/sdtmig/{version}/classes", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[SdtmigClasses](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTMIG Dataset
   * 
   * Expected answers:
   *   code 200 : SdtmigDataset (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param dataset SDTMIG Dataset Identifier
   */
  def mdrSdtmigVersionDatasetsDatasetGet(version: String, dataset: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmigDataset] =
    ApiRequest[SdtmigDataset](ApiMethods.GET, baseUrl, "/mdr/sdtmig/{version}/datasets/{dataset}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("dataset", dataset)
      .withSuccessResponse[SdtmigDataset](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTMIG Dataset Variable List
   * 
   * Expected answers:
   *   code 200 : SdtmigDatasetVariables (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param dataset SDTMIG Dataset Identifier
   */
  def mdrSdtmigVersionDatasetsDatasetVariablesGet(version: String, dataset: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmigDatasetVariables] =
    ApiRequest[SdtmigDatasetVariables](ApiMethods.GET, baseUrl, "/mdr/sdtmig/{version}/datasets/{dataset}/variables", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("dataset", dataset)
      .withSuccessResponse[SdtmigDatasetVariables](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTMIG Dataset Variable
   * 
   * Expected answers:
   *   code 200 : SdtmigDatasetVariable (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param dataset SDTMIG Dataset Identifier
   * @param `var` SDTMIG Variable Identifier
   */
  def mdrSdtmigVersionDatasetsDatasetVariablesVarGet(version: String, dataset: String, `var`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmigDatasetVariable] =
    ApiRequest[SdtmigDatasetVariable](ApiMethods.GET, baseUrl, "/mdr/sdtmig/{version}/datasets/{dataset}/variables/{var}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("dataset", dataset)
      .withPathParam("var", `var`)
      .withSuccessResponse[SdtmigDatasetVariable](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTMIG Dataset List
   * 
   * Expected answers:
   *   code 200 : SdtmigDatasets (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrSdtmigVersionDatasetsGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmigDatasets] =
    ApiRequest[SdtmigDatasets](ApiMethods.GET, baseUrl, "/mdr/sdtmig/{version}/datasets", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[SdtmigDatasets](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTMIG product
   * 
   * Expected answers:
   *   code 200 : SdtmigProduct (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrSdtmigVersionGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmigProduct] =
    ApiRequest[SdtmigProduct](ApiMethods.GET, baseUrl, "/mdr/sdtmig/{version}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[SdtmigProduct](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      



}

