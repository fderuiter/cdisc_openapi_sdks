/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.DefaultErrorResponse
import org.openapitools.client.model.ExportSdtmDatasetsTable
import org.openapitools.client.model.ExportSdtmVariablesTable
import org.openapitools.client.model.ExportSdtmWorkbook
import org.openapitools.client.model.RootSdtmClassVariable
import org.openapitools.client.model.RootSdtmDatasetVariable
import org.openapitools.client.model.SdtmClass
import org.openapitools.client.model.SdtmClassDatasets
import org.openapitools.client.model.SdtmClassVariable
import org.openapitools.client.model.SdtmClassVariables
import org.openapitools.client.model.SdtmClasses
import org.openapitools.client.model.SdtmDataset
import org.openapitools.client.model.SdtmDatasetVariable
import org.openapitools.client.model.SdtmDatasetVariables
import org.openapitools.client.model.SdtmDatasets
import org.openapitools.client.model.SdtmProduct
import org.openapitools.client.model.XmlRootSdtmClassVariable
import org.openapitools.client.model.XmlRootSdtmDatasetVariable
import org.openapitools.client.model.XmlSdtmClass
import org.openapitools.client.model.XmlSdtmClassDatasets
import org.openapitools.client.model.XmlSdtmClassVariable
import org.openapitools.client.model.XmlSdtmClassVariables
import org.openapitools.client.model.XmlSdtmClasses
import org.openapitools.client.model.XmlSdtmDataset
import org.openapitools.client.model.XmlSdtmDatasetVariable
import org.openapitools.client.model.XmlSdtmDatasetVariables
import org.openapitools.client.model.XmlSdtmDatasets
import org.openapitools.client.model.XmlSdtmProduct
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object StudyDataTabulationModelSDTMApi {

  def apply(baseUrl: String = "https://library.cdisc.org/api") = new StudyDataTabulationModelSDTMApi(baseUrl)
}

class StudyDataTabulationModelSDTMApi(baseUrl: String) {

  /**
   * Get Root of SDTM Class Variable
   * 
   * Expected answers:
   *   code 200 : RootSdtmClassVariable (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param `class` SDTM Class Identifier
   * @param `var` SDTM Variable Identifier
   */
  def mdrRootSdtmClassesClassVariablesVarGet(`class`: String, `var`: String)(implicit basicAuth: BasicCredentials): ApiRequest[RootSdtmClassVariable] =
    ApiRequest[RootSdtmClassVariable](ApiMethods.GET, baseUrl, "/mdr/root/sdtm/classes/{class}/variables/{var}", "application/json")
      .withCredentials(basicAuth).withPathParam("class", `class`)
      .withPathParam("var", `var`)
      .withSuccessResponse[RootSdtmClassVariable](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get Root SDTM Dataset Variable
   * 
   * Expected answers:
   *   code 200 : RootSdtmDatasetVariable (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param dataset SDTM Dataset Identifier
   * @param `var` SDTM Variable Identifier
   */
  def mdrRootSdtmDatasetsDatasetVariablesVarGet(dataset: String, `var`: String)(implicit basicAuth: BasicCredentials): ApiRequest[RootSdtmDatasetVariable] =
    ApiRequest[RootSdtmDatasetVariable](ApiMethods.GET, baseUrl, "/mdr/root/sdtm/datasets/{dataset}/variables/{var}", "application/json")
      .withCredentials(basicAuth).withPathParam("dataset", dataset)
      .withPathParam("var", `var`)
      .withSuccessResponse[RootSdtmDatasetVariable](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM Class Dataset List
   * 
   * Expected answers:
   *   code 200 : SdtmClassDatasets (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` SDTM Class Identifier
   */
  def mdrSdtmVersionClassesClassDatasetsGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmClassDatasets] =
    ApiRequest[SdtmClassDatasets](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}/classes/{class}/datasets", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[SdtmClassDatasets](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM Class
   * 
   * Expected answers:
   *   code 200 : SdtmClass (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` SDTM Class Identifier
   */
  def mdrSdtmVersionClassesClassGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmClass] =
    ApiRequest[SdtmClass](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}/classes/{class}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[SdtmClass](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM Class Variable List
   * 
   * Expected answers:
   *   code 200 : SdtmClassVariables (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` SDTM Class Identifier
   */
  def mdrSdtmVersionClassesClassVariablesGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmClassVariables] =
    ApiRequest[SdtmClassVariables](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}/classes/{class}/variables", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[SdtmClassVariables](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM Class Variable
   * 
   * Expected answers:
   *   code 200 : SdtmClassVariable (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` SDTM Class Identifier
   * @param `var` SDTM Variable Identifier
   */
  def mdrSdtmVersionClassesClassVariablesVarGet(version: String, `class`: String, `var`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmClassVariable] =
    ApiRequest[SdtmClassVariable](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}/classes/{class}/variables/{var}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withPathParam("var", `var`)
      .withSuccessResponse[SdtmClassVariable](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM Class List
   * 
   * Expected answers:
   *   code 200 : SdtmClasses (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrSdtmVersionClassesGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmClasses] =
    ApiRequest[SdtmClasses](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}/classes", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[SdtmClasses](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM Dataset
   * 
   * Expected answers:
   *   code 200 : SdtmDataset (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param dataset SDTM Dataset Identifier
   */
  def mdrSdtmVersionDatasetsDatasetGet(version: String, dataset: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmDataset] =
    ApiRequest[SdtmDataset](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}/datasets/{dataset}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("dataset", dataset)
      .withSuccessResponse[SdtmDataset](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM Dataset Variable List
   * 
   * Expected answers:
   *   code 200 : SdtmDatasetVariables (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param dataset SDTM Dataset Identifier
   */
  def mdrSdtmVersionDatasetsDatasetVariablesGet(version: String, dataset: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmDatasetVariables] =
    ApiRequest[SdtmDatasetVariables](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}/datasets/{dataset}/variables", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("dataset", dataset)
      .withSuccessResponse[SdtmDatasetVariables](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM Dataset Variable
   * 
   * Expected answers:
   *   code 200 : SdtmDatasetVariable (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param dataset SDTM Dataset Identifier
   * @param `var` SDTM Variable Identifier
   */
  def mdrSdtmVersionDatasetsDatasetVariablesVarGet(version: String, dataset: String, `var`: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmDatasetVariable] =
    ApiRequest[SdtmDatasetVariable](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}/datasets/{dataset}/variables/{var}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("dataset", dataset)
      .withPathParam("var", `var`)
      .withSuccessResponse[SdtmDatasetVariable](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM Dataset List
   * 
   * Expected answers:
   *   code 200 : SdtmDatasets (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrSdtmVersionDatasetsGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmDatasets] =
    ApiRequest[SdtmDatasets](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}/datasets", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[SdtmDatasets](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get SDTM product
   * 
   * Expected answers:
   *   code 200 : SdtmProduct (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrSdtmVersionGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[SdtmProduct] =
    ApiRequest[SdtmProduct](ApiMethods.GET, baseUrl, "/mdr/sdtm/{version}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[SdtmProduct](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      



}

