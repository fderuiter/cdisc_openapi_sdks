/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendigProductLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendigProductLinks::OAISendigProductLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendigProductLinks::OAISendigProductLinks() {
    this->initializeModel();
}

OAISendigProductLinks::~OAISendigProductLinks() {}

void OAISendigProductLinks::initializeModel() {

    m_self_isSet = false;
    m_self_isValid = false;

    m_model_isSet = false;
    m_model_isValid = false;

    m_prior_version_isSet = false;
    m_prior_version_isValid = false;
}

void OAISendigProductLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendigProductLinks::fromJsonObject(QJsonObject json) {

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;

    m_prior_version_isValid = ::OpenAPI::fromJsonValue(m_prior_version, json[QString("priorVersion")]);
    m_prior_version_isSet = !json[QString("priorVersion")].isNull() && m_prior_version_isValid;
}

QString OAISendigProductLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendigProductLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_self.isSet()) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_model.isSet()) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    if (m_prior_version.isSet()) {
        obj.insert(QString("priorVersion"), ::OpenAPI::toJsonValue(m_prior_version));
    }
    return obj;
}

OAISendigProductRef OAISendigProductLinks::getSelf() const {
    return m_self;
}
void OAISendigProductLinks::setSelf(const OAISendigProductRef &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAISendigProductLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAISendigProductLinks::is_self_Valid() const{
    return m_self_isValid;
}

OAISdtmProductRef OAISendigProductLinks::getModel() const {
    return m_model;
}
void OAISendigProductLinks::setModel(const OAISdtmProductRef &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAISendigProductLinks::is_model_Set() const{
    return m_model_isSet;
}

bool OAISendigProductLinks::is_model_Valid() const{
    return m_model_isValid;
}

OAISendigProductRef OAISendigProductLinks::getPriorVersion() const {
    return m_prior_version;
}
void OAISendigProductLinks::setPriorVersion(const OAISendigProductRef &prior_version) {
    m_prior_version = prior_version;
    m_prior_version_isSet = true;
}

bool OAISendigProductLinks::is_prior_version_Set() const{
    return m_prior_version_isSet;
}

bool OAISendigProductLinks::is_prior_version_Valid() const{
    return m_prior_version_isValid;
}

bool OAISendigProductLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_self.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_prior_version.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendigProductLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
