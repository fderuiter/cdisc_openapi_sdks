/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASLastupdated
 */
public class OASLastupdated implements OAS.MappedProperties {
    /**
     * Get links
     * @return links
     */
    public OASLastupdatedLinks links { get; set; }

    /**
     * Get overall
     * @return overall
     */
    public String overall { get; set; }

    /**
     * Get dataAnalysis
     * @return dataAnalysis
     */
    public String dataAnalysis { get; set; }

    /**
     * Get dataCollection
     * @return dataCollection
     */
    public String dataCollection { get; set; }

    /**
     * Get dataTabulation
     * @return dataTabulation
     */
    public String dataTabulation { get; set; }

    /**
     * Get measure
     * @return measure
     */
    public String measure { get; set; }

    /**
     * Get terminology
     * @return terminology
     */
    public String terminology { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links',
        'data-analysis' => 'dataAnalysis',
        'data-collection' => 'dataCollection',
        'data-tabulation' => 'dataTabulation'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links',
        'data-analysis' => 'dataAnalysis',
        'data-collection' => 'dataCollection',
        'data-tabulation' => 'dataTabulation'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links',
        'data-analysis' => 'dataAnalysis',
        'data-collection' => 'dataCollection',
        'data-tabulation' => 'dataTabulation'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links',
        'data-analysis' => 'dataAnalysis',
        'data-collection' => 'dataCollection',
        'data-tabulation' => 'dataTabulation'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASLastupdated getExample() {
        OASLastupdated lastupdated = new OASLastupdated();
          lastupdated.links = OASLastupdatedLinks.getExample();
          lastupdated.overall = '2020-02-14';
          lastupdated.dataAnalysis = '2020-02-14';
          lastupdated.dataCollection = '2020-02-14';
          lastupdated.dataTabulation = '2020-02-14';
          lastupdated.measure = '2020-02-14';
          lastupdated.terminology = '2020-02-14';
        return lastupdated;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASLastupdated) {           
            OASLastupdated lastupdated = (OASLastupdated) obj;
            return this.links == lastupdated.links
                && this.overall == lastupdated.overall
                && this.dataAnalysis == lastupdated.dataAnalysis
                && this.dataCollection == lastupdated.dataCollection
                && this.dataTabulation == lastupdated.dataTabulation
                && this.measure == lastupdated.measure
                && this.terminology == lastupdated.terminology;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        hashCode = (17 * hashCode) + (overall == null ? 0 : System.hashCode(overall));
        hashCode = (17 * hashCode) + (dataAnalysis == null ? 0 : System.hashCode(dataAnalysis));
        hashCode = (17 * hashCode) + (dataCollection == null ? 0 : System.hashCode(dataCollection));
        hashCode = (17 * hashCode) + (dataTabulation == null ? 0 : System.hashCode(dataTabulation));
        hashCode = (17 * hashCode) + (measure == null ? 0 : System.hashCode(measure));
        hashCode = (17 * hashCode) + (terminology == null ? 0 : System.hashCode(terminology));
        return hashCode;
    }
}

