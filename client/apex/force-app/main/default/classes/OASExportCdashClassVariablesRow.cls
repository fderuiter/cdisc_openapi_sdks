/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASExportCdashClassVariablesRow
 */
public class OASExportCdashClassVariablesRow implements OAS.MappedProperties {
    /**
     * Get version
     * @return version
     */
    public String version { get; set; }

    /**
     * Get propertyClass
     * @return propertyClass
     */
    public String propertyClass { get; set; }

    /**
     * Get domain
     * @return domain
     */
    public String domain { get; set; }

    /**
     * Get variableOrder
     * @return variableOrder
     */
    public String variableOrder { get; set; }

    /**
     * Get cdASHVariable
     * @return cdASHVariable
     */
    public String cdASHVariable { get; set; }

    /**
     * Get cdASHVariableLabel
     * @return cdASHVariableLabel
     */
    public String cdASHVariableLabel { get; set; }

    /**
     * Get drAFTCDASHDefinition
     * @return drAFTCDASHDefinition
     */
    public String drAFTCDASHDefinition { get; set; }

    /**
     * Get domainSpecific
     * @return domainSpecific
     */
    public String domainSpecific { get; set; }

    /**
     * Get questionText
     * @return questionText
     */
    public String questionText { get; set; }

    /**
     * Get prompt
     * @return prompt
     */
    public String prompt { get; set; }

    /**
     * Get type
     * @return type
     */
    public String type { get; set; }

    /**
     * Get sdTMTarget
     * @return sdTMTarget
     */
    public List<String> sdTMTarget { get; set; }

    /**
     * Get mappingInstructions
     * @return mappingInstructions
     */
    public String mappingInstructions { get; set; }

    /**
     * Get controlledTerminologyCodelistName
     * @return controlledTerminologyCodelistName
     */
    public String controlledTerminologyCodelistName { get; set; }

    /**
     * Get implementationNotes
     * @return implementationNotes
     */
    public String implementationNotes { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Version' => 'version',
        'Class' => 'propertyClass',
        'Domain' => 'domain',
        'Variable Order' => 'variableOrder',
        'CDASH Variable' => 'cdASHVariable',
        'CDASH Variable Label' => 'cdASHVariableLabel',
        'DRAFT CDASH Definition' => 'drAFTCDASHDefinition',
        'Domain Specific' => 'domainSpecific',
        'Question Text' => 'questionText',
        'Prompt' => 'prompt',
        'Type' => 'type',
        'SDTM Target' => 'sdTMTarget',
        'Mapping Instructions' => 'mappingInstructions',
        'Controlled Terminology Codelist Name' => 'controlledTerminologyCodelistName',
        'Implementation Notes' => 'implementationNotes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASExportCdashClassVariablesRow() {
        sdTMTarget = new List<String>();
    }

    public static OASExportCdashClassVariablesRow getExample() {
        OASExportCdashClassVariablesRow exportCdashClassVariablesRow = new OASExportCdashClassVariablesRow();
          exportCdashClassVariablesRow.version = '';
          exportCdashClassVariablesRow.propertyClass = '';
          exportCdashClassVariablesRow.domain = '';
          exportCdashClassVariablesRow.variableOrder = '';
          exportCdashClassVariablesRow.cdASHVariable = '';
          exportCdashClassVariablesRow.cdASHVariableLabel = '';
          exportCdashClassVariablesRow.drAFTCDASHDefinition = '';
          exportCdashClassVariablesRow.domainSpecific = '';
          exportCdashClassVariablesRow.questionText = '';
          exportCdashClassVariablesRow.prompt = '';
          exportCdashClassVariablesRow.type = '';
          exportCdashClassVariablesRow.sdTMTarget = new List<String>{''};
          exportCdashClassVariablesRow.mappingInstructions = '';
          exportCdashClassVariablesRow.controlledTerminologyCodelistName = '';
          exportCdashClassVariablesRow.implementationNotes = '';
        return exportCdashClassVariablesRow;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASExportCdashClassVariablesRow) {           
            OASExportCdashClassVariablesRow exportCdashClassVariablesRow = (OASExportCdashClassVariablesRow) obj;
            return this.version == exportCdashClassVariablesRow.version
                && this.propertyClass == exportCdashClassVariablesRow.propertyClass
                && this.domain == exportCdashClassVariablesRow.domain
                && this.variableOrder == exportCdashClassVariablesRow.variableOrder
                && this.cdASHVariable == exportCdashClassVariablesRow.cdASHVariable
                && this.cdASHVariableLabel == exportCdashClassVariablesRow.cdASHVariableLabel
                && this.drAFTCDASHDefinition == exportCdashClassVariablesRow.drAFTCDASHDefinition
                && this.domainSpecific == exportCdashClassVariablesRow.domainSpecific
                && this.questionText == exportCdashClassVariablesRow.questionText
                && this.prompt == exportCdashClassVariablesRow.prompt
                && this.type == exportCdashClassVariablesRow.type
                && this.sdTMTarget == exportCdashClassVariablesRow.sdTMTarget
                && this.mappingInstructions == exportCdashClassVariablesRow.mappingInstructions
                && this.controlledTerminologyCodelistName == exportCdashClassVariablesRow.controlledTerminologyCodelistName
                && this.implementationNotes == exportCdashClassVariablesRow.implementationNotes;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (version == null ? 0 : System.hashCode(version));
        hashCode = (17 * hashCode) + (propertyClass == null ? 0 : System.hashCode(propertyClass));
        hashCode = (17 * hashCode) + (domain == null ? 0 : System.hashCode(domain));
        hashCode = (17 * hashCode) + (variableOrder == null ? 0 : System.hashCode(variableOrder));
        hashCode = (17 * hashCode) + (cdASHVariable == null ? 0 : System.hashCode(cdASHVariable));
        hashCode = (17 * hashCode) + (cdASHVariableLabel == null ? 0 : System.hashCode(cdASHVariableLabel));
        hashCode = (17 * hashCode) + (drAFTCDASHDefinition == null ? 0 : System.hashCode(drAFTCDASHDefinition));
        hashCode = (17 * hashCode) + (domainSpecific == null ? 0 : System.hashCode(domainSpecific));
        hashCode = (17 * hashCode) + (questionText == null ? 0 : System.hashCode(questionText));
        hashCode = (17 * hashCode) + (prompt == null ? 0 : System.hashCode(prompt));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (sdTMTarget == null ? 0 : System.hashCode(sdTMTarget));
        hashCode = (17 * hashCode) + (mappingInstructions == null ? 0 : System.hashCode(mappingInstructions));
        hashCode = (17 * hashCode) + (controlledTerminologyCodelistName == null ? 0 : System.hashCode(controlledTerminologyCodelistName));
        hashCode = (17 * hashCode) + (implementationNotes == null ? 0 : System.hashCode(implementationNotes));
        return hashCode;
    }
}

