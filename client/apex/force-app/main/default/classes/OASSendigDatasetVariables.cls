/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSendigDatasetVariables
 */
public class OASSendigDatasetVariables implements OAS.MappedProperties {
    /**
     * Get ordinal
     * @return ordinal
     */
    public String ordinal { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get datasetStructure
     * @return datasetStructure
     */
    public String datasetStructure { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASSendigDatasetVariablesLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASSendigDatasetVariables getExample() {
        OASSendigDatasetVariables sendigDatasetVariables = new OASSendigDatasetVariables();
          sendigDatasetVariables.ordinal = '20';
          sendigDatasetVariables.name = 'VS';
          sendigDatasetVariables.label = 'Vital Signs';
          sendigDatasetVariables.description = 'A findings domain that contains measurements including but not limited to blood pressure, temperature, respiration, body surface area, body mass index, height and weight. (Source: CDISC Controlled Terminology, SDOMAIN, C49622, 2018-06-29)';
          sendigDatasetVariables.datasetStructure = 'One record per measurement per observation time per subject';
          sendigDatasetVariables.links = OASSendigDatasetVariablesLinks.getExample();
        return sendigDatasetVariables;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSendigDatasetVariables) {           
            OASSendigDatasetVariables sendigDatasetVariables = (OASSendigDatasetVariables) obj;
            return this.ordinal == sendigDatasetVariables.ordinal
                && this.name == sendigDatasetVariables.name
                && this.label == sendigDatasetVariables.label
                && this.description == sendigDatasetVariables.description
                && this.datasetStructure == sendigDatasetVariables.datasetStructure
                && this.links == sendigDatasetVariables.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (ordinal == null ? 0 : System.hashCode(ordinal));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (datasetStructure == null ? 0 : System.hashCode(datasetStructure));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

