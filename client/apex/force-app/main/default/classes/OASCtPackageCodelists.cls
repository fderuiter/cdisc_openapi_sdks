/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCtPackageCodelists
 */
public class OASCtPackageCodelists implements OAS.MappedProperties {
    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get source
     * @return source
     */
    public String source { get; set; }

    /**
     * Get effectiveDate
     * @return effectiveDate
     */
    public String effectiveDate { get; set; }

    /**
     * Get registrationStatus
     * @return registrationStatus
     */
    public String registrationStatus { get; set; }

    /**
     * Get version
     * @return version
     */
    public String version { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASCtPackageCodelistsLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCtPackageCodelists getExample() {
        OASCtPackageCodelists ctPackageCodelists = new OASCtPackageCodelists();
          ctPackageCodelists.name = 'SDTM CT 2019-12-20';
          ctPackageCodelists.label = 'SDTM Controlled Terminology Package 40 Effective 2019-12-20';
          ctPackageCodelists.description = 'CDISC Controlled Terminology for SDTM is the set of CDISC-developed or CDISC-adopted standard expressions (values) used with data items within CDISC-defined SDTM datasets.';
          ctPackageCodelists.source = 'SDTM Controlled Terminology developed by the CDISC Terminology Team in collaboration with the National Cancer Institute\'s Enterprise Vocabulary Services (EVS)';
          ctPackageCodelists.effectiveDate = '2019-12-20';
          ctPackageCodelists.registrationStatus = 'Final';
          ctPackageCodelists.version = 'TODO';
          ctPackageCodelists.links = OASCtPackageCodelistsLinks.getExample();
        return ctPackageCodelists;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCtPackageCodelists) {           
            OASCtPackageCodelists ctPackageCodelists = (OASCtPackageCodelists) obj;
            return this.name == ctPackageCodelists.name
                && this.label == ctPackageCodelists.label
                && this.description == ctPackageCodelists.description
                && this.source == ctPackageCodelists.source
                && this.effectiveDate == ctPackageCodelists.effectiveDate
                && this.registrationStatus == ctPackageCodelists.registrationStatus
                && this.version == ctPackageCodelists.version
                && this.links == ctPackageCodelists.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (source == null ? 0 : System.hashCode(source));
        hashCode = (17 * hashCode) + (effectiveDate == null ? 0 : System.hashCode(effectiveDate));
        hashCode = (17 * hashCode) + (registrationStatus == null ? 0 : System.hashCode(registrationStatus));
        hashCode = (17 * hashCode) + (version == null ? 0 : System.hashCode(version));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

