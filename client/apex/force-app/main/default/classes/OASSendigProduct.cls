/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSendigProduct
 */
public class OASSendigProduct implements OAS.MappedProperties {
    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get source
     * @return source
     */
    public String source { get; set; }

    /**
     * Get effectiveDate
     * @return effectiveDate
     */
    public String effectiveDate { get; set; }

    /**
     * Get registrationStatus
     * @return registrationStatus
     */
    public String registrationStatus { get; set; }

    /**
     * Get version
     * @return version
     */
    public String version { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASSendigProductLinks links { get; set; }

    /**
     * Get classes
     * @return classes
     */
    public List<OASSendigClass> classes { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASSendigProduct() {
        classes = new List<OASSendigClass>();
    }

    public static OASSendigProduct getExample() {
        OASSendigProduct sendigProduct = new OASSendigProduct();
          sendigProduct.name = 'SENDIG v3.1';
          sendigProduct.label = 'Standard for Exchange ofâ€¦ies Version 3.1 (Final)';
          sendigProduct.description = 'The SENDIG is intended to guide the organization, structure, and format of standard nonclinical tabulation datasets for interchange between organizations such as sponsors and CROs, and for submission to regulatory authorities such as the U.S. Food and Drug Administration (FDA).';
          sendigProduct.source = 'Prepared by the CDISC Stâ€¦f Nonclinical Data Team';
          sendigProduct.effectiveDate = '2016-06-27';
          sendigProduct.registrationStatus = 'Final';
          sendigProduct.version = '3.1';
          sendigProduct.links = OASSendigProductLinks.getExample();
          sendigProduct.classes = new List<OASSendigClass>{OASSendigClass.getExample()};
        return sendigProduct;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSendigProduct) {           
            OASSendigProduct sendigProduct = (OASSendigProduct) obj;
            return this.name == sendigProduct.name
                && this.label == sendigProduct.label
                && this.description == sendigProduct.description
                && this.source == sendigProduct.source
                && this.effectiveDate == sendigProduct.effectiveDate
                && this.registrationStatus == sendigProduct.registrationStatus
                && this.version == sendigProduct.version
                && this.links == sendigProduct.links
                && this.classes == sendigProduct.classes;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (source == null ? 0 : System.hashCode(source));
        hashCode = (17 * hashCode) + (effectiveDate == null ? 0 : System.hashCode(effectiveDate));
        hashCode = (17 * hashCode) + (registrationStatus == null ? 0 : System.hashCode(registrationStatus));
        hashCode = (17 * hashCode) + (version == null ? 0 : System.hashCode(version));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        hashCode = (17 * hashCode) + (classes == null ? 0 : System.hashCode(classes));
        return hashCode;
    }
}

