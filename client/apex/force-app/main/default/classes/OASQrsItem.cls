/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASQrsItem
 */
public class OASQrsItem implements OAS.MappedProperties {
    /**
     * Get ordinal
     * @return ordinal
     */
    public String ordinal { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get questionText
     * @return questionText
     */
    public String questionText { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASQrsItemLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASQrsItem getExample() {
        OASQrsItem qrsItem = new OASQrsItem();
          qrsItem.ordinal = '1';
          qrsItem.label = 'AIMS01-Muscles of Facial Expression';
          qrsItem.questionText = 'Abnormal Involuntary Movement Scale - Facial and Oral Movements, Muscles of facial expression, e.g., movements of forehead, eyebrows, periorbital area, cheeks. Include frowning, blinking, grimacing of upper face.';
          qrsItem.links = OASQrsItemLinks.getExample();
        return qrsItem;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASQrsItem) {           
            OASQrsItem qrsItem = (OASQrsItem) obj;
            return this.ordinal == qrsItem.ordinal
                && this.label == qrsItem.label
                && this.questionText == qrsItem.questionText
                && this.links == qrsItem.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (ordinal == null ? 0 : System.hashCode(ordinal));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (questionText == null ? 0 : System.hashCode(questionText));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

