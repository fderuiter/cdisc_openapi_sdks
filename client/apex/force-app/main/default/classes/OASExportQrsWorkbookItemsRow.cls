/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASExportQrsWorkbookItemsRow
 */
public class OASExportQrsWorkbookItemsRow implements OAS.MappedProperties {
    /**
     * Get itemSequence
     * @return itemSequence
     */
    public String itemSequence { get; set; }

    /**
     * Get testName
     * @return testName
     */
    public String testName { get; set; }

    /**
     * Get itemText
     * @return itemText
     */
    public String itemText { get; set; }

    /**
     * Get testsCodelistCCode
     * @return testsCodelistCCode
     */
    public String testsCodelistCCode { get; set; }

    /**
     * Get testsTermCCode
     * @return testsTermCCode
     */
    public String testsTermCCode { get; set; }

    /**
     * Get testCodesCodelistCCode
     * @return testCodesCodelistCCode
     */
    public String testCodesCodelistCCode { get; set; }

    /**
     * Get testCodesTermCCode
     * @return testCodesTermCCode
     */
    public String testCodesTermCCode { get; set; }

    /**
     * Get subcategorysCodelistCCode
     * @return subcategorysCodelistCCode
     */
    public String subcategorysCodelistCCode { get; set; }

    /**
     * Get subcategorysTermCCode
     * @return subcategorysTermCCode
     */
    public String subcategorysTermCCode { get; set; }

    /**
     * Get evaluatorsCodelistCCode
     * @return evaluatorsCodelistCCode
     */
    public String evaluatorsCodelistCCode { get; set; }

    /**
     * Get evaluatorsTermCCode
     * @return evaluatorsTermCCode
     */
    public String evaluatorsTermCCode { get; set; }

    /**
     * Get freeFormResponsesDatatype
     * @return freeFormResponsesDatatype
     */
    public String freeFormResponsesDatatype { get; set; }

    /**
     * Get responseGroup
     * @return responseGroup
     */
    public String responseGroup { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Item Sequence' => 'itemSequence',
        'Test Name' => 'testName',
        'Item Text' => 'itemText',
        'Test&#39;s Codelist C-Code' => 'testsCodelistCCode',
        'Test&#39;s Term C-Code' => 'testsTermCCode',
        'Test Code&#39;s Codelist C-Code' => 'testCodesCodelistCCode',
        'Test Code&#39;s Term C-Code' => 'testCodesTermCCode',
        'Subcategory&#39;s Codelist C-Code' => 'subcategorysCodelistCCode',
        'Subcategory&#39;s Term C-Code' => 'subcategorysTermCCode',
        'Evaluator&#39;s Codelist C-Code' => 'evaluatorsCodelistCCode',
        'Evaluator&#39;s Term C-Code' => 'evaluatorsTermCCode',
        'Free-form Response&#39;s Datatype' => 'freeFormResponsesDatatype',
        'Response Group' => 'responseGroup'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASExportQrsWorkbookItemsRow getExample() {
        OASExportQrsWorkbookItemsRow exportQrsWorkbookItemsRow = new OASExportQrsWorkbookItemsRow();
          exportQrsWorkbookItemsRow.itemSequence = '';
          exportQrsWorkbookItemsRow.testName = '';
          exportQrsWorkbookItemsRow.itemText = '';
          exportQrsWorkbookItemsRow.testsCodelistCCode = '';
          exportQrsWorkbookItemsRow.testsTermCCode = '';
          exportQrsWorkbookItemsRow.testCodesCodelistCCode = '';
          exportQrsWorkbookItemsRow.testCodesTermCCode = '';
          exportQrsWorkbookItemsRow.subcategorysCodelistCCode = '';
          exportQrsWorkbookItemsRow.subcategorysTermCCode = '';
          exportQrsWorkbookItemsRow.evaluatorsCodelistCCode = '';
          exportQrsWorkbookItemsRow.evaluatorsTermCCode = '';
          exportQrsWorkbookItemsRow.freeFormResponsesDatatype = '';
          exportQrsWorkbookItemsRow.responseGroup = '';
        return exportQrsWorkbookItemsRow;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASExportQrsWorkbookItemsRow) {           
            OASExportQrsWorkbookItemsRow exportQrsWorkbookItemsRow = (OASExportQrsWorkbookItemsRow) obj;
            return this.itemSequence == exportQrsWorkbookItemsRow.itemSequence
                && this.testName == exportQrsWorkbookItemsRow.testName
                && this.itemText == exportQrsWorkbookItemsRow.itemText
                && this.testsCodelistCCode == exportQrsWorkbookItemsRow.testsCodelistCCode
                && this.testsTermCCode == exportQrsWorkbookItemsRow.testsTermCCode
                && this.testCodesCodelistCCode == exportQrsWorkbookItemsRow.testCodesCodelistCCode
                && this.testCodesTermCCode == exportQrsWorkbookItemsRow.testCodesTermCCode
                && this.subcategorysCodelistCCode == exportQrsWorkbookItemsRow.subcategorysCodelistCCode
                && this.subcategorysTermCCode == exportQrsWorkbookItemsRow.subcategorysTermCCode
                && this.evaluatorsCodelistCCode == exportQrsWorkbookItemsRow.evaluatorsCodelistCCode
                && this.evaluatorsTermCCode == exportQrsWorkbookItemsRow.evaluatorsTermCCode
                && this.freeFormResponsesDatatype == exportQrsWorkbookItemsRow.freeFormResponsesDatatype
                && this.responseGroup == exportQrsWorkbookItemsRow.responseGroup;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (itemSequence == null ? 0 : System.hashCode(itemSequence));
        hashCode = (17 * hashCode) + (testName == null ? 0 : System.hashCode(testName));
        hashCode = (17 * hashCode) + (itemText == null ? 0 : System.hashCode(itemText));
        hashCode = (17 * hashCode) + (testsCodelistCCode == null ? 0 : System.hashCode(testsCodelistCCode));
        hashCode = (17 * hashCode) + (testsTermCCode == null ? 0 : System.hashCode(testsTermCCode));
        hashCode = (17 * hashCode) + (testCodesCodelistCCode == null ? 0 : System.hashCode(testCodesCodelistCCode));
        hashCode = (17 * hashCode) + (testCodesTermCCode == null ? 0 : System.hashCode(testCodesTermCCode));
        hashCode = (17 * hashCode) + (subcategorysCodelistCCode == null ? 0 : System.hashCode(subcategorysCodelistCCode));
        hashCode = (17 * hashCode) + (subcategorysTermCCode == null ? 0 : System.hashCode(subcategorysTermCCode));
        hashCode = (17 * hashCode) + (evaluatorsCodelistCCode == null ? 0 : System.hashCode(evaluatorsCodelistCCode));
        hashCode = (17 * hashCode) + (evaluatorsTermCCode == null ? 0 : System.hashCode(evaluatorsTermCCode));
        hashCode = (17 * hashCode) + (freeFormResponsesDatatype == null ? 0 : System.hashCode(freeFormResponsesDatatype));
        hashCode = (17 * hashCode) + (responseGroup == null ? 0 : System.hashCode(responseGroup));
        return hashCode;
    }
}

