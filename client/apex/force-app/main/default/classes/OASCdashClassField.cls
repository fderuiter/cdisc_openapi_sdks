/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCdashClassField
 */
public class OASCdashClassField implements OAS.MappedProperties {
    /**
     * Get ordinal
     * @return ordinal
     */
    public String ordinal { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get definition
     * @return definition
     */
    public String definition { get; set; }

    /**
     * Get questionText
     * @return questionText
     */
    public String questionText { get; set; }

    /**
     * Get prompt
     * @return prompt
     */
    public String prompt { get; set; }

    /**
     * Get simpleDatatype
     * @return simpleDatatype
     */
    public String simpleDatatype { get; set; }

    /**
     * Get implementationNotes
     * @return implementationNotes
     */
    public String implementationNotes { get; set; }

    /**
     * Get mappingInstructions
     * @return mappingInstructions
     */
    public String mappingInstructions { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASCdashClassFieldLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCdashClassField getExample() {
        OASCdashClassField cdashClassField = new OASCdashClassField();
          cdashClassField.ordinal = '8';
          cdashClassField.name = '--DAT';
          cdashClassField.label = 'Collection Date';
          cdashClassField.definition = 'Collection date of an observation.';
          cdashClassField.questionText = 'What [is/was] the date the [event or intervention] [is/was] collected?; What [is/was] the (start) date (of the [Finding])?';
          cdashClassField.prompt = '[Event/Intervention] Collection Date; [Finding] (Start) Date';
          cdashClassField.simpleDatatype = 'Char';
          cdashClassField.implementationNotes = 'This is a generic DATE field that can be implemented in a system that will store partial dates. Use this for: 1. Date of data collection, 2. Visit date, 3. Visit start date, 4. Point in time collection (e.g., vital signs measurements, lab sample collection date), 5. Start date for interval collection of measurements or tests (e.g., start date of a 24-hour urine collection). Refer to the FDA Study Data Technical Conformance Guide v2.2 (June 12, 2015) Section 4.1.4.1 which indicates that when dates have the role of a timing variable, the matching Study Day variables (--DY, --STDY, or --ENDY, respectively) are included in the SDTM';
          cdashClassField.mappingInstructions = 'This field does not map directly to an SDTM variable. For the SDTM dataset, concatenate all collected CDASH DATE and TIME components and populate the SDTM variable --DTC in ISO 8601 format. Refer to the FDA Study Data Technical Conformance Guide v2.2 (June 12, 2015) Section 4.1.4.1 which indicates that when dates have the role of a timing variable, the matching Study Day variables (--DY, --STDY, or --ENDY, respectively) should be included in the SDTM dataset.';
          cdashClassField.links = OASCdashClassFieldLinks.getExample();
        return cdashClassField;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCdashClassField) {           
            OASCdashClassField cdashClassField = (OASCdashClassField) obj;
            return this.ordinal == cdashClassField.ordinal
                && this.name == cdashClassField.name
                && this.label == cdashClassField.label
                && this.definition == cdashClassField.definition
                && this.questionText == cdashClassField.questionText
                && this.prompt == cdashClassField.prompt
                && this.simpleDatatype == cdashClassField.simpleDatatype
                && this.implementationNotes == cdashClassField.implementationNotes
                && this.mappingInstructions == cdashClassField.mappingInstructions
                && this.links == cdashClassField.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (ordinal == null ? 0 : System.hashCode(ordinal));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (definition == null ? 0 : System.hashCode(definition));
        hashCode = (17 * hashCode) + (questionText == null ? 0 : System.hashCode(questionText));
        hashCode = (17 * hashCode) + (prompt == null ? 0 : System.hashCode(prompt));
        hashCode = (17 * hashCode) + (simpleDatatype == null ? 0 : System.hashCode(simpleDatatype));
        hashCode = (17 * hashCode) + (implementationNotes == null ? 0 : System.hashCode(implementationNotes));
        hashCode = (17 * hashCode) + (mappingInstructions == null ? 0 : System.hashCode(mappingInstructions));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

