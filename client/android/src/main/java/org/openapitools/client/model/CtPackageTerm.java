/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CtPackageTerm {
  
  @SerializedName("conceptId")
  private String conceptId = null;
  @SerializedName("submissionValue")
  private String submissionValue = null;
  @SerializedName("definition")
  private String definition = null;
  @SerializedName("preferredTerm")
  private String preferredTerm = null;
  @SerializedName("synonyms")
  private List<String> synonyms = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getConceptId() {
    return conceptId;
  }
  public void setConceptId(String conceptId) {
    this.conceptId = conceptId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSubmissionValue() {
    return submissionValue;
  }
  public void setSubmissionValue(String submissionValue) {
    this.submissionValue = submissionValue;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDefinition() {
    return definition;
  }
  public void setDefinition(String definition) {
    this.definition = definition;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPreferredTerm() {
    return preferredTerm;
  }
  public void setPreferredTerm(String preferredTerm) {
    this.preferredTerm = preferredTerm;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getSynonyms() {
    return synonyms;
  }
  public void setSynonyms(List<String> synonyms) {
    this.synonyms = synonyms;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CtPackageTerm ctPackageTerm = (CtPackageTerm) o;
    return (this.conceptId == null ? ctPackageTerm.conceptId == null : this.conceptId.equals(ctPackageTerm.conceptId)) &&
        (this.submissionValue == null ? ctPackageTerm.submissionValue == null : this.submissionValue.equals(ctPackageTerm.submissionValue)) &&
        (this.definition == null ? ctPackageTerm.definition == null : this.definition.equals(ctPackageTerm.definition)) &&
        (this.preferredTerm == null ? ctPackageTerm.preferredTerm == null : this.preferredTerm.equals(ctPackageTerm.preferredTerm)) &&
        (this.synonyms == null ? ctPackageTerm.synonyms == null : this.synonyms.equals(ctPackageTerm.synonyms));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.conceptId == null ? 0: this.conceptId.hashCode());
    result = 31 * result + (this.submissionValue == null ? 0: this.submissionValue.hashCode());
    result = 31 * result + (this.definition == null ? 0: this.definition.hashCode());
    result = 31 * result + (this.preferredTerm == null ? 0: this.preferredTerm.hashCode());
    result = 31 * result + (this.synonyms == null ? 0: this.synonyms.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CtPackageTerm {\n");
    
    sb.append("  conceptId: ").append(conceptId).append("\n");
    sb.append("  submissionValue: ").append(submissionValue).append("\n");
    sb.append("  definition: ").append(definition).append("\n");
    sb.append("  preferredTerm: ").append(preferredTerm).append("\n");
    sb.append("  synonyms: ").append(synonyms).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
