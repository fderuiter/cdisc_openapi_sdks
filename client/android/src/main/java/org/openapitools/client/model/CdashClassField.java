/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.CdashClassFieldLinks;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CdashClassField {
  
  @SerializedName("ordinal")
  private String ordinal = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("label")
  private String label = null;
  @SerializedName("definition")
  private String definition = null;
  @SerializedName("questionText")
  private String questionText = null;
  @SerializedName("prompt")
  private String prompt = null;
  @SerializedName("simpleDatatype")
  private String simpleDatatype = null;
  @SerializedName("implementationNotes")
  private String implementationNotes = null;
  @SerializedName("mappingInstructions")
  private String mappingInstructions = null;
  @SerializedName("_links")
  private CdashClassFieldLinks links = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOrdinal() {
    return ordinal;
  }
  public void setOrdinal(String ordinal) {
    this.ordinal = ordinal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }
  public void setLabel(String label) {
    this.label = label;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDefinition() {
    return definition;
  }
  public void setDefinition(String definition) {
    this.definition = definition;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getQuestionText() {
    return questionText;
  }
  public void setQuestionText(String questionText) {
    this.questionText = questionText;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPrompt() {
    return prompt;
  }
  public void setPrompt(String prompt) {
    this.prompt = prompt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSimpleDatatype() {
    return simpleDatatype;
  }
  public void setSimpleDatatype(String simpleDatatype) {
    this.simpleDatatype = simpleDatatype;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getImplementationNotes() {
    return implementationNotes;
  }
  public void setImplementationNotes(String implementationNotes) {
    this.implementationNotes = implementationNotes;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMappingInstructions() {
    return mappingInstructions;
  }
  public void setMappingInstructions(String mappingInstructions) {
    this.mappingInstructions = mappingInstructions;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CdashClassFieldLinks getLinks() {
    return links;
  }
  public void setLinks(CdashClassFieldLinks links) {
    this.links = links;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CdashClassField cdashClassField = (CdashClassField) o;
    return (this.ordinal == null ? cdashClassField.ordinal == null : this.ordinal.equals(cdashClassField.ordinal)) &&
        (this.name == null ? cdashClassField.name == null : this.name.equals(cdashClassField.name)) &&
        (this.label == null ? cdashClassField.label == null : this.label.equals(cdashClassField.label)) &&
        (this.definition == null ? cdashClassField.definition == null : this.definition.equals(cdashClassField.definition)) &&
        (this.questionText == null ? cdashClassField.questionText == null : this.questionText.equals(cdashClassField.questionText)) &&
        (this.prompt == null ? cdashClassField.prompt == null : this.prompt.equals(cdashClassField.prompt)) &&
        (this.simpleDatatype == null ? cdashClassField.simpleDatatype == null : this.simpleDatatype.equals(cdashClassField.simpleDatatype)) &&
        (this.implementationNotes == null ? cdashClassField.implementationNotes == null : this.implementationNotes.equals(cdashClassField.implementationNotes)) &&
        (this.mappingInstructions == null ? cdashClassField.mappingInstructions == null : this.mappingInstructions.equals(cdashClassField.mappingInstructions)) &&
        (this.links == null ? cdashClassField.links == null : this.links.equals(cdashClassField.links));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.ordinal == null ? 0: this.ordinal.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.label == null ? 0: this.label.hashCode());
    result = 31 * result + (this.definition == null ? 0: this.definition.hashCode());
    result = 31 * result + (this.questionText == null ? 0: this.questionText.hashCode());
    result = 31 * result + (this.prompt == null ? 0: this.prompt.hashCode());
    result = 31 * result + (this.simpleDatatype == null ? 0: this.simpleDatatype.hashCode());
    result = 31 * result + (this.implementationNotes == null ? 0: this.implementationNotes.hashCode());
    result = 31 * result + (this.mappingInstructions == null ? 0: this.mappingInstructions.hashCode());
    result = 31 * result + (this.links == null ? 0: this.links.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CdashClassField {\n");
    
    sb.append("  ordinal: ").append(ordinal).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  label: ").append(label).append("\n");
    sb.append("  definition: ").append(definition).append("\n");
    sb.append("  questionText: ").append(questionText).append("\n");
    sb.append("  prompt: ").append(prompt).append("\n");
    sb.append("  simpleDatatype: ").append(simpleDatatype).append("\n");
    sb.append("  implementationNotes: ").append(implementationNotes).append("\n");
    sb.append("  mappingInstructions: ").append(mappingInstructions).append("\n");
    sb.append("  links: ").append(links).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
