/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.AdamVariableLinks;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class AdamVariable {
  
  @SerializedName("ordinal")
  private String ordinal = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("label")
  private String label = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("core")
  private String core = null;
  @SerializedName("simpleDatatype")
  private String simpleDatatype = null;
  @SerializedName("describedValueDomain")
  private String describedValueDomain = null;
  @SerializedName("valueList")
  private List<String> valueList = null;
  @SerializedName("_links")
  private AdamVariableLinks links = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOrdinal() {
    return ordinal;
  }
  public void setOrdinal(String ordinal) {
    this.ordinal = ordinal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }
  public void setLabel(String label) {
    this.label = label;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCore() {
    return core;
  }
  public void setCore(String core) {
    this.core = core;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSimpleDatatype() {
    return simpleDatatype;
  }
  public void setSimpleDatatype(String simpleDatatype) {
    this.simpleDatatype = simpleDatatype;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescribedValueDomain() {
    return describedValueDomain;
  }
  public void setDescribedValueDomain(String describedValueDomain) {
    this.describedValueDomain = describedValueDomain;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getValueList() {
    return valueList;
  }
  public void setValueList(List<String> valueList) {
    this.valueList = valueList;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AdamVariableLinks getLinks() {
    return links;
  }
  public void setLinks(AdamVariableLinks links) {
    this.links = links;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdamVariable adamVariable = (AdamVariable) o;
    return (this.ordinal == null ? adamVariable.ordinal == null : this.ordinal.equals(adamVariable.ordinal)) &&
        (this.name == null ? adamVariable.name == null : this.name.equals(adamVariable.name)) &&
        (this.label == null ? adamVariable.label == null : this.label.equals(adamVariable.label)) &&
        (this.description == null ? adamVariable.description == null : this.description.equals(adamVariable.description)) &&
        (this.core == null ? adamVariable.core == null : this.core.equals(adamVariable.core)) &&
        (this.simpleDatatype == null ? adamVariable.simpleDatatype == null : this.simpleDatatype.equals(adamVariable.simpleDatatype)) &&
        (this.describedValueDomain == null ? adamVariable.describedValueDomain == null : this.describedValueDomain.equals(adamVariable.describedValueDomain)) &&
        (this.valueList == null ? adamVariable.valueList == null : this.valueList.equals(adamVariable.valueList)) &&
        (this.links == null ? adamVariable.links == null : this.links.equals(adamVariable.links));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.ordinal == null ? 0: this.ordinal.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.label == null ? 0: this.label.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.core == null ? 0: this.core.hashCode());
    result = 31 * result + (this.simpleDatatype == null ? 0: this.simpleDatatype.hashCode());
    result = 31 * result + (this.describedValueDomain == null ? 0: this.describedValueDomain.hashCode());
    result = 31 * result + (this.valueList == null ? 0: this.valueList.hashCode());
    result = 31 * result + (this.links == null ? 0: this.links.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdamVariable {\n");
    
    sb.append("  ordinal: ").append(ordinal).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  label: ").append(label).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  core: ").append(core).append("\n");
    sb.append("  simpleDatatype: ").append(simpleDatatype).append("\n");
    sb.append("  describedValueDomain: ").append(describedValueDomain).append("\n");
    sb.append("  valueList: ").append(valueList).append("\n");
    sb.append("  links: ").append(links).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
