/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("About".equalsIgnoreCase(className)) {
      return new TypeToken<List<About>>(){}.getType();
    }
    
    if ("AboutLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<AboutLinks>>(){}.getType();
    }
    
    if ("AboutRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<AboutRef>>(){}.getType();
    }
    
    if ("AdamDatastructure".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructure>>(){}.getType();
    }
    
    if ("AdamDatastructureLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructureLinks>>(){}.getType();
    }
    
    if ("AdamDatastructureRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructureRef>>(){}.getType();
    }
    
    if ("AdamDatastructureRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructureRefElement>>(){}.getType();
    }
    
    if ("AdamDatastructureVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructureVariables>>(){}.getType();
    }
    
    if ("AdamDatastructureVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructureVariablesLinks>>(){}.getType();
    }
    
    if ("AdamDatastructureVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructureVariablesRef>>(){}.getType();
    }
    
    if ("AdamDatastructureVarsets".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructureVarsets>>(){}.getType();
    }
    
    if ("AdamDatastructureVarsetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructureVarsetsLinks>>(){}.getType();
    }
    
    if ("AdamDatastructureVarsetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamDatastructureVarsetsRef>>(){}.getType();
    }
    
    if ("AdamProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamProduct>>(){}.getType();
    }
    
    if ("AdamProductDatastructures".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamProductDatastructures>>(){}.getType();
    }
    
    if ("AdamProductDatastructuresLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamProductDatastructuresLinks>>(){}.getType();
    }
    
    if ("AdamProductDatastructuresRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamProductDatastructuresRef>>(){}.getType();
    }
    
    if ("AdamProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamProductLinks>>(){}.getType();
    }
    
    if ("AdamProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamProductRef>>(){}.getType();
    }
    
    if ("AdamProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamProductRefElement>>(){}.getType();
    }
    
    if ("AdamVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamVariable>>(){}.getType();
    }
    
    if ("AdamVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamVariableLinks>>(){}.getType();
    }
    
    if ("AdamVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamVariableRef>>(){}.getType();
    }
    
    if ("AdamVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamVariableRefElement>>(){}.getType();
    }
    
    if ("AdamVarset".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamVarset>>(){}.getType();
    }
    
    if ("AdamVarsetLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamVarsetLinks>>(){}.getType();
    }
    
    if ("AdamVarsetRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamVarsetRef>>(){}.getType();
    }
    
    if ("AdamVarsetRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdamVarsetRefElement>>(){}.getType();
    }
    
    if ("CdashClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClass>>(){}.getType();
    }
    
    if ("CdashClassDomains".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassDomains>>(){}.getType();
    }
    
    if ("CdashClassDomainsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassDomainsLinks>>(){}.getType();
    }
    
    if ("CdashClassDomainsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassDomainsRef>>(){}.getType();
    }
    
    if ("CdashClassField".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassField>>(){}.getType();
    }
    
    if ("CdashClassFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassFieldLinks>>(){}.getType();
    }
    
    if ("CdashClassFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassFieldRef>>(){}.getType();
    }
    
    if ("CdashClassFieldRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassFieldRefVersion>>(){}.getType();
    }
    
    if ("CdashClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassLinks>>(){}.getType();
    }
    
    if ("CdashClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassRef>>(){}.getType();
    }
    
    if ("CdashClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashClassRefElement>>(){}.getType();
    }
    
    if ("CdashDomain".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomain>>(){}.getType();
    }
    
    if ("CdashDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainField>>(){}.getType();
    }
    
    if ("CdashDomainFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainFieldLinks>>(){}.getType();
    }
    
    if ("CdashDomainFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainFieldRef>>(){}.getType();
    }
    
    if ("CdashDomainFieldRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainFieldRefElement>>(){}.getType();
    }
    
    if ("CdashDomainFieldRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainFieldRefVersion>>(){}.getType();
    }
    
    if ("CdashDomainFields".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainFields>>(){}.getType();
    }
    
    if ("CdashDomainFieldsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainFieldsLinks>>(){}.getType();
    }
    
    if ("CdashDomainFieldsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainFieldsRef>>(){}.getType();
    }
    
    if ("CdashDomainLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainLinks>>(){}.getType();
    }
    
    if ("CdashDomainRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainRef>>(){}.getType();
    }
    
    if ("CdashDomainRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashDomainRefElement>>(){}.getType();
    }
    
    if ("CdashProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProduct>>(){}.getType();
    }
    
    if ("CdashProductClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProductClasses>>(){}.getType();
    }
    
    if ("CdashProductClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProductClassesLinks>>(){}.getType();
    }
    
    if ("CdashProductClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProductClassesRef>>(){}.getType();
    }
    
    if ("CdashProductDomains".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProductDomains>>(){}.getType();
    }
    
    if ("CdashProductDomainsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProductDomainsLinks>>(){}.getType();
    }
    
    if ("CdashProductDomainsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProductDomainsRef>>(){}.getType();
    }
    
    if ("CdashProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProductLinks>>(){}.getType();
    }
    
    if ("CdashProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProductRef>>(){}.getType();
    }
    
    if ("CdashProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashProductRefElement>>(){}.getType();
    }
    
    if ("CdashigClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClass>>(){}.getType();
    }
    
    if ("CdashigClassDomains".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassDomains>>(){}.getType();
    }
    
    if ("CdashigClassDomainsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassDomainsLinks>>(){}.getType();
    }
    
    if ("CdashigClassDomainsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassDomainsRef>>(){}.getType();
    }
    
    if ("CdashigClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassLinks>>(){}.getType();
    }
    
    if ("CdashigClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassRef>>(){}.getType();
    }
    
    if ("CdashigClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassRefElement>>(){}.getType();
    }
    
    if ("CdashigClassRefSubclass".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassRefSubclass>>(){}.getType();
    }
    
    if ("CdashigClassScenarios".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassScenarios>>(){}.getType();
    }
    
    if ("CdashigClassScenariosLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassScenariosLinks>>(){}.getType();
    }
    
    if ("CdashigClassScenariosRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigClassScenariosRef>>(){}.getType();
    }
    
    if ("CdashigDomain".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomain>>(){}.getType();
    }
    
    if ("CdashigDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainField>>(){}.getType();
    }
    
    if ("CdashigDomainFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainFieldLinks>>(){}.getType();
    }
    
    if ("CdashigDomainFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainFieldRef>>(){}.getType();
    }
    
    if ("CdashigDomainFieldRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainFieldRefElement>>(){}.getType();
    }
    
    if ("CdashigDomainFieldRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainFieldRefVersion>>(){}.getType();
    }
    
    if ("CdashigDomainFields".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainFields>>(){}.getType();
    }
    
    if ("CdashigDomainFieldsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainFieldsLinks>>(){}.getType();
    }
    
    if ("CdashigDomainFieldsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainFieldsRef>>(){}.getType();
    }
    
    if ("CdashigDomainLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainLinks>>(){}.getType();
    }
    
    if ("CdashigDomainRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainRef>>(){}.getType();
    }
    
    if ("CdashigDomainRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigDomainRefElement>>(){}.getType();
    }
    
    if ("CdashigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProduct>>(){}.getType();
    }
    
    if ("CdashigProductClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductClasses>>(){}.getType();
    }
    
    if ("CdashigProductClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductClassesLinks>>(){}.getType();
    }
    
    if ("CdashigProductClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductClassesRef>>(){}.getType();
    }
    
    if ("CdashigProductDomains".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductDomains>>(){}.getType();
    }
    
    if ("CdashigProductDomainsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductDomainsLinks>>(){}.getType();
    }
    
    if ("CdashigProductDomainsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductDomainsRef>>(){}.getType();
    }
    
    if ("CdashigProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductLinks>>(){}.getType();
    }
    
    if ("CdashigProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductRef>>(){}.getType();
    }
    
    if ("CdashigProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductRefElement>>(){}.getType();
    }
    
    if ("CdashigProductScenarios".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductScenarios>>(){}.getType();
    }
    
    if ("CdashigProductScenariosLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductScenariosLinks>>(){}.getType();
    }
    
    if ("CdashigProductScenariosRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigProductScenariosRef>>(){}.getType();
    }
    
    if ("CdashigScenario".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenario>>(){}.getType();
    }
    
    if ("CdashigScenarioField".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioField>>(){}.getType();
    }
    
    if ("CdashigScenarioFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioFieldLinks>>(){}.getType();
    }
    
    if ("CdashigScenarioFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioFieldRef>>(){}.getType();
    }
    
    if ("CdashigScenarioFieldRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioFieldRefElement>>(){}.getType();
    }
    
    if ("CdashigScenarioFieldRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioFieldRefVersion>>(){}.getType();
    }
    
    if ("CdashigScenarioFields".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioFields>>(){}.getType();
    }
    
    if ("CdashigScenarioFieldsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioFieldsLinks>>(){}.getType();
    }
    
    if ("CdashigScenarioFieldsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioFieldsRef>>(){}.getType();
    }
    
    if ("CdashigScenarioLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioLinks>>(){}.getType();
    }
    
    if ("CdashigScenarioRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioRef>>(){}.getType();
    }
    
    if ("CdashigScenarioRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CdashigScenarioRefElement>>(){}.getType();
    }
    
    if ("CtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtCodelist>>(){}.getType();
    }
    
    if ("CtCodelistLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtCodelistLinks>>(){}.getType();
    }
    
    if ("CtCodelistRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtCodelistRef>>(){}.getType();
    }
    
    if ("CtCodelistRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtCodelistRefElement>>(){}.getType();
    }
    
    if ("CtCodelistRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtCodelistRefVersion>>(){}.getType();
    }
    
    if ("CtCodelistTerms".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtCodelistTerms>>(){}.getType();
    }
    
    if ("CtCodelistTermsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtCodelistTermsLinks>>(){}.getType();
    }
    
    if ("CtCodelistTermsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtCodelistTermsRef>>(){}.getType();
    }
    
    if ("CtPackage".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackage>>(){}.getType();
    }
    
    if ("CtPackageCodelists".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackageCodelists>>(){}.getType();
    }
    
    if ("CtPackageCodelistsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackageCodelistsLinks>>(){}.getType();
    }
    
    if ("CtPackageCodelistsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackageCodelistsRef>>(){}.getType();
    }
    
    if ("CtPackageLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackageLinks>>(){}.getType();
    }
    
    if ("CtPackageRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackageRef>>(){}.getType();
    }
    
    if ("CtPackageRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackageRefElement>>(){}.getType();
    }
    
    if ("CtPackageTerm".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackageTerm>>(){}.getType();
    }
    
    if ("CtPackages".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackages>>(){}.getType();
    }
    
    if ("CtPackagesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackagesLinks>>(){}.getType();
    }
    
    if ("CtPackagesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtPackagesRef>>(){}.getType();
    }
    
    if ("CtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtTerm>>(){}.getType();
    }
    
    if ("CtTermLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtTermLinks>>(){}.getType();
    }
    
    if ("CtTermRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtTermRef>>(){}.getType();
    }
    
    if ("CtTermRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtTermRefElement>>(){}.getType();
    }
    
    if ("CtTermRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<CtTermRefVersion>>(){}.getType();
    }
    
    if ("DefaultErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<DefaultErrorResponse>>(){}.getType();
    }
    
    if ("DefaultSearchResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<DefaultSearchResponse>>(){}.getType();
    }
    
    if ("DefaultSearchResponseHitsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<DefaultSearchResponseHitsInner>>(){}.getType();
    }
    
    if ("DefaultSearchScopes".equalsIgnoreCase(className)) {
      return new TypeToken<List<DefaultSearchScopes>>(){}.getType();
    }
    
    if ("ExportAdamDatastructuresRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportAdamDatastructuresRow>>(){}.getType();
    }
    
    if ("ExportAdamDatastructuresTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportAdamDatastructuresTable>>(){}.getType();
    }
    
    if ("ExportAdamVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportAdamVariablesRow>>(){}.getType();
    }
    
    if ("ExportAdamVariablesTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportAdamVariablesTable>>(){}.getType();
    }
    
    if ("ExportAdamWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportAdamWorkbook>>(){}.getType();
    }
    
    if ("ExportCdashClassVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportCdashClassVariablesRow>>(){}.getType();
    }
    
    if ("ExportCdashDomainVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportCdashDomainVariablesRow>>(){}.getType();
    }
    
    if ("ExportCdashTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportCdashTable>>(){}.getType();
    }
    
    if ("ExportCdashigDomainVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportCdashigDomainVariablesRow>>(){}.getType();
    }
    
    if ("ExportCdashigScenarioVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportCdashigScenarioVariablesRow>>(){}.getType();
    }
    
    if ("ExportCdashigTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportCdashigTable>>(){}.getType();
    }
    
    if ("ExportCtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportCtCodelist>>(){}.getType();
    }
    
    if ("ExportCtTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportCtTable>>(){}.getType();
    }
    
    if ("ExportCtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportCtTerm>>(){}.getType();
    }
    
    if ("ExportQrsCsvItemsRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportQrsCsvItemsRow>>(){}.getType();
    }
    
    if ("ExportQrsGeneral".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportQrsGeneral>>(){}.getType();
    }
    
    if ("ExportQrsItemsTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportQrsItemsTable>>(){}.getType();
    }
    
    if ("ExportQrsResponses".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportQrsResponses>>(){}.getType();
    }
    
    if ("ExportQrsWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportQrsWorkbook>>(){}.getType();
    }
    
    if ("ExportQrsWorkbookItemsRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportQrsWorkbookItemsRow>>(){}.getType();
    }
    
    if ("ExportSdtmClassVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmClassVariablesRow>>(){}.getType();
    }
    
    if ("ExportSdtmDatasetVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmDatasetVariablesRow>>(){}.getType();
    }
    
    if ("ExportSdtmDatasetsRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmDatasetsRow>>(){}.getType();
    }
    
    if ("ExportSdtmDatasetsTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmDatasetsTable>>(){}.getType();
    }
    
    if ("ExportSdtmVariablesTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmVariablesTable>>(){}.getType();
    }
    
    if ("ExportSdtmWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmWorkbook>>(){}.getType();
    }
    
    if ("ExportSdtmigDatasetsRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmigDatasetsRow>>(){}.getType();
    }
    
    if ("ExportSdtmigDatasetsTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmigDatasetsTable>>(){}.getType();
    }
    
    if ("ExportSdtmigVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmigVariablesRow>>(){}.getType();
    }
    
    if ("ExportSdtmigVariablesTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmigVariablesTable>>(){}.getType();
    }
    
    if ("ExportSdtmigWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSdtmigWorkbook>>(){}.getType();
    }
    
    if ("ExportSendigDatasetsRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSendigDatasetsRow>>(){}.getType();
    }
    
    if ("ExportSendigDatasetsTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSendigDatasetsTable>>(){}.getType();
    }
    
    if ("ExportSendigVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSendigVariablesRow>>(){}.getType();
    }
    
    if ("ExportSendigVariablesTable".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSendigVariablesTable>>(){}.getType();
    }
    
    if ("ExportSendigWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportSendigWorkbook>>(){}.getType();
    }
    
    if ("Health".equalsIgnoreCase(className)) {
      return new TypeToken<List<Health>>(){}.getType();
    }
    
    if ("Lastupdated".equalsIgnoreCase(className)) {
      return new TypeToken<List<Lastupdated>>(){}.getType();
    }
    
    if ("LastupdatedLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<LastupdatedLinks>>(){}.getType();
    }
    
    if ("LastupdatedRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<LastupdatedRef>>(){}.getType();
    }
    
    if ("MaintenanceBody".equalsIgnoreCase(className)) {
      return new TypeToken<List<MaintenanceBody>>(){}.getType();
    }
    
    if ("MdrSearchScopesGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<MdrSearchScopesGet200Response>>(){}.getType();
    }
    
    if ("ProductgroupDataAnalysis".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupDataAnalysis>>(){}.getType();
    }
    
    if ("ProductgroupDataAnalysisLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupDataAnalysisLinks>>(){}.getType();
    }
    
    if ("ProductgroupDataCollection".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupDataCollection>>(){}.getType();
    }
    
    if ("ProductgroupDataCollectionLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupDataCollectionLinks>>(){}.getType();
    }
    
    if ("ProductgroupDataTabulation".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupDataTabulation>>(){}.getType();
    }
    
    if ("ProductgroupDataTabulationLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupDataTabulationLinks>>(){}.getType();
    }
    
    if ("ProductgroupQrs".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupQrs>>(){}.getType();
    }
    
    if ("ProductgroupQrsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupQrsLinks>>(){}.getType();
    }
    
    if ("ProductgroupRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupRef>>(){}.getType();
    }
    
    if ("ProductgroupTerminology".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupTerminology>>(){}.getType();
    }
    
    if ("ProductgroupTerminologyLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductgroupTerminologyLinks>>(){}.getType();
    }
    
    if ("Products".equalsIgnoreCase(className)) {
      return new TypeToken<List<Products>>(){}.getType();
    }
    
    if ("ProductsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductsLinks>>(){}.getType();
    }
    
    if ("ProductsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductsRef>>(){}.getType();
    }
    
    if ("QrsItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsItem>>(){}.getType();
    }
    
    if ("QrsItemLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsItemLinks>>(){}.getType();
    }
    
    if ("QrsItemRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsItemRefElement>>(){}.getType();
    }
    
    if ("QrsItems".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsItems>>(){}.getType();
    }
    
    if ("QrsItemsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsItemsLinks>>(){}.getType();
    }
    
    if ("QrsItemsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsItemsRef>>(){}.getType();
    }
    
    if ("QrsProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsProduct>>(){}.getType();
    }
    
    if ("QrsProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsProductLinks>>(){}.getType();
    }
    
    if ("QrsProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsProductRef>>(){}.getType();
    }
    
    if ("QrsRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsRefElement>>(){}.getType();
    }
    
    if ("QrsResponseLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsResponseLinks>>(){}.getType();
    }
    
    if ("QrsResponsegroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsResponsegroup>>(){}.getType();
    }
    
    if ("QrsResponsegroupLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsResponsegroupLinks>>(){}.getType();
    }
    
    if ("QrsResponsegroupRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsResponsegroupRef>>(){}.getType();
    }
    
    if ("QrsResponsegroupRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsResponsegroupRefElement>>(){}.getType();
    }
    
    if ("QrsResponsegroups".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsResponsegroups>>(){}.getType();
    }
    
    if ("QrsResponsegroupsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsResponsegroupsLinks>>(){}.getType();
    }
    
    if ("QrsResponsegroupsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsResponsegroupsRef>>(){}.getType();
    }
    
    if ("QrsResponses".equalsIgnoreCase(className)) {
      return new TypeToken<List<QrsResponses>>(){}.getType();
    }
    
    if ("RootCdashClassField".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashClassField>>(){}.getType();
    }
    
    if ("RootCdashClassFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashClassFieldLinks>>(){}.getType();
    }
    
    if ("RootCdashClassFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashClassFieldRef>>(){}.getType();
    }
    
    if ("RootCdashDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashDomainField>>(){}.getType();
    }
    
    if ("RootCdashDomainFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashDomainFieldLinks>>(){}.getType();
    }
    
    if ("RootCdashDomainFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashDomainFieldRef>>(){}.getType();
    }
    
    if ("RootCdashigDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashigDomainField>>(){}.getType();
    }
    
    if ("RootCdashigDomainFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashigDomainFieldLinks>>(){}.getType();
    }
    
    if ("RootCdashigDomainFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashigDomainFieldRef>>(){}.getType();
    }
    
    if ("RootCdashigScenarioField".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashigScenarioField>>(){}.getType();
    }
    
    if ("RootCdashigScenarioFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashigScenarioFieldLinks>>(){}.getType();
    }
    
    if ("RootCdashigScenarioFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCdashigScenarioFieldRef>>(){}.getType();
    }
    
    if ("RootCtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCtCodelist>>(){}.getType();
    }
    
    if ("RootCtCodelistLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCtCodelistLinks>>(){}.getType();
    }
    
    if ("RootCtCodelistRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCtCodelistRef>>(){}.getType();
    }
    
    if ("RootCtCodelistRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCtCodelistRefElement>>(){}.getType();
    }
    
    if ("RootCtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCtTerm>>(){}.getType();
    }
    
    if ("RootCtTermLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCtTermLinks>>(){}.getType();
    }
    
    if ("RootCtTermRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootCtTermRef>>(){}.getType();
    }
    
    if ("RootSdtmClassVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSdtmClassVariable>>(){}.getType();
    }
    
    if ("RootSdtmClassVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSdtmClassVariableLinks>>(){}.getType();
    }
    
    if ("RootSdtmClassVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSdtmClassVariableRef>>(){}.getType();
    }
    
    if ("RootSdtmDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSdtmDatasetVariable>>(){}.getType();
    }
    
    if ("RootSdtmDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSdtmDatasetVariableLinks>>(){}.getType();
    }
    
    if ("RootSdtmDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSdtmDatasetVariableRef>>(){}.getType();
    }
    
    if ("RootSdtmigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSdtmigDatasetVariable>>(){}.getType();
    }
    
    if ("RootSdtmigDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSdtmigDatasetVariableLinks>>(){}.getType();
    }
    
    if ("RootSdtmigDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSdtmigDatasetVariableRef>>(){}.getType();
    }
    
    if ("RootSendigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSendigDatasetVariable>>(){}.getType();
    }
    
    if ("RootSendigDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSendigDatasetVariableLinks>>(){}.getType();
    }
    
    if ("RootSendigDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<RootSendigDatasetVariableRef>>(){}.getType();
    }
    
    if ("ScopeValues".equalsIgnoreCase(className)) {
      return new TypeToken<List<ScopeValues>>(){}.getType();
    }
    
    if ("SdtmClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClass>>(){}.getType();
    }
    
    if ("SdtmClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassDatasets>>(){}.getType();
    }
    
    if ("SdtmClassDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassDatasetsLinks>>(){}.getType();
    }
    
    if ("SdtmClassDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassDatasetsRef>>(){}.getType();
    }
    
    if ("SdtmClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassLinks>>(){}.getType();
    }
    
    if ("SdtmClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassRef>>(){}.getType();
    }
    
    if ("SdtmClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassRefElement>>(){}.getType();
    }
    
    if ("SdtmClassRefSubclass".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassRefSubclass>>(){}.getType();
    }
    
    if ("SdtmClassVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariable>>(){}.getType();
    }
    
    if ("SdtmClassVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariableLinks>>(){}.getType();
    }
    
    if ("SdtmClassVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariableRef>>(){}.getType();
    }
    
    if ("SdtmClassVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariableRefElement>>(){}.getType();
    }
    
    if ("SdtmClassVariableRefQualifies".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariableRefQualifies>>(){}.getType();
    }
    
    if ("SdtmClassVariableRefTarget".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariableRefTarget>>(){}.getType();
    }
    
    if ("SdtmClassVariableRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariableRefVersion>>(){}.getType();
    }
    
    if ("SdtmClassVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariables>>(){}.getType();
    }
    
    if ("SdtmClassVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariablesLinks>>(){}.getType();
    }
    
    if ("SdtmClassVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassVariablesRef>>(){}.getType();
    }
    
    if ("SdtmClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClasses>>(){}.getType();
    }
    
    if ("SdtmClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassesLinks>>(){}.getType();
    }
    
    if ("SdtmClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmClassesRef>>(){}.getType();
    }
    
    if ("SdtmDataset".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDataset>>(){}.getType();
    }
    
    if ("SdtmDatasetLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetLinks>>(){}.getType();
    }
    
    if ("SdtmDatasetRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetRef>>(){}.getType();
    }
    
    if ("SdtmDatasetRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetRefElement>>(){}.getType();
    }
    
    if ("SdtmDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetVariable>>(){}.getType();
    }
    
    if ("SdtmDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetVariableLinks>>(){}.getType();
    }
    
    if ("SdtmDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetVariableRef>>(){}.getType();
    }
    
    if ("SdtmDatasetVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetVariableRefElement>>(){}.getType();
    }
    
    if ("SdtmDatasetVariableRefTarget".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetVariableRefTarget>>(){}.getType();
    }
    
    if ("SdtmDatasetVariableRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetVariableRefVersion>>(){}.getType();
    }
    
    if ("SdtmDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetVariables>>(){}.getType();
    }
    
    if ("SdtmDatasetVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetVariablesLinks>>(){}.getType();
    }
    
    if ("SdtmDatasetVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetVariablesRef>>(){}.getType();
    }
    
    if ("SdtmDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasets>>(){}.getType();
    }
    
    if ("SdtmDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetsLinks>>(){}.getType();
    }
    
    if ("SdtmDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmDatasetsRef>>(){}.getType();
    }
    
    if ("SdtmProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmProduct>>(){}.getType();
    }
    
    if ("SdtmProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmProductLinks>>(){}.getType();
    }
    
    if ("SdtmProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmProductRef>>(){}.getType();
    }
    
    if ("SdtmProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmProductRefElement>>(){}.getType();
    }
    
    if ("SdtmigClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClass>>(){}.getType();
    }
    
    if ("SdtmigClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClassDatasets>>(){}.getType();
    }
    
    if ("SdtmigClassDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClassDatasetsLinks>>(){}.getType();
    }
    
    if ("SdtmigClassDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClassDatasetsRef>>(){}.getType();
    }
    
    if ("SdtmigClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClassLinks>>(){}.getType();
    }
    
    if ("SdtmigClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClassRef>>(){}.getType();
    }
    
    if ("SdtmigClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClassRefElement>>(){}.getType();
    }
    
    if ("SdtmigClassRefSubclass".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClassRefSubclass>>(){}.getType();
    }
    
    if ("SdtmigClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClasses>>(){}.getType();
    }
    
    if ("SdtmigClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClassesLinks>>(){}.getType();
    }
    
    if ("SdtmigClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigClassesRef>>(){}.getType();
    }
    
    if ("SdtmigDataset".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDataset>>(){}.getType();
    }
    
    if ("SdtmigDatasetLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetLinks>>(){}.getType();
    }
    
    if ("SdtmigDatasetRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetRef>>(){}.getType();
    }
    
    if ("SdtmigDatasetRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetRefElement>>(){}.getType();
    }
    
    if ("SdtmigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetVariable>>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetVariableLinks>>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetVariableRef>>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetVariableRefElement>>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableRefTarget".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetVariableRefTarget>>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetVariableRefVersion>>(){}.getType();
    }
    
    if ("SdtmigDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetVariables>>(){}.getType();
    }
    
    if ("SdtmigDatasetVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetVariablesLinks>>(){}.getType();
    }
    
    if ("SdtmigDatasetVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetVariablesRef>>(){}.getType();
    }
    
    if ("SdtmigDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasets>>(){}.getType();
    }
    
    if ("SdtmigDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetsLinks>>(){}.getType();
    }
    
    if ("SdtmigDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigDatasetsRef>>(){}.getType();
    }
    
    if ("SdtmigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigProduct>>(){}.getType();
    }
    
    if ("SdtmigProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigProductLinks>>(){}.getType();
    }
    
    if ("SdtmigProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigProductRef>>(){}.getType();
    }
    
    if ("SdtmigProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SdtmigProductRefElement>>(){}.getType();
    }
    
    if ("SendigClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClass>>(){}.getType();
    }
    
    if ("SendigClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClassDatasets>>(){}.getType();
    }
    
    if ("SendigClassDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClassDatasetsLinks>>(){}.getType();
    }
    
    if ("SendigClassDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClassDatasetsRef>>(){}.getType();
    }
    
    if ("SendigClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClassLinks>>(){}.getType();
    }
    
    if ("SendigClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClassRef>>(){}.getType();
    }
    
    if ("SendigClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClassRefElement>>(){}.getType();
    }
    
    if ("SendigClassRefSubclass".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClassRefSubclass>>(){}.getType();
    }
    
    if ("SendigClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClasses>>(){}.getType();
    }
    
    if ("SendigClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClassesLinks>>(){}.getType();
    }
    
    if ("SendigClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigClassesRef>>(){}.getType();
    }
    
    if ("SendigDataset".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDataset>>(){}.getType();
    }
    
    if ("SendigDatasetLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetLinks>>(){}.getType();
    }
    
    if ("SendigDatasetRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetRef>>(){}.getType();
    }
    
    if ("SendigDatasetRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetRefElement>>(){}.getType();
    }
    
    if ("SendigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetVariable>>(){}.getType();
    }
    
    if ("SendigDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetVariableLinks>>(){}.getType();
    }
    
    if ("SendigDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetVariableRef>>(){}.getType();
    }
    
    if ("SendigDatasetVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetVariableRefElement>>(){}.getType();
    }
    
    if ("SendigDatasetVariableRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetVariableRefVersion>>(){}.getType();
    }
    
    if ("SendigDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetVariables>>(){}.getType();
    }
    
    if ("SendigDatasetVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetVariablesLinks>>(){}.getType();
    }
    
    if ("SendigDatasetVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetVariablesRef>>(){}.getType();
    }
    
    if ("SendigDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasets>>(){}.getType();
    }
    
    if ("SendigDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetsLinks>>(){}.getType();
    }
    
    if ("SendigDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigDatasetsRef>>(){}.getType();
    }
    
    if ("SendigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigProduct>>(){}.getType();
    }
    
    if ("SendigProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigProductLinks>>(){}.getType();
    }
    
    if ("SendigProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigProductRef>>(){}.getType();
    }
    
    if ("SendigProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendigProductRefElement>>(){}.getType();
    }
    
    if ("XmlAbout".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlAbout>>(){}.getType();
    }
    
    if ("XmlAdamDatastructure".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlAdamDatastructure>>(){}.getType();
    }
    
    if ("XmlAdamDatastructureVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlAdamDatastructureVariables>>(){}.getType();
    }
    
    if ("XmlAdamDatastructureVarsets".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlAdamDatastructureVarsets>>(){}.getType();
    }
    
    if ("XmlAdamProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlAdamProduct>>(){}.getType();
    }
    
    if ("XmlAdamProductDatastructures".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlAdamProductDatastructures>>(){}.getType();
    }
    
    if ("XmlAdamVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlAdamVariable>>(){}.getType();
    }
    
    if ("XmlAdamVarset".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlAdamVarset>>(){}.getType();
    }
    
    if ("XmlCdashClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashClass>>(){}.getType();
    }
    
    if ("XmlCdashClassDomains".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashClassDomains>>(){}.getType();
    }
    
    if ("XmlCdashClassField".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashClassField>>(){}.getType();
    }
    
    if ("XmlCdashDomain".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashDomain>>(){}.getType();
    }
    
    if ("XmlCdashDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashDomainField>>(){}.getType();
    }
    
    if ("XmlCdashDomainFields".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashDomainFields>>(){}.getType();
    }
    
    if ("XmlCdashProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashProduct>>(){}.getType();
    }
    
    if ("XmlCdashProductClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashProductClasses>>(){}.getType();
    }
    
    if ("XmlCdashProductDomains".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashProductDomains>>(){}.getType();
    }
    
    if ("XmlCdashigClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigClass>>(){}.getType();
    }
    
    if ("XmlCdashigClassDomains".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigClassDomains>>(){}.getType();
    }
    
    if ("XmlCdashigClassScenarios".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigClassScenarios>>(){}.getType();
    }
    
    if ("XmlCdashigDomain".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigDomain>>(){}.getType();
    }
    
    if ("XmlCdashigDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigDomainField>>(){}.getType();
    }
    
    if ("XmlCdashigDomainFields".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigDomainFields>>(){}.getType();
    }
    
    if ("XmlCdashigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigProduct>>(){}.getType();
    }
    
    if ("XmlCdashigProductClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigProductClasses>>(){}.getType();
    }
    
    if ("XmlCdashigProductDomains".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigProductDomains>>(){}.getType();
    }
    
    if ("XmlCdashigProductScenarios".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigProductScenarios>>(){}.getType();
    }
    
    if ("XmlCdashigScenario".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigScenario>>(){}.getType();
    }
    
    if ("XmlCdashigScenarioField".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigScenarioField>>(){}.getType();
    }
    
    if ("XmlCdashigScenarioFields".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCdashigScenarioFields>>(){}.getType();
    }
    
    if ("XmlCtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCtCodelist>>(){}.getType();
    }
    
    if ("XmlCtCodelistTerms".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCtCodelistTerms>>(){}.getType();
    }
    
    if ("XmlCtPackage".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCtPackage>>(){}.getType();
    }
    
    if ("XmlCtPackageCodelists".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCtPackageCodelists>>(){}.getType();
    }
    
    if ("XmlCtPackages".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCtPackages>>(){}.getType();
    }
    
    if ("XmlCtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlCtTerm>>(){}.getType();
    }
    
    if ("XmlLastupdated".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlLastupdated>>(){}.getType();
    }
    
    if ("XmlProductgroupDataAnalysis".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlProductgroupDataAnalysis>>(){}.getType();
    }
    
    if ("XmlProductgroupDataCollection".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlProductgroupDataCollection>>(){}.getType();
    }
    
    if ("XmlProductgroupDataTabulation".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlProductgroupDataTabulation>>(){}.getType();
    }
    
    if ("XmlProductgroupTerminology".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlProductgroupTerminology>>(){}.getType();
    }
    
    if ("XmlProducts".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlProducts>>(){}.getType();
    }
    
    if ("XmlQrsItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlQrsItem>>(){}.getType();
    }
    
    if ("XmlQrsItems".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlQrsItems>>(){}.getType();
    }
    
    if ("XmlQrsProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlQrsProduct>>(){}.getType();
    }
    
    if ("XmlQrsResponsegroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlQrsResponsegroup>>(){}.getType();
    }
    
    if ("XmlQrsResponsegroups".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlQrsResponsegroups>>(){}.getType();
    }
    
    if ("XmlRootCdashClassField".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootCdashClassField>>(){}.getType();
    }
    
    if ("XmlRootCdashDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootCdashDomainField>>(){}.getType();
    }
    
    if ("XmlRootCdashigDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootCdashigDomainField>>(){}.getType();
    }
    
    if ("XmlRootCdashigScenarioField".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootCdashigScenarioField>>(){}.getType();
    }
    
    if ("XmlRootCtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootCtCodelist>>(){}.getType();
    }
    
    if ("XmlRootCtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootCtTerm>>(){}.getType();
    }
    
    if ("XmlRootSdtmClassVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootSdtmClassVariable>>(){}.getType();
    }
    
    if ("XmlRootSdtmDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootSdtmDatasetVariable>>(){}.getType();
    }
    
    if ("XmlRootSdtmigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootSdtmigDatasetVariable>>(){}.getType();
    }
    
    if ("XmlRootSendigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlRootSendigDatasetVariable>>(){}.getType();
    }
    
    if ("XmlSdtmClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmClass>>(){}.getType();
    }
    
    if ("XmlSdtmClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmClassDatasets>>(){}.getType();
    }
    
    if ("XmlSdtmClassVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmClassVariable>>(){}.getType();
    }
    
    if ("XmlSdtmClassVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmClassVariables>>(){}.getType();
    }
    
    if ("XmlSdtmClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmClasses>>(){}.getType();
    }
    
    if ("XmlSdtmDataset".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmDataset>>(){}.getType();
    }
    
    if ("XmlSdtmDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmDatasetVariable>>(){}.getType();
    }
    
    if ("XmlSdtmDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmDatasetVariables>>(){}.getType();
    }
    
    if ("XmlSdtmDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmDatasets>>(){}.getType();
    }
    
    if ("XmlSdtmProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmProduct>>(){}.getType();
    }
    
    if ("XmlSdtmigClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmigClass>>(){}.getType();
    }
    
    if ("XmlSdtmigClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmigClassDatasets>>(){}.getType();
    }
    
    if ("XmlSdtmigClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmigClasses>>(){}.getType();
    }
    
    if ("XmlSdtmigDataset".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmigDataset>>(){}.getType();
    }
    
    if ("XmlSdtmigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmigDatasetVariable>>(){}.getType();
    }
    
    if ("XmlSdtmigDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmigDatasetVariables>>(){}.getType();
    }
    
    if ("XmlSdtmigDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmigDatasets>>(){}.getType();
    }
    
    if ("XmlSdtmigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSdtmigProduct>>(){}.getType();
    }
    
    if ("XmlSendigClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSendigClass>>(){}.getType();
    }
    
    if ("XmlSendigClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSendigClassDatasets>>(){}.getType();
    }
    
    if ("XmlSendigClasses".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSendigClasses>>(){}.getType();
    }
    
    if ("XmlSendigDataset".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSendigDataset>>(){}.getType();
    }
    
    if ("XmlSendigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSendigDatasetVariable>>(){}.getType();
    }
    
    if ("XmlSendigDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSendigDatasetVariables>>(){}.getType();
    }
    
    if ("XmlSendigDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSendigDatasets>>(){}.getType();
    }
    
    if ("XmlSendigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<XmlSendigProduct>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("About".equalsIgnoreCase(className)) {
      return new TypeToken<About>(){}.getType();
    }
    
    if ("AboutLinks".equalsIgnoreCase(className)) {
      return new TypeToken<AboutLinks>(){}.getType();
    }
    
    if ("AboutRef".equalsIgnoreCase(className)) {
      return new TypeToken<AboutRef>(){}.getType();
    }
    
    if ("AdamDatastructure".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructure>(){}.getType();
    }
    
    if ("AdamDatastructureLinks".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructureLinks>(){}.getType();
    }
    
    if ("AdamDatastructureRef".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructureRef>(){}.getType();
    }
    
    if ("AdamDatastructureRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructureRefElement>(){}.getType();
    }
    
    if ("AdamDatastructureVariables".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructureVariables>(){}.getType();
    }
    
    if ("AdamDatastructureVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructureVariablesLinks>(){}.getType();
    }
    
    if ("AdamDatastructureVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructureVariablesRef>(){}.getType();
    }
    
    if ("AdamDatastructureVarsets".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructureVarsets>(){}.getType();
    }
    
    if ("AdamDatastructureVarsetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructureVarsetsLinks>(){}.getType();
    }
    
    if ("AdamDatastructureVarsetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<AdamDatastructureVarsetsRef>(){}.getType();
    }
    
    if ("AdamProduct".equalsIgnoreCase(className)) {
      return new TypeToken<AdamProduct>(){}.getType();
    }
    
    if ("AdamProductDatastructures".equalsIgnoreCase(className)) {
      return new TypeToken<AdamProductDatastructures>(){}.getType();
    }
    
    if ("AdamProductDatastructuresLinks".equalsIgnoreCase(className)) {
      return new TypeToken<AdamProductDatastructuresLinks>(){}.getType();
    }
    
    if ("AdamProductDatastructuresRef".equalsIgnoreCase(className)) {
      return new TypeToken<AdamProductDatastructuresRef>(){}.getType();
    }
    
    if ("AdamProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<AdamProductLinks>(){}.getType();
    }
    
    if ("AdamProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<AdamProductRef>(){}.getType();
    }
    
    if ("AdamProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<AdamProductRefElement>(){}.getType();
    }
    
    if ("AdamVariable".equalsIgnoreCase(className)) {
      return new TypeToken<AdamVariable>(){}.getType();
    }
    
    if ("AdamVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<AdamVariableLinks>(){}.getType();
    }
    
    if ("AdamVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<AdamVariableRef>(){}.getType();
    }
    
    if ("AdamVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<AdamVariableRefElement>(){}.getType();
    }
    
    if ("AdamVarset".equalsIgnoreCase(className)) {
      return new TypeToken<AdamVarset>(){}.getType();
    }
    
    if ("AdamVarsetLinks".equalsIgnoreCase(className)) {
      return new TypeToken<AdamVarsetLinks>(){}.getType();
    }
    
    if ("AdamVarsetRef".equalsIgnoreCase(className)) {
      return new TypeToken<AdamVarsetRef>(){}.getType();
    }
    
    if ("AdamVarsetRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<AdamVarsetRefElement>(){}.getType();
    }
    
    if ("CdashClass".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClass>(){}.getType();
    }
    
    if ("CdashClassDomains".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassDomains>(){}.getType();
    }
    
    if ("CdashClassDomainsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassDomainsLinks>(){}.getType();
    }
    
    if ("CdashClassDomainsRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassDomainsRef>(){}.getType();
    }
    
    if ("CdashClassField".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassField>(){}.getType();
    }
    
    if ("CdashClassFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassFieldLinks>(){}.getType();
    }
    
    if ("CdashClassFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassFieldRef>(){}.getType();
    }
    
    if ("CdashClassFieldRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassFieldRefVersion>(){}.getType();
    }
    
    if ("CdashClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassLinks>(){}.getType();
    }
    
    if ("CdashClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassRef>(){}.getType();
    }
    
    if ("CdashClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashClassRefElement>(){}.getType();
    }
    
    if ("CdashDomain".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomain>(){}.getType();
    }
    
    if ("CdashDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainField>(){}.getType();
    }
    
    if ("CdashDomainFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainFieldLinks>(){}.getType();
    }
    
    if ("CdashDomainFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainFieldRef>(){}.getType();
    }
    
    if ("CdashDomainFieldRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainFieldRefElement>(){}.getType();
    }
    
    if ("CdashDomainFieldRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainFieldRefVersion>(){}.getType();
    }
    
    if ("CdashDomainFields".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainFields>(){}.getType();
    }
    
    if ("CdashDomainFieldsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainFieldsLinks>(){}.getType();
    }
    
    if ("CdashDomainFieldsRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainFieldsRef>(){}.getType();
    }
    
    if ("CdashDomainLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainLinks>(){}.getType();
    }
    
    if ("CdashDomainRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainRef>(){}.getType();
    }
    
    if ("CdashDomainRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashDomainRefElement>(){}.getType();
    }
    
    if ("CdashProduct".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProduct>(){}.getType();
    }
    
    if ("CdashProductClasses".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProductClasses>(){}.getType();
    }
    
    if ("CdashProductClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProductClassesLinks>(){}.getType();
    }
    
    if ("CdashProductClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProductClassesRef>(){}.getType();
    }
    
    if ("CdashProductDomains".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProductDomains>(){}.getType();
    }
    
    if ("CdashProductDomainsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProductDomainsLinks>(){}.getType();
    }
    
    if ("CdashProductDomainsRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProductDomainsRef>(){}.getType();
    }
    
    if ("CdashProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProductLinks>(){}.getType();
    }
    
    if ("CdashProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProductRef>(){}.getType();
    }
    
    if ("CdashProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashProductRefElement>(){}.getType();
    }
    
    if ("CdashigClass".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClass>(){}.getType();
    }
    
    if ("CdashigClassDomains".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassDomains>(){}.getType();
    }
    
    if ("CdashigClassDomainsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassDomainsLinks>(){}.getType();
    }
    
    if ("CdashigClassDomainsRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassDomainsRef>(){}.getType();
    }
    
    if ("CdashigClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassLinks>(){}.getType();
    }
    
    if ("CdashigClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassRef>(){}.getType();
    }
    
    if ("CdashigClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassRefElement>(){}.getType();
    }
    
    if ("CdashigClassRefSubclass".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassRefSubclass>(){}.getType();
    }
    
    if ("CdashigClassScenarios".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassScenarios>(){}.getType();
    }
    
    if ("CdashigClassScenariosLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassScenariosLinks>(){}.getType();
    }
    
    if ("CdashigClassScenariosRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigClassScenariosRef>(){}.getType();
    }
    
    if ("CdashigDomain".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomain>(){}.getType();
    }
    
    if ("CdashigDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainField>(){}.getType();
    }
    
    if ("CdashigDomainFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainFieldLinks>(){}.getType();
    }
    
    if ("CdashigDomainFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainFieldRef>(){}.getType();
    }
    
    if ("CdashigDomainFieldRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainFieldRefElement>(){}.getType();
    }
    
    if ("CdashigDomainFieldRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainFieldRefVersion>(){}.getType();
    }
    
    if ("CdashigDomainFields".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainFields>(){}.getType();
    }
    
    if ("CdashigDomainFieldsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainFieldsLinks>(){}.getType();
    }
    
    if ("CdashigDomainFieldsRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainFieldsRef>(){}.getType();
    }
    
    if ("CdashigDomainLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainLinks>(){}.getType();
    }
    
    if ("CdashigDomainRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainRef>(){}.getType();
    }
    
    if ("CdashigDomainRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigDomainRefElement>(){}.getType();
    }
    
    if ("CdashigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProduct>(){}.getType();
    }
    
    if ("CdashigProductClasses".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductClasses>(){}.getType();
    }
    
    if ("CdashigProductClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductClassesLinks>(){}.getType();
    }
    
    if ("CdashigProductClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductClassesRef>(){}.getType();
    }
    
    if ("CdashigProductDomains".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductDomains>(){}.getType();
    }
    
    if ("CdashigProductDomainsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductDomainsLinks>(){}.getType();
    }
    
    if ("CdashigProductDomainsRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductDomainsRef>(){}.getType();
    }
    
    if ("CdashigProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductLinks>(){}.getType();
    }
    
    if ("CdashigProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductRef>(){}.getType();
    }
    
    if ("CdashigProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductRefElement>(){}.getType();
    }
    
    if ("CdashigProductScenarios".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductScenarios>(){}.getType();
    }
    
    if ("CdashigProductScenariosLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductScenariosLinks>(){}.getType();
    }
    
    if ("CdashigProductScenariosRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigProductScenariosRef>(){}.getType();
    }
    
    if ("CdashigScenario".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenario>(){}.getType();
    }
    
    if ("CdashigScenarioField".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioField>(){}.getType();
    }
    
    if ("CdashigScenarioFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioFieldLinks>(){}.getType();
    }
    
    if ("CdashigScenarioFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioFieldRef>(){}.getType();
    }
    
    if ("CdashigScenarioFieldRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioFieldRefElement>(){}.getType();
    }
    
    if ("CdashigScenarioFieldRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioFieldRefVersion>(){}.getType();
    }
    
    if ("CdashigScenarioFields".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioFields>(){}.getType();
    }
    
    if ("CdashigScenarioFieldsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioFieldsLinks>(){}.getType();
    }
    
    if ("CdashigScenarioFieldsRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioFieldsRef>(){}.getType();
    }
    
    if ("CdashigScenarioLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioLinks>(){}.getType();
    }
    
    if ("CdashigScenarioRef".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioRef>(){}.getType();
    }
    
    if ("CdashigScenarioRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CdashigScenarioRefElement>(){}.getType();
    }
    
    if ("CtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<CtCodelist>(){}.getType();
    }
    
    if ("CtCodelistLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CtCodelistLinks>(){}.getType();
    }
    
    if ("CtCodelistRef".equalsIgnoreCase(className)) {
      return new TypeToken<CtCodelistRef>(){}.getType();
    }
    
    if ("CtCodelistRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CtCodelistRefElement>(){}.getType();
    }
    
    if ("CtCodelistRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<CtCodelistRefVersion>(){}.getType();
    }
    
    if ("CtCodelistTerms".equalsIgnoreCase(className)) {
      return new TypeToken<CtCodelistTerms>(){}.getType();
    }
    
    if ("CtCodelistTermsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CtCodelistTermsLinks>(){}.getType();
    }
    
    if ("CtCodelistTermsRef".equalsIgnoreCase(className)) {
      return new TypeToken<CtCodelistTermsRef>(){}.getType();
    }
    
    if ("CtPackage".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackage>(){}.getType();
    }
    
    if ("CtPackageCodelists".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackageCodelists>(){}.getType();
    }
    
    if ("CtPackageCodelistsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackageCodelistsLinks>(){}.getType();
    }
    
    if ("CtPackageCodelistsRef".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackageCodelistsRef>(){}.getType();
    }
    
    if ("CtPackageLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackageLinks>(){}.getType();
    }
    
    if ("CtPackageRef".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackageRef>(){}.getType();
    }
    
    if ("CtPackageRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackageRefElement>(){}.getType();
    }
    
    if ("CtPackageTerm".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackageTerm>(){}.getType();
    }
    
    if ("CtPackages".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackages>(){}.getType();
    }
    
    if ("CtPackagesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackagesLinks>(){}.getType();
    }
    
    if ("CtPackagesRef".equalsIgnoreCase(className)) {
      return new TypeToken<CtPackagesRef>(){}.getType();
    }
    
    if ("CtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<CtTerm>(){}.getType();
    }
    
    if ("CtTermLinks".equalsIgnoreCase(className)) {
      return new TypeToken<CtTermLinks>(){}.getType();
    }
    
    if ("CtTermRef".equalsIgnoreCase(className)) {
      return new TypeToken<CtTermRef>(){}.getType();
    }
    
    if ("CtTermRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<CtTermRefElement>(){}.getType();
    }
    
    if ("CtTermRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<CtTermRefVersion>(){}.getType();
    }
    
    if ("DefaultErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<DefaultErrorResponse>(){}.getType();
    }
    
    if ("DefaultSearchResponse".equalsIgnoreCase(className)) {
      return new TypeToken<DefaultSearchResponse>(){}.getType();
    }
    
    if ("DefaultSearchResponseHitsInner".equalsIgnoreCase(className)) {
      return new TypeToken<DefaultSearchResponseHitsInner>(){}.getType();
    }
    
    if ("DefaultSearchScopes".equalsIgnoreCase(className)) {
      return new TypeToken<DefaultSearchScopes>(){}.getType();
    }
    
    if ("ExportAdamDatastructuresRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportAdamDatastructuresRow>(){}.getType();
    }
    
    if ("ExportAdamDatastructuresTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportAdamDatastructuresTable>(){}.getType();
    }
    
    if ("ExportAdamVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportAdamVariablesRow>(){}.getType();
    }
    
    if ("ExportAdamVariablesTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportAdamVariablesTable>(){}.getType();
    }
    
    if ("ExportAdamWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<ExportAdamWorkbook>(){}.getType();
    }
    
    if ("ExportCdashClassVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportCdashClassVariablesRow>(){}.getType();
    }
    
    if ("ExportCdashDomainVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportCdashDomainVariablesRow>(){}.getType();
    }
    
    if ("ExportCdashTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportCdashTable>(){}.getType();
    }
    
    if ("ExportCdashigDomainVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportCdashigDomainVariablesRow>(){}.getType();
    }
    
    if ("ExportCdashigScenarioVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportCdashigScenarioVariablesRow>(){}.getType();
    }
    
    if ("ExportCdashigTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportCdashigTable>(){}.getType();
    }
    
    if ("ExportCtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<ExportCtCodelist>(){}.getType();
    }
    
    if ("ExportCtTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportCtTable>(){}.getType();
    }
    
    if ("ExportCtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<ExportCtTerm>(){}.getType();
    }
    
    if ("ExportQrsCsvItemsRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportQrsCsvItemsRow>(){}.getType();
    }
    
    if ("ExportQrsGeneral".equalsIgnoreCase(className)) {
      return new TypeToken<ExportQrsGeneral>(){}.getType();
    }
    
    if ("ExportQrsItemsTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportQrsItemsTable>(){}.getType();
    }
    
    if ("ExportQrsResponses".equalsIgnoreCase(className)) {
      return new TypeToken<ExportQrsResponses>(){}.getType();
    }
    
    if ("ExportQrsWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<ExportQrsWorkbook>(){}.getType();
    }
    
    if ("ExportQrsWorkbookItemsRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportQrsWorkbookItemsRow>(){}.getType();
    }
    
    if ("ExportSdtmClassVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmClassVariablesRow>(){}.getType();
    }
    
    if ("ExportSdtmDatasetVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmDatasetVariablesRow>(){}.getType();
    }
    
    if ("ExportSdtmDatasetsRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmDatasetsRow>(){}.getType();
    }
    
    if ("ExportSdtmDatasetsTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmDatasetsTable>(){}.getType();
    }
    
    if ("ExportSdtmVariablesTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmVariablesTable>(){}.getType();
    }
    
    if ("ExportSdtmWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmWorkbook>(){}.getType();
    }
    
    if ("ExportSdtmigDatasetsRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmigDatasetsRow>(){}.getType();
    }
    
    if ("ExportSdtmigDatasetsTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmigDatasetsTable>(){}.getType();
    }
    
    if ("ExportSdtmigVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmigVariablesRow>(){}.getType();
    }
    
    if ("ExportSdtmigVariablesTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmigVariablesTable>(){}.getType();
    }
    
    if ("ExportSdtmigWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSdtmigWorkbook>(){}.getType();
    }
    
    if ("ExportSendigDatasetsRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSendigDatasetsRow>(){}.getType();
    }
    
    if ("ExportSendigDatasetsTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSendigDatasetsTable>(){}.getType();
    }
    
    if ("ExportSendigVariablesRow".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSendigVariablesRow>(){}.getType();
    }
    
    if ("ExportSendigVariablesTable".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSendigVariablesTable>(){}.getType();
    }
    
    if ("ExportSendigWorkbook".equalsIgnoreCase(className)) {
      return new TypeToken<ExportSendigWorkbook>(){}.getType();
    }
    
    if ("Health".equalsIgnoreCase(className)) {
      return new TypeToken<Health>(){}.getType();
    }
    
    if ("Lastupdated".equalsIgnoreCase(className)) {
      return new TypeToken<Lastupdated>(){}.getType();
    }
    
    if ("LastupdatedLinks".equalsIgnoreCase(className)) {
      return new TypeToken<LastupdatedLinks>(){}.getType();
    }
    
    if ("LastupdatedRef".equalsIgnoreCase(className)) {
      return new TypeToken<LastupdatedRef>(){}.getType();
    }
    
    if ("MaintenanceBody".equalsIgnoreCase(className)) {
      return new TypeToken<MaintenanceBody>(){}.getType();
    }
    
    if ("MdrSearchScopesGet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<MdrSearchScopesGet200Response>(){}.getType();
    }
    
    if ("ProductgroupDataAnalysis".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupDataAnalysis>(){}.getType();
    }
    
    if ("ProductgroupDataAnalysisLinks".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupDataAnalysisLinks>(){}.getType();
    }
    
    if ("ProductgroupDataCollection".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupDataCollection>(){}.getType();
    }
    
    if ("ProductgroupDataCollectionLinks".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupDataCollectionLinks>(){}.getType();
    }
    
    if ("ProductgroupDataTabulation".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupDataTabulation>(){}.getType();
    }
    
    if ("ProductgroupDataTabulationLinks".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupDataTabulationLinks>(){}.getType();
    }
    
    if ("ProductgroupQrs".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupQrs>(){}.getType();
    }
    
    if ("ProductgroupQrsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupQrsLinks>(){}.getType();
    }
    
    if ("ProductgroupRef".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupRef>(){}.getType();
    }
    
    if ("ProductgroupTerminology".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupTerminology>(){}.getType();
    }
    
    if ("ProductgroupTerminologyLinks".equalsIgnoreCase(className)) {
      return new TypeToken<ProductgroupTerminologyLinks>(){}.getType();
    }
    
    if ("Products".equalsIgnoreCase(className)) {
      return new TypeToken<Products>(){}.getType();
    }
    
    if ("ProductsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<ProductsLinks>(){}.getType();
    }
    
    if ("ProductsRef".equalsIgnoreCase(className)) {
      return new TypeToken<ProductsRef>(){}.getType();
    }
    
    if ("QrsItem".equalsIgnoreCase(className)) {
      return new TypeToken<QrsItem>(){}.getType();
    }
    
    if ("QrsItemLinks".equalsIgnoreCase(className)) {
      return new TypeToken<QrsItemLinks>(){}.getType();
    }
    
    if ("QrsItemRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<QrsItemRefElement>(){}.getType();
    }
    
    if ("QrsItems".equalsIgnoreCase(className)) {
      return new TypeToken<QrsItems>(){}.getType();
    }
    
    if ("QrsItemsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<QrsItemsLinks>(){}.getType();
    }
    
    if ("QrsItemsRef".equalsIgnoreCase(className)) {
      return new TypeToken<QrsItemsRef>(){}.getType();
    }
    
    if ("QrsProduct".equalsIgnoreCase(className)) {
      return new TypeToken<QrsProduct>(){}.getType();
    }
    
    if ("QrsProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<QrsProductLinks>(){}.getType();
    }
    
    if ("QrsProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<QrsProductRef>(){}.getType();
    }
    
    if ("QrsRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<QrsRefElement>(){}.getType();
    }
    
    if ("QrsResponseLinks".equalsIgnoreCase(className)) {
      return new TypeToken<QrsResponseLinks>(){}.getType();
    }
    
    if ("QrsResponsegroup".equalsIgnoreCase(className)) {
      return new TypeToken<QrsResponsegroup>(){}.getType();
    }
    
    if ("QrsResponsegroupLinks".equalsIgnoreCase(className)) {
      return new TypeToken<QrsResponsegroupLinks>(){}.getType();
    }
    
    if ("QrsResponsegroupRef".equalsIgnoreCase(className)) {
      return new TypeToken<QrsResponsegroupRef>(){}.getType();
    }
    
    if ("QrsResponsegroupRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<QrsResponsegroupRefElement>(){}.getType();
    }
    
    if ("QrsResponsegroups".equalsIgnoreCase(className)) {
      return new TypeToken<QrsResponsegroups>(){}.getType();
    }
    
    if ("QrsResponsegroupsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<QrsResponsegroupsLinks>(){}.getType();
    }
    
    if ("QrsResponsegroupsRef".equalsIgnoreCase(className)) {
      return new TypeToken<QrsResponsegroupsRef>(){}.getType();
    }
    
    if ("QrsResponses".equalsIgnoreCase(className)) {
      return new TypeToken<QrsResponses>(){}.getType();
    }
    
    if ("RootCdashClassField".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashClassField>(){}.getType();
    }
    
    if ("RootCdashClassFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashClassFieldLinks>(){}.getType();
    }
    
    if ("RootCdashClassFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashClassFieldRef>(){}.getType();
    }
    
    if ("RootCdashDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashDomainField>(){}.getType();
    }
    
    if ("RootCdashDomainFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashDomainFieldLinks>(){}.getType();
    }
    
    if ("RootCdashDomainFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashDomainFieldRef>(){}.getType();
    }
    
    if ("RootCdashigDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashigDomainField>(){}.getType();
    }
    
    if ("RootCdashigDomainFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashigDomainFieldLinks>(){}.getType();
    }
    
    if ("RootCdashigDomainFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashigDomainFieldRef>(){}.getType();
    }
    
    if ("RootCdashigScenarioField".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashigScenarioField>(){}.getType();
    }
    
    if ("RootCdashigScenarioFieldLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashigScenarioFieldLinks>(){}.getType();
    }
    
    if ("RootCdashigScenarioFieldRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootCdashigScenarioFieldRef>(){}.getType();
    }
    
    if ("RootCtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<RootCtCodelist>(){}.getType();
    }
    
    if ("RootCtCodelistLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootCtCodelistLinks>(){}.getType();
    }
    
    if ("RootCtCodelistRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootCtCodelistRef>(){}.getType();
    }
    
    if ("RootCtCodelistRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<RootCtCodelistRefElement>(){}.getType();
    }
    
    if ("RootCtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<RootCtTerm>(){}.getType();
    }
    
    if ("RootCtTermLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootCtTermLinks>(){}.getType();
    }
    
    if ("RootCtTermRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootCtTermRef>(){}.getType();
    }
    
    if ("RootSdtmClassVariable".equalsIgnoreCase(className)) {
      return new TypeToken<RootSdtmClassVariable>(){}.getType();
    }
    
    if ("RootSdtmClassVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootSdtmClassVariableLinks>(){}.getType();
    }
    
    if ("RootSdtmClassVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootSdtmClassVariableRef>(){}.getType();
    }
    
    if ("RootSdtmDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<RootSdtmDatasetVariable>(){}.getType();
    }
    
    if ("RootSdtmDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootSdtmDatasetVariableLinks>(){}.getType();
    }
    
    if ("RootSdtmDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootSdtmDatasetVariableRef>(){}.getType();
    }
    
    if ("RootSdtmigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<RootSdtmigDatasetVariable>(){}.getType();
    }
    
    if ("RootSdtmigDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootSdtmigDatasetVariableLinks>(){}.getType();
    }
    
    if ("RootSdtmigDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootSdtmigDatasetVariableRef>(){}.getType();
    }
    
    if ("RootSendigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<RootSendigDatasetVariable>(){}.getType();
    }
    
    if ("RootSendigDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<RootSendigDatasetVariableLinks>(){}.getType();
    }
    
    if ("RootSendigDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<RootSendigDatasetVariableRef>(){}.getType();
    }
    
    if ("ScopeValues".equalsIgnoreCase(className)) {
      return new TypeToken<ScopeValues>(){}.getType();
    }
    
    if ("SdtmClass".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClass>(){}.getType();
    }
    
    if ("SdtmClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassDatasets>(){}.getType();
    }
    
    if ("SdtmClassDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassDatasetsLinks>(){}.getType();
    }
    
    if ("SdtmClassDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassDatasetsRef>(){}.getType();
    }
    
    if ("SdtmClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassLinks>(){}.getType();
    }
    
    if ("SdtmClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassRef>(){}.getType();
    }
    
    if ("SdtmClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassRefElement>(){}.getType();
    }
    
    if ("SdtmClassRefSubclass".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassRefSubclass>(){}.getType();
    }
    
    if ("SdtmClassVariable".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariable>(){}.getType();
    }
    
    if ("SdtmClassVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariableLinks>(){}.getType();
    }
    
    if ("SdtmClassVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariableRef>(){}.getType();
    }
    
    if ("SdtmClassVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariableRefElement>(){}.getType();
    }
    
    if ("SdtmClassVariableRefQualifies".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariableRefQualifies>(){}.getType();
    }
    
    if ("SdtmClassVariableRefTarget".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariableRefTarget>(){}.getType();
    }
    
    if ("SdtmClassVariableRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariableRefVersion>(){}.getType();
    }
    
    if ("SdtmClassVariables".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariables>(){}.getType();
    }
    
    if ("SdtmClassVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariablesLinks>(){}.getType();
    }
    
    if ("SdtmClassVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassVariablesRef>(){}.getType();
    }
    
    if ("SdtmClasses".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClasses>(){}.getType();
    }
    
    if ("SdtmClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassesLinks>(){}.getType();
    }
    
    if ("SdtmClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmClassesRef>(){}.getType();
    }
    
    if ("SdtmDataset".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDataset>(){}.getType();
    }
    
    if ("SdtmDatasetLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetLinks>(){}.getType();
    }
    
    if ("SdtmDatasetRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetRef>(){}.getType();
    }
    
    if ("SdtmDatasetRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetRefElement>(){}.getType();
    }
    
    if ("SdtmDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetVariable>(){}.getType();
    }
    
    if ("SdtmDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetVariableLinks>(){}.getType();
    }
    
    if ("SdtmDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetVariableRef>(){}.getType();
    }
    
    if ("SdtmDatasetVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetVariableRefElement>(){}.getType();
    }
    
    if ("SdtmDatasetVariableRefTarget".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetVariableRefTarget>(){}.getType();
    }
    
    if ("SdtmDatasetVariableRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetVariableRefVersion>(){}.getType();
    }
    
    if ("SdtmDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetVariables>(){}.getType();
    }
    
    if ("SdtmDatasetVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetVariablesLinks>(){}.getType();
    }
    
    if ("SdtmDatasetVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetVariablesRef>(){}.getType();
    }
    
    if ("SdtmDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasets>(){}.getType();
    }
    
    if ("SdtmDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetsLinks>(){}.getType();
    }
    
    if ("SdtmDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmDatasetsRef>(){}.getType();
    }
    
    if ("SdtmProduct".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmProduct>(){}.getType();
    }
    
    if ("SdtmProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmProductLinks>(){}.getType();
    }
    
    if ("SdtmProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmProductRef>(){}.getType();
    }
    
    if ("SdtmProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmProductRefElement>(){}.getType();
    }
    
    if ("SdtmigClass".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClass>(){}.getType();
    }
    
    if ("SdtmigClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClassDatasets>(){}.getType();
    }
    
    if ("SdtmigClassDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClassDatasetsLinks>(){}.getType();
    }
    
    if ("SdtmigClassDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClassDatasetsRef>(){}.getType();
    }
    
    if ("SdtmigClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClassLinks>(){}.getType();
    }
    
    if ("SdtmigClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClassRef>(){}.getType();
    }
    
    if ("SdtmigClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClassRefElement>(){}.getType();
    }
    
    if ("SdtmigClassRefSubclass".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClassRefSubclass>(){}.getType();
    }
    
    if ("SdtmigClasses".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClasses>(){}.getType();
    }
    
    if ("SdtmigClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClassesLinks>(){}.getType();
    }
    
    if ("SdtmigClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigClassesRef>(){}.getType();
    }
    
    if ("SdtmigDataset".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDataset>(){}.getType();
    }
    
    if ("SdtmigDatasetLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetLinks>(){}.getType();
    }
    
    if ("SdtmigDatasetRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetRef>(){}.getType();
    }
    
    if ("SdtmigDatasetRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetRefElement>(){}.getType();
    }
    
    if ("SdtmigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetVariable>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetVariableLinks>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetVariableRef>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetVariableRefElement>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableRefTarget".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetVariableRefTarget>(){}.getType();
    }
    
    if ("SdtmigDatasetVariableRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetVariableRefVersion>(){}.getType();
    }
    
    if ("SdtmigDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetVariables>(){}.getType();
    }
    
    if ("SdtmigDatasetVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetVariablesLinks>(){}.getType();
    }
    
    if ("SdtmigDatasetVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetVariablesRef>(){}.getType();
    }
    
    if ("SdtmigDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasets>(){}.getType();
    }
    
    if ("SdtmigDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetsLinks>(){}.getType();
    }
    
    if ("SdtmigDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigDatasetsRef>(){}.getType();
    }
    
    if ("SdtmigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigProduct>(){}.getType();
    }
    
    if ("SdtmigProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigProductLinks>(){}.getType();
    }
    
    if ("SdtmigProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigProductRef>(){}.getType();
    }
    
    if ("SdtmigProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SdtmigProductRefElement>(){}.getType();
    }
    
    if ("SendigClass".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClass>(){}.getType();
    }
    
    if ("SendigClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClassDatasets>(){}.getType();
    }
    
    if ("SendigClassDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClassDatasetsLinks>(){}.getType();
    }
    
    if ("SendigClassDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClassDatasetsRef>(){}.getType();
    }
    
    if ("SendigClassLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClassLinks>(){}.getType();
    }
    
    if ("SendigClassRef".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClassRef>(){}.getType();
    }
    
    if ("SendigClassRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClassRefElement>(){}.getType();
    }
    
    if ("SendigClassRefSubclass".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClassRefSubclass>(){}.getType();
    }
    
    if ("SendigClasses".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClasses>(){}.getType();
    }
    
    if ("SendigClassesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClassesLinks>(){}.getType();
    }
    
    if ("SendigClassesRef".equalsIgnoreCase(className)) {
      return new TypeToken<SendigClassesRef>(){}.getType();
    }
    
    if ("SendigDataset".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDataset>(){}.getType();
    }
    
    if ("SendigDatasetLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetLinks>(){}.getType();
    }
    
    if ("SendigDatasetRef".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetRef>(){}.getType();
    }
    
    if ("SendigDatasetRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetRefElement>(){}.getType();
    }
    
    if ("SendigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetVariable>(){}.getType();
    }
    
    if ("SendigDatasetVariableLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetVariableLinks>(){}.getType();
    }
    
    if ("SendigDatasetVariableRef".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetVariableRef>(){}.getType();
    }
    
    if ("SendigDatasetVariableRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetVariableRefElement>(){}.getType();
    }
    
    if ("SendigDatasetVariableRefVersion".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetVariableRefVersion>(){}.getType();
    }
    
    if ("SendigDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetVariables>(){}.getType();
    }
    
    if ("SendigDatasetVariablesLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetVariablesLinks>(){}.getType();
    }
    
    if ("SendigDatasetVariablesRef".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetVariablesRef>(){}.getType();
    }
    
    if ("SendigDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasets>(){}.getType();
    }
    
    if ("SendigDatasetsLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetsLinks>(){}.getType();
    }
    
    if ("SendigDatasetsRef".equalsIgnoreCase(className)) {
      return new TypeToken<SendigDatasetsRef>(){}.getType();
    }
    
    if ("SendigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<SendigProduct>(){}.getType();
    }
    
    if ("SendigProductLinks".equalsIgnoreCase(className)) {
      return new TypeToken<SendigProductLinks>(){}.getType();
    }
    
    if ("SendigProductRef".equalsIgnoreCase(className)) {
      return new TypeToken<SendigProductRef>(){}.getType();
    }
    
    if ("SendigProductRefElement".equalsIgnoreCase(className)) {
      return new TypeToken<SendigProductRefElement>(){}.getType();
    }
    
    if ("XmlAbout".equalsIgnoreCase(className)) {
      return new TypeToken<XmlAbout>(){}.getType();
    }
    
    if ("XmlAdamDatastructure".equalsIgnoreCase(className)) {
      return new TypeToken<XmlAdamDatastructure>(){}.getType();
    }
    
    if ("XmlAdamDatastructureVariables".equalsIgnoreCase(className)) {
      return new TypeToken<XmlAdamDatastructureVariables>(){}.getType();
    }
    
    if ("XmlAdamDatastructureVarsets".equalsIgnoreCase(className)) {
      return new TypeToken<XmlAdamDatastructureVarsets>(){}.getType();
    }
    
    if ("XmlAdamProduct".equalsIgnoreCase(className)) {
      return new TypeToken<XmlAdamProduct>(){}.getType();
    }
    
    if ("XmlAdamProductDatastructures".equalsIgnoreCase(className)) {
      return new TypeToken<XmlAdamProductDatastructures>(){}.getType();
    }
    
    if ("XmlAdamVariable".equalsIgnoreCase(className)) {
      return new TypeToken<XmlAdamVariable>(){}.getType();
    }
    
    if ("XmlAdamVarset".equalsIgnoreCase(className)) {
      return new TypeToken<XmlAdamVarset>(){}.getType();
    }
    
    if ("XmlCdashClass".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashClass>(){}.getType();
    }
    
    if ("XmlCdashClassDomains".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashClassDomains>(){}.getType();
    }
    
    if ("XmlCdashClassField".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashClassField>(){}.getType();
    }
    
    if ("XmlCdashDomain".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashDomain>(){}.getType();
    }
    
    if ("XmlCdashDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashDomainField>(){}.getType();
    }
    
    if ("XmlCdashDomainFields".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashDomainFields>(){}.getType();
    }
    
    if ("XmlCdashProduct".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashProduct>(){}.getType();
    }
    
    if ("XmlCdashProductClasses".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashProductClasses>(){}.getType();
    }
    
    if ("XmlCdashProductDomains".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashProductDomains>(){}.getType();
    }
    
    if ("XmlCdashigClass".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigClass>(){}.getType();
    }
    
    if ("XmlCdashigClassDomains".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigClassDomains>(){}.getType();
    }
    
    if ("XmlCdashigClassScenarios".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigClassScenarios>(){}.getType();
    }
    
    if ("XmlCdashigDomain".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigDomain>(){}.getType();
    }
    
    if ("XmlCdashigDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigDomainField>(){}.getType();
    }
    
    if ("XmlCdashigDomainFields".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigDomainFields>(){}.getType();
    }
    
    if ("XmlCdashigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigProduct>(){}.getType();
    }
    
    if ("XmlCdashigProductClasses".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigProductClasses>(){}.getType();
    }
    
    if ("XmlCdashigProductDomains".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigProductDomains>(){}.getType();
    }
    
    if ("XmlCdashigProductScenarios".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigProductScenarios>(){}.getType();
    }
    
    if ("XmlCdashigScenario".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigScenario>(){}.getType();
    }
    
    if ("XmlCdashigScenarioField".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigScenarioField>(){}.getType();
    }
    
    if ("XmlCdashigScenarioFields".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCdashigScenarioFields>(){}.getType();
    }
    
    if ("XmlCtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCtCodelist>(){}.getType();
    }
    
    if ("XmlCtCodelistTerms".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCtCodelistTerms>(){}.getType();
    }
    
    if ("XmlCtPackage".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCtPackage>(){}.getType();
    }
    
    if ("XmlCtPackageCodelists".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCtPackageCodelists>(){}.getType();
    }
    
    if ("XmlCtPackages".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCtPackages>(){}.getType();
    }
    
    if ("XmlCtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<XmlCtTerm>(){}.getType();
    }
    
    if ("XmlLastupdated".equalsIgnoreCase(className)) {
      return new TypeToken<XmlLastupdated>(){}.getType();
    }
    
    if ("XmlProductgroupDataAnalysis".equalsIgnoreCase(className)) {
      return new TypeToken<XmlProductgroupDataAnalysis>(){}.getType();
    }
    
    if ("XmlProductgroupDataCollection".equalsIgnoreCase(className)) {
      return new TypeToken<XmlProductgroupDataCollection>(){}.getType();
    }
    
    if ("XmlProductgroupDataTabulation".equalsIgnoreCase(className)) {
      return new TypeToken<XmlProductgroupDataTabulation>(){}.getType();
    }
    
    if ("XmlProductgroupTerminology".equalsIgnoreCase(className)) {
      return new TypeToken<XmlProductgroupTerminology>(){}.getType();
    }
    
    if ("XmlProducts".equalsIgnoreCase(className)) {
      return new TypeToken<XmlProducts>(){}.getType();
    }
    
    if ("XmlQrsItem".equalsIgnoreCase(className)) {
      return new TypeToken<XmlQrsItem>(){}.getType();
    }
    
    if ("XmlQrsItems".equalsIgnoreCase(className)) {
      return new TypeToken<XmlQrsItems>(){}.getType();
    }
    
    if ("XmlQrsProduct".equalsIgnoreCase(className)) {
      return new TypeToken<XmlQrsProduct>(){}.getType();
    }
    
    if ("XmlQrsResponsegroup".equalsIgnoreCase(className)) {
      return new TypeToken<XmlQrsResponsegroup>(){}.getType();
    }
    
    if ("XmlQrsResponsegroups".equalsIgnoreCase(className)) {
      return new TypeToken<XmlQrsResponsegroups>(){}.getType();
    }
    
    if ("XmlRootCdashClassField".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootCdashClassField>(){}.getType();
    }
    
    if ("XmlRootCdashDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootCdashDomainField>(){}.getType();
    }
    
    if ("XmlRootCdashigDomainField".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootCdashigDomainField>(){}.getType();
    }
    
    if ("XmlRootCdashigScenarioField".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootCdashigScenarioField>(){}.getType();
    }
    
    if ("XmlRootCtCodelist".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootCtCodelist>(){}.getType();
    }
    
    if ("XmlRootCtTerm".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootCtTerm>(){}.getType();
    }
    
    if ("XmlRootSdtmClassVariable".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootSdtmClassVariable>(){}.getType();
    }
    
    if ("XmlRootSdtmDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootSdtmDatasetVariable>(){}.getType();
    }
    
    if ("XmlRootSdtmigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootSdtmigDatasetVariable>(){}.getType();
    }
    
    if ("XmlRootSendigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<XmlRootSendigDatasetVariable>(){}.getType();
    }
    
    if ("XmlSdtmClass".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmClass>(){}.getType();
    }
    
    if ("XmlSdtmClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmClassDatasets>(){}.getType();
    }
    
    if ("XmlSdtmClassVariable".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmClassVariable>(){}.getType();
    }
    
    if ("XmlSdtmClassVariables".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmClassVariables>(){}.getType();
    }
    
    if ("XmlSdtmClasses".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmClasses>(){}.getType();
    }
    
    if ("XmlSdtmDataset".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmDataset>(){}.getType();
    }
    
    if ("XmlSdtmDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmDatasetVariable>(){}.getType();
    }
    
    if ("XmlSdtmDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmDatasetVariables>(){}.getType();
    }
    
    if ("XmlSdtmDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmDatasets>(){}.getType();
    }
    
    if ("XmlSdtmProduct".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmProduct>(){}.getType();
    }
    
    if ("XmlSdtmigClass".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmigClass>(){}.getType();
    }
    
    if ("XmlSdtmigClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmigClassDatasets>(){}.getType();
    }
    
    if ("XmlSdtmigClasses".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmigClasses>(){}.getType();
    }
    
    if ("XmlSdtmigDataset".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmigDataset>(){}.getType();
    }
    
    if ("XmlSdtmigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmigDatasetVariable>(){}.getType();
    }
    
    if ("XmlSdtmigDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmigDatasetVariables>(){}.getType();
    }
    
    if ("XmlSdtmigDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmigDatasets>(){}.getType();
    }
    
    if ("XmlSdtmigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSdtmigProduct>(){}.getType();
    }
    
    if ("XmlSendigClass".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSendigClass>(){}.getType();
    }
    
    if ("XmlSendigClassDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSendigClassDatasets>(){}.getType();
    }
    
    if ("XmlSendigClasses".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSendigClasses>(){}.getType();
    }
    
    if ("XmlSendigDataset".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSendigDataset>(){}.getType();
    }
    
    if ("XmlSendigDatasetVariable".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSendigDatasetVariable>(){}.getType();
    }
    
    if ("XmlSendigDatasetVariables".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSendigDatasetVariables>(){}.getType();
    }
    
    if ("XmlSendigDatasets".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSendigDatasets>(){}.getType();
    }
    
    if ("XmlSendigProduct".equalsIgnoreCase(className)) {
      return new TypeToken<XmlSendigProduct>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
