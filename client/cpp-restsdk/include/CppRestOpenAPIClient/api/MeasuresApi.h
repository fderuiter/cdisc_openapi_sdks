/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MeasuresApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_MeasuresApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_MeasuresApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/DefaultErrorResponse.h"
#include "CppRestOpenAPIClient/model/ExportQrsItemsTable.h"
#include "CppRestOpenAPIClient/model/ExportQrsWorkbook.h"
#include "CppRestOpenAPIClient/model/QrsItem.h"
#include "CppRestOpenAPIClient/model/QrsItems.h"
#include "CppRestOpenAPIClient/model/QrsProduct.h"
#include "CppRestOpenAPIClient/model/QrsResponsegroup.h"
#include "CppRestOpenAPIClient/model/QrsResponsegroups.h"
#include "CppRestOpenAPIClient/model/XmlQrsItem.h"
#include "CppRestOpenAPIClient/model/XmlQrsItems.h"
#include "CppRestOpenAPIClient/model/XmlQrsProduct.h"
#include "CppRestOpenAPIClient/model/XmlQrsResponsegroup.h"
#include "CppRestOpenAPIClient/model/XmlQrsResponsegroups.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  MeasuresApi 
{
public:

    explicit MeasuresApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~MeasuresApi();

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Get QRS Product
    /// </remarks>
    /// <param name="measure">QRS Measure Identifier</param>
    /// <param name="version">CDISC Library Product Version</param>
    pplx::task<std::shared_ptr<QrsProduct>> mdrQrsMeasureVersionGet(
        utility::string_t measure,
        utility::string_t version
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Get QRS Item List
    /// </remarks>
    /// <param name="measure">QRS Measure Identifier</param>
    /// <param name="version">CDISC Library Product Version</param>
    pplx::task<std::shared_ptr<QrsItems>> mdrQrsMeasureVersionItemsGet(
        utility::string_t measure,
        utility::string_t version
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Get QRS Item
    /// </remarks>
    /// <param name="measure">QRS Measure Identifier</param>
    /// <param name="version">CDISC Library Product Version</param>
    /// <param name="item">QRS Measure Item Identifier</param>
    pplx::task<std::shared_ptr<QrsItem>> mdrQrsMeasureVersionItemsItemGet(
        utility::string_t measure,
        utility::string_t version,
        utility::string_t item
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Get QRS Response Group List
    /// </remarks>
    /// <param name="measure">QRS Measure Identifier</param>
    /// <param name="version">CDISC Library Product Version</param>
    pplx::task<std::shared_ptr<QrsResponsegroups>> mdrQrsMeasureVersionResponsegroupsGet(
        utility::string_t measure,
        utility::string_t version
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Get QRS Response Group
    /// </remarks>
    /// <param name="measure">QRS Measure Identifier</param>
    /// <param name="version">CDISC Library Product Version</param>
    /// <param name="responsegroup">QRS Measure&#39;s Response Group Identifier</param>
    pplx::task<std::shared_ptr<QrsResponsegroup>> mdrQrsMeasureVersionResponsegroupsResponsegroupGet(
        utility::string_t measure,
        utility::string_t version,
        utility::string_t responsegroup
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_MeasuresApi_H_ */

