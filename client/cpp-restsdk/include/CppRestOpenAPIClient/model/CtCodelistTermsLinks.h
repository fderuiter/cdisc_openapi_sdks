/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CtCodelistTermsLinks.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CtCodelistTermsLinks_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CtCodelistTermsLinks_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CtTermRefElement.h"
#include "CppRestOpenAPIClient/model/CtCodelistTermsRef.h"
#include "CppRestOpenAPIClient/model/RootCtCodelistRef.h"
#include "CppRestOpenAPIClient/model/CtPackageRef.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CtCodelistTermsRef;
class CtPackageRef;
class RootCtCodelistRef;
class CtTermRefElement;


class  CtCodelistTermsLinks
    : public ModelBase
{
public:
    CtCodelistTermsLinks();
    virtual ~CtCodelistTermsLinks();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// CtCodelistTermsLinks members


    std::shared_ptr<CtCodelistTermsRef> getSelf() const;
    bool selfIsSet() const;
    void unsetSelf();
    void setSelf(const std::shared_ptr<CtCodelistTermsRef>& value);

    std::shared_ptr<CtPackageRef> getParentPackage() const;
    bool parentPackageIsSet() const;
    void unsetParentPackage();
    void setParentPackage(const std::shared_ptr<CtPackageRef>& value);

    std::shared_ptr<RootCtCodelistRef> getRootItem() const;
    bool rootItemIsSet() const;
    void unsetRootItem();
    void setRootItem(const std::shared_ptr<RootCtCodelistRef>& value);

    std::shared_ptr<CtCodelistTermsRef> getPriorVersion() const;
    bool priorVersionIsSet() const;
    void unsetPriorVersion();
    void setPriorVersion(const std::shared_ptr<CtCodelistTermsRef>& value);

    std::vector<std::shared_ptr<CtTermRefElement>> getTerms() const;
    bool termsIsSet() const;
    void unsetTerms();
    void setTerms(const std::vector<std::shared_ptr<CtTermRefElement>>& value);


protected:
    std::shared_ptr<CtCodelistTermsRef> m_Self;
    bool m_SelfIsSet;

    std::shared_ptr<CtPackageRef> m_ParentPackage;
    bool m_ParentPackageIsSet;

    std::shared_ptr<RootCtCodelistRef> m_RootItem;
    bool m_RootItemIsSet;

    std::shared_ptr<CtCodelistTermsRef> m_PriorVersion;
    bool m_PriorVersionIsSet;

    std::vector<std::shared_ptr<CtTermRefElement>> m_Terms;
    bool m_TermsIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CtCodelistTermsLinks_H_ */
