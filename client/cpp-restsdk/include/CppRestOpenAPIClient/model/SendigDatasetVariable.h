/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SendigDatasetVariable.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SendigDatasetVariable_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SendigDatasetVariable_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/SendigDatasetVariableLinks.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class SendigDatasetVariableLinks;


class  SendigDatasetVariable
    : public ModelBase
{
public:
    SendigDatasetVariable();
    virtual ~SendigDatasetVariable();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// SendigDatasetVariable members


    utility::string_t getOrdinal() const;
    bool ordinalIsSet() const;
    void unsetOrdinal();
    void setOrdinal(const utility::string_t& value);

    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();
    void setName(const utility::string_t& value);

    utility::string_t getLabel() const;
    bool labelIsSet() const;
    void unsetLabel();
    void setLabel(const utility::string_t& value);

    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();
    void setDescription(const utility::string_t& value);

    utility::string_t getRole() const;
    bool roleIsSet() const;
    void unsetRole();
    void setRole(const utility::string_t& value);

    utility::string_t getSimpleDatatype() const;
    bool simpleDatatypeIsSet() const;
    void unsetSimpleDatatype();
    void setSimpleDatatype(const utility::string_t& value);

    utility::string_t getCore() const;
    bool coreIsSet() const;
    void unsetCore();
    void setCore(const utility::string_t& value);

    utility::string_t getDescribedValueDomain() const;
    bool describedValueDomainIsSet() const;
    void unsetDescribedValueDomain();
    void setDescribedValueDomain(const utility::string_t& value);

    std::vector<utility::string_t> getValueList() const;
    bool valueListIsSet() const;
    void unsetValueList();
    void setValueList(const std::vector<utility::string_t>& value);

    std::shared_ptr<SendigDatasetVariableLinks> getLinks() const;
    bool linksIsSet() const;
    void unset_links();
    void setLinks(const std::shared_ptr<SendigDatasetVariableLinks>& value);


protected:
    utility::string_t m_Ordinal;
    bool m_OrdinalIsSet;

    utility::string_t m_Name;
    bool m_NameIsSet;

    utility::string_t m_Label;
    bool m_LabelIsSet;

    utility::string_t m_Description;
    bool m_DescriptionIsSet;

    utility::string_t m_Role;
    bool m_RoleIsSet;

    utility::string_t m_SimpleDatatype;
    bool m_SimpleDatatypeIsSet;

    utility::string_t m_Core;
    bool m_CoreIsSet;

    utility::string_t m_DescribedValueDomain;
    bool m_DescribedValueDomainIsSet;

    std::vector<utility::string_t> m_ValueList;
    bool m_ValueListIsSet;

    std::shared_ptr<SendigDatasetVariableLinks> m__links;
    bool m__linksIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SendigDatasetVariable_H_ */
