/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DefaultSearchScopes.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_DefaultSearchScopes_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_DefaultSearchScopes_H_


#include "CppRestOpenAPIClient/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


class  DefaultSearchScopes
    : public ModelBase
{
public:
    DefaultSearchScopes();
    DefaultSearchScopes(utility::string_t str);
    operator utility::string_t() const {
        return enumToStrMap.at(getValue());
    }


    virtual ~DefaultSearchScopes();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    enum class eDefaultSearchScopes
    {
        CLASS,
        CODELIST,
        CONCEPTID,
        CORE,
        DATASTRUCTURE,
        DATASETSTRUCTURE,
        DEFINITION,
        DESCRIPTION,
        DOMAIN,
        EFFECTIVEDATE,
        EXTENSIBLE,
        HREF,
        LABEL,
        MEASURETYPE,
        NAME,
        PREFERREDTERM,
        PRODUCT,
        PRODUCTGROUP,
        REGISTRATIONSTATUS,
        ROLEDESCRIPTION,
        SDTMTARGET,
        SIMPLEDATATYPE,
        SUBMISSIONVALUE,
        SYNONYMS,
        TYPE,
        UIHREF,
        VALUEDOMAIN,
        VARIABLESET,
        VERSION,
    };

    eDefaultSearchScopes getValue() const;
    void setValue(eDefaultSearchScopes const value);

    protected:
        eDefaultSearchScopes m_value;
        std::map<eDefaultSearchScopes,utility::string_t> enumToStrMap = {
        { eDefaultSearchScopes::CLASS, _XPLATSTR("CLASS") },
        { eDefaultSearchScopes::CODELIST, _XPLATSTR("CODELIST") },
        { eDefaultSearchScopes::CONCEPTID, _XPLATSTR("CONCEPTID") },
        { eDefaultSearchScopes::CORE, _XPLATSTR("CORE") },
        { eDefaultSearchScopes::DATASTRUCTURE, _XPLATSTR("DATASTRUCTURE") },
        { eDefaultSearchScopes::DATASETSTRUCTURE, _XPLATSTR("DATASETSTRUCTURE") },
        { eDefaultSearchScopes::DEFINITION, _XPLATSTR("DEFINITION") },
        { eDefaultSearchScopes::DESCRIPTION, _XPLATSTR("DESCRIPTION") },
        { eDefaultSearchScopes::DOMAIN, _XPLATSTR("DOMAIN") },
        { eDefaultSearchScopes::EFFECTIVEDATE, _XPLATSTR("EFFECTIVEDATE") },
        { eDefaultSearchScopes::EXTENSIBLE, _XPLATSTR("EXTENSIBLE") },
        { eDefaultSearchScopes::HREF, _XPLATSTR("HREF") },
        { eDefaultSearchScopes::LABEL, _XPLATSTR("LABEL") },
        { eDefaultSearchScopes::MEASURETYPE, _XPLATSTR("MEASURETYPE") },
        { eDefaultSearchScopes::NAME, _XPLATSTR("NAME") },
        { eDefaultSearchScopes::PREFERREDTERM, _XPLATSTR("PREFERREDTERM") },
        { eDefaultSearchScopes::PRODUCT, _XPLATSTR("PRODUCT") },
        { eDefaultSearchScopes::PRODUCTGROUP, _XPLATSTR("PRODUCTGROUP") },
        { eDefaultSearchScopes::REGISTRATIONSTATUS, _XPLATSTR("REGISTRATIONSTATUS") },
        { eDefaultSearchScopes::ROLEDESCRIPTION, _XPLATSTR("ROLEDESCRIPTION") },
        { eDefaultSearchScopes::SDTMTARGET, _XPLATSTR("SDTMTARGET") },
        { eDefaultSearchScopes::SIMPLEDATATYPE, _XPLATSTR("SIMPLEDATATYPE") },
        { eDefaultSearchScopes::SUBMISSIONVALUE, _XPLATSTR("SUBMISSIONVALUE") },
        { eDefaultSearchScopes::SYNONYMS, _XPLATSTR("SYNONYMS") },
        { eDefaultSearchScopes::TYPE, _XPLATSTR("TYPE") },
        { eDefaultSearchScopes::UIHREF, _XPLATSTR("UIHREF") },
        { eDefaultSearchScopes::VALUEDOMAIN, _XPLATSTR("VALUEDOMAIN") },
        { eDefaultSearchScopes::VARIABLESET, _XPLATSTR("VARIABLESET") },
        { eDefaultSearchScopes::VERSION, _XPLATSTR("VERSION") }
};
        std::map<utility::string_t,eDefaultSearchScopes> strToEnumMap = {
        { _XPLATSTR("CLASS"), eDefaultSearchScopes::CLASS },
        { _XPLATSTR("CODELIST"), eDefaultSearchScopes::CODELIST },
        { _XPLATSTR("CONCEPTID"), eDefaultSearchScopes::CONCEPTID },
        { _XPLATSTR("CORE"), eDefaultSearchScopes::CORE },
        { _XPLATSTR("DATASTRUCTURE"), eDefaultSearchScopes::DATASTRUCTURE },
        { _XPLATSTR("DATASETSTRUCTURE"), eDefaultSearchScopes::DATASETSTRUCTURE },
        { _XPLATSTR("DEFINITION"), eDefaultSearchScopes::DEFINITION },
        { _XPLATSTR("DESCRIPTION"), eDefaultSearchScopes::DESCRIPTION },
        { _XPLATSTR("DOMAIN"), eDefaultSearchScopes::DOMAIN },
        { _XPLATSTR("EFFECTIVEDATE"), eDefaultSearchScopes::EFFECTIVEDATE },
        { _XPLATSTR("EXTENSIBLE"), eDefaultSearchScopes::EXTENSIBLE },
        { _XPLATSTR("HREF"), eDefaultSearchScopes::HREF },
        { _XPLATSTR("LABEL"), eDefaultSearchScopes::LABEL },
        { _XPLATSTR("MEASURETYPE"), eDefaultSearchScopes::MEASURETYPE },
        { _XPLATSTR("NAME"), eDefaultSearchScopes::NAME },
        { _XPLATSTR("PREFERREDTERM"), eDefaultSearchScopes::PREFERREDTERM },
        { _XPLATSTR("PRODUCT"), eDefaultSearchScopes::PRODUCT },
        { _XPLATSTR("PRODUCTGROUP"), eDefaultSearchScopes::PRODUCTGROUP },
        { _XPLATSTR("REGISTRATIONSTATUS"), eDefaultSearchScopes::REGISTRATIONSTATUS },
        { _XPLATSTR("ROLEDESCRIPTION"), eDefaultSearchScopes::ROLEDESCRIPTION },
        { _XPLATSTR("SDTMTARGET"), eDefaultSearchScopes::SDTMTARGET },
        { _XPLATSTR("SIMPLEDATATYPE"), eDefaultSearchScopes::SIMPLEDATATYPE },
        { _XPLATSTR("SUBMISSIONVALUE"), eDefaultSearchScopes::SUBMISSIONVALUE },
        { _XPLATSTR("SYNONYMS"), eDefaultSearchScopes::SYNONYMS },
        { _XPLATSTR("TYPE"), eDefaultSearchScopes::TYPE },
        { _XPLATSTR("UIHREF"), eDefaultSearchScopes::UIHREF },
        { _XPLATSTR("VALUEDOMAIN"), eDefaultSearchScopes::VALUEDOMAIN },
        { _XPLATSTR("VARIABLESET"), eDefaultSearchScopes::VARIABLESET },
        { _XPLATSTR("VERSION"), eDefaultSearchScopes::VERSION }
};

};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_DefaultSearchScopes_H_ */
