/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CdashigScenarioField.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CdashigScenarioField_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CdashigScenarioField_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CdashigScenarioFieldLinks.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CdashigScenarioFieldLinks;


class  CdashigScenarioField
    : public ModelBase
{
public:
    CdashigScenarioField();
    virtual ~CdashigScenarioField();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// CdashigScenarioField members


    utility::string_t getOrdinal() const;
    bool ordinalIsSet() const;
    void unsetOrdinal();
    void setOrdinal(const utility::string_t& value);

    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();
    void setName(const utility::string_t& value);

    utility::string_t getLabel() const;
    bool labelIsSet() const;
    void unsetLabel();
    void setLabel(const utility::string_t& value);

    utility::string_t getDefinition() const;
    bool definitionIsSet() const;
    void unsetDefinition();
    void setDefinition(const utility::string_t& value);

    utility::string_t getQuestionText() const;
    bool questionTextIsSet() const;
    void unsetQuestionText();
    void setQuestionText(const utility::string_t& value);

    utility::string_t getPrompt() const;
    bool promptIsSet() const;
    void unsetPrompt();
    void setPrompt(const utility::string_t& value);

    utility::string_t getCompletionInstructions() const;
    bool completionInstructionsIsSet() const;
    void unsetCompletionInstructions();
    void setCompletionInstructions(const utility::string_t& value);

    utility::string_t getImplementationNotes() const;
    bool implementationNotesIsSet() const;
    void unsetImplementationNotes();
    void setImplementationNotes(const utility::string_t& value);

    utility::string_t getSimpleDatatype() const;
    bool simpleDatatypeIsSet() const;
    void unsetSimpleDatatype();
    void setSimpleDatatype(const utility::string_t& value);

    utility::string_t getMappingInstructions() const;
    bool mappingInstructionsIsSet() const;
    void unsetMappingInstructions();
    void setMappingInstructions(const utility::string_t& value);

    utility::string_t getCore() const;
    bool coreIsSet() const;
    void unsetCore();
    void setCore(const utility::string_t& value);

    std::shared_ptr<CdashigScenarioFieldLinks> getLinks() const;
    bool linksIsSet() const;
    void unset_links();
    void setLinks(const std::shared_ptr<CdashigScenarioFieldLinks>& value);


protected:
    utility::string_t m_Ordinal;
    bool m_OrdinalIsSet;

    utility::string_t m_Name;
    bool m_NameIsSet;

    utility::string_t m_Label;
    bool m_LabelIsSet;

    utility::string_t m_Definition;
    bool m_DefinitionIsSet;

    utility::string_t m_QuestionText;
    bool m_QuestionTextIsSet;

    utility::string_t m_Prompt;
    bool m_PromptIsSet;

    utility::string_t m_CompletionInstructions;
    bool m_CompletionInstructionsIsSet;

    utility::string_t m_ImplementationNotes;
    bool m_ImplementationNotesIsSet;

    utility::string_t m_SimpleDatatype;
    bool m_SimpleDatatypeIsSet;

    utility::string_t m_MappingInstructions;
    bool m_MappingInstructionsIsSet;

    utility::string_t m_Core;
    bool m_CoreIsSet;

    std::shared_ptr<CdashigScenarioFieldLinks> m__links;
    bool m__linksIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CdashigScenarioField_H_ */
