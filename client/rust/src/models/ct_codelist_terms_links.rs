/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CtCodelistTermsLinks {
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub param_self: Option<Box<models::CtCodelistTermsRef>>,
    #[serde(rename = "parentPackage", skip_serializing_if = "Option::is_none")]
    pub parent_package: Option<Box<models::CtPackageRef>>,
    #[serde(rename = "rootItem", skip_serializing_if = "Option::is_none")]
    pub root_item: Option<Box<models::RootCtCodelistRef>>,
    #[serde(rename = "priorVersion", skip_serializing_if = "Option::is_none")]
    pub prior_version: Option<Box<models::CtCodelistTermsRef>>,
    #[serde(rename = "terms", skip_serializing_if = "Option::is_none")]
    pub terms: Option<Vec<models::CtTermRefElement>>,
}

impl CtCodelistTermsLinks {
    pub fn new() -> CtCodelistTermsLinks {
        CtCodelistTermsLinks {
            param_self: None,
            parent_package: None,
            root_item: None,
            prior_version: None,
            terms: None,
        }
    }
}

