/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportAdamVariablesRow {
    #[serde(rename = "Version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "Data Structure Name", skip_serializing_if = "Option::is_none")]
    pub data_structure_name: Option<String>,
    #[serde(rename = "Dataset Name", skip_serializing_if = "Option::is_none")]
    pub dataset_name: Option<String>,
    #[serde(rename = "Variable Group", skip_serializing_if = "Option::is_none")]
    pub variable_group: Option<String>,
    #[serde(rename = "Variable Name", skip_serializing_if = "Option::is_none")]
    pub variable_name: Option<String>,
    #[serde(rename = "Variable Label", skip_serializing_if = "Option::is_none")]
    pub variable_label: Option<String>,
    #[serde(rename = "Type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "Codelist/Controlled Terms", skip_serializing_if = "Option::is_none")]
    pub codelist_slash_controlled_terms: Option<String>,
    #[serde(rename = "Core", skip_serializing_if = "Option::is_none")]
    pub core: Option<String>,
    #[serde(rename = "CDISC Notes", skip_serializing_if = "Option::is_none")]
    pub cdisc_notes: Option<String>,
}

impl ExportAdamVariablesRow {
    pub fn new() -> ExportAdamVariablesRow {
        ExportAdamVariablesRow {
            version: None,
            data_structure_name: None,
            dataset_name: None,
            variable_group: None,
            variable_name: None,
            variable_label: None,
            r#type: None,
            codelist_slash_controlled_terms: None,
            core: None,
            cdisc_notes: None,
        }
    }
}

