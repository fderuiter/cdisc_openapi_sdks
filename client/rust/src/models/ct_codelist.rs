/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CtCodelist {
    #[serde(rename = "conceptId", skip_serializing_if = "Option::is_none")]
    pub concept_id: Option<String>,
    #[serde(rename = "extensible", skip_serializing_if = "Option::is_none")]
    pub extensible: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "submissionValue", skip_serializing_if = "Option::is_none")]
    pub submission_value: Option<String>,
    #[serde(rename = "definition", skip_serializing_if = "Option::is_none")]
    pub definition: Option<String>,
    #[serde(rename = "preferredTerm", skip_serializing_if = "Option::is_none")]
    pub preferred_term: Option<String>,
    #[serde(rename = "synonyms", skip_serializing_if = "Option::is_none")]
    pub synonyms: Option<Vec<String>>,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::CtCodelistLinks>>,
    #[serde(rename = "terms", skip_serializing_if = "Option::is_none")]
    pub terms: Option<Vec<models::CtPackageTerm>>,
}

impl CtCodelist {
    pub fn new() -> CtCodelist {
        CtCodelist {
            concept_id: None,
            extensible: None,
            name: None,
            submission_value: None,
            definition: None,
            preferred_term: None,
            synonyms: None,
            _links: None,
            terms: None,
        }
    }
}

