/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CdashProductDomainsLinks {
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub param_self: Option<Box<models::CdashProductDomainsRef>>,
    #[serde(rename = "parentProduct", skip_serializing_if = "Option::is_none")]
    pub parent_product: Option<Box<models::CdashProductRef>>,
    #[serde(rename = "domains", skip_serializing_if = "Option::is_none")]
    pub domains: Option<Vec<models::CdashDomainRefElement>>,
}

impl CdashProductDomainsLinks {
    pub fn new() -> CdashProductDomainsLinks {
        CdashProductDomainsLinks {
            param_self: None,
            parent_product: None,
            domains: None,
        }
    }
}

