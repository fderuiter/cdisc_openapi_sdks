/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CdashigDomainFieldsLinks {
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub param_self: Option<Box<models::CdashigDomainFieldsRef>>,
    #[serde(rename = "parentProduct", skip_serializing_if = "Option::is_none")]
    pub parent_product: Option<Box<models::CdashigProductRef>>,
    #[serde(rename = "parentClass", skip_serializing_if = "Option::is_none")]
    pub parent_class: Option<Box<models::CdashigClassRef>>,
    #[serde(rename = "fields", skip_serializing_if = "Option::is_none")]
    pub fields: Option<Vec<models::CdashigDomainFieldRefElement>>,
}

impl CdashigDomainFieldsLinks {
    pub fn new() -> CdashigDomainFieldsLinks {
        CdashigDomainFieldsLinks {
            param_self: None,
            parent_product: None,
            parent_class: None,
            fields: None,
        }
    }
}

