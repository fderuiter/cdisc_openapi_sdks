/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QrsProductLinks {
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub param_self: Option<Box<models::QrsProductRef>>,
    #[serde(rename = "priorVersion", skip_serializing_if = "Option::is_none")]
    pub prior_version: Option<Box<models::QrsProductRef>>,
    #[serde(rename = "qrsTermCAT", skip_serializing_if = "Option::is_none")]
    pub qrs_term_cat: Option<Box<models::RootCtTermRef>>,
    #[serde(rename = "qrsItems", skip_serializing_if = "Option::is_none")]
    pub qrs_items: Option<Box<models::QrsItemsRef>>,
}

impl QrsProductLinks {
    pub fn new() -> QrsProductLinks {
        QrsProductLinks {
            param_self: None,
            prior_version: None,
            qrs_term_cat: None,
            qrs_items: None,
        }
    }
}

