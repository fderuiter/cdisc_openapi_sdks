/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Lastupdated {
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::LastupdatedLinks>>,
    #[serde(rename = "overall", skip_serializing_if = "Option::is_none")]
    pub overall: Option<String>,
    #[serde(rename = "data-analysis", skip_serializing_if = "Option::is_none")]
    pub data_analysis: Option<String>,
    #[serde(rename = "data-collection", skip_serializing_if = "Option::is_none")]
    pub data_collection: Option<String>,
    #[serde(rename = "data-tabulation", skip_serializing_if = "Option::is_none")]
    pub data_tabulation: Option<String>,
    #[serde(rename = "measure", skip_serializing_if = "Option::is_none")]
    pub measure: Option<String>,
    #[serde(rename = "terminology", skip_serializing_if = "Option::is_none")]
    pub terminology: Option<String>,
}

impl Lastupdated {
    pub fn new() -> Lastupdated {
        Lastupdated {
            _links: None,
            overall: None,
            data_analysis: None,
            data_collection: None,
            data_tabulation: None,
            measure: None,
            terminology: None,
        }
    }
}

