/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.SendigDatasetVariable
import org.openapitools.client.models.SendigDatasetVariableLinks

class SendigDatasetVariableTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SendigDatasetVariable
        //val modelInstance = SendigDatasetVariable()

        // to test the property `ordinal`
        should("test ordinal") {
            // uncomment below to test the property
            //modelInstance.ordinal shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `label`
        should("test label") {
            // uncomment below to test the property
            //modelInstance.label shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `role`
        should("test role") {
            // uncomment below to test the property
            //modelInstance.role shouldBe ("TODO")
        }

        // to test the property `simpleDatatype`
        should("test simpleDatatype") {
            // uncomment below to test the property
            //modelInstance.simpleDatatype shouldBe ("TODO")
        }

        // to test the property `core`
        should("test core") {
            // uncomment below to test the property
            //modelInstance.core shouldBe ("TODO")
        }

        // to test the property `describedValueDomain`
        should("test describedValueDomain") {
            // uncomment below to test the property
            //modelInstance.describedValueDomain shouldBe ("TODO")
        }

        // to test the property `valueList`
        should("test valueList") {
            // uncomment below to test the property
            //modelInstance.valueList shouldBe ("TODO")
        }

        // to test the property `links`
        should("test links") {
            // uncomment below to test the property
            //modelInstance.links shouldBe ("TODO")
        }

    }
}
