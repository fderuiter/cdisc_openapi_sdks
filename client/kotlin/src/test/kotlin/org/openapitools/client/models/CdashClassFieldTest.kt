/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.CdashClassField
import org.openapitools.client.models.CdashClassFieldLinks

class CdashClassFieldTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CdashClassField
        //val modelInstance = CdashClassField()

        // to test the property `ordinal`
        should("test ordinal") {
            // uncomment below to test the property
            //modelInstance.ordinal shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `label`
        should("test label") {
            // uncomment below to test the property
            //modelInstance.label shouldBe ("TODO")
        }

        // to test the property `definition`
        should("test definition") {
            // uncomment below to test the property
            //modelInstance.definition shouldBe ("TODO")
        }

        // to test the property `questionText`
        should("test questionText") {
            // uncomment below to test the property
            //modelInstance.questionText shouldBe ("TODO")
        }

        // to test the property `prompt`
        should("test prompt") {
            // uncomment below to test the property
            //modelInstance.prompt shouldBe ("TODO")
        }

        // to test the property `simpleDatatype`
        should("test simpleDatatype") {
            // uncomment below to test the property
            //modelInstance.simpleDatatype shouldBe ("TODO")
        }

        // to test the property `implementationNotes`
        should("test implementationNotes") {
            // uncomment below to test the property
            //modelInstance.implementationNotes shouldBe ("TODO")
        }

        // to test the property `mappingInstructions`
        should("test mappingInstructions") {
            // uncomment below to test the property
            //modelInstance.mappingInstructions shouldBe ("TODO")
        }

        // to test the property `links`
        should("test links") {
            // uncomment below to test the property
            //modelInstance.links shouldBe ("TODO")
        }

    }
}
