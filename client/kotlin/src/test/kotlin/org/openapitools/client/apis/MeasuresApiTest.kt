/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.MeasuresApi
import org.openapitools.client.models.DefaultErrorResponse
import org.openapitools.client.models.ExportQrsItemsTable
import org.openapitools.client.models.ExportQrsWorkbook
import org.openapitools.client.models.QrsItem
import org.openapitools.client.models.QrsItems
import org.openapitools.client.models.QrsProduct
import org.openapitools.client.models.QrsResponsegroup
import org.openapitools.client.models.QrsResponsegroups
import org.openapitools.client.models.XmlQrsItem
import org.openapitools.client.models.XmlQrsItems
import org.openapitools.client.models.XmlQrsProduct
import org.openapitools.client.models.XmlQrsResponsegroup
import org.openapitools.client.models.XmlQrsResponsegroups

class MeasuresApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of MeasuresApi
        //val apiInstance = MeasuresApi()

        // to test mdrQrsMeasureVersionGet
        should("test mdrQrsMeasureVersionGet") {
            // uncomment below to test mdrQrsMeasureVersionGet
            //val measure : kotlin.String = AIMS1 // kotlin.String | QRS Measure Identifier
            //val version : kotlin.String = 1-0 // kotlin.String | CDISC Library Product Version
            //val result : QrsProduct = apiInstance.mdrQrsMeasureVersionGet(measure, version)
            //result shouldBe ("TODO")
        }

        // to test mdrQrsMeasureVersionItemsGet
        should("test mdrQrsMeasureVersionItemsGet") {
            // uncomment below to test mdrQrsMeasureVersionItemsGet
            //val measure : kotlin.String = AIMS1 // kotlin.String | QRS Measure Identifier
            //val version : kotlin.String = 1-0 // kotlin.String | CDISC Library Product Version
            //val result : QrsItems = apiInstance.mdrQrsMeasureVersionItemsGet(measure, version)
            //result shouldBe ("TODO")
        }

        // to test mdrQrsMeasureVersionItemsItemGet
        should("test mdrQrsMeasureVersionItemsItemGet") {
            // uncomment below to test mdrQrsMeasureVersionItemsItemGet
            //val measure : kotlin.String = AIMS1 // kotlin.String | QRS Measure Identifier
            //val version : kotlin.String = 1-0 // kotlin.String | CDISC Library Product Version
            //val item : kotlin.String = AIMS01.001 // kotlin.String | QRS Measure Item Identifier
            //val result : QrsItem = apiInstance.mdrQrsMeasureVersionItemsItemGet(measure, version, item)
            //result shouldBe ("TODO")
        }

        // to test mdrQrsMeasureVersionResponsegroupsGet
        should("test mdrQrsMeasureVersionResponsegroupsGet") {
            // uncomment below to test mdrQrsMeasureVersionResponsegroupsGet
            //val measure : kotlin.String = AIMS1 // kotlin.String | QRS Measure Identifier
            //val version : kotlin.String = 1-0 // kotlin.String | CDISC Library Product Version
            //val result : QrsResponsegroups = apiInstance.mdrQrsMeasureVersionResponsegroupsGet(measure, version)
            //result shouldBe ("TODO")
        }

        // to test mdrQrsMeasureVersionResponsegroupsResponsegroupGet
        should("test mdrQrsMeasureVersionResponsegroupsResponsegroupGet") {
            // uncomment below to test mdrQrsMeasureVersionResponsegroupsResponsegroupGet
            //val measure : kotlin.String = AIMS1 // kotlin.String | QRS Measure Identifier
            //val version : kotlin.String = 1-0 // kotlin.String | CDISC Library Product Version
            //val responsegroup : kotlin.String = AIMS1.11to12 // kotlin.String | QRS Measure's Response Group Identifier
            //val result : QrsResponsegroup = apiInstance.mdrQrsMeasureVersionResponsegroupsResponsegroupGet(measure, version, responsegroup)
            //result shouldBe ("TODO")
        }

    }
}
