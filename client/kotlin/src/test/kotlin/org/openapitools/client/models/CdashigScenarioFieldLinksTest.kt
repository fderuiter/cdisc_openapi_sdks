/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.CdashigScenarioFieldLinks
import org.openapitools.client.models.CdashigDomainRef
import org.openapitools.client.models.CdashigProductRef
import org.openapitools.client.models.CdashigScenarioFieldRef
import org.openapitools.client.models.CdashigScenarioRef
import org.openapitools.client.models.RootCdashigScenarioFieldRef
import org.openapitools.client.models.RootCtCodelistRefElement
import org.openapitools.client.models.SdtmigDatasetVariableRefTarget

class CdashigScenarioFieldLinksTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CdashigScenarioFieldLinks
        //val modelInstance = CdashigScenarioFieldLinks()

        // to test the property `self`
        should("test self") {
            // uncomment below to test the property
            //modelInstance.self shouldBe ("TODO")
        }

        // to test the property `codelist`
        should("test codelist") {
            // uncomment below to test the property
            //modelInstance.codelist shouldBe ("TODO")
        }

        // to test the property `parentProduct`
        should("test parentProduct") {
            // uncomment below to test the property
            //modelInstance.parentProduct shouldBe ("TODO")
        }

        // to test the property `parentDomain`
        should("test parentDomain") {
            // uncomment below to test the property
            //modelInstance.parentDomain shouldBe ("TODO")
        }

        // to test the property `parentScenario`
        should("test parentScenario") {
            // uncomment below to test the property
            //modelInstance.parentScenario shouldBe ("TODO")
        }

        // to test the property `rootItem`
        should("test rootItem") {
            // uncomment below to test the property
            //modelInstance.rootItem shouldBe ("TODO")
        }

        // to test the property `priorVersion`
        should("test priorVersion") {
            // uncomment below to test the property
            //modelInstance.priorVersion shouldBe ("TODO")
        }

        // to test the property `sdtmigDatasetMappingTargets`
        should("test sdtmigDatasetMappingTargets") {
            // uncomment below to test the property
            //modelInstance.sdtmigDatasetMappingTargets shouldBe ("TODO")
        }

    }
}
