# coding: utf-8

"""
    CDISC Library API

    REST API Documentation for CDISC Library in production server

    The version of the OpenAPI document: 1.1.0
    Contact: cdisc_library_support@cdisc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.products_links import ProductsLinks

class TestProductsLinks(unittest.TestCase):
    """ProductsLinks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductsLinks:
        """Test ProductsLinks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductsLinks`
        """
        model = ProductsLinks()
        if include_optional:
            return ProductsLinks(
                var_self = openapi_client.models.products_ref.ProductsRef(
                    href = '/mdr/products', 
                    title = 'CDISC Library Product List', 
                    type = 'CDISC Library Product List', ),
                data_collection = openapi_client.models.productgroup_data_collection.ProductgroupDataCollection(
                    _links = openapi_client.models.productgroup_data_collection_links.ProductgroupDataCollectionLinks(
                        self = openapi_client.models.productgroup_ref.ProductgroupRef(
                            href = '/mdr/products/DataTabulation', 
                            title = 'Product Group Data Tabulation', 
                            type = 'CDISC Library Product Group', ), 
                        cdash = [
                            openapi_client.models.cdash_product_ref_element.CdashProductRefElement(
                                href = '/mdr/cdash/1-1', 
                                title = 'Clinical Data Acquisition Standards Harmonization Model Version 1.1', 
                                type = 'Foundational Model', )
                            ], 
                        cdashig = [
                            openapi_client.models.cdashig_product_ref_element.CdashigProductRefElement(
                                href = '/mdr/cdashig/2-1', 
                                title = 'Clinical Data Acquisition Standards Harmonization Implementation Guide for Human Clinical Trials Version 2.1', 
                                type = 'Implementation Guide', )
                            ], ), ),
                data_tabulation = openapi_client.models.productgroup_data_tabulation.ProductgroupDataTabulation(
                    _links = openapi_client.models.productgroup_data_tabulation_links.ProductgroupDataTabulationLinks(
                        self = openapi_client.models.productgroup_ref.ProductgroupRef(
                            href = '/mdr/products/DataTabulation', 
                            title = 'Product Group Data Tabulation', 
                            type = 'CDISC Library Product Group', ), 
                        sdtm = [
                            openapi_client.models.sdtm_product_ref_element.SdtmProductRefElement(
                                href = '/mdr/sdtm/1-8', 
                                title = 'Study Data Tabulation Model Version 1.8 (Final)', 
                                type = 'Foundational Model', )
                            ], 
                        sdtmig = [
                            openapi_client.models.sdtmig_product_ref_element.SdtmigProductRefElement(
                                href = '/mdr/sdtmig/3-3', 
                                title = 'Study Data Tabulation Model Implementation Guide: Human Clinical Trials Version 3.3 (Final)', 
                                type = 'Implementation Guide', )
                            ], 
                        sendig = [
                            openapi_client.models.sendig_product_ref_element.SendigProductRefElement(
                                href = '/mdr/sendig/3-1', 
                                title = 'Standard for Exchange of Nonclinical Data Implementation Guide: Nonclinical Studies Version 3.1 (Final)', 
                                type = 'Implementation Guide', )
                            ], ), ),
                data_analysis = openapi_client.models.productgroup_data_analysis.ProductgroupDataAnalysis(
                    _links = openapi_client.models.productgroup_data_analysis_links.ProductgroupDataAnalysisLinks(
                        self = openapi_client.models.productgroup_ref.ProductgroupRef(
                            href = '/mdr/products/DataTabulation', 
                            title = 'Product Group Data Tabulation', 
                            type = 'CDISC Library Product Group', ), 
                        adam = [
                            openapi_client.models.adam_product_ref_element.AdamProductRefElement(
                                href = '/mdr/adam/adamig-1-1', 
                                title = 'Analysis Data Model Implementation Guide Version 1.1', 
                                type = 'Implementation Guide', )
                            ], ), ),
                terminology = openapi_client.models.productgroup_terminology.ProductgroupTerminology(
                    _links = openapi_client.models.productgroup_terminology_links.ProductgroupTerminologyLinks(
                        self = openapi_client.models.productgroup_ref.ProductgroupRef(
                            href = '/mdr/products/DataTabulation', 
                            title = 'Product Group Data Tabulation', 
                            type = 'CDISC Library Product Group', ), 
                        packages = [
                            openapi_client.models.ct_package_ref_element.CtPackageRefElement(
                                href = '/mdr/ct/packages/sdtmct-2019-12-20', 
                                title = 'SDTM Controlled Terminology Package 40 Effective 2019-12-20', 
                                type = 'Terminology', )
                            ], ), ),
                measure = openapi_client.models.productgroup_qrs.ProductgroupQrs(
                    _links = openapi_client.models.productgroup_qrs_links.ProductgroupQrsLinks(
                        self = openapi_client.models.productgroup_ref.ProductgroupRef(
                            href = '/mdr/products/DataTabulation', 
                            title = 'Product Group Data Tabulation', 
                            type = 'CDISC Library Product Group', ), 
                        qrs = [
                            openapi_client.models.qrs_ref_element.QrsRefElement(
                                href = '/mdr/qrs/AIMS1/1-0', 
                                title = 'Abnormal Involuntary Movement Scale Version 1.0', 
                                type = 'QRS Measure', )
                            ], ), )
            )
        else:
            return ProductsLinks(
        )
        """

    def testProductsLinks(self):
        """Test ProductsLinks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
