/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICdashDomainField.h
 *
 * 
 */

#ifndef OAICdashDomainField_H
#define OAICdashDomainField_H

#include <QJsonObject>

#include "OAICdashDomainFieldLinks.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICdashDomainFieldLinks;

class OAICdashDomainField : public OAIObject {
public:
    OAICdashDomainField();
    OAICdashDomainField(QString json);
    ~OAICdashDomainField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOrdinal() const;
    void setOrdinal(const QString &ordinal);
    bool is_ordinal_Set() const;
    bool is_ordinal_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getDefinition() const;
    void setDefinition(const QString &definition);
    bool is_definition_Set() const;
    bool is_definition_Valid() const;

    QString getDomainSpecific() const;
    void setDomainSpecific(const QString &domain_specific);
    bool is_domain_specific_Set() const;
    bool is_domain_specific_Valid() const;

    QString getQuestionText() const;
    void setQuestionText(const QString &question_text);
    bool is_question_text_Set() const;
    bool is_question_text_Valid() const;

    QString getPrompt() const;
    void setPrompt(const QString &prompt);
    bool is_prompt_Set() const;
    bool is_prompt_Valid() const;

    QString getSimpleDatatype() const;
    void setSimpleDatatype(const QString &simple_datatype);
    bool is_simple_datatype_Set() const;
    bool is_simple_datatype_Valid() const;

    QString getImplementationNotes() const;
    void setImplementationNotes(const QString &implementation_notes);
    bool is_implementation_notes_Set() const;
    bool is_implementation_notes_Valid() const;

    QString getMappingInstructions() const;
    void setMappingInstructions(const QString &mapping_instructions);
    bool is_mapping_instructions_Set() const;
    bool is_mapping_instructions_Valid() const;

    OAICdashDomainFieldLinks getLinks() const;
    void setLinks(const OAICdashDomainFieldLinks &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ordinal;
    bool m_ordinal_isSet;
    bool m_ordinal_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_definition;
    bool m_definition_isSet;
    bool m_definition_isValid;

    QString m_domain_specific;
    bool m_domain_specific_isSet;
    bool m_domain_specific_isValid;

    QString m_question_text;
    bool m_question_text_isSet;
    bool m_question_text_isValid;

    QString m_prompt;
    bool m_prompt_isSet;
    bool m_prompt_isValid;

    QString m_simple_datatype;
    bool m_simple_datatype_isSet;
    bool m_simple_datatype_isValid;

    QString m_implementation_notes;
    bool m_implementation_notes_isSet;
    bool m_implementation_notes_isValid;

    QString m_mapping_instructions;
    bool m_mapping_instructions_isSet;
    bool m_mapping_instructions_isValid;

    OAICdashDomainFieldLinks m__links;
    bool m__links_isSet;
    bool m__links_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICdashDomainField)

#endif // OAICdashDomainField_H
