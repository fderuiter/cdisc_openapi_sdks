/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param statusCode HTTP Status Code
  * @param reasonPhrase HTTP Reason Phrase
  * @param userMessage User Error Message
  * @param adminMessage Admin Error Message
  */
case class DefaultErrorResponse(
    statusCode: Option[String] = None,
    reasonPhrase: Option[String] = None,
    userMessage: Option[String] = None,
    adminMessage: Option[String] = None
)
  
object DefaultErrorResponse {
  given encoderDefaultErrorResponse: Encoder[DefaultErrorResponse] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.statusCode.map(v => "statusCode" -> v.asJson),
        t.reasonPhrase.map(v => "reasonPhrase" -> v.asJson),
        t.userMessage.map(v => "userMessage" -> v.asJson),
        t.adminMessage.map(v => "adminMessage" -> v.asJson)
      ).flatten
    }
  }
  given decoderDefaultErrorResponse: Decoder[DefaultErrorResponse] = Decoder.instance { c =>
    for {
      statusCode <- c.downField("statusCode").as[Option[String]]
      reasonPhrase <- c.downField("reasonPhrase").as[Option[String]]
      userMessage <- c.downField("userMessage").as[Option[String]]
      adminMessage <- c.downField("adminMessage").as[Option[String]]
    } yield DefaultErrorResponse(
      statusCode = statusCode,
      reasonPhrase = reasonPhrase,
      userMessage = userMessage,
      adminMessage = adminMessage
    )
  }
}

