/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param version 
  * @param `class` 
  * @param datasetName 
  * @param datasetLabel 
  * @param structure 
  */
case class ExportSdtmigDatasetsRow(
    version: Option[String] = None,
    `class`: Option[String] = None,
    datasetName: Option[String] = None,
    datasetLabel: Option[String] = None,
    structure: Option[String] = None
)
  
object ExportSdtmigDatasetsRow {
  given encoderExportSdtmigDatasetsRow: Encoder[ExportSdtmigDatasetsRow] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.version.map(v => "Version" -> v.asJson),
        t.`class`.map(v => "Class" -> v.asJson),
        t.datasetName.map(v => "Dataset Name" -> v.asJson),
        t.datasetLabel.map(v => "Dataset Label" -> v.asJson),
        t.structure.map(v => "Structure" -> v.asJson)
      ).flatten
    }
  }
  given decoderExportSdtmigDatasetsRow: Decoder[ExportSdtmigDatasetsRow] = Decoder.instance { c =>
    for {
      version <- c.downField("Version").as[Option[String]]
      `class` <- c.downField("Class").as[Option[String]]
      datasetName <- c.downField("Dataset Name").as[Option[String]]
      datasetLabel <- c.downField("Dataset Label").as[Option[String]]
      structure <- c.downField("Structure").as[Option[String]]
    } yield ExportSdtmigDatasetsRow(
      version = version,
      `class` = `class`,
      datasetName = datasetName,
      datasetLabel = datasetLabel,
      structure = structure
    )
  }
}

