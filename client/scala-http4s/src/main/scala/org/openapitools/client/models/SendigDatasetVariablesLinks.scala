/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param self 
  * @param modelDataset 
  * @param parentProduct 
  * @param parentClass 
  * @param priorVersion 
  * @param datasetVariables 
  */
case class SendigDatasetVariablesLinks(
    self: Option[SendigDatasetVariablesRef] = None,
    modelDataset: Option[SdtmDatasetRef] = None,
    parentProduct: Option[SendigProductRef] = None,
    parentClass: Option[SendigClassRef] = None,
    priorVersion: Option[SendigDatasetVariablesRef] = None,
    datasetVariables: Option[Seq[SendigDatasetVariableRefElement]] = None
)
  
object SendigDatasetVariablesLinks {
  given encoderSendigDatasetVariablesLinks: Encoder[SendigDatasetVariablesLinks] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.self.map(v => "self" -> v.asJson),
        t.modelDataset.map(v => "modelDataset" -> v.asJson),
        t.parentProduct.map(v => "parentProduct" -> v.asJson),
        t.parentClass.map(v => "parentClass" -> v.asJson),
        t.priorVersion.map(v => "priorVersion" -> v.asJson),
        t.datasetVariables.map(v => "datasetVariables" -> v.asJson)
      ).flatten
    }
  }
  given decoderSendigDatasetVariablesLinks: Decoder[SendigDatasetVariablesLinks] = Decoder.instance { c =>
    for {
      self <- c.downField("self").as[Option[SendigDatasetVariablesRef]]
      modelDataset <- c.downField("modelDataset").as[Option[SdtmDatasetRef]]
      parentProduct <- c.downField("parentProduct").as[Option[SendigProductRef]]
      parentClass <- c.downField("parentClass").as[Option[SendigClassRef]]
      priorVersion <- c.downField("priorVersion").as[Option[SendigDatasetVariablesRef]]
      datasetVariables <- c.downField("datasetVariables").as[Option[Seq[SendigDatasetVariableRefElement]]]
    } yield SendigDatasetVariablesLinks(
      self = self,
      modelDataset = modelDataset,
      parentProduct = parentProduct,
      parentClass = parentClass,
      priorVersion = priorVersion,
      datasetVariables = datasetVariables
    )
  }
}

