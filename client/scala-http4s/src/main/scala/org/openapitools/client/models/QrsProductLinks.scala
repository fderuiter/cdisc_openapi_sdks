/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param self 
  * @param priorVersion 
  * @param qrsTermCAT 
  * @param qrsItems 
  */
case class QrsProductLinks(
    self: Option[QrsProductRef] = None,
    priorVersion: Option[QrsProductRef] = None,
    qrsTermCAT: Option[RootCtTermRef] = None,
    qrsItems: Option[QrsItemsRef] = None
)
  
object QrsProductLinks {
  given encoderQrsProductLinks: Encoder[QrsProductLinks] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.self.map(v => "self" -> v.asJson),
        t.priorVersion.map(v => "priorVersion" -> v.asJson),
        t.qrsTermCAT.map(v => "qrsTermCAT" -> v.asJson),
        t.qrsItems.map(v => "qrsItems" -> v.asJson)
      ).flatten
    }
  }
  given decoderQrsProductLinks: Decoder[QrsProductLinks] = Decoder.instance { c =>
    for {
      self <- c.downField("self").as[Option[QrsProductRef]]
      priorVersion <- c.downField("priorVersion").as[Option[QrsProductRef]]
      qrsTermCAT <- c.downField("qrsTermCAT").as[Option[RootCtTermRef]]
      qrsItems <- c.downField("qrsItems").as[Option[QrsItemsRef]]
    } yield QrsProductLinks(
      self = self,
      priorVersion = priorVersion,
      qrsTermCAT = qrsTermCAT,
      qrsItems = qrsItems
    )
  }
}

