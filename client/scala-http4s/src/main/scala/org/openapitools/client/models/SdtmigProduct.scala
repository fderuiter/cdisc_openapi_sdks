/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param name 
  * @param label 
  * @param description 
  * @param source 
  * @param effectiveDate 
  * @param registrationStatus 
  * @param version 
  * @param links 
  * @param classes 
  */
case class SdtmigProduct(
    name: Option[String] = None,
    label: Option[String] = None,
    description: Option[String] = None,
    source: Option[String] = None,
    effectiveDate: Option[String] = None,
    registrationStatus: Option[String] = None,
    version: Option[String] = None,
    links: Option[SdtmigProductLinks] = None,
    classes: Option[Seq[SdtmigClass]] = None
)
  
object SdtmigProduct {
  given encoderSdtmigProduct: Encoder[SdtmigProduct] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.name.map(v => "name" -> v.asJson),
        t.label.map(v => "label" -> v.asJson),
        t.description.map(v => "description" -> v.asJson),
        t.source.map(v => "source" -> v.asJson),
        t.effectiveDate.map(v => "effectiveDate" -> v.asJson),
        t.registrationStatus.map(v => "registrationStatus" -> v.asJson),
        t.version.map(v => "version" -> v.asJson),
        t.links.map(v => "_links" -> v.asJson),
        t.classes.map(v => "classes" -> v.asJson)
      ).flatten
    }
  }
  given decoderSdtmigProduct: Decoder[SdtmigProduct] = Decoder.instance { c =>
    for {
      name <- c.downField("name").as[Option[String]]
      label <- c.downField("label").as[Option[String]]
      description <- c.downField("description").as[Option[String]]
      source <- c.downField("source").as[Option[String]]
      effectiveDate <- c.downField("effectiveDate").as[Option[String]]
      registrationStatus <- c.downField("registrationStatus").as[Option[String]]
      version <- c.downField("version").as[Option[String]]
      links <- c.downField("_links").as[Option[SdtmigProductLinks]]
      classes <- c.downField("classes").as[Option[Seq[SdtmigClass]]]
    } yield SdtmigProduct(
      name = name,
      label = label,
      description = description,
      source = source,
      effectiveDate = effectiveDate,
      registrationStatus = registrationStatus,
      version = version,
      links = links,
      classes = classes
    )
  }
}

