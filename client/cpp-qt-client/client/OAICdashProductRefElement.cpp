/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICdashProductRefElement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICdashProductRefElement::OAICdashProductRefElement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICdashProductRefElement::OAICdashProductRefElement() {
    this->initializeModel();
}

OAICdashProductRefElement::~OAICdashProductRefElement() {}

void OAICdashProductRefElement::initializeModel() {

    m_href_isSet = false;
    m_href_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICdashProductRefElement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICdashProductRefElement::fromJsonObject(QJsonObject json) {

    m_href_isValid = ::OpenAPI::fromJsonValue(m_href, json[QString("href")]);
    m_href_isSet = !json[QString("href")].isNull() && m_href_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICdashProductRefElement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICdashProductRefElement::asJsonObject() const {
    QJsonObject obj;
    if (m_href_isSet) {
        obj.insert(QString("href"), ::OpenAPI::toJsonValue(m_href));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAICdashProductRefElement::getHref() const {
    return m_href;
}
void OAICdashProductRefElement::setHref(const QString &href) {
    m_href = href;
    m_href_isSet = true;
}

bool OAICdashProductRefElement::is_href_Set() const{
    return m_href_isSet;
}

bool OAICdashProductRefElement::is_href_Valid() const{
    return m_href_isValid;
}

QString OAICdashProductRefElement::getTitle() const {
    return m_title;
}
void OAICdashProductRefElement::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICdashProductRefElement::is_title_Set() const{
    return m_title_isSet;
}

bool OAICdashProductRefElement::is_title_Valid() const{
    return m_title_isValid;
}

QString OAICdashProductRefElement::getType() const {
    return m_type;
}
void OAICdashProductRefElement::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICdashProductRefElement::is_type_Set() const{
    return m_type_isSet;
}

bool OAICdashProductRefElement::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICdashProductRefElement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_href_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICdashProductRefElement::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
