/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQrsResponseLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQrsResponseLinks::OAIQrsResponseLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQrsResponseLinks::OAIQrsResponseLinks() {
    this->initializeModel();
}

OAIQrsResponseLinks::~OAIQrsResponseLinks() {}

void OAIQrsResponseLinks::initializeModel() {

    m_qrs_response_orres_isSet = false;
    m_qrs_response_orres_isValid = false;

    m_qrs_response_orresu_isSet = false;
    m_qrs_response_orresu_isValid = false;

    m_qrs_response_stresc_isSet = false;
    m_qrs_response_stresc_isValid = false;

    m_qrs_response_strescu_isSet = false;
    m_qrs_response_strescu_isValid = false;
}

void OAIQrsResponseLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQrsResponseLinks::fromJsonObject(QJsonObject json) {

    m_qrs_response_orres_isValid = ::OpenAPI::fromJsonValue(m_qrs_response_orres, json[QString("qrsResponseORRES")]);
    m_qrs_response_orres_isSet = !json[QString("qrsResponseORRES")].isNull() && m_qrs_response_orres_isValid;

    m_qrs_response_orresu_isValid = ::OpenAPI::fromJsonValue(m_qrs_response_orresu, json[QString("qrsResponseORRESU")]);
    m_qrs_response_orresu_isSet = !json[QString("qrsResponseORRESU")].isNull() && m_qrs_response_orresu_isValid;

    m_qrs_response_stresc_isValid = ::OpenAPI::fromJsonValue(m_qrs_response_stresc, json[QString("qrsResponseSTRESC")]);
    m_qrs_response_stresc_isSet = !json[QString("qrsResponseSTRESC")].isNull() && m_qrs_response_stresc_isValid;

    m_qrs_response_strescu_isValid = ::OpenAPI::fromJsonValue(m_qrs_response_strescu, json[QString("qrsResponseSTRESCU")]);
    m_qrs_response_strescu_isSet = !json[QString("qrsResponseSTRESCU")].isNull() && m_qrs_response_strescu_isValid;
}

QString OAIQrsResponseLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQrsResponseLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_qrs_response_orres.isSet()) {
        obj.insert(QString("qrsResponseORRES"), ::OpenAPI::toJsonValue(m_qrs_response_orres));
    }
    if (m_qrs_response_orresu.isSet()) {
        obj.insert(QString("qrsResponseORRESU"), ::OpenAPI::toJsonValue(m_qrs_response_orresu));
    }
    if (m_qrs_response_stresc.isSet()) {
        obj.insert(QString("qrsResponseSTRESC"), ::OpenAPI::toJsonValue(m_qrs_response_stresc));
    }
    if (m_qrs_response_strescu.isSet()) {
        obj.insert(QString("qrsResponseSTRESCU"), ::OpenAPI::toJsonValue(m_qrs_response_strescu));
    }
    return obj;
}

OAIRootCtTermRef OAIQrsResponseLinks::getQrsResponseOrres() const {
    return m_qrs_response_orres;
}
void OAIQrsResponseLinks::setQrsResponseOrres(const OAIRootCtTermRef &qrs_response_orres) {
    m_qrs_response_orres = qrs_response_orres;
    m_qrs_response_orres_isSet = true;
}

bool OAIQrsResponseLinks::is_qrs_response_orres_Set() const{
    return m_qrs_response_orres_isSet;
}

bool OAIQrsResponseLinks::is_qrs_response_orres_Valid() const{
    return m_qrs_response_orres_isValid;
}

OAIRootCtTermRef OAIQrsResponseLinks::getQrsResponseOrresu() const {
    return m_qrs_response_orresu;
}
void OAIQrsResponseLinks::setQrsResponseOrresu(const OAIRootCtTermRef &qrs_response_orresu) {
    m_qrs_response_orresu = qrs_response_orresu;
    m_qrs_response_orresu_isSet = true;
}

bool OAIQrsResponseLinks::is_qrs_response_orresu_Set() const{
    return m_qrs_response_orresu_isSet;
}

bool OAIQrsResponseLinks::is_qrs_response_orresu_Valid() const{
    return m_qrs_response_orresu_isValid;
}

OAIRootCtTermRef OAIQrsResponseLinks::getQrsResponseStresc() const {
    return m_qrs_response_stresc;
}
void OAIQrsResponseLinks::setQrsResponseStresc(const OAIRootCtTermRef &qrs_response_stresc) {
    m_qrs_response_stresc = qrs_response_stresc;
    m_qrs_response_stresc_isSet = true;
}

bool OAIQrsResponseLinks::is_qrs_response_stresc_Set() const{
    return m_qrs_response_stresc_isSet;
}

bool OAIQrsResponseLinks::is_qrs_response_stresc_Valid() const{
    return m_qrs_response_stresc_isValid;
}

OAIRootCtTermRef OAIQrsResponseLinks::getQrsResponseStrescu() const {
    return m_qrs_response_strescu;
}
void OAIQrsResponseLinks::setQrsResponseStrescu(const OAIRootCtTermRef &qrs_response_strescu) {
    m_qrs_response_strescu = qrs_response_strescu;
    m_qrs_response_strescu_isSet = true;
}

bool OAIQrsResponseLinks::is_qrs_response_strescu_Set() const{
    return m_qrs_response_strescu_isSet;
}

bool OAIQrsResponseLinks::is_qrs_response_strescu_Valid() const{
    return m_qrs_response_strescu_isValid;
}

bool OAIQrsResponseLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_qrs_response_orres.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_qrs_response_orresu.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_qrs_response_stresc.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_qrs_response_strescu.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQrsResponseLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
