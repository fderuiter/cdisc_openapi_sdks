/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExportCdashigScenarioVariablesRow.h
 *
 * 
 */

#ifndef OAIExportCdashigScenarioVariablesRow_H
#define OAIExportCdashigScenarioVariablesRow_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExportCdashigScenarioVariablesRow : public OAIObject {
public:
    OAIExportCdashigScenarioVariablesRow();
    OAIExportCdashigScenarioVariablesRow(QString json);
    ~OAIExportCdashigScenarioVariablesRow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getRClass() const;
    void setRClass(const QString &r_class);
    bool is_r_class_Set() const;
    bool is_r_class_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getDataCollectionScenario() const;
    void setDataCollectionScenario(const QString &data_collection_scenario);
    bool is_data_collection_scenario_Set() const;
    bool is_data_collection_scenario_Valid() const;

    QString getVariableOrder() const;
    void setVariableOrder(const QString &variable_order);
    bool is_variable_order_Set() const;
    bool is_variable_order_Valid() const;

    QString getCdashigVariable() const;
    void setCdashigVariable(const QString &cdashig_variable);
    bool is_cdashig_variable_Set() const;
    bool is_cdashig_variable_Valid() const;

    QString getCdashigVariableLabel() const;
    void setCdashigVariableLabel(const QString &cdashig_variable_label);
    bool is_cdashig_variable_label_Set() const;
    bool is_cdashig_variable_label_Valid() const;

    QString getDraftCdashigDefinition() const;
    void setDraftCdashigDefinition(const QString &draft_cdashig_definition);
    bool is_draft_cdashig_definition_Set() const;
    bool is_draft_cdashig_definition_Valid() const;

    QString getQuestionText() const;
    void setQuestionText(const QString &question_text);
    bool is_question_text_Set() const;
    bool is_question_text_Valid() const;

    QString getPrompt() const;
    void setPrompt(const QString &prompt);
    bool is_prompt_Set() const;
    bool is_prompt_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getCdashigCore() const;
    void setCdashigCore(const QString &cdashig_core);
    bool is_cdashig_core_Set() const;
    bool is_cdashig_core_Valid() const;

    QString getCaseReportFormCompletionInstructions() const;
    void setCaseReportFormCompletionInstructions(const QString &case_report_form_completion_instructions);
    bool is_case_report_form_completion_instructions_Set() const;
    bool is_case_report_form_completion_instructions_Valid() const;

    QList<QString> getSdtmigTarget() const;
    void setSdtmigTarget(const QList<QString> &sdtmig_target);
    bool is_sdtmig_target_Set() const;
    bool is_sdtmig_target_Valid() const;

    QString getMappingInstructions() const;
    void setMappingInstructions(const QString &mapping_instructions);
    bool is_mapping_instructions_Set() const;
    bool is_mapping_instructions_Valid() const;

    QString getControlledTerminologyCodelistName() const;
    void setControlledTerminologyCodelistName(const QString &controlled_terminology_codelist_name);
    bool is_controlled_terminology_codelist_name_Set() const;
    bool is_controlled_terminology_codelist_name_Valid() const;

    QString getImplementationNotes() const;
    void setImplementationNotes(const QString &implementation_notes);
    bool is_implementation_notes_Set() const;
    bool is_implementation_notes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_r_class;
    bool m_r_class_isSet;
    bool m_r_class_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_data_collection_scenario;
    bool m_data_collection_scenario_isSet;
    bool m_data_collection_scenario_isValid;

    QString m_variable_order;
    bool m_variable_order_isSet;
    bool m_variable_order_isValid;

    QString m_cdashig_variable;
    bool m_cdashig_variable_isSet;
    bool m_cdashig_variable_isValid;

    QString m_cdashig_variable_label;
    bool m_cdashig_variable_label_isSet;
    bool m_cdashig_variable_label_isValid;

    QString m_draft_cdashig_definition;
    bool m_draft_cdashig_definition_isSet;
    bool m_draft_cdashig_definition_isValid;

    QString m_question_text;
    bool m_question_text_isSet;
    bool m_question_text_isValid;

    QString m_prompt;
    bool m_prompt_isSet;
    bool m_prompt_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_cdashig_core;
    bool m_cdashig_core_isSet;
    bool m_cdashig_core_isValid;

    QString m_case_report_form_completion_instructions;
    bool m_case_report_form_completion_instructions_isSet;
    bool m_case_report_form_completion_instructions_isValid;

    QList<QString> m_sdtmig_target;
    bool m_sdtmig_target_isSet;
    bool m_sdtmig_target_isValid;

    QString m_mapping_instructions;
    bool m_mapping_instructions_isSet;
    bool m_mapping_instructions_isValid;

    QString m_controlled_terminology_codelist_name;
    bool m_controlled_terminology_codelist_name_isSet;
    bool m_controlled_terminology_codelist_name_isValid;

    QString m_implementation_notes;
    bool m_implementation_notes_isSet;
    bool m_implementation_notes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExportCdashigScenarioVariablesRow)

#endif // OAIExportCdashigScenarioVariablesRow_H
