/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductgroupDataCollectionLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductgroupDataCollectionLinks::OAIProductgroupDataCollectionLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductgroupDataCollectionLinks::OAIProductgroupDataCollectionLinks() {
    this->initializeModel();
}

OAIProductgroupDataCollectionLinks::~OAIProductgroupDataCollectionLinks() {}

void OAIProductgroupDataCollectionLinks::initializeModel() {

    m_self_isSet = false;
    m_self_isValid = false;

    m_cdash_isSet = false;
    m_cdash_isValid = false;

    m_cdashig_isSet = false;
    m_cdashig_isValid = false;
}

void OAIProductgroupDataCollectionLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductgroupDataCollectionLinks::fromJsonObject(QJsonObject json) {

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m_cdash_isValid = ::OpenAPI::fromJsonValue(m_cdash, json[QString("cdash")]);
    m_cdash_isSet = !json[QString("cdash")].isNull() && m_cdash_isValid;

    m_cdashig_isValid = ::OpenAPI::fromJsonValue(m_cdashig, json[QString("cdashig")]);
    m_cdashig_isSet = !json[QString("cdashig")].isNull() && m_cdashig_isValid;
}

QString OAIProductgroupDataCollectionLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductgroupDataCollectionLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_self.isSet()) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_cdash.size() > 0) {
        obj.insert(QString("cdash"), ::OpenAPI::toJsonValue(m_cdash));
    }
    if (m_cdashig.size() > 0) {
        obj.insert(QString("cdashig"), ::OpenAPI::toJsonValue(m_cdashig));
    }
    return obj;
}

OAIProductgroupRef OAIProductgroupDataCollectionLinks::getSelf() const {
    return m_self;
}
void OAIProductgroupDataCollectionLinks::setSelf(const OAIProductgroupRef &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIProductgroupDataCollectionLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAIProductgroupDataCollectionLinks::is_self_Valid() const{
    return m_self_isValid;
}

QList<OAICdashProductRefElement> OAIProductgroupDataCollectionLinks::getCdash() const {
    return m_cdash;
}
void OAIProductgroupDataCollectionLinks::setCdash(const QList<OAICdashProductRefElement> &cdash) {
    m_cdash = cdash;
    m_cdash_isSet = true;
}

bool OAIProductgroupDataCollectionLinks::is_cdash_Set() const{
    return m_cdash_isSet;
}

bool OAIProductgroupDataCollectionLinks::is_cdash_Valid() const{
    return m_cdash_isValid;
}

QList<OAICdashigProductRefElement> OAIProductgroupDataCollectionLinks::getCdashig() const {
    return m_cdashig;
}
void OAIProductgroupDataCollectionLinks::setCdashig(const QList<OAICdashigProductRefElement> &cdashig) {
    m_cdashig = cdashig;
    m_cdashig_isSet = true;
}

bool OAIProductgroupDataCollectionLinks::is_cdashig_Set() const{
    return m_cdashig_isSet;
}

bool OAIProductgroupDataCollectionLinks::is_cdashig_Valid() const{
    return m_cdashig_isValid;
}

bool OAIProductgroupDataCollectionLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_self.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cdash.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_cdashig.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductgroupDataCollectionLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
