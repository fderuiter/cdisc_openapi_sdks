/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICdashDomainFieldsLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICdashDomainFieldsLinks::OAICdashDomainFieldsLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICdashDomainFieldsLinks::OAICdashDomainFieldsLinks() {
    this->initializeModel();
}

OAICdashDomainFieldsLinks::~OAICdashDomainFieldsLinks() {}

void OAICdashDomainFieldsLinks::initializeModel() {

    m_self_isSet = false;
    m_self_isValid = false;

    m_parent_product_isSet = false;
    m_parent_product_isValid = false;

    m_parent_class_isSet = false;
    m_parent_class_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;
}

void OAICdashDomainFieldsLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICdashDomainFieldsLinks::fromJsonObject(QJsonObject json) {

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m_parent_product_isValid = ::OpenAPI::fromJsonValue(m_parent_product, json[QString("parentProduct")]);
    m_parent_product_isSet = !json[QString("parentProduct")].isNull() && m_parent_product_isValid;

    m_parent_class_isValid = ::OpenAPI::fromJsonValue(m_parent_class, json[QString("parentClass")]);
    m_parent_class_isSet = !json[QString("parentClass")].isNull() && m_parent_class_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;
}

QString OAICdashDomainFieldsLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICdashDomainFieldsLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_self.isSet()) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_parent_product.isSet()) {
        obj.insert(QString("parentProduct"), ::OpenAPI::toJsonValue(m_parent_product));
    }
    if (m_parent_class.isSet()) {
        obj.insert(QString("parentClass"), ::OpenAPI::toJsonValue(m_parent_class));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    return obj;
}

OAICdashDomainFieldsRef OAICdashDomainFieldsLinks::getSelf() const {
    return m_self;
}
void OAICdashDomainFieldsLinks::setSelf(const OAICdashDomainFieldsRef &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAICdashDomainFieldsLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAICdashDomainFieldsLinks::is_self_Valid() const{
    return m_self_isValid;
}

OAICdashProductRef OAICdashDomainFieldsLinks::getParentProduct() const {
    return m_parent_product;
}
void OAICdashDomainFieldsLinks::setParentProduct(const OAICdashProductRef &parent_product) {
    m_parent_product = parent_product;
    m_parent_product_isSet = true;
}

bool OAICdashDomainFieldsLinks::is_parent_product_Set() const{
    return m_parent_product_isSet;
}

bool OAICdashDomainFieldsLinks::is_parent_product_Valid() const{
    return m_parent_product_isValid;
}

OAICdashClassRef OAICdashDomainFieldsLinks::getParentClass() const {
    return m_parent_class;
}
void OAICdashDomainFieldsLinks::setParentClass(const OAICdashClassRef &parent_class) {
    m_parent_class = parent_class;
    m_parent_class_isSet = true;
}

bool OAICdashDomainFieldsLinks::is_parent_class_Set() const{
    return m_parent_class_isSet;
}

bool OAICdashDomainFieldsLinks::is_parent_class_Valid() const{
    return m_parent_class_isValid;
}

QList<OAICdashDomainFieldRefElement> OAICdashDomainFieldsLinks::getFields() const {
    return m_fields;
}
void OAICdashDomainFieldsLinks::setFields(const QList<OAICdashDomainFieldRefElement> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAICdashDomainFieldsLinks::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAICdashDomainFieldsLinks::is_fields_Valid() const{
    return m_fields_isValid;
}

bool OAICdashDomainFieldsLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_self.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_product.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_class.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICdashDomainFieldsLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
