/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMaintenanceBody.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMaintenanceBody::OAIMaintenanceBody(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMaintenanceBody::OAIMaintenanceBody() {
    this->initializeModel();
}

OAIMaintenanceBody::~OAIMaintenanceBody() {}

void OAIMaintenanceBody::initializeModel() {

    m_maintenance_mode_isSet = false;
    m_maintenance_mode_isValid = false;

    m_maintenance_message_isSet = false;
    m_maintenance_message_isValid = false;
}

void OAIMaintenanceBody::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMaintenanceBody::fromJsonObject(QJsonObject json) {

    m_maintenance_mode_isValid = ::OpenAPI::fromJsonValue(m_maintenance_mode, json[QString("maintenanceMode")]);
    m_maintenance_mode_isSet = !json[QString("maintenanceMode")].isNull() && m_maintenance_mode_isValid;

    m_maintenance_message_isValid = ::OpenAPI::fromJsonValue(m_maintenance_message, json[QString("maintenanceMessage")]);
    m_maintenance_message_isSet = !json[QString("maintenanceMessage")].isNull() && m_maintenance_message_isValid;
}

QString OAIMaintenanceBody::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMaintenanceBody::asJsonObject() const {
    QJsonObject obj;
    if (m_maintenance_mode_isSet) {
        obj.insert(QString("maintenanceMode"), ::OpenAPI::toJsonValue(m_maintenance_mode));
    }
    if (m_maintenance_message_isSet) {
        obj.insert(QString("maintenanceMessage"), ::OpenAPI::toJsonValue(m_maintenance_message));
    }
    return obj;
}

bool OAIMaintenanceBody::isMaintenanceMode() const {
    return m_maintenance_mode;
}
void OAIMaintenanceBody::setMaintenanceMode(const bool &maintenance_mode) {
    m_maintenance_mode = maintenance_mode;
    m_maintenance_mode_isSet = true;
}

bool OAIMaintenanceBody::is_maintenance_mode_Set() const{
    return m_maintenance_mode_isSet;
}

bool OAIMaintenanceBody::is_maintenance_mode_Valid() const{
    return m_maintenance_mode_isValid;
}

QString OAIMaintenanceBody::getMaintenanceMessage() const {
    return m_maintenance_message;
}
void OAIMaintenanceBody::setMaintenanceMessage(const QString &maintenance_message) {
    m_maintenance_message = maintenance_message;
    m_maintenance_message_isSet = true;
}

bool OAIMaintenanceBody::is_maintenance_message_Set() const{
    return m_maintenance_message_isSet;
}

bool OAIMaintenanceBody::is_maintenance_message_Valid() const{
    return m_maintenance_message_isValid;
}

bool OAIMaintenanceBody::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_maintenance_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMaintenanceBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
