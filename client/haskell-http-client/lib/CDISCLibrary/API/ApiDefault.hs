{-
   CDISC Library API

   REST API Documentation for CDISC Library in production server

   OpenAPI Version: 3.0.0
   CDISC Library API API version: 1.1.0
   Contact: cdisc_library_support@cdisc.org
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : CDISCLibrary.API.ApiDefault
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module CDISCLibrary.API.ApiDefault where

import CDISCLibrary.Core
import CDISCLibrary.MimeTypes
import CDISCLibrary.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Default

-- *** mdrAboutGet

-- | @GET \/mdr\/about@
-- 
-- Get Information About CDISC Library
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrAboutGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> CDISCLibraryRequest MdrAboutGet MimeNoContent About accept
mdrAboutGet  _ =
  _mkRequest "GET" ["/mdr/about"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrAboutGet  
-- | @application/xml@
instance Produces MdrAboutGet MimeXML
-- | @application/json@
instance Produces MdrAboutGet MimeJSON


-- *** mdrLastupdatedGet

-- | @GET \/mdr\/lastupdated@
-- 
-- Get CDISC Library Last Updated
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrLastupdatedGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> CDISCLibraryRequest MdrLastupdatedGet MimeNoContent Lastupdated accept
mdrLastupdatedGet  _ =
  _mkRequest "GET" ["/mdr/lastupdated"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrLastupdatedGet  
-- | @application/xml@
instance Produces MdrLastupdatedGet MimeXML
-- | @application/json@
instance Produces MdrLastupdatedGet MimeJSON


-- *** mdrProductsDataAnalysisGet

-- | @GET \/mdr\/products\/DataAnalysis@
-- 
-- Get CDISC Library Product Group Data Analysis
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrProductsDataAnalysisGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> CDISCLibraryRequest MdrProductsDataAnalysisGet MimeNoContent ProductgroupDataAnalysis accept
mdrProductsDataAnalysisGet  _ =
  _mkRequest "GET" ["/mdr/products/DataAnalysis"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrProductsDataAnalysisGet  
-- | @application/xml@
instance Produces MdrProductsDataAnalysisGet MimeXML
-- | @application/json@
instance Produces MdrProductsDataAnalysisGet MimeJSON


-- *** mdrProductsDataCollectionGet

-- | @GET \/mdr\/products\/DataCollection@
-- 
-- Get CDISC Library Product Group Data Collection
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrProductsDataCollectionGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> CDISCLibraryRequest MdrProductsDataCollectionGet MimeNoContent ProductgroupDataCollection accept
mdrProductsDataCollectionGet  _ =
  _mkRequest "GET" ["/mdr/products/DataCollection"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrProductsDataCollectionGet  
-- | @application/xml@
instance Produces MdrProductsDataCollectionGet MimeXML
-- | @application/json@
instance Produces MdrProductsDataCollectionGet MimeJSON


-- *** mdrProductsDataTabulationGet

-- | @GET \/mdr\/products\/DataTabulation@
-- 
-- Get CDISC Library Product Group Data Tabulation
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrProductsDataTabulationGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> CDISCLibraryRequest MdrProductsDataTabulationGet MimeNoContent ProductgroupDataTabulation accept
mdrProductsDataTabulationGet  _ =
  _mkRequest "GET" ["/mdr/products/DataTabulation"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrProductsDataTabulationGet  
-- | @application/xml@
instance Produces MdrProductsDataTabulationGet MimeXML
-- | @application/json@
instance Produces MdrProductsDataTabulationGet MimeJSON


-- *** mdrProductsGet

-- | @GET \/mdr\/products@
-- 
-- Get CDISC Library Products
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrProductsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> CDISCLibraryRequest MdrProductsGet MimeNoContent Products accept
mdrProductsGet  _ =
  _mkRequest "GET" ["/mdr/products"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrProductsGet  
-- | @application/xml@
instance Produces MdrProductsGet MimeXML
-- | @application/json@
instance Produces MdrProductsGet MimeJSON


-- *** mdrProductsMeasuresGet

-- | @GET \/mdr\/products\/Measures@
-- 
-- Get CDISC Library Product Group QRS
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrProductsMeasuresGet
  :: CDISCLibraryRequest MdrProductsMeasuresGet MimeNoContent ProductgroupQrs MimeJSON
mdrProductsMeasuresGet =
  _mkRequest "GET" ["/mdr/products/Measures"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrProductsMeasuresGet  
-- | @application/json@
instance Produces MdrProductsMeasuresGet MimeJSON


-- *** mdrProductsTerminologyGet

-- | @GET \/mdr\/products\/Terminology@
-- 
-- Get CDISC Library Product Group Terminology
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrProductsTerminologyGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> CDISCLibraryRequest MdrProductsTerminologyGet MimeNoContent ProductgroupTerminology accept
mdrProductsTerminologyGet  _ =
  _mkRequest "GET" ["/mdr/products/Terminology"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrProductsTerminologyGet  
-- | @application/xml@
instance Produces MdrProductsTerminologyGet MimeXML
-- | @application/json@
instance Produces MdrProductsTerminologyGet MimeJSON

