{-
   CDISC Library API

   REST API Documentation for CDISC Library in production server

   OpenAPI Version: 3.0.0
   CDISC Library API API version: 1.1.0
   Contact: cdisc_library_support@cdisc.org
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : CDISCLibrary.API.Statuses
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module CDISCLibrary.API.Statuses where

import CDISCLibrary.Core
import CDISCLibrary.MimeTypes
import CDISCLibrary.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Statuses

-- *** healthGet

-- | @GET \/health@
-- 
-- Check health of system components
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
healthGet
  :: CDISCLibraryRequest HealthGet MimeNoContent Health MimeJSON
healthGet =
  _mkRequest "GET" ["/health"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data HealthGet  
-- | @application/json@
instance Produces HealthGet MimeJSON


-- *** mdrMaintenanceGet

-- | @GET \/mdr\/maintenance@
-- 
-- Set maintenance mode and message
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrMaintenanceGet
  :: CDISCLibraryRequest MdrMaintenanceGet MimeNoContent MaintenanceBody MimeJSON
mdrMaintenanceGet =
  _mkRequest "GET" ["/mdr/maintenance"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrMaintenanceGet  
-- | @application/json@
instance Produces MdrMaintenanceGet MimeJSON

