{-
   CDISC Library API

   REST API Documentation for CDISC Library in production server

   OpenAPI Version: 3.0.0
   CDISC Library API API version: 1.1.0
   Contact: cdisc_library_support@cdisc.org
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : CDISCLibrary.API.ClinicalDataAcquisitionStandardsHarmonizationCDASH
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module CDISCLibrary.API.ClinicalDataAcquisitionStandardsHarmonizationCDASH where

import CDISCLibrary.Core
import CDISCLibrary.MimeTypes
import CDISCLibrary.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** ClinicalDataAcquisitionStandardsHarmonizationCDASH

-- *** mdrCdashVersionClassesClassDomainsGet

-- | @GET \/mdr\/cdash\/{version}\/classes\/{class}\/domains@
-- 
-- Get CDASH Class Domain List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashVersionClassesClassDomainsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> ParamClass -- ^ "_class" -  CDASH Class Identifier
  -> CDISCLibraryRequest MdrCdashVersionClassesClassDomainsGet MimeNoContent CdashClassDomains accept
mdrCdashVersionClassesClassDomainsGet  _ (Version version) (ParamClass _class) =
  _mkRequest "GET" ["/mdr/cdash/",toPath version,"/classes/",toPath _class,"/domains"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashVersionClassesClassDomainsGet  
-- | @application/xml@
instance Produces MdrCdashVersionClassesClassDomainsGet MimeXML
-- | @application/json@
instance Produces MdrCdashVersionClassesClassDomainsGet MimeJSON


-- *** mdrCdashVersionClassesClassFieldsFieldGet

-- | @GET \/mdr\/cdash\/{version}\/classes\/{class}\/fields\/{field}@
-- 
-- Get CDASH Class Field
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashVersionClassesClassFieldsFieldGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> ParamClass -- ^ "_class" -  CDASH Class Identifier
  -> Field -- ^ "field" -  CDASH Field Identifier
  -> CDISCLibraryRequest MdrCdashVersionClassesClassFieldsFieldGet MimeNoContent CdashClassField accept
mdrCdashVersionClassesClassFieldsFieldGet  _ (Version version) (ParamClass _class) (Field field) =
  _mkRequest "GET" ["/mdr/cdash/",toPath version,"/classes/",toPath _class,"/fields/",toPath field]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashVersionClassesClassFieldsFieldGet  
-- | @application/xml@
instance Produces MdrCdashVersionClassesClassFieldsFieldGet MimeXML
-- | @application/json@
instance Produces MdrCdashVersionClassesClassFieldsFieldGet MimeJSON


-- *** mdrCdashVersionClassesClassGet

-- | @GET \/mdr\/cdash\/{version}\/classes\/{class}@
-- 
-- Get CDASH Class
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashVersionClassesClassGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> ParamClass -- ^ "_class" -  CDASH Class Identifier
  -> CDISCLibraryRequest MdrCdashVersionClassesClassGet MimeNoContent CdashClass accept
mdrCdashVersionClassesClassGet  _ (Version version) (ParamClass _class) =
  _mkRequest "GET" ["/mdr/cdash/",toPath version,"/classes/",toPath _class]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashVersionClassesClassGet  
-- | @application/xml@
instance Produces MdrCdashVersionClassesClassGet MimeXML
-- | @application/json@
instance Produces MdrCdashVersionClassesClassGet MimeJSON


-- *** mdrCdashVersionClassesGet

-- | @GET \/mdr\/cdash\/{version}\/classes@
-- 
-- Get CDASH Class List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashVersionClassesGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrCdashVersionClassesGet MimeNoContent CdashProductClasses accept
mdrCdashVersionClassesGet  _ (Version version) =
  _mkRequest "GET" ["/mdr/cdash/",toPath version,"/classes"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashVersionClassesGet  
-- | @application/xml@
instance Produces MdrCdashVersionClassesGet MimeXML
-- | @application/json@
instance Produces MdrCdashVersionClassesGet MimeJSON


-- *** mdrCdashVersionDomainsDomainFieldsFieldGet

-- | @GET \/mdr\/cdash\/{version}\/domains\/{domain}\/fields\/{field}@
-- 
-- Get CDASH Domain Field
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashVersionDomainsDomainFieldsFieldGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Domain -- ^ "domain" -  CDASH Domain Identifier
  -> Field -- ^ "field" -  CDASH Field Identifier
  -> CDISCLibraryRequest MdrCdashVersionDomainsDomainFieldsFieldGet MimeNoContent CdashDomainField accept
mdrCdashVersionDomainsDomainFieldsFieldGet  _ (Version version) (Domain domain) (Field field) =
  _mkRequest "GET" ["/mdr/cdash/",toPath version,"/domains/",toPath domain,"/fields/",toPath field]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashVersionDomainsDomainFieldsFieldGet  
-- | @application/xml@
instance Produces MdrCdashVersionDomainsDomainFieldsFieldGet MimeXML
-- | @application/json@
instance Produces MdrCdashVersionDomainsDomainFieldsFieldGet MimeJSON


-- *** mdrCdashVersionDomainsDomainFieldsGet

-- | @GET \/mdr\/cdash\/{version}\/domains\/{domain}\/fields@
-- 
-- Get CDASH Domain Field List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashVersionDomainsDomainFieldsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Domain -- ^ "domain" -  CDASH Domain Identifier
  -> CDISCLibraryRequest MdrCdashVersionDomainsDomainFieldsGet MimeNoContent CdashDomainFields accept
mdrCdashVersionDomainsDomainFieldsGet  _ (Version version) (Domain domain) =
  _mkRequest "GET" ["/mdr/cdash/",toPath version,"/domains/",toPath domain,"/fields"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashVersionDomainsDomainFieldsGet  
-- | @application/xml@
instance Produces MdrCdashVersionDomainsDomainFieldsGet MimeXML
-- | @application/json@
instance Produces MdrCdashVersionDomainsDomainFieldsGet MimeJSON


-- *** mdrCdashVersionDomainsDomainGet

-- | @GET \/mdr\/cdash\/{version}\/domains\/{domain}@
-- 
-- Get CDASH Domain
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashVersionDomainsDomainGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Domain -- ^ "domain" -  CDASH Domain Identifier
  -> CDISCLibraryRequest MdrCdashVersionDomainsDomainGet MimeNoContent CdashDomain accept
mdrCdashVersionDomainsDomainGet  _ (Version version) (Domain domain) =
  _mkRequest "GET" ["/mdr/cdash/",toPath version,"/domains/",toPath domain]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashVersionDomainsDomainGet  
-- | @application/xml@
instance Produces MdrCdashVersionDomainsDomainGet MimeXML
-- | @application/json@
instance Produces MdrCdashVersionDomainsDomainGet MimeJSON


-- *** mdrCdashVersionDomainsGet

-- | @GET \/mdr\/cdash\/{version}\/domains@
-- 
-- Get CDASH Domain List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashVersionDomainsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrCdashVersionDomainsGet MimeNoContent CdashProductDomains accept
mdrCdashVersionDomainsGet  _ (Version version) =
  _mkRequest "GET" ["/mdr/cdash/",toPath version,"/domains"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashVersionDomainsGet  
-- | @application/xml@
instance Produces MdrCdashVersionDomainsGet MimeXML
-- | @application/json@
instance Produces MdrCdashVersionDomainsGet MimeJSON


-- *** mdrCdashVersionGet

-- | @GET \/mdr\/cdash\/{version}@
-- 
-- Get CDASH Product
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashVersionGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrCdashVersionGet MimeNoContent CdashProduct accept
mdrCdashVersionGet  _ (Version version) =
  _mkRequest "GET" ["/mdr/cdash/",toPath version]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashVersionGet  
-- | @application/xml@
instance Produces MdrCdashVersionGet MimeXML
-- | @application/json@
instance Produces MdrCdashVersionGet MimeJSON
-- | @application/vnd.openxmlformats-officedocument.spreadsheetml.sheet@
instance Produces MdrCdashVersionGet MimeVndOpenxmlformatsOfficedocumentSpreadsheetmlSheet
-- | @text/csv@
instance Produces MdrCdashVersionGet MimeTextCsv
-- | @application/vnd.ms-excel@
instance Produces MdrCdashVersionGet MimeVndMsExcel


-- *** mdrRootCdashClassesClassFieldsFieldGet

-- | @GET \/mdr\/root\/cdash\/classes\/{class}\/fields\/{field}@
-- 
-- Get Root CDASH Class Field
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrRootCdashClassesClassFieldsFieldGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> ParamClass -- ^ "_class" -  CDASH Class Identifier
  -> Field -- ^ "field" -  CDASH Field Identifier
  -> CDISCLibraryRequest MdrRootCdashClassesClassFieldsFieldGet MimeNoContent RootCdashClassField accept
mdrRootCdashClassesClassFieldsFieldGet  _ (ParamClass _class) (Field field) =
  _mkRequest "GET" ["/mdr/root/cdash/classes/",toPath _class,"/fields/",toPath field]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrRootCdashClassesClassFieldsFieldGet  
-- | @application/xml@
instance Produces MdrRootCdashClassesClassFieldsFieldGet MimeXML
-- | @application/json@
instance Produces MdrRootCdashClassesClassFieldsFieldGet MimeJSON


-- *** mdrRootCdashDomainsDomainFieldsFieldGet

-- | @GET \/mdr\/root\/cdash\/domains\/{domain}\/fields\/{field}@
-- 
-- Get Root CDASH Domain Field
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrRootCdashDomainsDomainFieldsFieldGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Domain -- ^ "domain" -  CDASH Domain Identifier
  -> Field -- ^ "field" -  CDASH Field Identifier
  -> CDISCLibraryRequest MdrRootCdashDomainsDomainFieldsFieldGet MimeNoContent RootCdashDomainField accept
mdrRootCdashDomainsDomainFieldsFieldGet  _ (Domain domain) (Field field) =
  _mkRequest "GET" ["/mdr/root/cdash/domains/",toPath domain,"/fields/",toPath field]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrRootCdashDomainsDomainFieldsFieldGet  
-- | @application/xml@
instance Produces MdrRootCdashDomainsDomainFieldsFieldGet MimeXML
-- | @application/json@
instance Produces MdrRootCdashDomainsDomainFieldsFieldGet MimeJSON

