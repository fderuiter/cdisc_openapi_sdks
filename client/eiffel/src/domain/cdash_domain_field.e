note
 description:"[
		CDISC Library API
 		REST API Documentation for CDISC Library in production server
  		The version of the OpenAPI document: 1.1.0
 	    Contact: cdisc_library_support@cdisc.org

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CDASH_DOMAIN_FIELD




feature --Access

    ordinal: detachable STRING_32
      
    name: detachable STRING_32
      
    label: detachable STRING_32
      
    definition: detachable STRING_32
      
    domain_specific: detachable STRING_32
      
    question_text: detachable STRING_32
      
    prompt: detachable STRING_32
      
    simple_datatype: detachable STRING_32
      
    implementation_notes: detachable STRING_32
      
    mapping_instructions: detachable STRING_32
      
    var_links: detachable CDASH_DOMAIN_FIELD_LINKS
      

feature -- Change Element

    set_ordinal (a_name: like ordinal)
        -- Set 'ordinal' with 'a_name'.
      do
        ordinal := a_name
      ensure
        ordinal_set: ordinal = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_label (a_name: like label)
        -- Set 'label' with 'a_name'.
      do
        label := a_name
      ensure
        label_set: label = a_name
      end

    set_definition (a_name: like definition)
        -- Set 'definition' with 'a_name'.
      do
        definition := a_name
      ensure
        definition_set: definition = a_name
      end

    set_domain_specific (a_name: like domain_specific)
        -- Set 'domain_specific' with 'a_name'.
      do
        domain_specific := a_name
      ensure
        domain_specific_set: domain_specific = a_name
      end

    set_question_text (a_name: like question_text)
        -- Set 'question_text' with 'a_name'.
      do
        question_text := a_name
      ensure
        question_text_set: question_text = a_name
      end

    set_prompt (a_name: like prompt)
        -- Set 'prompt' with 'a_name'.
      do
        prompt := a_name
      ensure
        prompt_set: prompt = a_name
      end

    set_simple_datatype (a_name: like simple_datatype)
        -- Set 'simple_datatype' with 'a_name'.
      do
        simple_datatype := a_name
      ensure
        simple_datatype_set: simple_datatype = a_name
      end

    set_implementation_notes (a_name: like implementation_notes)
        -- Set 'implementation_notes' with 'a_name'.
      do
        implementation_notes := a_name
      ensure
        implementation_notes_set: implementation_notes = a_name
      end

    set_mapping_instructions (a_name: like mapping_instructions)
        -- Set 'mapping_instructions' with 'a_name'.
      do
        mapping_instructions := a_name
      ensure
        mapping_instructions_set: mapping_instructions = a_name
      end

    set_var_links (a_name: like var_links)
        -- Set 'var_links' with 'a_name'.
      do
        var_links := a_name
      ensure
        var_links_set: var_links = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CDASH_DOMAIN_FIELD%N")
        if attached ordinal as l_ordinal then
          Result.append ("%Nordinal:")
          Result.append (l_ordinal.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached label as l_label then
          Result.append ("%Nlabel:")
          Result.append (l_label.out)
          Result.append ("%N")
        end
        if attached definition as l_definition then
          Result.append ("%Ndefinition:")
          Result.append (l_definition.out)
          Result.append ("%N")
        end
        if attached domain_specific as l_domain_specific then
          Result.append ("%Ndomain_specific:")
          Result.append (l_domain_specific.out)
          Result.append ("%N")
        end
        if attached question_text as l_question_text then
          Result.append ("%Nquestion_text:")
          Result.append (l_question_text.out)
          Result.append ("%N")
        end
        if attached prompt as l_prompt then
          Result.append ("%Nprompt:")
          Result.append (l_prompt.out)
          Result.append ("%N")
        end
        if attached simple_datatype as l_simple_datatype then
          Result.append ("%Nsimple_datatype:")
          Result.append (l_simple_datatype.out)
          Result.append ("%N")
        end
        if attached implementation_notes as l_implementation_notes then
          Result.append ("%Nimplementation_notes:")
          Result.append (l_implementation_notes.out)
          Result.append ("%N")
        end
        if attached mapping_instructions as l_mapping_instructions then
          Result.append ("%Nmapping_instructions:")
          Result.append (l_mapping_instructions.out)
          Result.append ("%N")
        end
        if attached var_links as l_var_links then
          Result.append ("%Nvar_links:")
          Result.append (l_var_links.out)
          Result.append ("%N")
        end
      end
end

