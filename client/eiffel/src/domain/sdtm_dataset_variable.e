note
 description:"[
		CDISC Library API
 		REST API Documentation for CDISC Library in production server
  		The version of the OpenAPI document: 1.1.0
 	    Contact: cdisc_library_support@cdisc.org

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class SDTM_DATASET_VARIABLE




feature --Access

    ordinal: detachable STRING_32
      
    name: detachable STRING_32
      
    label: detachable STRING_32
      
    description: detachable STRING_32
      
    role: detachable STRING_32
      
    role_description: detachable STRING_32
      
    simple_datatype: detachable STRING_32
      
    described_value_domain: detachable STRING_32
      
    var_links: detachable SDTM_DATASET_VARIABLE_LINKS
      

feature -- Change Element

    set_ordinal (a_name: like ordinal)
        -- Set 'ordinal' with 'a_name'.
      do
        ordinal := a_name
      ensure
        ordinal_set: ordinal = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_label (a_name: like label)
        -- Set 'label' with 'a_name'.
      do
        label := a_name
      ensure
        label_set: label = a_name
      end

    set_description (a_name: like description)
        -- Set 'description' with 'a_name'.
      do
        description := a_name
      ensure
        description_set: description = a_name
      end

    set_role (a_name: like role)
        -- Set 'role' with 'a_name'.
      do
        role := a_name
      ensure
        role_set: role = a_name
      end

    set_role_description (a_name: like role_description)
        -- Set 'role_description' with 'a_name'.
      do
        role_description := a_name
      ensure
        role_description_set: role_description = a_name
      end

    set_simple_datatype (a_name: like simple_datatype)
        -- Set 'simple_datatype' with 'a_name'.
      do
        simple_datatype := a_name
      ensure
        simple_datatype_set: simple_datatype = a_name
      end

    set_described_value_domain (a_name: like described_value_domain)
        -- Set 'described_value_domain' with 'a_name'.
      do
        described_value_domain := a_name
      ensure
        described_value_domain_set: described_value_domain = a_name
      end

    set_var_links (a_name: like var_links)
        -- Set 'var_links' with 'a_name'.
      do
        var_links := a_name
      ensure
        var_links_set: var_links = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass SDTM_DATASET_VARIABLE%N")
        if attached ordinal as l_ordinal then
          Result.append ("%Nordinal:")
          Result.append (l_ordinal.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached label as l_label then
          Result.append ("%Nlabel:")
          Result.append (l_label.out)
          Result.append ("%N")
        end
        if attached description as l_description then
          Result.append ("%Ndescription:")
          Result.append (l_description.out)
          Result.append ("%N")
        end
        if attached role as l_role then
          Result.append ("%Nrole:")
          Result.append (l_role.out)
          Result.append ("%N")
        end
        if attached role_description as l_role_description then
          Result.append ("%Nrole_description:")
          Result.append (l_role_description.out)
          Result.append ("%N")
        end
        if attached simple_datatype as l_simple_datatype then
          Result.append ("%Nsimple_datatype:")
          Result.append (l_simple_datatype.out)
          Result.append ("%N")
        end
        if attached described_value_domain as l_described_value_domain then
          Result.append ("%Ndescribed_value_domain:")
          Result.append (l_described_value_domain.out)
          Result.append ("%N")
        end
        if attached var_links as l_var_links then
          Result.append ("%Nvar_links:")
          Result.append (l_var_links.out)
          Result.append ("%N")
        end
      end
end

