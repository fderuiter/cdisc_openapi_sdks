note
 description:"[
		CDISC Library API
 		REST API Documentation for CDISC Library in production server
  		The version of the OpenAPI document: 1.1.0
 	    Contact: cdisc_library_support@cdisc.org

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class EXPORT_CT_CODELIST




feature --Access

    code: detachable STRING_32
      
    codelist__code: detachable STRING_32
      
    codelist__extensible___yes__no: detachable STRING_32
      
    codelist__name: detachable STRING_32
      
    c_di_sc__submission__value: detachable STRING_32
      
    c_di_sc__synonym_s: detachable LIST [STRING_32]
      
    c_di_sc__definition: detachable STRING_32
      
    n_ci__preferred__term: detachable STRING_32
      
    standard_and__date: detachable STRING_32
      
    : detachable LIST [EXPORT_CT_TERM]
      

feature -- Change Element

    set_code (a_name: like code)
        -- Set 'code' with 'a_name'.
      do
        code := a_name
      ensure
        code_set: code = a_name
      end

    set_codelist__code (a_name: like codelist__code)
        -- Set 'codelist__code' with 'a_name'.
      do
        codelist__code := a_name
      ensure
        codelist__code_set: codelist__code = a_name
      end

    set_codelist__extensible___yes__no (a_name: like codelist__extensible___yes__no)
        -- Set 'codelist__extensible___yes__no' with 'a_name'.
      do
        codelist__extensible___yes__no := a_name
      ensure
        codelist__extensible___yes__no_set: codelist__extensible___yes__no = a_name
      end

    set_codelist__name (a_name: like codelist__name)
        -- Set 'codelist__name' with 'a_name'.
      do
        codelist__name := a_name
      ensure
        codelist__name_set: codelist__name = a_name
      end

    set_c_di_sc__submission__value (a_name: like c_di_sc__submission__value)
        -- Set 'c_di_sc__submission__value' with 'a_name'.
      do
        c_di_sc__submission__value := a_name
      ensure
        c_di_sc__submission__value_set: c_di_sc__submission__value = a_name
      end

    set_c_di_sc__synonym_s (a_name: like c_di_sc__synonym_s)
        -- Set 'c_di_sc__synonym_s' with 'a_name'.
      do
        c_di_sc__synonym_s := a_name
      ensure
        c_di_sc__synonym_s_set: c_di_sc__synonym_s = a_name
      end

    set_c_di_sc__definition (a_name: like c_di_sc__definition)
        -- Set 'c_di_sc__definition' with 'a_name'.
      do
        c_di_sc__definition := a_name
      ensure
        c_di_sc__definition_set: c_di_sc__definition = a_name
      end

    set_n_ci__preferred__term (a_name: like n_ci__preferred__term)
        -- Set 'n_ci__preferred__term' with 'a_name'.
      do
        n_ci__preferred__term := a_name
      ensure
        n_ci__preferred__term_set: n_ci__preferred__term = a_name
      end

    set_standard_and__date (a_name: like standard_and__date)
        -- Set 'standard_and__date' with 'a_name'.
      do
        standard_and__date := a_name
      ensure
        standard_and__date_set: standard_and__date = a_name
      end

    set_ (a_name: like )
        -- Set '' with 'a_name'.
      do
         := a_name
      ensure
        _set:  = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass EXPORT_CT_CODELIST%N")
        if attached code as l_code then
          Result.append ("%Ncode:")
          Result.append (l_code.out)
          Result.append ("%N")
        end
        if attached codelist__code as l_codelist__code then
          Result.append ("%Ncodelist__code:")
          Result.append (l_codelist__code.out)
          Result.append ("%N")
        end
        if attached codelist__extensible___yes__no as l_codelist__extensible___yes__no then
          Result.append ("%Ncodelist__extensible___yes__no:")
          Result.append (l_codelist__extensible___yes__no.out)
          Result.append ("%N")
        end
        if attached codelist__name as l_codelist__name then
          Result.append ("%Ncodelist__name:")
          Result.append (l_codelist__name.out)
          Result.append ("%N")
        end
        if attached c_di_sc__submission__value as l_c_di_sc__submission__value then
          Result.append ("%Nc_di_sc__submission__value:")
          Result.append (l_c_di_sc__submission__value.out)
          Result.append ("%N")
        end
        if attached c_di_sc__synonym_s as l_c_di_sc__synonym_s then
          across l_c_di_sc__synonym_s as ic loop
            Result.append ("%N c_di_sc__synonym_s:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached c_di_sc__definition as l_c_di_sc__definition then
          Result.append ("%Nc_di_sc__definition:")
          Result.append (l_c_di_sc__definition.out)
          Result.append ("%N")
        end
        if attached n_ci__preferred__term as l_n_ci__preferred__term then
          Result.append ("%Nn_ci__preferred__term:")
          Result.append (l_n_ci__preferred__term.out)
          Result.append ("%N")
        end
        if attached standard_and__date as l_standard_and__date then
          Result.append ("%Nstandard_and__date:")
          Result.append (l_standard_and__date.out)
          Result.append ("%N")
        end
        if attached  as l_ then
          across l_ as ic loop
            Result.append ("%N :")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

