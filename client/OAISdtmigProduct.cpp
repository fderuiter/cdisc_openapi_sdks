/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISdtmigProduct.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISdtmigProduct::OAISdtmigProduct(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISdtmigProduct::OAISdtmigProduct() {
    this->initializeModel();
}

OAISdtmigProduct::~OAISdtmigProduct() {}

void OAISdtmigProduct::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_effective_date_isSet = false;
    m_effective_date_isValid = false;

    m_registration_status_isSet = false;
    m_registration_status_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;

    m__links_isSet = false;
    m__links_isValid = false;

    m_classes_isSet = false;
    m_classes_isValid = false;
}

void OAISdtmigProduct::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISdtmigProduct::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_effective_date_isValid = ::OpenAPI::fromJsonValue(m_effective_date, json[QString("effectiveDate")]);
    m_effective_date_isSet = !json[QString("effectiveDate")].isNull() && m_effective_date_isValid;

    m_registration_status_isValid = ::OpenAPI::fromJsonValue(m_registration_status, json[QString("registrationStatus")]);
    m_registration_status_isSet = !json[QString("registrationStatus")].isNull() && m_registration_status_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_classes_isValid = ::OpenAPI::fromJsonValue(m_classes, json[QString("classes")]);
    m_classes_isSet = !json[QString("classes")].isNull() && m_classes_isValid;
}

QString OAISdtmigProduct::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISdtmigProduct::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_effective_date_isSet) {
        obj.insert(QString("effectiveDate"), ::OpenAPI::toJsonValue(m_effective_date));
    }
    if (m_registration_status_isSet) {
        obj.insert(QString("registrationStatus"), ::OpenAPI::toJsonValue(m_registration_status));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    if (m__links.isSet()) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_classes.size() > 0) {
        obj.insert(QString("classes"), ::OpenAPI::toJsonValue(m_classes));
    }
    return obj;
}

QString OAISdtmigProduct::getName() const {
    return m_name;
}
void OAISdtmigProduct::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISdtmigProduct::is_name_Set() const{
    return m_name_isSet;
}

bool OAISdtmigProduct::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISdtmigProduct::getLabel() const {
    return m_label;
}
void OAISdtmigProduct::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAISdtmigProduct::is_label_Set() const{
    return m_label_isSet;
}

bool OAISdtmigProduct::is_label_Valid() const{
    return m_label_isValid;
}

QString OAISdtmigProduct::getDescription() const {
    return m_description;
}
void OAISdtmigProduct::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAISdtmigProduct::is_description_Set() const{
    return m_description_isSet;
}

bool OAISdtmigProduct::is_description_Valid() const{
    return m_description_isValid;
}

QString OAISdtmigProduct::getSource() const {
    return m_source;
}
void OAISdtmigProduct::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAISdtmigProduct::is_source_Set() const{
    return m_source_isSet;
}

bool OAISdtmigProduct::is_source_Valid() const{
    return m_source_isValid;
}

QString OAISdtmigProduct::getEffectiveDate() const {
    return m_effective_date;
}
void OAISdtmigProduct::setEffectiveDate(const QString &effective_date) {
    m_effective_date = effective_date;
    m_effective_date_isSet = true;
}

bool OAISdtmigProduct::is_effective_date_Set() const{
    return m_effective_date_isSet;
}

bool OAISdtmigProduct::is_effective_date_Valid() const{
    return m_effective_date_isValid;
}

QString OAISdtmigProduct::getRegistrationStatus() const {
    return m_registration_status;
}
void OAISdtmigProduct::setRegistrationStatus(const QString &registration_status) {
    m_registration_status = registration_status;
    m_registration_status_isSet = true;
}

bool OAISdtmigProduct::is_registration_status_Set() const{
    return m_registration_status_isSet;
}

bool OAISdtmigProduct::is_registration_status_Valid() const{
    return m_registration_status_isValid;
}

QString OAISdtmigProduct::getVersion() const {
    return m_version;
}
void OAISdtmigProduct::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAISdtmigProduct::is_version_Set() const{
    return m_version_isSet;
}

bool OAISdtmigProduct::is_version_Valid() const{
    return m_version_isValid;
}

OAISdtmigProductLinks OAISdtmigProduct::getLinks() const {
    return m__links;
}
void OAISdtmigProduct::setLinks(const OAISdtmigProductLinks &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAISdtmigProduct::is__links_Set() const{
    return m__links_isSet;
}

bool OAISdtmigProduct::is__links_Valid() const{
    return m__links_isValid;
}

QList<OAISdtmigClass> OAISdtmigProduct::getClasses() const {
    return m_classes;
}
void OAISdtmigProduct::setClasses(const QList<OAISdtmigClass> &classes) {
    m_classes = classes;
    m_classes_isSet = true;
}

bool OAISdtmigProduct::is_classes_Set() const{
    return m_classes_isSet;
}

bool OAISdtmigProduct::is_classes_Valid() const{
    return m_classes_isValid;
}

bool OAISdtmigProduct::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m__links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_classes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISdtmigProduct::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
