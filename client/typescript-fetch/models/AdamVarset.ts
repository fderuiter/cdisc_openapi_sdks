/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdamVariable } from './AdamVariable';
import {
    AdamVariableFromJSON,
    AdamVariableFromJSONTyped,
    AdamVariableToJSON,
    AdamVariableToJSONTyped,
} from './AdamVariable';
import type { AdamVarsetLinks } from './AdamVarsetLinks';
import {
    AdamVarsetLinksFromJSON,
    AdamVarsetLinksFromJSONTyped,
    AdamVarsetLinksToJSON,
    AdamVarsetLinksToJSONTyped,
} from './AdamVarsetLinks';

/**
 * 
 * @export
 * @interface AdamVarset
 */
export interface AdamVarset {
    /**
     * 
     * @type {string}
     * @memberof AdamVarset
     */
    ordinal?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamVarset
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamVarset
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamVarset
     */
    description?: string;
    /**
     * 
     * @type {AdamVarsetLinks}
     * @memberof AdamVarset
     */
    links?: AdamVarsetLinks;
    /**
     * 
     * @type {Array<AdamVariable>}
     * @memberof AdamVarset
     */
    analysisVariables?: Array<AdamVariable>;
}

/**
 * Check if a given object implements the AdamVarset interface.
 */
export function instanceOfAdamVarset(value: object): value is AdamVarset {
    return true;
}

export function AdamVarsetFromJSON(json: any): AdamVarset {
    return AdamVarsetFromJSONTyped(json, false);
}

export function AdamVarsetFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdamVarset {
    if (json == null) {
        return json;
    }
    return {
        
        'ordinal': json['ordinal'] == null ? undefined : json['ordinal'],
        'name': json['name'] == null ? undefined : json['name'],
        'label': json['label'] == null ? undefined : json['label'],
        'description': json['description'] == null ? undefined : json['description'],
        'links': json['_links'] == null ? undefined : AdamVarsetLinksFromJSON(json['_links']),
        'analysisVariables': json['analysisVariables'] == null ? undefined : ((json['analysisVariables'] as Array<any>).map(AdamVariableFromJSON)),
    };
}

export function AdamVarsetToJSON(json: any): AdamVarset {
    return AdamVarsetToJSONTyped(json, false);
}

export function AdamVarsetToJSONTyped(value?: AdamVarset | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ordinal': value['ordinal'],
        'name': value['name'],
        'label': value['label'],
        'description': value['description'],
        '_links': AdamVarsetLinksToJSON(value['links']),
        'analysisVariables': value['analysisVariables'] == null ? undefined : ((value['analysisVariables'] as Array<any>).map(AdamVariableToJSON)),
    };
}

