/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CtPackageRefElement } from './CtPackageRefElement';
import {
    CtPackageRefElementFromJSON,
    CtPackageRefElementFromJSONTyped,
    CtPackageRefElementToJSON,
    CtPackageRefElementToJSONTyped,
} from './CtPackageRefElement';
import type { ProductgroupRef } from './ProductgroupRef';
import {
    ProductgroupRefFromJSON,
    ProductgroupRefFromJSONTyped,
    ProductgroupRefToJSON,
    ProductgroupRefToJSONTyped,
} from './ProductgroupRef';

/**
 * 
 * @export
 * @interface ProductgroupTerminologyLinks
 */
export interface ProductgroupTerminologyLinks {
    /**
     * 
     * @type {ProductgroupRef}
     * @memberof ProductgroupTerminologyLinks
     */
    self?: ProductgroupRef;
    /**
     * 
     * @type {Array<CtPackageRefElement>}
     * @memberof ProductgroupTerminologyLinks
     */
    packages?: Array<CtPackageRefElement>;
}

/**
 * Check if a given object implements the ProductgroupTerminologyLinks interface.
 */
export function instanceOfProductgroupTerminologyLinks(value: object): value is ProductgroupTerminologyLinks {
    return true;
}

export function ProductgroupTerminologyLinksFromJSON(json: any): ProductgroupTerminologyLinks {
    return ProductgroupTerminologyLinksFromJSONTyped(json, false);
}

export function ProductgroupTerminologyLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductgroupTerminologyLinks {
    if (json == null) {
        return json;
    }
    return {
        
        'self': json['self'] == null ? undefined : ProductgroupRefFromJSON(json['self']),
        'packages': json['packages'] == null ? undefined : ((json['packages'] as Array<any>).map(CtPackageRefElementFromJSON)),
    };
}

export function ProductgroupTerminologyLinksToJSON(json: any): ProductgroupTerminologyLinks {
    return ProductgroupTerminologyLinksToJSONTyped(json, false);
}

export function ProductgroupTerminologyLinksToJSONTyped(value?: ProductgroupTerminologyLinks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'self': ProductgroupRefToJSON(value['self']),
        'packages': value['packages'] == null ? undefined : ((value['packages'] as Array<any>).map(CtPackageRefElementToJSON)),
    };
}

