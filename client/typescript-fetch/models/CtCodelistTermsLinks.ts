/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CtTermRefElement } from './CtTermRefElement';
import {
    CtTermRefElementFromJSON,
    CtTermRefElementFromJSONTyped,
    CtTermRefElementToJSON,
    CtTermRefElementToJSONTyped,
} from './CtTermRefElement';
import type { RootCtCodelistRef } from './RootCtCodelistRef';
import {
    RootCtCodelistRefFromJSON,
    RootCtCodelistRefFromJSONTyped,
    RootCtCodelistRefToJSON,
    RootCtCodelistRefToJSONTyped,
} from './RootCtCodelistRef';
import type { CtCodelistTermsRef } from './CtCodelistTermsRef';
import {
    CtCodelistTermsRefFromJSON,
    CtCodelistTermsRefFromJSONTyped,
    CtCodelistTermsRefToJSON,
    CtCodelistTermsRefToJSONTyped,
} from './CtCodelistTermsRef';
import type { CtPackageRef } from './CtPackageRef';
import {
    CtPackageRefFromJSON,
    CtPackageRefFromJSONTyped,
    CtPackageRefToJSON,
    CtPackageRefToJSONTyped,
} from './CtPackageRef';

/**
 * 
 * @export
 * @interface CtCodelistTermsLinks
 */
export interface CtCodelistTermsLinks {
    /**
     * 
     * @type {CtCodelistTermsRef}
     * @memberof CtCodelistTermsLinks
     */
    self?: CtCodelistTermsRef;
    /**
     * 
     * @type {CtPackageRef}
     * @memberof CtCodelistTermsLinks
     */
    parentPackage?: CtPackageRef;
    /**
     * 
     * @type {RootCtCodelistRef}
     * @memberof CtCodelistTermsLinks
     */
    rootItem?: RootCtCodelistRef;
    /**
     * 
     * @type {CtCodelistTermsRef}
     * @memberof CtCodelistTermsLinks
     */
    priorVersion?: CtCodelistTermsRef;
    /**
     * 
     * @type {Array<CtTermRefElement>}
     * @memberof CtCodelistTermsLinks
     */
    terms?: Array<CtTermRefElement>;
}

/**
 * Check if a given object implements the CtCodelistTermsLinks interface.
 */
export function instanceOfCtCodelistTermsLinks(value: object): value is CtCodelistTermsLinks {
    return true;
}

export function CtCodelistTermsLinksFromJSON(json: any): CtCodelistTermsLinks {
    return CtCodelistTermsLinksFromJSONTyped(json, false);
}

export function CtCodelistTermsLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): CtCodelistTermsLinks {
    if (json == null) {
        return json;
    }
    return {
        
        'self': json['self'] == null ? undefined : CtCodelistTermsRefFromJSON(json['self']),
        'parentPackage': json['parentPackage'] == null ? undefined : CtPackageRefFromJSON(json['parentPackage']),
        'rootItem': json['rootItem'] == null ? undefined : RootCtCodelistRefFromJSON(json['rootItem']),
        'priorVersion': json['priorVersion'] == null ? undefined : CtCodelistTermsRefFromJSON(json['priorVersion']),
        'terms': json['terms'] == null ? undefined : ((json['terms'] as Array<any>).map(CtTermRefElementFromJSON)),
    };
}

export function CtCodelistTermsLinksToJSON(json: any): CtCodelistTermsLinks {
    return CtCodelistTermsLinksToJSONTyped(json, false);
}

export function CtCodelistTermsLinksToJSONTyped(value?: CtCodelistTermsLinks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'self': CtCodelistTermsRefToJSON(value['self']),
        'parentPackage': CtPackageRefToJSON(value['parentPackage']),
        'rootItem': RootCtCodelistRefToJSON(value['rootItem']),
        'priorVersion': CtCodelistTermsRefToJSON(value['priorVersion']),
        'terms': value['terms'] == null ? undefined : ((value['terms'] as Array<any>).map(CtTermRefElementToJSON)),
    };
}

