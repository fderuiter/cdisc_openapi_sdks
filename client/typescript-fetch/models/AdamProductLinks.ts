/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdamProductRef } from './AdamProductRef';
import {
    AdamProductRefFromJSON,
    AdamProductRefFromJSONTyped,
    AdamProductRefToJSON,
    AdamProductRefToJSONTyped,
} from './AdamProductRef';

/**
 * 
 * @export
 * @interface AdamProductLinks
 */
export interface AdamProductLinks {
    /**
     * 
     * @type {AdamProductRef}
     * @memberof AdamProductLinks
     */
    self?: AdamProductRef;
    /**
     * 
     * @type {AdamProductRef}
     * @memberof AdamProductLinks
     */
    model?: AdamProductRef;
    /**
     * 
     * @type {AdamProductRef}
     * @memberof AdamProductLinks
     */
    priorVersion?: AdamProductRef;
}

/**
 * Check if a given object implements the AdamProductLinks interface.
 */
export function instanceOfAdamProductLinks(value: object): value is AdamProductLinks {
    return true;
}

export function AdamProductLinksFromJSON(json: any): AdamProductLinks {
    return AdamProductLinksFromJSONTyped(json, false);
}

export function AdamProductLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdamProductLinks {
    if (json == null) {
        return json;
    }
    return {
        
        'self': json['self'] == null ? undefined : AdamProductRefFromJSON(json['self']),
        'model': json['model'] == null ? undefined : AdamProductRefFromJSON(json['model']),
        'priorVersion': json['priorVersion'] == null ? undefined : AdamProductRefFromJSON(json['priorVersion']),
    };
}

export function AdamProductLinksToJSON(json: any): AdamProductLinks {
    return AdamProductLinksToJSONTyped(json, false);
}

export function AdamProductLinksToJSONTyped(value?: AdamProductLinks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'self': AdamProductRefToJSON(value['self']),
        'model': AdamProductRefToJSON(value['model']),
        'priorVersion': AdamProductRefToJSON(value['priorVersion']),
    };
}

