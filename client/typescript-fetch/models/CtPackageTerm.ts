/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CtPackageTerm
 */
export interface CtPackageTerm {
    /**
     * 
     * @type {string}
     * @memberof CtPackageTerm
     */
    conceptId?: string;
    /**
     * 
     * @type {string}
     * @memberof CtPackageTerm
     */
    submissionValue?: string;
    /**
     * 
     * @type {string}
     * @memberof CtPackageTerm
     */
    definition?: string;
    /**
     * 
     * @type {string}
     * @memberof CtPackageTerm
     */
    preferredTerm?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CtPackageTerm
     */
    synonyms?: Array<string>;
}

/**
 * Check if a given object implements the CtPackageTerm interface.
 */
export function instanceOfCtPackageTerm(value: object): value is CtPackageTerm {
    return true;
}

export function CtPackageTermFromJSON(json: any): CtPackageTerm {
    return CtPackageTermFromJSONTyped(json, false);
}

export function CtPackageTermFromJSONTyped(json: any, ignoreDiscriminator: boolean): CtPackageTerm {
    if (json == null) {
        return json;
    }
    return {
        
        'conceptId': json['conceptId'] == null ? undefined : json['conceptId'],
        'submissionValue': json['submissionValue'] == null ? undefined : json['submissionValue'],
        'definition': json['definition'] == null ? undefined : json['definition'],
        'preferredTerm': json['preferredTerm'] == null ? undefined : json['preferredTerm'],
        'synonyms': json['synonyms'] == null ? undefined : json['synonyms'],
    };
}

export function CtPackageTermToJSON(json: any): CtPackageTerm {
    return CtPackageTermToJSONTyped(json, false);
}

export function CtPackageTermToJSONTyped(value?: CtPackageTerm | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conceptId': value['conceptId'],
        'submissionValue': value['submissionValue'],
        'definition': value['definition'],
        'preferredTerm': value['preferredTerm'],
        'synonyms': value['synonyms'],
    };
}

