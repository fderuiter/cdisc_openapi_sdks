/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductgroupTerminology } from './ProductgroupTerminology';
import {
    ProductgroupTerminologyFromJSON,
    ProductgroupTerminologyFromJSONTyped,
    ProductgroupTerminologyToJSON,
    ProductgroupTerminologyToJSONTyped,
} from './ProductgroupTerminology';
import type { ProductsRef } from './ProductsRef';
import {
    ProductsRefFromJSON,
    ProductsRefFromJSONTyped,
    ProductsRefToJSON,
    ProductsRefToJSONTyped,
} from './ProductsRef';
import type { ProductgroupQrs } from './ProductgroupQrs';
import {
    ProductgroupQrsFromJSON,
    ProductgroupQrsFromJSONTyped,
    ProductgroupQrsToJSON,
    ProductgroupQrsToJSONTyped,
} from './ProductgroupQrs';
import type { ProductgroupDataTabulation } from './ProductgroupDataTabulation';
import {
    ProductgroupDataTabulationFromJSON,
    ProductgroupDataTabulationFromJSONTyped,
    ProductgroupDataTabulationToJSON,
    ProductgroupDataTabulationToJSONTyped,
} from './ProductgroupDataTabulation';
import type { ProductgroupDataCollection } from './ProductgroupDataCollection';
import {
    ProductgroupDataCollectionFromJSON,
    ProductgroupDataCollectionFromJSONTyped,
    ProductgroupDataCollectionToJSON,
    ProductgroupDataCollectionToJSONTyped,
} from './ProductgroupDataCollection';
import type { ProductgroupDataAnalysis } from './ProductgroupDataAnalysis';
import {
    ProductgroupDataAnalysisFromJSON,
    ProductgroupDataAnalysisFromJSONTyped,
    ProductgroupDataAnalysisToJSON,
    ProductgroupDataAnalysisToJSONTyped,
} from './ProductgroupDataAnalysis';

/**
 * 
 * @export
 * @interface ProductsLinks
 */
export interface ProductsLinks {
    /**
     * 
     * @type {ProductsRef}
     * @memberof ProductsLinks
     */
    self?: ProductsRef;
    /**
     * 
     * @type {ProductgroupDataCollection}
     * @memberof ProductsLinks
     */
    dataCollection?: ProductgroupDataCollection;
    /**
     * 
     * @type {ProductgroupDataTabulation}
     * @memberof ProductsLinks
     */
    dataTabulation?: ProductgroupDataTabulation;
    /**
     * 
     * @type {ProductgroupDataAnalysis}
     * @memberof ProductsLinks
     */
    dataAnalysis?: ProductgroupDataAnalysis;
    /**
     * 
     * @type {ProductgroupTerminology}
     * @memberof ProductsLinks
     */
    terminology?: ProductgroupTerminology;
    /**
     * 
     * @type {ProductgroupQrs}
     * @memberof ProductsLinks
     */
    measure?: ProductgroupQrs;
}

/**
 * Check if a given object implements the ProductsLinks interface.
 */
export function instanceOfProductsLinks(value: object): value is ProductsLinks {
    return true;
}

export function ProductsLinksFromJSON(json: any): ProductsLinks {
    return ProductsLinksFromJSONTyped(json, false);
}

export function ProductsLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductsLinks {
    if (json == null) {
        return json;
    }
    return {
        
        'self': json['self'] == null ? undefined : ProductsRefFromJSON(json['self']),
        'dataCollection': json['data-collection'] == null ? undefined : ProductgroupDataCollectionFromJSON(json['data-collection']),
        'dataTabulation': json['data-tabulation'] == null ? undefined : ProductgroupDataTabulationFromJSON(json['data-tabulation']),
        'dataAnalysis': json['data-analysis'] == null ? undefined : ProductgroupDataAnalysisFromJSON(json['data-analysis']),
        'terminology': json['terminology'] == null ? undefined : ProductgroupTerminologyFromJSON(json['terminology']),
        'measure': json['measure'] == null ? undefined : ProductgroupQrsFromJSON(json['measure']),
    };
}

export function ProductsLinksToJSON(json: any): ProductsLinks {
    return ProductsLinksToJSONTyped(json, false);
}

export function ProductsLinksToJSONTyped(value?: ProductsLinks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'self': ProductsRefToJSON(value['self']),
        'data-collection': ProductgroupDataCollectionToJSON(value['dataCollection']),
        'data-tabulation': ProductgroupDataTabulationToJSON(value['dataTabulation']),
        'data-analysis': ProductgroupDataAnalysisToJSON(value['dataAnalysis']),
        'terminology': ProductgroupTerminologyToJSON(value['terminology']),
        'measure': ProductgroupQrsToJSON(value['measure']),
    };
}

