/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdamDatastructure } from './AdamDatastructure';
import {
    AdamDatastructureFromJSON,
    AdamDatastructureFromJSONTyped,
    AdamDatastructureToJSON,
    AdamDatastructureToJSONTyped,
} from './AdamDatastructure';
import type { AdamProductLinks } from './AdamProductLinks';
import {
    AdamProductLinksFromJSON,
    AdamProductLinksFromJSONTyped,
    AdamProductLinksToJSON,
    AdamProductLinksToJSONTyped,
} from './AdamProductLinks';

/**
 * 
 * @export
 * @interface AdamProduct
 */
export interface AdamProduct {
    /**
     * 
     * @type {string}
     * @memberof AdamProduct
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamProduct
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamProduct
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamProduct
     */
    source?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamProduct
     */
    effectiveDate?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamProduct
     */
    registrationStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamProduct
     */
    version?: string;
    /**
     * 
     * @type {AdamProductLinks}
     * @memberof AdamProduct
     */
    links?: AdamProductLinks;
    /**
     * 
     * @type {Array<AdamDatastructure>}
     * @memberof AdamProduct
     */
    dataStructures?: Array<AdamDatastructure>;
}

/**
 * Check if a given object implements the AdamProduct interface.
 */
export function instanceOfAdamProduct(value: object): value is AdamProduct {
    return true;
}

export function AdamProductFromJSON(json: any): AdamProduct {
    return AdamProductFromJSONTyped(json, false);
}

export function AdamProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdamProduct {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'label': json['label'] == null ? undefined : json['label'],
        'description': json['description'] == null ? undefined : json['description'],
        'source': json['source'] == null ? undefined : json['source'],
        'effectiveDate': json['effectiveDate'] == null ? undefined : json['effectiveDate'],
        'registrationStatus': json['registrationStatus'] == null ? undefined : json['registrationStatus'],
        'version': json['version'] == null ? undefined : json['version'],
        'links': json['_links'] == null ? undefined : AdamProductLinksFromJSON(json['_links']),
        'dataStructures': json['dataStructures'] == null ? undefined : ((json['dataStructures'] as Array<any>).map(AdamDatastructureFromJSON)),
    };
}

export function AdamProductToJSON(json: any): AdamProduct {
    return AdamProductToJSONTyped(json, false);
}

export function AdamProductToJSONTyped(value?: AdamProduct | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'label': value['label'],
        'description': value['description'],
        'source': value['source'],
        'effectiveDate': value['effectiveDate'],
        'registrationStatus': value['registrationStatus'],
        'version': value['version'],
        '_links': AdamProductLinksToJSON(value['links']),
        'dataStructures': value['dataStructures'] == null ? undefined : ((value['dataStructures'] as Array<any>).map(AdamDatastructureToJSON)),
    };
}

