/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExportCtTerm
 */
export interface ExportCtTerm {
    /**
     * 
     * @type {string}
     * @memberof ExportCtTerm
     */
    bundle1?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ExportCtTerm
     */
    cDISCSynonymS?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ExportCtTerm
     */
    bundle2?: string;
}

/**
 * Check if a given object implements the ExportCtTerm interface.
 */
export function instanceOfExportCtTerm(value: object): value is ExportCtTerm {
    return true;
}

export function ExportCtTermFromJSON(json: any): ExportCtTerm {
    return ExportCtTermFromJSONTyped(json, false);
}

export function ExportCtTermFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportCtTerm {
    if (json == null) {
        return json;
    }
    return {
        
        'bundle1': json['bundle-1'] == null ? undefined : json['bundle-1'],
        'cDISCSynonymS': json['CDISC Synonym(s)'] == null ? undefined : json['CDISC Synonym(s)'],
        'bundle2': json['bundle-2'] == null ? undefined : json['bundle-2'],
    };
}

export function ExportCtTermToJSON(json: any): ExportCtTerm {
    return ExportCtTermToJSONTyped(json, false);
}

export function ExportCtTermToJSONTyped(value?: ExportCtTerm | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bundle-1': value['bundle1'],
        'CDISC Synonym(s)': value['cDISCSynonymS'],
        'bundle-2': value['bundle2'],
    };
}

