/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExportAdamVariablesRow } from './ExportAdamVariablesRow';
import {
    ExportAdamVariablesRowFromJSON,
    ExportAdamVariablesRowFromJSONTyped,
    ExportAdamVariablesRowToJSON,
    ExportAdamVariablesRowToJSONTyped,
} from './ExportAdamVariablesRow';

/**
 * 
 * @export
 * @interface ExportAdamVariablesTable
 */
export interface ExportAdamVariablesTable {
    /**
     * 
     * @type {Array<ExportAdamVariablesRow>}
     * @memberof ExportAdamVariablesTable
     */
    variables?: Array<ExportAdamVariablesRow>;
}

/**
 * Check if a given object implements the ExportAdamVariablesTable interface.
 */
export function instanceOfExportAdamVariablesTable(value: object): value is ExportAdamVariablesTable {
    return true;
}

export function ExportAdamVariablesTableFromJSON(json: any): ExportAdamVariablesTable {
    return ExportAdamVariablesTableFromJSONTyped(json, false);
}

export function ExportAdamVariablesTableFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportAdamVariablesTable {
    if (json == null) {
        return json;
    }
    return {
        
        'variables': json['variables'] == null ? undefined : ((json['variables'] as Array<any>).map(ExportAdamVariablesRowFromJSON)),
    };
}

export function ExportAdamVariablesTableToJSON(json: any): ExportAdamVariablesTable {
    return ExportAdamVariablesTableToJSONTyped(json, false);
}

export function ExportAdamVariablesTableToJSONTyped(value?: ExportAdamVariablesTable | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'variables': value['variables'] == null ? undefined : ((value['variables'] as Array<any>).map(ExportAdamVariablesRowToJSON)),
    };
}

