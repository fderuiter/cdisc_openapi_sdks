/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICdashigScenarioFields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICdashigScenarioFields::OAICdashigScenarioFields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICdashigScenarioFields::OAICdashigScenarioFields() {
    this->initializeModel();
}

OAICdashigScenarioFields::~OAICdashigScenarioFields() {}

void OAICdashigScenarioFields::initializeModel() {

    m_ordinal_isSet = false;
    m_ordinal_isValid = false;

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_scenario_isSet = false;
    m_scenario_isValid = false;

    m__links_isSet = false;
    m__links_isValid = false;
}

void OAICdashigScenarioFields::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICdashigScenarioFields::fromJsonObject(QJsonObject json) {

    m_ordinal_isValid = ::OpenAPI::fromJsonValue(m_ordinal, json[QString("ordinal")]);
    m_ordinal_isSet = !json[QString("ordinal")].isNull() && m_ordinal_isValid;

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_scenario_isValid = ::OpenAPI::fromJsonValue(m_scenario, json[QString("scenario")]);
    m_scenario_isSet = !json[QString("scenario")].isNull() && m_scenario_isValid;

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;
}

QString OAICdashigScenarioFields::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICdashigScenarioFields::asJsonObject() const {
    QJsonObject obj;
    if (m_ordinal_isSet) {
        obj.insert(QString("ordinal"), ::OpenAPI::toJsonValue(m_ordinal));
    }
    if (m_domain_isSet) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_scenario_isSet) {
        obj.insert(QString("scenario"), ::OpenAPI::toJsonValue(m_scenario));
    }
    if (m__links.isSet()) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    return obj;
}

QString OAICdashigScenarioFields::getOrdinal() const {
    return m_ordinal;
}
void OAICdashigScenarioFields::setOrdinal(const QString &ordinal) {
    m_ordinal = ordinal;
    m_ordinal_isSet = true;
}

bool OAICdashigScenarioFields::is_ordinal_Set() const{
    return m_ordinal_isSet;
}

bool OAICdashigScenarioFields::is_ordinal_Valid() const{
    return m_ordinal_isValid;
}

QString OAICdashigScenarioFields::getDomain() const {
    return m_domain;
}
void OAICdashigScenarioFields::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAICdashigScenarioFields::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAICdashigScenarioFields::is_domain_Valid() const{
    return m_domain_isValid;
}

QString OAICdashigScenarioFields::getScenario() const {
    return m_scenario;
}
void OAICdashigScenarioFields::setScenario(const QString &scenario) {
    m_scenario = scenario;
    m_scenario_isSet = true;
}

bool OAICdashigScenarioFields::is_scenario_Set() const{
    return m_scenario_isSet;
}

bool OAICdashigScenarioFields::is_scenario_Valid() const{
    return m_scenario_isValid;
}

OAICdashigScenarioFieldsLinks OAICdashigScenarioFields::getLinks() const {
    return m__links;
}
void OAICdashigScenarioFields::setLinks(const OAICdashigScenarioFieldsLinks &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAICdashigScenarioFields::is__links_Set() const{
    return m__links_isSet;
}

bool OAICdashigScenarioFields::is__links_Valid() const{
    return m__links_isValid;
}

bool OAICdashigScenarioFields::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ordinal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scenario_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m__links.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICdashigScenarioFields::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
