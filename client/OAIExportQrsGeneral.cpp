/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExportQrsGeneral.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExportQrsGeneral::OAIExportQrsGeneral(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExportQrsGeneral::OAIExportQrsGeneral() {
    this->initializeModel();
}

OAIExportQrsGeneral::~OAIExportQrsGeneral() {}

void OAIExportQrsGeneral::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_effective_date_isSet = false;
    m_effective_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_categorys_codelist_c_code_isSet = false;
    m_categorys_codelist_c_code_isValid = false;

    m_categorys_term_c_code_isSet = false;
    m_categorys_term_c_code_isValid = false;
}

void OAIExportQrsGeneral::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExportQrsGeneral::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("Label")]);
    m_label_isSet = !json[QString("Label")].isNull() && m_label_isValid;

    m_effective_date_isValid = ::OpenAPI::fromJsonValue(m_effective_date, json[QString("Effective Date")]);
    m_effective_date_isSet = !json[QString("Effective Date")].isNull() && m_effective_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_categorys_codelist_c_code_isValid = ::OpenAPI::fromJsonValue(m_categorys_codelist_c_code, json[QString("Category&#39;s Codelist C-Code")]);
    m_categorys_codelist_c_code_isSet = !json[QString("Category&#39;s Codelist C-Code")].isNull() && m_categorys_codelist_c_code_isValid;

    m_categorys_term_c_code_isValid = ::OpenAPI::fromJsonValue(m_categorys_term_c_code, json[QString("Category&#39;s Term C-Code")]);
    m_categorys_term_c_code_isSet = !json[QString("Category&#39;s Term C-Code")].isNull() && m_categorys_term_c_code_isValid;
}

QString OAIExportQrsGeneral::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExportQrsGeneral::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_label_isSet) {
        obj.insert(QString("Label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_effective_date_isSet) {
        obj.insert(QString("Effective Date"), ::OpenAPI::toJsonValue(m_effective_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_categorys_codelist_c_code_isSet) {
        obj.insert(QString("Category&#39;s Codelist C-Code"), ::OpenAPI::toJsonValue(m_categorys_codelist_c_code));
    }
    if (m_categorys_term_c_code_isSet) {
        obj.insert(QString("Category&#39;s Term C-Code"), ::OpenAPI::toJsonValue(m_categorys_term_c_code));
    }
    return obj;
}

QString OAIExportQrsGeneral::getName() const {
    return m_name;
}
void OAIExportQrsGeneral::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIExportQrsGeneral::is_name_Set() const{
    return m_name_isSet;
}

bool OAIExportQrsGeneral::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIExportQrsGeneral::getLabel() const {
    return m_label;
}
void OAIExportQrsGeneral::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIExportQrsGeneral::is_label_Set() const{
    return m_label_isSet;
}

bool OAIExportQrsGeneral::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIExportQrsGeneral::getEffectiveDate() const {
    return m_effective_date;
}
void OAIExportQrsGeneral::setEffectiveDate(const QString &effective_date) {
    m_effective_date = effective_date;
    m_effective_date_isSet = true;
}

bool OAIExportQrsGeneral::is_effective_date_Set() const{
    return m_effective_date_isSet;
}

bool OAIExportQrsGeneral::is_effective_date_Valid() const{
    return m_effective_date_isValid;
}

QString OAIExportQrsGeneral::getDescription() const {
    return m_description;
}
void OAIExportQrsGeneral::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIExportQrsGeneral::is_description_Set() const{
    return m_description_isSet;
}

bool OAIExportQrsGeneral::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIExportQrsGeneral::getType() const {
    return m_type;
}
void OAIExportQrsGeneral::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIExportQrsGeneral::is_type_Set() const{
    return m_type_isSet;
}

bool OAIExportQrsGeneral::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIExportQrsGeneral::getCategorysCodelistCCode() const {
    return m_categorys_codelist_c_code;
}
void OAIExportQrsGeneral::setCategorysCodelistCCode(const QString &categorys_codelist_c_code) {
    m_categorys_codelist_c_code = categorys_codelist_c_code;
    m_categorys_codelist_c_code_isSet = true;
}

bool OAIExportQrsGeneral::is_categorys_codelist_c_code_Set() const{
    return m_categorys_codelist_c_code_isSet;
}

bool OAIExportQrsGeneral::is_categorys_codelist_c_code_Valid() const{
    return m_categorys_codelist_c_code_isValid;
}

QString OAIExportQrsGeneral::getCategorysTermCCode() const {
    return m_categorys_term_c_code;
}
void OAIExportQrsGeneral::setCategorysTermCCode(const QString &categorys_term_c_code) {
    m_categorys_term_c_code = categorys_term_c_code;
    m_categorys_term_c_code_isSet = true;
}

bool OAIExportQrsGeneral::is_categorys_term_c_code_Set() const{
    return m_categorys_term_c_code_isSet;
}

bool OAIExportQrsGeneral::is_categorys_term_c_code_Valid() const{
    return m_categorys_term_c_code_isValid;
}

bool OAIExportQrsGeneral::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_categorys_codelist_c_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_categorys_term_c_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExportQrsGeneral::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
