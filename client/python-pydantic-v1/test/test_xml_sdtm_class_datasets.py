# coding: utf-8

"""
    CDISC Library API

    REST API Documentation for CDISC Library in production server

    The version of the OpenAPI document: 1.1.0
    Contact: cdisc_library_support@cdisc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.xml_sdtm_class_datasets import XmlSdtmClassDatasets  # noqa: E501

class TestXmlSdtmClassDatasets(unittest.TestCase):
    """XmlSdtmClassDatasets unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XmlSdtmClassDatasets:
        """Test XmlSdtmClassDatasets
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XmlSdtmClassDatasets`
        """
        model = XmlSdtmClassDatasets()  # noqa: E501
        if include_optional:
            return XmlSdtmClassDatasets(
                var_self = openapi_client.models.sdtm_class_datasets.SdtmClassDatasets(
                    ordinal = '6', 
                    name = 'Special-Purpose', 
                    label = 'Special-Purpose Datasets', 
                    description = 'This SDTM class contains a set of domains which do not conform to the Findings, Events or Interventions observation classes. The domains included are DM, CO, SE and SV. (Source: CDISC Controlled Terminology, GNRLOBSC, C103377, 2018-06-29)', 
                    _links = openapi_client.models.sdtm_class_datasets_links.SdtmClassDatasetsLinks(
                        self = openapi_client.models.sdtm_class_datasets_ref.SdtmClassDatasetsRef(
                            href = '/mdr/sdtm/1-8/classes/SpecialPurpose/datasets', 
                            title = 'Special-Purpose Datasets', 
                            type = 'SDTM Class Dataset List', ), 
                        parent_product = openapi_client.models.sdtm_product_ref.SdtmProductRef(
                            href = '/mdr/sdtm/1-8', 
                            title = 'Study Data Tabulation Model Version 1.8 (Final)', 
                            type = 'Foundational Model', ), 
                        prior_version = openapi_client.models.sdtm_class_datasets_ref.SdtmClassDatasetsRef(
                            href = '/mdr/sdtm/1-8/classes/SpecialPurpose/datasets', 
                            title = 'Special-Purpose Datasets', 
                            type = 'SDTM Class Dataset List', ), 
                        datasets = [
                            openapi_client.models.sdtm_dataset_ref_element.SdtmDatasetRefElement(
                                href = '/mdr/sdtm/1-8/datasets/DM', 
                                title = 'Demographics', 
                                type = 'SDTM Dataset', )
                            ], ), )
            )
        else:
            return XmlSdtmClassDatasets(
        )
        """

    def testXmlSdtmClassDatasets(self):
        """Test XmlSdtmClassDatasets"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
