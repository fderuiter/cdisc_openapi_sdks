/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExportSdtmVariablesTable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExportSdtmVariablesTable::OAIExportSdtmVariablesTable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExportSdtmVariablesTable::OAIExportSdtmVariablesTable() {
    this->initializeModel();
}

OAIExportSdtmVariablesTable::~OAIExportSdtmVariablesTable() {}

void OAIExportSdtmVariablesTable::initializeModel() {

    m_class_variables_isSet = false;
    m_class_variables_isValid = false;

    m_dataset_variables_isSet = false;
    m_dataset_variables_isValid = false;
}

void OAIExportSdtmVariablesTable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExportSdtmVariablesTable::fromJsonObject(QJsonObject json) {

    m_class_variables_isValid = ::OpenAPI::fromJsonValue(m_class_variables, json[QString("class-variables")]);
    m_class_variables_isSet = !json[QString("class-variables")].isNull() && m_class_variables_isValid;

    m_dataset_variables_isValid = ::OpenAPI::fromJsonValue(m_dataset_variables, json[QString("dataset-variables")]);
    m_dataset_variables_isSet = !json[QString("dataset-variables")].isNull() && m_dataset_variables_isValid;
}

QString OAIExportSdtmVariablesTable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExportSdtmVariablesTable::asJsonObject() const {
    QJsonObject obj;
    if (m_class_variables.size() > 0) {
        obj.insert(QString("class-variables"), ::OpenAPI::toJsonValue(m_class_variables));
    }
    if (m_dataset_variables.size() > 0) {
        obj.insert(QString("dataset-variables"), ::OpenAPI::toJsonValue(m_dataset_variables));
    }
    return obj;
}

QList<OAIExportSdtmClassVariablesRow> OAIExportSdtmVariablesTable::getClassVariables() const {
    return m_class_variables;
}
void OAIExportSdtmVariablesTable::setClassVariables(const QList<OAIExportSdtmClassVariablesRow> &class_variables) {
    m_class_variables = class_variables;
    m_class_variables_isSet = true;
}

bool OAIExportSdtmVariablesTable::is_class_variables_Set() const{
    return m_class_variables_isSet;
}

bool OAIExportSdtmVariablesTable::is_class_variables_Valid() const{
    return m_class_variables_isValid;
}

QList<OAIExportSdtmDatasetVariablesRow> OAIExportSdtmVariablesTable::getDatasetVariables() const {
    return m_dataset_variables;
}
void OAIExportSdtmVariablesTable::setDatasetVariables(const QList<OAIExportSdtmDatasetVariablesRow> &dataset_variables) {
    m_dataset_variables = dataset_variables;
    m_dataset_variables_isSet = true;
}

bool OAIExportSdtmVariablesTable::is_dataset_variables_Set() const{
    return m_dataset_variables_isSet;
}

bool OAIExportSdtmVariablesTable::is_dataset_variables_Valid() const{
    return m_dataset_variables_isValid;
}

bool OAIExportSdtmVariablesTable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_class_variables.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_variables.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExportSdtmVariablesTable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
