#import <Foundation/Foundation.h>
#import "OAIDefaultErrorResponse.h"
#import "OAIExportSendigDatasetsTable.h"
#import "OAIExportSendigVariablesTable.h"
#import "OAIExportSendigWorkbook.h"
#import "OAIRootSendigDatasetVariable.h"
#import "OAISendigClass.h"
#import "OAISendigClassDatasets.h"
#import "OAISendigClasses.h"
#import "OAISendigDataset.h"
#import "OAISendigDatasetVariable.h"
#import "OAISendigDatasetVariables.h"
#import "OAISendigDatasets.h"
#import "OAISendigProduct.h"
#import "OAIXmlRootSendigDatasetVariable.h"
#import "OAIXmlSendigClass.h"
#import "OAIXmlSendigClassDatasets.h"
#import "OAIXmlSendigClasses.h"
#import "OAIXmlSendigDataset.h"
#import "OAIXmlSendigDatasetVariable.h"
#import "OAIXmlSendigDatasetVariables.h"
#import "OAIXmlSendigDatasets.h"
#import "OAIXmlSendigProduct.h"
#import "OAIApi.h"

/**
* CDISC Library API
* REST API Documentation for CDISC Library in production server
*
* The version of the OpenAPI document: 1.1.0
* Contact: cdisc_library_support@cdisc.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAISENDImplementationGuideSENDIGApi: NSObject <OAIApi>

extern NSString* kOAISENDImplementationGuideSENDIGApiErrorDomain;
extern NSInteger kOAISENDImplementationGuideSENDIGApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 
/// Get Root SENDIG Dataset Variable
///
/// @param dataset SENDIG Dataset Identifier
/// @param var SENDIG Variable Identifier
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAIRootSendigDatasetVariable*
-(NSURLSessionTask*) mdrRootSendigDatasetsDatasetVariablesVarGetWithDataset: (NSString*) dataset
    var: (NSString*) var
    completionHandler: (void (^)(OAIRootSendigDatasetVariable* output, NSError* error)) handler;


/// 
/// Get SENDIG Class Dataset List
///
/// @param version CDISC Library Product Version
/// @param _class SENDIG Class Identifier
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAISendigClassDatasets*
-(NSURLSessionTask*) mdrSendigVersionClassesClassDatasetsGetWithVersion: (NSString*) version
    _class: (NSString*) _class
    completionHandler: (void (^)(OAISendigClassDatasets* output, NSError* error)) handler;


/// 
/// Get SENDIG Class
///
/// @param version CDISC Library Product Version
/// @param _class SENDIG Class Identifier
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAISendigClass*
-(NSURLSessionTask*) mdrSendigVersionClassesClassGetWithVersion: (NSString*) version
    _class: (NSString*) _class
    completionHandler: (void (^)(OAISendigClass* output, NSError* error)) handler;


/// 
/// Get SENDIG Class List
///
/// @param version CDISC Library Product Version
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAISendigClasses*
-(NSURLSessionTask*) mdrSendigVersionClassesGetWithVersion: (NSString*) version
    completionHandler: (void (^)(OAISendigClasses* output, NSError* error)) handler;


/// 
/// Get SENDIG Dataset
///
/// @param version CDISC Library Product Version
/// @param dataset SENDIG Class Identifier
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAISendigDataset*
-(NSURLSessionTask*) mdrSendigVersionDatasetsDatasetGetWithVersion: (NSString*) version
    dataset: (NSString*) dataset
    completionHandler: (void (^)(OAISendigDataset* output, NSError* error)) handler;


/// 
/// Get SENDIG Dataset Variable List
///
/// @param version CDISC Library Product Version
/// @param dataset SENDIG Class Identifier
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAISendigDatasetVariables*
-(NSURLSessionTask*) mdrSendigVersionDatasetsDatasetVariablesGetWithVersion: (NSString*) version
    dataset: (NSString*) dataset
    completionHandler: (void (^)(OAISendigDatasetVariables* output, NSError* error)) handler;


/// 
/// Get SENDIG Dataset Variable
///
/// @param version CDISC Library Product Version
/// @param dataset SENDIG Class Identifier
/// @param var SENDIG Variable Identifier
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAISendigDatasetVariable*
-(NSURLSessionTask*) mdrSendigVersionDatasetsDatasetVariablesVarGetWithVersion: (NSString*) version
    dataset: (NSString*) dataset
    var: (NSString*) var
    completionHandler: (void (^)(OAISendigDatasetVariable* output, NSError* error)) handler;


/// 
/// Get SENDIG Dataset List
///
/// @param version CDISC Library Product Version
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAISendigDatasets*
-(NSURLSessionTask*) mdrSendigVersionDatasetsGetWithVersion: (NSString*) version
    completionHandler: (void (^)(OAISendigDatasets* output, NSError* error)) handler;


/// 
/// Get SENDIG product
///
/// @param version CDISC Library Product Version
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:405 message:"Method Not Allowed",
///  code:406 message:"Not Acceptable",
///  code:500 message:"Internal Server Error",
///  code:503 message:"Service Unavailable",
///  code:504 message:"Gateway Timeout Error"
///
/// @return OAISendigProduct*
-(NSURLSessionTask*) mdrSendigVersionGetWithVersion: (NSString*) version
    completionHandler: (void (^)(OAISendigProduct* output, NSError* error)) handler;



@end
