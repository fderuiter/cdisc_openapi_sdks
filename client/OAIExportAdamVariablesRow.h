/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExportAdamVariablesRow.h
 *
 * 
 */

#ifndef OAIExportAdamVariablesRow_H
#define OAIExportAdamVariablesRow_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExportAdamVariablesRow : public OAIObject {
public:
    OAIExportAdamVariablesRow();
    OAIExportAdamVariablesRow(QString json);
    ~OAIExportAdamVariablesRow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getDataStructureName() const;
    void setDataStructureName(const QString &data_structure_name);
    bool is_data_structure_name_Set() const;
    bool is_data_structure_name_Valid() const;

    QString getDatasetName() const;
    void setDatasetName(const QString &dataset_name);
    bool is_dataset_name_Set() const;
    bool is_dataset_name_Valid() const;

    QString getVariableGroup() const;
    void setVariableGroup(const QString &variable_group);
    bool is_variable_group_Set() const;
    bool is_variable_group_Valid() const;

    QString getVariableName() const;
    void setVariableName(const QString &variable_name);
    bool is_variable_name_Set() const;
    bool is_variable_name_Valid() const;

    QString getVariableLabel() const;
    void setVariableLabel(const QString &variable_label);
    bool is_variable_label_Set() const;
    bool is_variable_label_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getCodelistControlledTerms() const;
    void setCodelistControlledTerms(const QString &codelist_controlled_terms);
    bool is_codelist_controlled_terms_Set() const;
    bool is_codelist_controlled_terms_Valid() const;

    QString getCore() const;
    void setCore(const QString &core);
    bool is_core_Set() const;
    bool is_core_Valid() const;

    QString getCdiscNotes() const;
    void setCdiscNotes(const QString &cdisc_notes);
    bool is_cdisc_notes_Set() const;
    bool is_cdisc_notes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_data_structure_name;
    bool m_data_structure_name_isSet;
    bool m_data_structure_name_isValid;

    QString m_dataset_name;
    bool m_dataset_name_isSet;
    bool m_dataset_name_isValid;

    QString m_variable_group;
    bool m_variable_group_isSet;
    bool m_variable_group_isValid;

    QString m_variable_name;
    bool m_variable_name_isSet;
    bool m_variable_name_isValid;

    QString m_variable_label;
    bool m_variable_label_isSet;
    bool m_variable_label_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_codelist_controlled_terms;
    bool m_codelist_controlled_terms_isSet;
    bool m_codelist_controlled_terms_isValid;

    QString m_core;
    bool m_core_isSet;
    bool m_core_isValid;

    QString m_cdisc_notes;
    bool m_cdisc_notes_isSet;
    bool m_cdisc_notes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExportAdamVariablesRow)

#endif // OAIExportAdamVariablesRow_H
