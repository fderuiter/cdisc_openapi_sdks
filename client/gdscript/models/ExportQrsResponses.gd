extends Resource
class_name ExportQrsResponses

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# ExportQrsResponses Model


# Required: False
# isArray: false
@export var Response Group: String = "":
	set(value):
		__Response Group__was__set = true
		Response Group = value
var __Response Group__was__set := false

# Required: False
# isArray: false
@export var Sequence: String = "":
	set(value):
		__Sequence__was__set = true
		Sequence = value
var __Sequence__was__set := false

# Required: False
# isArray: false
@export var ResponseQuotes Original Result Codelist CMinusCode: String = "":
	set(value):
		__ResponseQuotes Original Result Codelist CMinusCode__was__set = true
		ResponseQuotes Original Result Codelist CMinusCode = value
var __ResponseQuotes Original Result Codelist CMinusCode__was__set := false

# Required: False
# isArray: false
@export var ResponseQuotes Original Result Term CMinusCode: String = "":
	set(value):
		__ResponseQuotes Original Result Term CMinusCode__was__set = true
		ResponseQuotes Original Result Term CMinusCode = value
var __ResponseQuotes Original Result Term CMinusCode__was__set := false

# Required: False
# isArray: false
@export var ResponseQuotes Original Result Unit Codelist CMinusCode: String = "":
	set(value):
		__ResponseQuotes Original Result Unit Codelist CMinusCode__was__set = true
		ResponseQuotes Original Result Unit Codelist CMinusCode = value
var __ResponseQuotes Original Result Unit Codelist CMinusCode__was__set := false

# Required: False
# isArray: false
@export var ResponseQuotes Original Result Unit Term CMinusCode: String = "":
	set(value):
		__ResponseQuotes Original Result Unit Term CMinusCode__was__set = true
		ResponseQuotes Original Result Unit Term CMinusCode = value
var __ResponseQuotes Original Result Unit Term CMinusCode__was__set := false

# Required: False
# isArray: false
@export var ResponseQuotes Standardized Result Codelist CMinusCode: String = "":
	set(value):
		__ResponseQuotes Standardized Result Codelist CMinusCode__was__set = true
		ResponseQuotes Standardized Result Codelist CMinusCode = value
var __ResponseQuotes Standardized Result Codelist CMinusCode__was__set := false

# Required: False
# isArray: false
@export var ResponseQuotes Standardized Result Term CMinusCode: String = "":
	set(value):
		__ResponseQuotes Standardized Result Term CMinusCode__was__set = true
		ResponseQuotes Standardized Result Term CMinusCode = value
var __ResponseQuotes Standardized Result Term CMinusCode__was__set := false

# Required: False
# isArray: false
@export var ResponseQuotes Standardized Result Unit Codelist CMinusCode: String = "":
	set(value):
		__ResponseQuotes Standardized Result Unit Codelist CMinusCode__was__set = true
		ResponseQuotes Standardized Result Unit Codelist CMinusCode = value
var __ResponseQuotes Standardized Result Unit Codelist CMinusCode__was__set := false

# Required: False
# isArray: false
@export var ResponseQuotes Standardized Result Unit Term CMinusCode: String = "":
	set(value):
		__ResponseQuotes Standardized Result Unit Term CMinusCode__was__set = true
		ResponseQuotes Standardized Result Unit Term CMinusCode = value
var __ResponseQuotes Standardized Result Unit Term CMinusCode__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__Response Group__was__set:
		bzz_dictionary["Response Group"] = self.Response Group
	if self.__Sequence__was__set:
		bzz_dictionary["Sequence"] = self.Sequence
	if self.__ResponseQuotes Original Result Codelist CMinusCode__was__set:
		bzz_dictionary["ResponseQuotes Original Result Codelist CMinusCode"] = self.ResponseQuotes Original Result Codelist CMinusCode
	if self.__ResponseQuotes Original Result Term CMinusCode__was__set:
		bzz_dictionary["ResponseQuotes Original Result Term CMinusCode"] = self.ResponseQuotes Original Result Term CMinusCode
	if self.__ResponseQuotes Original Result Unit Codelist CMinusCode__was__set:
		bzz_dictionary["ResponseQuotes Original Result Unit Codelist CMinusCode"] = self.ResponseQuotes Original Result Unit Codelist CMinusCode
	if self.__ResponseQuotes Original Result Unit Term CMinusCode__was__set:
		bzz_dictionary["ResponseQuotes Original Result Unit Term CMinusCode"] = self.ResponseQuotes Original Result Unit Term CMinusCode
	if self.__ResponseQuotes Standardized Result Codelist CMinusCode__was__set:
		bzz_dictionary["ResponseQuotes Standardized Result Codelist CMinusCode"] = self.ResponseQuotes Standardized Result Codelist CMinusCode
	if self.__ResponseQuotes Standardized Result Term CMinusCode__was__set:
		bzz_dictionary["ResponseQuotes Standardized Result Term CMinusCode"] = self.ResponseQuotes Standardized Result Term CMinusCode
	if self.__ResponseQuotes Standardized Result Unit Codelist CMinusCode__was__set:
		bzz_dictionary["ResponseQuotes Standardized Result Unit Codelist CMinusCode"] = self.ResponseQuotes Standardized Result Unit Codelist CMinusCode
	if self.__ResponseQuotes Standardized Result Unit Term CMinusCode__was__set:
		bzz_dictionary["ResponseQuotes Standardized Result Unit Term CMinusCode"] = self.ResponseQuotes Standardized Result Unit Term CMinusCode
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("Response Group"):
		me.Response Group = from_dict["Response Group"]
	if from_dict.has("Sequence"):
		me.Sequence = from_dict["Sequence"]
	if from_dict.has("ResponseQuotes Original Result Codelist CMinusCode"):
		me.ResponseQuotes Original Result Codelist CMinusCode = from_dict["ResponseQuotes Original Result Codelist CMinusCode"]
	if from_dict.has("ResponseQuotes Original Result Term CMinusCode"):
		me.ResponseQuotes Original Result Term CMinusCode = from_dict["ResponseQuotes Original Result Term CMinusCode"]
	if from_dict.has("ResponseQuotes Original Result Unit Codelist CMinusCode"):
		me.ResponseQuotes Original Result Unit Codelist CMinusCode = from_dict["ResponseQuotes Original Result Unit Codelist CMinusCode"]
	if from_dict.has("ResponseQuotes Original Result Unit Term CMinusCode"):
		me.ResponseQuotes Original Result Unit Term CMinusCode = from_dict["ResponseQuotes Original Result Unit Term CMinusCode"]
	if from_dict.has("ResponseQuotes Standardized Result Codelist CMinusCode"):
		me.ResponseQuotes Standardized Result Codelist CMinusCode = from_dict["ResponseQuotes Standardized Result Codelist CMinusCode"]
	if from_dict.has("ResponseQuotes Standardized Result Term CMinusCode"):
		me.ResponseQuotes Standardized Result Term CMinusCode = from_dict["ResponseQuotes Standardized Result Term CMinusCode"]
	if from_dict.has("ResponseQuotes Standardized Result Unit Codelist CMinusCode"):
		me.ResponseQuotes Standardized Result Unit Codelist CMinusCode = from_dict["ResponseQuotes Standardized Result Unit Codelist CMinusCode"]
	if from_dict.has("ResponseQuotes Standardized Result Unit Term CMinusCode"):
		me.ResponseQuotes Standardized Result Unit Term CMinusCode = from_dict["ResponseQuotes Standardized Result Unit Term CMinusCode"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

