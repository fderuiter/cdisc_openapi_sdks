=begin comment

CDISC Library API

REST API Documentation for CDISC Library in production server

The version of the OpenAPI document: 1.1.0
Contact: cdisc_library_support@cdisc.org
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# Do not edit the class manually.
# Ref: https://openapi-generator.tech
#
package WWW::OpenAPIClient::DefaultApi;

require 5.6.0;
use strict;
use warnings;
use utf8;
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);

use WWW::OpenAPIClient::ApiClient;

use base "Class::Data::Inheritable";

__PACKAGE__->mk_classdata('method_documentation' => {});

sub new {
    my $class = shift;
    my $api_client;

    if ($_[0] && ref $_[0] && ref $_[0] eq 'WWW::OpenAPIClient::ApiClient' ) {
        $api_client = $_[0];
    } else {
        $api_client = WWW::OpenAPIClient::ApiClient->new(@_);
    }

    bless { api_client => $api_client }, $class;

}


#
# mdr_about_get
#
# 
#
{
    my $params = {
    };
    __PACKAGE__->method_documentation->{ 'mdr_about_get' } = {
        summary => '',
        params => $params,
        returns => 'About',
        };
}
# @return About
#
sub mdr_about_get {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mdr/about';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json', 'application/xml');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(basicAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('About', $response);
    return $_response_object;
}

#
# mdr_lastupdated_get
#
# 
#
{
    my $params = {
    };
    __PACKAGE__->method_documentation->{ 'mdr_lastupdated_get' } = {
        summary => '',
        params => $params,
        returns => 'Lastupdated',
        };
}
# @return Lastupdated
#
sub mdr_lastupdated_get {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mdr/lastupdated';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json', 'application/xml');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(basicAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('Lastupdated', $response);
    return $_response_object;
}

#
# mdr_products_data_analysis_get
#
# 
#
{
    my $params = {
    };
    __PACKAGE__->method_documentation->{ 'mdr_products_data_analysis_get' } = {
        summary => '',
        params => $params,
        returns => 'ProductgroupDataAnalysis',
        };
}
# @return ProductgroupDataAnalysis
#
sub mdr_products_data_analysis_get {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mdr/products/DataAnalysis';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json', 'application/xml');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(basicAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('ProductgroupDataAnalysis', $response);
    return $_response_object;
}

#
# mdr_products_data_collection_get
#
# 
#
{
    my $params = {
    };
    __PACKAGE__->method_documentation->{ 'mdr_products_data_collection_get' } = {
        summary => '',
        params => $params,
        returns => 'ProductgroupDataCollection',
        };
}
# @return ProductgroupDataCollection
#
sub mdr_products_data_collection_get {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mdr/products/DataCollection';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json', 'application/xml');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(basicAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('ProductgroupDataCollection', $response);
    return $_response_object;
}

#
# mdr_products_data_tabulation_get
#
# 
#
{
    my $params = {
    };
    __PACKAGE__->method_documentation->{ 'mdr_products_data_tabulation_get' } = {
        summary => '',
        params => $params,
        returns => 'ProductgroupDataTabulation',
        };
}
# @return ProductgroupDataTabulation
#
sub mdr_products_data_tabulation_get {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mdr/products/DataTabulation';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json', 'application/xml');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(basicAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('ProductgroupDataTabulation', $response);
    return $_response_object;
}

#
# mdr_products_get
#
# 
#
{
    my $params = {
    };
    __PACKAGE__->method_documentation->{ 'mdr_products_get' } = {
        summary => '',
        params => $params,
        returns => 'Products',
        };
}
# @return Products
#
sub mdr_products_get {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mdr/products';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json', 'application/xml');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(basicAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('Products', $response);
    return $_response_object;
}

#
# mdr_products_measures_get
#
# 
#
{
    my $params = {
    };
    __PACKAGE__->method_documentation->{ 'mdr_products_measures_get' } = {
        summary => '',
        params => $params,
        returns => 'ProductgroupQrs',
        };
}
# @return ProductgroupQrs
#
sub mdr_products_measures_get {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mdr/products/Measures';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(basicAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('ProductgroupQrs', $response);
    return $_response_object;
}

#
# mdr_products_terminology_get
#
# 
#
{
    my $params = {
    };
    __PACKAGE__->method_documentation->{ 'mdr_products_terminology_get' } = {
        summary => '',
        params => $params,
        returns => 'ProductgroupTerminology',
        };
}
# @return ProductgroupTerminology
#
sub mdr_products_terminology_get {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mdr/products/Terminology';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json', 'application/xml');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(basicAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('ProductgroupTerminology', $response);
    return $_response_object;
}

1;
