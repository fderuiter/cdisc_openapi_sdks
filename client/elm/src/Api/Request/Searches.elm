{-
   CDISC Library API
   REST API Documentation for CDISC Library in production server

   The version of the OpenAPI document: 1.1.0
   Contact: cdisc_library_support@cdisc.org

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Searches exposing
    ( mdrSearchGet
    , mdrSearchScopesGet
    , mdrSearchScopesScopeGet
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode

{-| Get Search Results Across CDISC Library
-}
mdrSearchGet : String -> Maybe String -> Maybe Float -> Maybe Float -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Api.Request Api.Data.DefaultSearchResponse
mdrSearchGet q_query highlight_query start_query pageSize_query class_query codelist_query conceptId_query core_query dataStructure_query datasetStructure_query definition_query description_query domain_query effectiveDate_query extensible_query href_query label_query measureType_query name_query preferredTerm_query product_query productGroup_query registrationStatus_query roleDescription_query sdtmTarget_query simpleDatatype_query submissionValue_query synonyms_query type__query uiHref_query valueDomain_query variableSet_query version_query =
    Api.request
        "GET"
        "/mdr/search"
        []
        [ ( "q", Just <| identity q_query ), ( "highlight", Maybe.map identity highlight_query ), ( "start", Maybe.map String.fromFloat start_query ), ( "pageSize", Maybe.map String.fromFloat pageSize_query ), ( "class", Maybe.map identity class_query ), ( "codelist", Maybe.map identity codelist_query ), ( "conceptId", Maybe.map identity conceptId_query ), ( "core", Maybe.map identity core_query ), ( "dataStructure", Maybe.map identity dataStructure_query ), ( "datasetStructure", Maybe.map identity datasetStructure_query ), ( "definition", Maybe.map identity definition_query ), ( "description", Maybe.map identity description_query ), ( "domain", Maybe.map identity domain_query ), ( "effectiveDate", Maybe.map identity effectiveDate_query ), ( "extensible", Maybe.map identity extensible_query ), ( "href", Maybe.map identity href_query ), ( "label", Maybe.map identity label_query ), ( "measureType", Maybe.map identity measureType_query ), ( "name", Maybe.map identity name_query ), ( "preferredTerm", Maybe.map identity preferredTerm_query ), ( "product", Maybe.map identity product_query ), ( "productGroup", Maybe.map identity productGroup_query ), ( "registrationStatus", Maybe.map identity registrationStatus_query ), ( "roleDescription", Maybe.map identity roleDescription_query ), ( "sdtmTarget", Maybe.map identity sdtmTarget_query ), ( "simpleDatatype", Maybe.map identity simpleDatatype_query ), ( "submissionValue", Maybe.map identity submissionValue_query ), ( "synonyms", Maybe.map identity synonyms_query ), ( "type", Maybe.map identity type__query ), ( "uiHref", Maybe.map identity uiHref_query ), ( "valueDomain", Maybe.map identity valueDomain_query ), ( "variableSet", Maybe.map identity variableSet_query ), ( "version", Maybe.map identity version_query ) ]
        []
        Nothing
        Api.Data.defaultSearchResponseDecoder

{-| Get Search Results Across CDISC Library
-}
mdrSearchScopesGet : Api.Request Api.Data.MdrSearchScopesGet200Response
mdrSearchScopesGet =
    Api.request
        "GET"
        "/mdr/search/scopes"
        []
        []
        []
        Nothing
        Api.Data.mdrSearchScopesGet200ResponseDecoder

{-| Get Search Results Limited to Scope
-}
mdrSearchScopesScopeGet : DefaultSearchScopes -> Api.Request Api.Data.ScopeValues
mdrSearchScopesScopeGet scope_path =
    Api.request
        "GET"
        "/mdr/search/scopes/{scope}"
        [ ( "scope", Api.Data.stringFromDefaultSearchScopes scope_path ) ]
        []
        []
        Nothing
        Api.Data.scopeValuesDecoder

