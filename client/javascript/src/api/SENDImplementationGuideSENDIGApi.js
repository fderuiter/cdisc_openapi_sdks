/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultErrorResponse from '../model/DefaultErrorResponse';
import ExportSendigDatasetsTable from '../model/ExportSendigDatasetsTable';
import ExportSendigVariablesTable from '../model/ExportSendigVariablesTable';
import ExportSendigWorkbook from '../model/ExportSendigWorkbook';
import RootSendigDatasetVariable from '../model/RootSendigDatasetVariable';
import SendigClass from '../model/SendigClass';
import SendigClassDatasets from '../model/SendigClassDatasets';
import SendigClasses from '../model/SendigClasses';
import SendigDataset from '../model/SendigDataset';
import SendigDatasetVariable from '../model/SendigDatasetVariable';
import SendigDatasetVariables from '../model/SendigDatasetVariables';
import SendigDatasets from '../model/SendigDatasets';
import SendigProduct from '../model/SendigProduct';
import XmlRootSendigDatasetVariable from '../model/XmlRootSendigDatasetVariable';
import XmlSendigClass from '../model/XmlSendigClass';
import XmlSendigClassDatasets from '../model/XmlSendigClassDatasets';
import XmlSendigClasses from '../model/XmlSendigClasses';
import XmlSendigDataset from '../model/XmlSendigDataset';
import XmlSendigDatasetVariable from '../model/XmlSendigDatasetVariable';
import XmlSendigDatasetVariables from '../model/XmlSendigDatasetVariables';
import XmlSendigDatasets from '../model/XmlSendigDatasets';
import XmlSendigProduct from '../model/XmlSendigProduct';

/**
* SENDImplementationGuideSENDIG service.
* @module api/SENDImplementationGuideSENDIGApi
* @version 1.1.0
*/
export default class SENDImplementationGuideSENDIGApi {

    /**
    * Constructs a new SENDImplementationGuideSENDIGApi. 
    * @alias module:api/SENDImplementationGuideSENDIGApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mdrRootSendigDatasetsDatasetVariablesVarGet operation.
     * @callback module:api/SENDImplementationGuideSENDIGApi~mdrRootSendigDatasetsDatasetVariablesVarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RootSendigDatasetVariable} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Root SENDIG Dataset Variable
     * @param {String} dataset SENDIG Dataset Identifier
     * @param {String} _var SENDIG Variable Identifier
     * @param {module:api/SENDImplementationGuideSENDIGApi~mdrRootSendigDatasetsDatasetVariablesVarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RootSendigDatasetVariable}
     */
    mdrRootSendigDatasetsDatasetVariablesVarGet(dataset, _var, callback) {
      let postBody = null;
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrRootSendigDatasetsDatasetVariablesVarGet");
      }
      // verify the required parameter '_var' is set
      if (_var === undefined || _var === null) {
        throw new Error("Missing the required parameter '_var' when calling mdrRootSendigDatasetsDatasetVariablesVarGet");
      }

      let pathParams = {
        'dataset': dataset,
        'var': _var
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RootSendigDatasetVariable;
      return this.apiClient.callApi(
        '/mdr/root/sendig/datasets/{dataset}/variables/{var}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSendigVersionClassesClassDatasetsGet operation.
     * @callback module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionClassesClassDatasetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendigClassDatasets} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SENDIG Class Dataset List
     * @param {String} version CDISC Library Product Version
     * @param {String} _class SENDIG Class Identifier
     * @param {module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionClassesClassDatasetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendigClassDatasets}
     */
    mdrSendigVersionClassesClassDatasetsGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSendigVersionClassesClassDatasetsGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrSendigVersionClassesClassDatasetsGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SendigClassDatasets;
      return this.apiClient.callApi(
        '/mdr/sendig/{version}/classes/{class}/datasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSendigVersionClassesClassGet operation.
     * @callback module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionClassesClassGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendigClass} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SENDIG Class
     * @param {String} version CDISC Library Product Version
     * @param {String} _class SENDIG Class Identifier
     * @param {module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionClassesClassGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendigClass}
     */
    mdrSendigVersionClassesClassGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSendigVersionClassesClassGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrSendigVersionClassesClassGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SendigClass;
      return this.apiClient.callApi(
        '/mdr/sendig/{version}/classes/{class}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSendigVersionClassesGet operation.
     * @callback module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionClassesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendigClasses} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SENDIG Class List
     * @param {String} version CDISC Library Product Version
     * @param {module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionClassesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendigClasses}
     */
    mdrSendigVersionClassesGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSendigVersionClassesGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SendigClasses;
      return this.apiClient.callApi(
        '/mdr/sendig/{version}/classes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSendigVersionDatasetsDatasetGet operation.
     * @callback module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionDatasetsDatasetGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendigDataset} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SENDIG Dataset
     * @param {String} version CDISC Library Product Version
     * @param {String} dataset SENDIG Class Identifier
     * @param {module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionDatasetsDatasetGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendigDataset}
     */
    mdrSendigVersionDatasetsDatasetGet(version, dataset, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSendigVersionDatasetsDatasetGet");
      }
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrSendigVersionDatasetsDatasetGet");
      }

      let pathParams = {
        'version': version,
        'dataset': dataset
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SendigDataset;
      return this.apiClient.callApi(
        '/mdr/sendig/{version}/datasets/{dataset}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSendigVersionDatasetsDatasetVariablesGet operation.
     * @callback module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionDatasetsDatasetVariablesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendigDatasetVariables} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SENDIG Dataset Variable List
     * @param {String} version CDISC Library Product Version
     * @param {String} dataset SENDIG Class Identifier
     * @param {module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionDatasetsDatasetVariablesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendigDatasetVariables}
     */
    mdrSendigVersionDatasetsDatasetVariablesGet(version, dataset, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSendigVersionDatasetsDatasetVariablesGet");
      }
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrSendigVersionDatasetsDatasetVariablesGet");
      }

      let pathParams = {
        'version': version,
        'dataset': dataset
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SendigDatasetVariables;
      return this.apiClient.callApi(
        '/mdr/sendig/{version}/datasets/{dataset}/variables', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSendigVersionDatasetsDatasetVariablesVarGet operation.
     * @callback module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionDatasetsDatasetVariablesVarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendigDatasetVariable} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SENDIG Dataset Variable
     * @param {String} version CDISC Library Product Version
     * @param {String} dataset SENDIG Class Identifier
     * @param {String} _var SENDIG Variable Identifier
     * @param {module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionDatasetsDatasetVariablesVarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendigDatasetVariable}
     */
    mdrSendigVersionDatasetsDatasetVariablesVarGet(version, dataset, _var, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSendigVersionDatasetsDatasetVariablesVarGet");
      }
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrSendigVersionDatasetsDatasetVariablesVarGet");
      }
      // verify the required parameter '_var' is set
      if (_var === undefined || _var === null) {
        throw new Error("Missing the required parameter '_var' when calling mdrSendigVersionDatasetsDatasetVariablesVarGet");
      }

      let pathParams = {
        'version': version,
        'dataset': dataset,
        'var': _var
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SendigDatasetVariable;
      return this.apiClient.callApi(
        '/mdr/sendig/{version}/datasets/{dataset}/variables/{var}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSendigVersionDatasetsGet operation.
     * @callback module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionDatasetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendigDatasets} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SENDIG Dataset List
     * @param {String} version CDISC Library Product Version
     * @param {module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionDatasetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendigDatasets}
     */
    mdrSendigVersionDatasetsGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSendigVersionDatasetsGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv'];
      let returnType = SendigDatasets;
      return this.apiClient.callApi(
        '/mdr/sendig/{version}/datasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSendigVersionGet operation.
     * @callback module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendigProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SENDIG product
     * @param {String} version CDISC Library Product Version
     * @param {module:api/SENDImplementationGuideSENDIGApi~mdrSendigVersionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendigProduct}
     */
    mdrSendigVersionGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSendigVersionGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = SendigProduct;
      return this.apiClient.callApi(
        '/mdr/sendig/{version}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
