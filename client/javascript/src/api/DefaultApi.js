/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import About from '../model/About';
import DefaultErrorResponse from '../model/DefaultErrorResponse';
import Lastupdated from '../model/Lastupdated';
import ProductgroupDataAnalysis from '../model/ProductgroupDataAnalysis';
import ProductgroupDataCollection from '../model/ProductgroupDataCollection';
import ProductgroupDataTabulation from '../model/ProductgroupDataTabulation';
import ProductgroupQrs from '../model/ProductgroupQrs';
import ProductgroupTerminology from '../model/ProductgroupTerminology';
import Products from '../model/Products';
import XmlAbout from '../model/XmlAbout';
import XmlLastupdated from '../model/XmlLastupdated';
import XmlProductgroupDataAnalysis from '../model/XmlProductgroupDataAnalysis';
import XmlProductgroupDataCollection from '../model/XmlProductgroupDataCollection';
import XmlProductgroupDataTabulation from '../model/XmlProductgroupDataTabulation';
import XmlProductgroupTerminology from '../model/XmlProductgroupTerminology';
import XmlProducts from '../model/XmlProducts';

/**
* Default service.
* @module api/DefaultApi
* @version 1.1.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mdrAboutGet operation.
     * @callback module:api/DefaultApi~mdrAboutGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/About} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Information About CDISC Library
     * @param {module:api/DefaultApi~mdrAboutGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/About}
     */
    mdrAboutGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = About;
      return this.apiClient.callApi(
        '/mdr/about', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrLastupdatedGet operation.
     * @callback module:api/DefaultApi~mdrLastupdatedGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Lastupdated} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDISC Library Last Updated
     * @param {module:api/DefaultApi~mdrLastupdatedGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Lastupdated}
     */
    mdrLastupdatedGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Lastupdated;
      return this.apiClient.callApi(
        '/mdr/lastupdated', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrProductsDataAnalysisGet operation.
     * @callback module:api/DefaultApi~mdrProductsDataAnalysisGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductgroupDataAnalysis} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDISC Library Product Group Data Analysis
     * @param {module:api/DefaultApi~mdrProductsDataAnalysisGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductgroupDataAnalysis}
     */
    mdrProductsDataAnalysisGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = ProductgroupDataAnalysis;
      return this.apiClient.callApi(
        '/mdr/products/DataAnalysis', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrProductsDataCollectionGet operation.
     * @callback module:api/DefaultApi~mdrProductsDataCollectionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductgroupDataCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDISC Library Product Group Data Collection
     * @param {module:api/DefaultApi~mdrProductsDataCollectionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductgroupDataCollection}
     */
    mdrProductsDataCollectionGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = ProductgroupDataCollection;
      return this.apiClient.callApi(
        '/mdr/products/DataCollection', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrProductsDataTabulationGet operation.
     * @callback module:api/DefaultApi~mdrProductsDataTabulationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductgroupDataTabulation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDISC Library Product Group Data Tabulation
     * @param {module:api/DefaultApi~mdrProductsDataTabulationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductgroupDataTabulation}
     */
    mdrProductsDataTabulationGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = ProductgroupDataTabulation;
      return this.apiClient.callApi(
        '/mdr/products/DataTabulation', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrProductsGet operation.
     * @callback module:api/DefaultApi~mdrProductsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Products} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDISC Library Products
     * @param {module:api/DefaultApi~mdrProductsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Products}
     */
    mdrProductsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Products;
      return this.apiClient.callApi(
        '/mdr/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrProductsMeasuresGet operation.
     * @callback module:api/DefaultApi~mdrProductsMeasuresGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductgroupQrs} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDISC Library Product Group QRS
     * @param {module:api/DefaultApi~mdrProductsMeasuresGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductgroupQrs}
     */
    mdrProductsMeasuresGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductgroupQrs;
      return this.apiClient.callApi(
        '/mdr/products/Measures', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrProductsTerminologyGet operation.
     * @callback module:api/DefaultApi~mdrProductsTerminologyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductgroupTerminology} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDISC Library Product Group Terminology
     * @param {module:api/DefaultApi~mdrProductsTerminologyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductgroupTerminology}
     */
    mdrProductsTerminologyGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = ProductgroupTerminology;
      return this.apiClient.callApi(
        '/mdr/products/Terminology', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
