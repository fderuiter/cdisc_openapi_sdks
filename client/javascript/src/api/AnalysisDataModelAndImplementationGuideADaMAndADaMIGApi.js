/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdamDatastructure from '../model/AdamDatastructure';
import AdamDatastructureVariables from '../model/AdamDatastructureVariables';
import AdamDatastructureVarsets from '../model/AdamDatastructureVarsets';
import AdamProduct from '../model/AdamProduct';
import AdamProductDatastructures from '../model/AdamProductDatastructures';
import AdamVariable from '../model/AdamVariable';
import AdamVarset from '../model/AdamVarset';
import DefaultErrorResponse from '../model/DefaultErrorResponse';
import ExportAdamDatastructuresTable from '../model/ExportAdamDatastructuresTable';
import ExportAdamVariablesTable from '../model/ExportAdamVariablesTable';
import ExportAdamWorkbook from '../model/ExportAdamWorkbook';
import XmlAdamDatastructure from '../model/XmlAdamDatastructure';
import XmlAdamDatastructureVariables from '../model/XmlAdamDatastructureVariables';
import XmlAdamDatastructureVarsets from '../model/XmlAdamDatastructureVarsets';
import XmlAdamProduct from '../model/XmlAdamProduct';
import XmlAdamProductDatastructures from '../model/XmlAdamProductDatastructures';
import XmlAdamVariable from '../model/XmlAdamVariable';
import XmlAdamVarset from '../model/XmlAdamVarset';

/**
* AnalysisDataModelAndImplementationGuideADaMAndADaMIG service.
* @module api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi
* @version 1.1.0
*/
export default class AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi {

    /**
    * Constructs a new AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi. 
    * @alias module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mdrAdamProductDatastructuresGet operation.
     * @callback module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdamProductDatastructures} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ADaM Data Structure List
     * @param {String} product CDISC Library Product
     * @param {module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdamProductDatastructures}
     */
    mdrAdamProductDatastructuresGet(product, callback) {
      let postBody = null;
      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling mdrAdamProductDatastructuresGet");
      }

      let pathParams = {
        'product': product
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv'];
      let returnType = AdamProductDatastructures;
      return this.apiClient.callApi(
        '/mdr/adam/{product}/datastructures', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrAdamProductDatastructuresStructureGet operation.
     * @callback module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdamDatastructure} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ADaM Data Structure
     * @param {String} product CDISC Library Product
     * @param {String} structure Data structure Identifier
     * @param {module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdamDatastructure}
     */
    mdrAdamProductDatastructuresStructureGet(product, structure, callback) {
      let postBody = null;
      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling mdrAdamProductDatastructuresStructureGet");
      }
      // verify the required parameter 'structure' is set
      if (structure === undefined || structure === null) {
        throw new Error("Missing the required parameter 'structure' when calling mdrAdamProductDatastructuresStructureGet");
      }

      let pathParams = {
        'product': product,
        'structure': structure
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = AdamDatastructure;
      return this.apiClient.callApi(
        '/mdr/adam/{product}/datastructures/{structure}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrAdamProductDatastructuresStructureVariablesGet operation.
     * @callback module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureVariablesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdamDatastructureVariables} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ADaM Variable List
     * @param {String} product CDISC Library Product
     * @param {String} structure ADaM Data Structure Identifier
     * @param {module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureVariablesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdamDatastructureVariables}
     */
    mdrAdamProductDatastructuresStructureVariablesGet(product, structure, callback) {
      let postBody = null;
      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling mdrAdamProductDatastructuresStructureVariablesGet");
      }
      // verify the required parameter 'structure' is set
      if (structure === undefined || structure === null) {
        throw new Error("Missing the required parameter 'structure' when calling mdrAdamProductDatastructuresStructureVariablesGet");
      }

      let pathParams = {
        'product': product,
        'structure': structure
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = AdamDatastructureVariables;
      return this.apiClient.callApi(
        '/mdr/adam/{product}/datastructures/{structure}/variables', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrAdamProductDatastructuresStructureVariablesVarGet operation.
     * @callback module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureVariablesVarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdamVariable} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ADaM Variable
     * @param {String} product CDISC Library Product
     * @param {String} structure ADaM Data Structure Identifier
     * @param {String} _var ADaM Variable Identifier
     * @param {module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureVariablesVarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdamVariable}
     */
    mdrAdamProductDatastructuresStructureVariablesVarGet(product, structure, _var, callback) {
      let postBody = null;
      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling mdrAdamProductDatastructuresStructureVariablesVarGet");
      }
      // verify the required parameter 'structure' is set
      if (structure === undefined || structure === null) {
        throw new Error("Missing the required parameter 'structure' when calling mdrAdamProductDatastructuresStructureVariablesVarGet");
      }
      // verify the required parameter '_var' is set
      if (_var === undefined || _var === null) {
        throw new Error("Missing the required parameter '_var' when calling mdrAdamProductDatastructuresStructureVariablesVarGet");
      }

      let pathParams = {
        'product': product,
        'structure': structure,
        'var': _var
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = AdamVariable;
      return this.apiClient.callApi(
        '/mdr/adam/{product}/datastructures/{structure}/variables/{var}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrAdamProductDatastructuresStructureVarsetsGet operation.
     * @callback module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureVarsetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdamDatastructureVarsets} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ADaM Variable Set List
     * @param {String} product CDISC Library Product
     * @param {String} structure ADaM Data Structure Identifier
     * @param {module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureVarsetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdamDatastructureVarsets}
     */
    mdrAdamProductDatastructuresStructureVarsetsGet(product, structure, callback) {
      let postBody = null;
      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling mdrAdamProductDatastructuresStructureVarsetsGet");
      }
      // verify the required parameter 'structure' is set
      if (structure === undefined || structure === null) {
        throw new Error("Missing the required parameter 'structure' when calling mdrAdamProductDatastructuresStructureVarsetsGet");
      }

      let pathParams = {
        'product': product,
        'structure': structure
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = AdamDatastructureVarsets;
      return this.apiClient.callApi(
        '/mdr/adam/{product}/datastructures/{structure}/varsets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrAdamProductDatastructuresStructureVarsetsVarsetGet operation.
     * @callback module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureVarsetsVarsetGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdamVarset} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ADaM Variable Set
     * @param {String} product CDISC Library Product
     * @param {String} structure ADaM Data Structure Identifier
     * @param {String} varset ADaM Variable Set Identifier
     * @param {module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductDatastructuresStructureVarsetsVarsetGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdamVarset}
     */
    mdrAdamProductDatastructuresStructureVarsetsVarsetGet(product, structure, varset, callback) {
      let postBody = null;
      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling mdrAdamProductDatastructuresStructureVarsetsVarsetGet");
      }
      // verify the required parameter 'structure' is set
      if (structure === undefined || structure === null) {
        throw new Error("Missing the required parameter 'structure' when calling mdrAdamProductDatastructuresStructureVarsetsVarsetGet");
      }
      // verify the required parameter 'varset' is set
      if (varset === undefined || varset === null) {
        throw new Error("Missing the required parameter 'varset' when calling mdrAdamProductDatastructuresStructureVarsetsVarsetGet");
      }

      let pathParams = {
        'product': product,
        'structure': structure,
        'varset': varset
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = AdamVarset;
      return this.apiClient.callApi(
        '/mdr/adam/{product}/datastructures/{structure}/varsets/{varset}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrAdamProductGet operation.
     * @callback module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdamProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ADaM Product
     * @param {String} product CDISC Library Product
     * @param {module:api/AnalysisDataModelAndImplementationGuideADaMAndADaMIGApi~mdrAdamProductGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdamProduct}
     */
    mdrAdamProductGet(product, callback) {
      let postBody = null;
      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling mdrAdamProductGet");
      }

      let pathParams = {
        'product': product
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = AdamProduct;
      return this.apiClient.callApi(
        '/mdr/adam/{product}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
