/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportQrsCsvItemsRow model module.
 * @module model/ExportQrsCsvItemsRow
 * @version 1.1.0
 */
class ExportQrsCsvItemsRow {
    /**
     * Constructs a new <code>ExportQrsCsvItemsRow</code>.
     * @alias module:model/ExportQrsCsvItemsRow
     */
    constructor() { 
        
        ExportQrsCsvItemsRow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportQrsCsvItemsRow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportQrsCsvItemsRow} obj Optional instance to populate.
     * @return {module:model/ExportQrsCsvItemsRow} The populated <code>ExportQrsCsvItemsRow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportQrsCsvItemsRow();

            if (data.hasOwnProperty('QRS Measure Name')) {
                obj['QRS Measure Name'] = ApiClient.convertToType(data['QRS Measure Name'], 'String');
            }
            if (data.hasOwnProperty('QRS Measure Label')) {
                obj['QRS Measure Label'] = ApiClient.convertToType(data['QRS Measure Label'], 'String');
            }
            if (data.hasOwnProperty('QRS Measure Type')) {
                obj['QRS Measure Type'] = ApiClient.convertToType(data['QRS Measure Type'], 'String');
            }
            if (data.hasOwnProperty('Item Sequence')) {
                obj['Item Sequence'] = ApiClient.convertToType(data['Item Sequence'], 'String');
            }
            if (data.hasOwnProperty('Test Name')) {
                obj['Test Name'] = ApiClient.convertToType(data['Test Name'], 'String');
            }
            if (data.hasOwnProperty('Item Text')) {
                obj['Item Text'] = ApiClient.convertToType(data['Item Text'], 'String');
            }
            if (data.hasOwnProperty('Test&#39;s Codelist C-Code')) {
                obj['Test&#39;s Codelist C-Code'] = ApiClient.convertToType(data['Test's Codelist C-Code'], 'String');
            }
            if (data.hasOwnProperty('Test&#39;s Term C-Code')) {
                obj['Test&#39;s Term C-Code'] = ApiClient.convertToType(data['Test's Term C-Code'], 'String');
            }
            if (data.hasOwnProperty('Test Code&#39;s Codelist C-Code')) {
                obj['Test Code&#39;s Codelist C-Code'] = ApiClient.convertToType(data['Test Code's Codelist C-Code'], 'String');
            }
            if (data.hasOwnProperty('Test Code&#39;s Term C-Code')) {
                obj['Test Code&#39;s Term C-Code'] = ApiClient.convertToType(data['Test Code's Term C-Code'], 'String');
            }
            if (data.hasOwnProperty('Subcategory&#39;s Codelist C-Code')) {
                obj['Subcategory&#39;s Codelist C-Code'] = ApiClient.convertToType(data['Subcategory's Codelist C-Code'], 'String');
            }
            if (data.hasOwnProperty('Subcategory&#39;s Term C-Code')) {
                obj['Subcategory&#39;s Term C-Code'] = ApiClient.convertToType(data['Subcategory's Term C-Code'], 'String');
            }
            if (data.hasOwnProperty('Evaluator&#39;s Codelist C-Code')) {
                obj['Evaluator&#39;s Codelist C-Code'] = ApiClient.convertToType(data['Evaluator's Codelist C-Code'], 'String');
            }
            if (data.hasOwnProperty('Evaluator&#39;s Term C-Code')) {
                obj['Evaluator&#39;s Term C-Code'] = ApiClient.convertToType(data['Evaluator's Term C-Code'], 'String');
            }
            if (data.hasOwnProperty('Free-form Response&#39;s Datatype')) {
                obj['Free-form Response&#39;s Datatype'] = ApiClient.convertToType(data['Free-form Response's Datatype'], 'String');
            }
            if (data.hasOwnProperty('Response Group')) {
                obj['Response Group'] = ApiClient.convertToType(data['Response Group'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportQrsCsvItemsRow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportQrsCsvItemsRow</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['QRS Measure Name'] && !(typeof data['QRS Measure Name'] === 'string' || data['QRS Measure Name'] instanceof String)) {
            throw new Error("Expected the field `QRS Measure Name` to be a primitive type in the JSON string but got " + data['QRS Measure Name']);
        }
        // ensure the json data is a string
        if (data['QRS Measure Label'] && !(typeof data['QRS Measure Label'] === 'string' || data['QRS Measure Label'] instanceof String)) {
            throw new Error("Expected the field `QRS Measure Label` to be a primitive type in the JSON string but got " + data['QRS Measure Label']);
        }
        // ensure the json data is a string
        if (data['QRS Measure Type'] && !(typeof data['QRS Measure Type'] === 'string' || data['QRS Measure Type'] instanceof String)) {
            throw new Error("Expected the field `QRS Measure Type` to be a primitive type in the JSON string but got " + data['QRS Measure Type']);
        }
        // ensure the json data is a string
        if (data['Item Sequence'] && !(typeof data['Item Sequence'] === 'string' || data['Item Sequence'] instanceof String)) {
            throw new Error("Expected the field `Item Sequence` to be a primitive type in the JSON string but got " + data['Item Sequence']);
        }
        // ensure the json data is a string
        if (data['Test Name'] && !(typeof data['Test Name'] === 'string' || data['Test Name'] instanceof String)) {
            throw new Error("Expected the field `Test Name` to be a primitive type in the JSON string but got " + data['Test Name']);
        }
        // ensure the json data is a string
        if (data['Item Text'] && !(typeof data['Item Text'] === 'string' || data['Item Text'] instanceof String)) {
            throw new Error("Expected the field `Item Text` to be a primitive type in the JSON string but got " + data['Item Text']);
        }
        // ensure the json data is a string
        if (data['Test's Codelist C-Code'] && !(typeof data['Test's Codelist C-Code'] === 'string' || data['Test's Codelist C-Code'] instanceof String)) {
            throw new Error("Expected the field `Test's Codelist C-Code` to be a primitive type in the JSON string but got " + data['Test's Codelist C-Code']);
        }
        // ensure the json data is a string
        if (data['Test's Term C-Code'] && !(typeof data['Test's Term C-Code'] === 'string' || data['Test's Term C-Code'] instanceof String)) {
            throw new Error("Expected the field `Test's Term C-Code` to be a primitive type in the JSON string but got " + data['Test's Term C-Code']);
        }
        // ensure the json data is a string
        if (data['Test Code's Codelist C-Code'] && !(typeof data['Test Code's Codelist C-Code'] === 'string' || data['Test Code's Codelist C-Code'] instanceof String)) {
            throw new Error("Expected the field `Test Code's Codelist C-Code` to be a primitive type in the JSON string but got " + data['Test Code's Codelist C-Code']);
        }
        // ensure the json data is a string
        if (data['Test Code's Term C-Code'] && !(typeof data['Test Code's Term C-Code'] === 'string' || data['Test Code's Term C-Code'] instanceof String)) {
            throw new Error("Expected the field `Test Code's Term C-Code` to be a primitive type in the JSON string but got " + data['Test Code's Term C-Code']);
        }
        // ensure the json data is a string
        if (data['Subcategory's Codelist C-Code'] && !(typeof data['Subcategory's Codelist C-Code'] === 'string' || data['Subcategory's Codelist C-Code'] instanceof String)) {
            throw new Error("Expected the field `Subcategory's Codelist C-Code` to be a primitive type in the JSON string but got " + data['Subcategory's Codelist C-Code']);
        }
        // ensure the json data is a string
        if (data['Subcategory's Term C-Code'] && !(typeof data['Subcategory's Term C-Code'] === 'string' || data['Subcategory's Term C-Code'] instanceof String)) {
            throw new Error("Expected the field `Subcategory's Term C-Code` to be a primitive type in the JSON string but got " + data['Subcategory's Term C-Code']);
        }
        // ensure the json data is a string
        if (data['Evaluator's Codelist C-Code'] && !(typeof data['Evaluator's Codelist C-Code'] === 'string' || data['Evaluator's Codelist C-Code'] instanceof String)) {
            throw new Error("Expected the field `Evaluator's Codelist C-Code` to be a primitive type in the JSON string but got " + data['Evaluator's Codelist C-Code']);
        }
        // ensure the json data is a string
        if (data['Evaluator's Term C-Code'] && !(typeof data['Evaluator's Term C-Code'] === 'string' || data['Evaluator's Term C-Code'] instanceof String)) {
            throw new Error("Expected the field `Evaluator's Term C-Code` to be a primitive type in the JSON string but got " + data['Evaluator's Term C-Code']);
        }
        // ensure the json data is a string
        if (data['Free-form Response's Datatype'] && !(typeof data['Free-form Response's Datatype'] === 'string' || data['Free-form Response's Datatype'] instanceof String)) {
            throw new Error("Expected the field `Free-form Response's Datatype` to be a primitive type in the JSON string but got " + data['Free-form Response's Datatype']);
        }
        // ensure the json data is a string
        if (data['Response Group'] && !(typeof data['Response Group'] === 'string' || data['Response Group'] instanceof String)) {
            throw new Error("Expected the field `Response Group` to be a primitive type in the JSON string but got " + data['Response Group']);
        }

        return true;
    }


}



/**
 * @member {String} QRS Measure Name
 */
ExportQrsCsvItemsRow.prototype['QRS Measure Name'] = undefined;

/**
 * @member {String} QRS Measure Label
 */
ExportQrsCsvItemsRow.prototype['QRS Measure Label'] = undefined;

/**
 * @member {String} QRS Measure Type
 */
ExportQrsCsvItemsRow.prototype['QRS Measure Type'] = undefined;

/**
 * @member {String} Item Sequence
 */
ExportQrsCsvItemsRow.prototype['Item Sequence'] = undefined;

/**
 * @member {String} Test Name
 */
ExportQrsCsvItemsRow.prototype['Test Name'] = undefined;

/**
 * @member {String} Item Text
 */
ExportQrsCsvItemsRow.prototype['Item Text'] = undefined;

/**
 * @member {String} Test&#39;s Codelist C-Code
 */
ExportQrsCsvItemsRow.prototype['Test&#39;s Codelist C-Code'] = undefined;

/**
 * @member {String} Test&#39;s Term C-Code
 */
ExportQrsCsvItemsRow.prototype['Test&#39;s Term C-Code'] = undefined;

/**
 * @member {String} Test Code&#39;s Codelist C-Code
 */
ExportQrsCsvItemsRow.prototype['Test Code&#39;s Codelist C-Code'] = undefined;

/**
 * @member {String} Test Code&#39;s Term C-Code
 */
ExportQrsCsvItemsRow.prototype['Test Code&#39;s Term C-Code'] = undefined;

/**
 * @member {String} Subcategory&#39;s Codelist C-Code
 */
ExportQrsCsvItemsRow.prototype['Subcategory&#39;s Codelist C-Code'] = undefined;

/**
 * @member {String} Subcategory&#39;s Term C-Code
 */
ExportQrsCsvItemsRow.prototype['Subcategory&#39;s Term C-Code'] = undefined;

/**
 * @member {String} Evaluator&#39;s Codelist C-Code
 */
ExportQrsCsvItemsRow.prototype['Evaluator&#39;s Codelist C-Code'] = undefined;

/**
 * @member {String} Evaluator&#39;s Term C-Code
 */
ExportQrsCsvItemsRow.prototype['Evaluator&#39;s Term C-Code'] = undefined;

/**
 * @member {String} Free-form Response&#39;s Datatype
 */
ExportQrsCsvItemsRow.prototype['Free-form Response&#39;s Datatype'] = undefined;

/**
 * @member {String} Response Group
 */
ExportQrsCsvItemsRow.prototype['Response Group'] = undefined;






export default ExportQrsCsvItemsRow;

