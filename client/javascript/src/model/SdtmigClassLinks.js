/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SdtmClassRef from './SdtmClassRef';
import SdtmigClassRef from './SdtmigClassRef';
import SdtmigClassRefSubclass from './SdtmigClassRefSubclass';
import SdtmigProductRef from './SdtmigProductRef';

/**
 * The SdtmigClassLinks model module.
 * @module model/SdtmigClassLinks
 * @version 1.1.0
 */
class SdtmigClassLinks {
    /**
     * Constructs a new <code>SdtmigClassLinks</code>.
     * @alias module:model/SdtmigClassLinks
     */
    constructor() { 
        
        SdtmigClassLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SdtmigClassLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SdtmigClassLinks} obj Optional instance to populate.
     * @return {module:model/SdtmigClassLinks} The populated <code>SdtmigClassLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SdtmigClassLinks();

            if (data.hasOwnProperty('self')) {
                obj['self'] = SdtmigClassRef.constructFromObject(data['self']);
            }
            if (data.hasOwnProperty('modelClass')) {
                obj['modelClass'] = SdtmClassRef.constructFromObject(data['modelClass']);
            }
            if (data.hasOwnProperty('parentProduct')) {
                obj['parentProduct'] = SdtmigProductRef.constructFromObject(data['parentProduct']);
            }
            if (data.hasOwnProperty('parentClass')) {
                obj['parentClass'] = SdtmigClassRef.constructFromObject(data['parentClass']);
            }
            if (data.hasOwnProperty('subclasses')) {
                obj['subclasses'] = ApiClient.convertToType(data['subclasses'], [SdtmigClassRefSubclass]);
            }
            if (data.hasOwnProperty('priorVersion')) {
                obj['priorVersion'] = SdtmigClassRef.constructFromObject(data['priorVersion']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SdtmigClassLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SdtmigClassLinks</code>.
     */
    static validateJSON(data) {
        // validate the optional field `self`
        if (data['self']) { // data not null
          SdtmigClassRef.validateJSON(data['self']);
        }
        // validate the optional field `modelClass`
        if (data['modelClass']) { // data not null
          SdtmClassRef.validateJSON(data['modelClass']);
        }
        // validate the optional field `parentProduct`
        if (data['parentProduct']) { // data not null
          SdtmigProductRef.validateJSON(data['parentProduct']);
        }
        // validate the optional field `parentClass`
        if (data['parentClass']) { // data not null
          SdtmigClassRef.validateJSON(data['parentClass']);
        }
        if (data['subclasses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['subclasses'])) {
                throw new Error("Expected the field `subclasses` to be an array in the JSON data but got " + data['subclasses']);
            }
            // validate the optional field `subclasses` (array)
            for (const item of data['subclasses']) {
                SdtmigClassRefSubclass.validateJSON(item);
            };
        }
        // validate the optional field `priorVersion`
        if (data['priorVersion']) { // data not null
          SdtmigClassRef.validateJSON(data['priorVersion']);
        }

        return true;
    }


}



/**
 * @member {module:model/SdtmigClassRef} self
 */
SdtmigClassLinks.prototype['self'] = undefined;

/**
 * @member {module:model/SdtmClassRef} modelClass
 */
SdtmigClassLinks.prototype['modelClass'] = undefined;

/**
 * @member {module:model/SdtmigProductRef} parentProduct
 */
SdtmigClassLinks.prototype['parentProduct'] = undefined;

/**
 * @member {module:model/SdtmigClassRef} parentClass
 */
SdtmigClassLinks.prototype['parentClass'] = undefined;

/**
 * @member {Array.<module:model/SdtmigClassRefSubclass>} subclasses
 */
SdtmigClassLinks.prototype['subclasses'] = undefined;

/**
 * @member {module:model/SdtmigClassRef} priorVersion
 */
SdtmigClassLinks.prototype['priorVersion'] = undefined;






export default SdtmigClassLinks;

