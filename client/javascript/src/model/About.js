/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AboutLinks from './AboutLinks';

/**
 * The About model module.
 * @module model/About
 * @version 1.1.0
 */
class About {
    /**
     * Constructs a new <code>About</code>.
     * @alias module:model/About
     */
    constructor() { 
        
        About.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>About</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/About} obj Optional instance to populate.
     * @return {module:model/About} The populated <code>About</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new About();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = AboutLinks.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('release-notes')) {
                obj['release-notes'] = ApiClient.convertToType(data['release-notes'], 'String');
            }
            if (data.hasOwnProperty('api-documentation')) {
                obj['api-documentation'] = ApiClient.convertToType(data['api-documentation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>About</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>About</code>.
     */
    static validateJSON(data) {
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          AboutLinks.validateJSON(data['_links']);
        }
        // ensure the json data is a string
        if (data['release-notes'] && !(typeof data['release-notes'] === 'string' || data['release-notes'] instanceof String)) {
            throw new Error("Expected the field `release-notes` to be a primitive type in the JSON string but got " + data['release-notes']);
        }
        // ensure the json data is a string
        if (data['api-documentation'] && !(typeof data['api-documentation'] === 'string' || data['api-documentation'] instanceof String)) {
            throw new Error("Expected the field `api-documentation` to be a primitive type in the JSON string but got " + data['api-documentation']);
        }

        return true;
    }


}



/**
 * @member {module:model/AboutLinks} _links
 */
About.prototype['_links'] = undefined;

/**
 * @member {String} release-notes
 */
About.prototype['release-notes'] = undefined;

/**
 * @member {String} api-documentation
 */
About.prototype['api-documentation'] = undefined;






export default About;

