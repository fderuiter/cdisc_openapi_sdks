/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CdashigClassDomainsRef from './CdashigClassDomainsRef';
import CdashigDomainRefElement from './CdashigDomainRefElement';

/**
 * The CdashigClassDomainsLinks model module.
 * @module model/CdashigClassDomainsLinks
 * @version 1.1.0
 */
class CdashigClassDomainsLinks {
    /**
     * Constructs a new <code>CdashigClassDomainsLinks</code>.
     * @alias module:model/CdashigClassDomainsLinks
     */
    constructor() { 
        
        CdashigClassDomainsLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CdashigClassDomainsLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CdashigClassDomainsLinks} obj Optional instance to populate.
     * @return {module:model/CdashigClassDomainsLinks} The populated <code>CdashigClassDomainsLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CdashigClassDomainsLinks();

            if (data.hasOwnProperty('self')) {
                obj['self'] = CdashigClassDomainsRef.constructFromObject(data['self']);
            }
            if (data.hasOwnProperty('domains')) {
                obj['domains'] = ApiClient.convertToType(data['domains'], [CdashigDomainRefElement]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CdashigClassDomainsLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CdashigClassDomainsLinks</code>.
     */
    static validateJSON(data) {
        // validate the optional field `self`
        if (data['self']) { // data not null
          CdashigClassDomainsRef.validateJSON(data['self']);
        }
        if (data['domains']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['domains'])) {
                throw new Error("Expected the field `domains` to be an array in the JSON data but got " + data['domains']);
            }
            // validate the optional field `domains` (array)
            for (const item of data['domains']) {
                CdashigDomainRefElement.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/CdashigClassDomainsRef} self
 */
CdashigClassDomainsLinks.prototype['self'] = undefined;

/**
 * @member {Array.<module:model/CdashigDomainRefElement>} domains
 */
CdashigClassDomainsLinks.prototype['domains'] = undefined;






export default CdashigClassDomainsLinks;

