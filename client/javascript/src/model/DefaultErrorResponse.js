/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DefaultErrorResponse model module.
 * @module model/DefaultErrorResponse
 * @version 1.1.0
 */
class DefaultErrorResponse {
    /**
     * Constructs a new <code>DefaultErrorResponse</code>.
     * @alias module:model/DefaultErrorResponse
     */
    constructor() { 
        
        DefaultErrorResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DefaultErrorResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DefaultErrorResponse} obj Optional instance to populate.
     * @return {module:model/DefaultErrorResponse} The populated <code>DefaultErrorResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DefaultErrorResponse();

            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], 'String');
            }
            if (data.hasOwnProperty('reasonPhrase')) {
                obj['reasonPhrase'] = ApiClient.convertToType(data['reasonPhrase'], 'String');
            }
            if (data.hasOwnProperty('userMessage')) {
                obj['userMessage'] = ApiClient.convertToType(data['userMessage'], 'String');
            }
            if (data.hasOwnProperty('adminMessage')) {
                obj['adminMessage'] = ApiClient.convertToType(data['adminMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DefaultErrorResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DefaultErrorResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['statusCode'] && !(typeof data['statusCode'] === 'string' || data['statusCode'] instanceof String)) {
            throw new Error("Expected the field `statusCode` to be a primitive type in the JSON string but got " + data['statusCode']);
        }
        // ensure the json data is a string
        if (data['reasonPhrase'] && !(typeof data['reasonPhrase'] === 'string' || data['reasonPhrase'] instanceof String)) {
            throw new Error("Expected the field `reasonPhrase` to be a primitive type in the JSON string but got " + data['reasonPhrase']);
        }
        // ensure the json data is a string
        if (data['userMessage'] && !(typeof data['userMessage'] === 'string' || data['userMessage'] instanceof String)) {
            throw new Error("Expected the field `userMessage` to be a primitive type in the JSON string but got " + data['userMessage']);
        }
        // ensure the json data is a string
        if (data['adminMessage'] && !(typeof data['adminMessage'] === 'string' || data['adminMessage'] instanceof String)) {
            throw new Error("Expected the field `adminMessage` to be a primitive type in the JSON string but got " + data['adminMessage']);
        }

        return true;
    }


}



/**
 * HTTP Status Code
 * @member {String} statusCode
 */
DefaultErrorResponse.prototype['statusCode'] = undefined;

/**
 * HTTP Reason Phrase
 * @member {String} reasonPhrase
 */
DefaultErrorResponse.prototype['reasonPhrase'] = undefined;

/**
 * User Error Message
 * @member {String} userMessage
 */
DefaultErrorResponse.prototype['userMessage'] = undefined;

/**
 * Admin Error Message
 * @member {String} adminMessage
 */
DefaultErrorResponse.prototype['adminMessage'] = undefined;






export default DefaultErrorResponse;

