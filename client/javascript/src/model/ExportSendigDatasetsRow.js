/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportSendigDatasetsRow model module.
 * @module model/ExportSendigDatasetsRow
 * @version 1.1.0
 */
class ExportSendigDatasetsRow {
    /**
     * Constructs a new <code>ExportSendigDatasetsRow</code>.
     * @alias module:model/ExportSendigDatasetsRow
     */
    constructor() { 
        
        ExportSendigDatasetsRow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportSendigDatasetsRow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportSendigDatasetsRow} obj Optional instance to populate.
     * @return {module:model/ExportSendigDatasetsRow} The populated <code>ExportSendigDatasetsRow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportSendigDatasetsRow();

            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
            if (data.hasOwnProperty('Class')) {
                obj['Class'] = ApiClient.convertToType(data['Class'], 'String');
            }
            if (data.hasOwnProperty('Dataset Name')) {
                obj['Dataset Name'] = ApiClient.convertToType(data['Dataset Name'], 'String');
            }
            if (data.hasOwnProperty('Dataset Label')) {
                obj['Dataset Label'] = ApiClient.convertToType(data['Dataset Label'], 'String');
            }
            if (data.hasOwnProperty('Structure')) {
                obj['Structure'] = ApiClient.convertToType(data['Structure'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportSendigDatasetsRow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportSendigDatasetsRow</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Version'] && !(typeof data['Version'] === 'string' || data['Version'] instanceof String)) {
            throw new Error("Expected the field `Version` to be a primitive type in the JSON string but got " + data['Version']);
        }
        // ensure the json data is a string
        if (data['Class'] && !(typeof data['Class'] === 'string' || data['Class'] instanceof String)) {
            throw new Error("Expected the field `Class` to be a primitive type in the JSON string but got " + data['Class']);
        }
        // ensure the json data is a string
        if (data['Dataset Name'] && !(typeof data['Dataset Name'] === 'string' || data['Dataset Name'] instanceof String)) {
            throw new Error("Expected the field `Dataset Name` to be a primitive type in the JSON string but got " + data['Dataset Name']);
        }
        // ensure the json data is a string
        if (data['Dataset Label'] && !(typeof data['Dataset Label'] === 'string' || data['Dataset Label'] instanceof String)) {
            throw new Error("Expected the field `Dataset Label` to be a primitive type in the JSON string but got " + data['Dataset Label']);
        }
        // ensure the json data is a string
        if (data['Structure'] && !(typeof data['Structure'] === 'string' || data['Structure'] instanceof String)) {
            throw new Error("Expected the field `Structure` to be a primitive type in the JSON string but got " + data['Structure']);
        }

        return true;
    }


}



/**
 * @member {String} Version
 */
ExportSendigDatasetsRow.prototype['Version'] = undefined;

/**
 * @member {String} Class
 */
ExportSendigDatasetsRow.prototype['Class'] = undefined;

/**
 * @member {String} Dataset Name
 */
ExportSendigDatasetsRow.prototype['Dataset Name'] = undefined;

/**
 * @member {String} Dataset Label
 */
ExportSendigDatasetsRow.prototype['Dataset Label'] = undefined;

/**
 * @member {String} Structure
 */
ExportSendigDatasetsRow.prototype['Structure'] = undefined;






export default ExportSendigDatasetsRow;

