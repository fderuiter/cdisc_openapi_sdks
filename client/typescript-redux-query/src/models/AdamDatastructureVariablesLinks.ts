// tslint:disable
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AdamDatastructureVariablesRef,
    AdamDatastructureVariablesRefFromJSON,
    AdamDatastructureVariablesRefToJSON,
    AdamProductRef,
    AdamProductRefFromJSON,
    AdamProductRefToJSON,
    AdamVariableRefElement,
    AdamVariableRefElementFromJSON,
    AdamVariableRefElementToJSON,
} from './';

/**
 * 
 * @export
 * @interface AdamDatastructureVariablesLinks
 */
export interface AdamDatastructureVariablesLinks  {
    /**
     * 
     * @type {AdamDatastructureVariablesRef}
     * @memberof AdamDatastructureVariablesLinks
     */
    self?: AdamDatastructureVariablesRef;
    /**
     * 
     * @type {AdamProductRef}
     * @memberof AdamDatastructureVariablesLinks
     */
    parentProduct?: AdamProductRef;
    /**
     * 
     * @type {AdamDatastructureVariablesRef}
     * @memberof AdamDatastructureVariablesLinks
     */
    priorVersion?: AdamDatastructureVariablesRef;
    /**
     * 
     * @type {Array<AdamVariableRefElement>}
     * @memberof AdamDatastructureVariablesLinks
     */
    analysisVariables?: Array<AdamVariableRefElement>;
}

export function AdamDatastructureVariablesLinksFromJSON(json: any): AdamDatastructureVariablesLinks {
    return {
        'self': !exists(json, 'self') ? undefined : AdamDatastructureVariablesRefFromJSON(json['self']),
        'parentProduct': !exists(json, 'parentProduct') ? undefined : AdamProductRefFromJSON(json['parentProduct']),
        'priorVersion': !exists(json, 'priorVersion') ? undefined : AdamDatastructureVariablesRefFromJSON(json['priorVersion']),
        'analysisVariables': !exists(json, 'analysisVariables') ? undefined : (json['analysisVariables'] as Array<any>).map(AdamVariableRefElementFromJSON),
    };
}

export function AdamDatastructureVariablesLinksToJSON(value?: AdamDatastructureVariablesLinks): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'self': AdamDatastructureVariablesRefToJSON(value.self),
        'parentProduct': AdamProductRefToJSON(value.parentProduct),
        'priorVersion': AdamDatastructureVariablesRefToJSON(value.priorVersion),
        'analysisVariables': value.analysisVariables === undefined ? undefined : (value.analysisVariables as Array<any>).map(AdamVariableRefElementToJSON),
    };
}


