// tslint:disable
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CtCodelistTermsRef,
    CtCodelistTermsRefFromJSON,
    CtCodelistTermsRefToJSON,
    CtPackageRef,
    CtPackageRefFromJSON,
    CtPackageRefToJSON,
    CtTermRefElement,
    CtTermRefElementFromJSON,
    CtTermRefElementToJSON,
    RootCtCodelistRef,
    RootCtCodelistRefFromJSON,
    RootCtCodelistRefToJSON,
} from './';

/**
 * 
 * @export
 * @interface CtCodelistTermsLinks
 */
export interface CtCodelistTermsLinks  {
    /**
     * 
     * @type {CtCodelistTermsRef}
     * @memberof CtCodelistTermsLinks
     */
    self?: CtCodelistTermsRef;
    /**
     * 
     * @type {CtPackageRef}
     * @memberof CtCodelistTermsLinks
     */
    parentPackage?: CtPackageRef;
    /**
     * 
     * @type {RootCtCodelistRef}
     * @memberof CtCodelistTermsLinks
     */
    rootItem?: RootCtCodelistRef;
    /**
     * 
     * @type {CtCodelistTermsRef}
     * @memberof CtCodelistTermsLinks
     */
    priorVersion?: CtCodelistTermsRef;
    /**
     * 
     * @type {Array<CtTermRefElement>}
     * @memberof CtCodelistTermsLinks
     */
    terms?: Array<CtTermRefElement>;
}

export function CtCodelistTermsLinksFromJSON(json: any): CtCodelistTermsLinks {
    return {
        'self': !exists(json, 'self') ? undefined : CtCodelistTermsRefFromJSON(json['self']),
        'parentPackage': !exists(json, 'parentPackage') ? undefined : CtPackageRefFromJSON(json['parentPackage']),
        'rootItem': !exists(json, 'rootItem') ? undefined : RootCtCodelistRefFromJSON(json['rootItem']),
        'priorVersion': !exists(json, 'priorVersion') ? undefined : CtCodelistTermsRefFromJSON(json['priorVersion']),
        'terms': !exists(json, 'terms') ? undefined : (json['terms'] as Array<any>).map(CtTermRefElementFromJSON),
    };
}

export function CtCodelistTermsLinksToJSON(value?: CtCodelistTermsLinks): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'self': CtCodelistTermsRefToJSON(value.self),
        'parentPackage': CtPackageRefToJSON(value.parentPackage),
        'rootItem': RootCtCodelistRefToJSON(value.rootItem),
        'priorVersion': CtCodelistTermsRefToJSON(value.priorVersion),
        'terms': value.terms === undefined ? undefined : (value.terms as Array<any>).map(CtTermRefElementToJSON),
    };
}


