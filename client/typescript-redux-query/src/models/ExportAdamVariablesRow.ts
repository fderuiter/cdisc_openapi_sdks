// tslint:disable
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExportAdamVariablesRow
 */
export interface ExportAdamVariablesRow  {
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    dataStructureName?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    datasetName?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    variableGroup?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    variableName?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    variableLabel?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    codelistControlledTerms?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    core?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportAdamVariablesRow
     */
    cDISCNotes?: string;
}

export function ExportAdamVariablesRowFromJSON(json: any): ExportAdamVariablesRow {
    return {
        'version': !exists(json, 'Version') ? undefined : json['Version'],
        'dataStructureName': !exists(json, 'Data Structure Name') ? undefined : json['Data Structure Name'],
        'datasetName': !exists(json, 'Dataset Name') ? undefined : json['Dataset Name'],
        'variableGroup': !exists(json, 'Variable Group') ? undefined : json['Variable Group'],
        'variableName': !exists(json, 'Variable Name') ? undefined : json['Variable Name'],
        'variableLabel': !exists(json, 'Variable Label') ? undefined : json['Variable Label'],
        'type': !exists(json, 'Type') ? undefined : json['Type'],
        'codelistControlledTerms': !exists(json, 'Codelist/Controlled Terms') ? undefined : json['Codelist/Controlled Terms'],
        'core': !exists(json, 'Core') ? undefined : json['Core'],
        'cDISCNotes': !exists(json, 'CDISC Notes') ? undefined : json['CDISC Notes'],
    };
}

export function ExportAdamVariablesRowToJSON(value?: ExportAdamVariablesRow): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'Version': value.version,
        'Data Structure Name': value.dataStructureName,
        'Dataset Name': value.datasetName,
        'Variable Group': value.variableGroup,
        'Variable Name': value.variableName,
        'Variable Label': value.variableLabel,
        'Type': value.type,
        'Codelist/Controlled Terms': value.codelistControlledTerms,
        'Core': value.core,
        'CDISC Notes': value.cDISCNotes,
    };
}


