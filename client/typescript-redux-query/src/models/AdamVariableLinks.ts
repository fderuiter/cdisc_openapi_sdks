// tslint:disable
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AdamDatastructureRef,
    AdamDatastructureRefFromJSON,
    AdamDatastructureRefToJSON,
    AdamProductRef,
    AdamProductRefFromJSON,
    AdamProductRefToJSON,
    AdamVariableRef,
    AdamVariableRefFromJSON,
    AdamVariableRefToJSON,
    AdamVarsetRef,
    AdamVarsetRefFromJSON,
    AdamVarsetRefToJSON,
    RootCtCodelistRef,
    RootCtCodelistRefFromJSON,
    RootCtCodelistRefToJSON,
} from './';

/**
 * 
 * @export
 * @interface AdamVariableLinks
 */
export interface AdamVariableLinks  {
    /**
     * 
     * @type {AdamVariableRef}
     * @memberof AdamVariableLinks
     */
    self?: AdamVariableRef;
    /**
     * 
     * @type {RootCtCodelistRef}
     * @memberof AdamVariableLinks
     */
    codelist?: RootCtCodelistRef;
    /**
     * 
     * @type {AdamProductRef}
     * @memberof AdamVariableLinks
     */
    parentProduct?: AdamProductRef;
    /**
     * 
     * @type {AdamDatastructureRef}
     * @memberof AdamVariableLinks
     */
    parentDatastructure?: AdamDatastructureRef;
    /**
     * 
     * @type {AdamVarsetRef}
     * @memberof AdamVariableLinks
     */
    parentVariableSet?: AdamVarsetRef;
    /**
     * 
     * @type {AdamVariableRef}
     * @memberof AdamVariableLinks
     */
    priorVersion?: AdamVariableRef;
}

export function AdamVariableLinksFromJSON(json: any): AdamVariableLinks {
    return {
        'self': !exists(json, 'self') ? undefined : AdamVariableRefFromJSON(json['self']),
        'codelist': !exists(json, 'codelist') ? undefined : RootCtCodelistRefFromJSON(json['codelist']),
        'parentProduct': !exists(json, 'parentProduct') ? undefined : AdamProductRefFromJSON(json['parentProduct']),
        'parentDatastructure': !exists(json, 'parentDatastructure') ? undefined : AdamDatastructureRefFromJSON(json['parentDatastructure']),
        'parentVariableSet': !exists(json, 'parentVariableSet') ? undefined : AdamVarsetRefFromJSON(json['parentVariableSet']),
        'priorVersion': !exists(json, 'priorVersion') ? undefined : AdamVariableRefFromJSON(json['priorVersion']),
    };
}

export function AdamVariableLinksToJSON(value?: AdamVariableLinks): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'self': AdamVariableRefToJSON(value.self),
        'codelist': RootCtCodelistRefToJSON(value.codelist),
        'parentProduct': AdamProductRefToJSON(value.parentProduct),
        'parentDatastructure': AdamDatastructureRefToJSON(value.parentDatastructure),
        'parentVariableSet': AdamVarsetRefToJSON(value.parentVariableSet),
        'priorVersion': AdamVariableRefToJSON(value.priorVersion),
    };
}


