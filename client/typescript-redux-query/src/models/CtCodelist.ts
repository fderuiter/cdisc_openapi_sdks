// tslint:disable
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CtCodelistLinks,
    CtCodelistLinksFromJSON,
    CtCodelistLinksToJSON,
    CtPackageTerm,
    CtPackageTermFromJSON,
    CtPackageTermToJSON,
} from './';

/**
 * 
 * @export
 * @interface CtCodelist
 */
export interface CtCodelist  {
    /**
     * 
     * @type {string}
     * @memberof CtCodelist
     */
    conceptId?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelist
     */
    extensible?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelist
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelist
     */
    submissionValue?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelist
     */
    definition?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelist
     */
    preferredTerm?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CtCodelist
     */
    synonyms?: Array<string>;
    /**
     * 
     * @type {CtCodelistLinks}
     * @memberof CtCodelist
     */
    links?: CtCodelistLinks;
    /**
     * 
     * @type {Array<CtPackageTerm>}
     * @memberof CtCodelist
     */
    terms?: Array<CtPackageTerm>;
}

export function CtCodelistFromJSON(json: any): CtCodelist {
    return {
        'conceptId': !exists(json, 'conceptId') ? undefined : json['conceptId'],
        'extensible': !exists(json, 'extensible') ? undefined : json['extensible'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'submissionValue': !exists(json, 'submissionValue') ? undefined : json['submissionValue'],
        'definition': !exists(json, 'definition') ? undefined : json['definition'],
        'preferredTerm': !exists(json, 'preferredTerm') ? undefined : json['preferredTerm'],
        'synonyms': !exists(json, 'synonyms') ? undefined : json['synonyms'],
        'links': !exists(json, '_links') ? undefined : CtCodelistLinksFromJSON(json['_links']),
        'terms': !exists(json, 'terms') ? undefined : (json['terms'] as Array<any>).map(CtPackageTermFromJSON),
    };
}

export function CtCodelistToJSON(value?: CtCodelist): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'conceptId': value.conceptId,
        'extensible': value.extensible,
        'name': value.name,
        'submissionValue': value.submissionValue,
        'definition': value.definition,
        'preferredTerm': value.preferredTerm,
        'synonyms': value.synonyms,
        '_links': CtCodelistLinksToJSON(value.links),
        'terms': value.terms === undefined ? undefined : (value.terms as Array<any>).map(CtPackageTermToJSON),
    };
}


