/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExportCdashigTable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExportCdashigTable::OAIExportCdashigTable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExportCdashigTable::OAIExportCdashigTable() {
    this->initializeModel();
}

OAIExportCdashigTable::~OAIExportCdashigTable() {}

void OAIExportCdashigTable::initializeModel() {

    m_domain_variables_isSet = false;
    m_domain_variables_isValid = false;

    m_scenario_variables_isSet = false;
    m_scenario_variables_isValid = false;
}

void OAIExportCdashigTable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExportCdashigTable::fromJsonObject(QJsonObject json) {

    m_domain_variables_isValid = ::OpenAPI::fromJsonValue(m_domain_variables, json[QString("domain-variables")]);
    m_domain_variables_isSet = !json[QString("domain-variables")].isNull() && m_domain_variables_isValid;

    m_scenario_variables_isValid = ::OpenAPI::fromJsonValue(m_scenario_variables, json[QString("scenario-variables")]);
    m_scenario_variables_isSet = !json[QString("scenario-variables")].isNull() && m_scenario_variables_isValid;
}

QString OAIExportCdashigTable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExportCdashigTable::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_variables.size() > 0) {
        obj.insert(QString("domain-variables"), ::OpenAPI::toJsonValue(m_domain_variables));
    }
    if (m_scenario_variables.size() > 0) {
        obj.insert(QString("scenario-variables"), ::OpenAPI::toJsonValue(m_scenario_variables));
    }
    return obj;
}

QList<OAIExportCdashigDomainVariablesRow> OAIExportCdashigTable::getDomainVariables() const {
    return m_domain_variables;
}
void OAIExportCdashigTable::setDomainVariables(const QList<OAIExportCdashigDomainVariablesRow> &domain_variables) {
    m_domain_variables = domain_variables;
    m_domain_variables_isSet = true;
}

bool OAIExportCdashigTable::is_domain_variables_Set() const{
    return m_domain_variables_isSet;
}

bool OAIExportCdashigTable::is_domain_variables_Valid() const{
    return m_domain_variables_isValid;
}

QList<OAIExportCdashigScenarioVariablesRow> OAIExportCdashigTable::getScenarioVariables() const {
    return m_scenario_variables;
}
void OAIExportCdashigTable::setScenarioVariables(const QList<OAIExportCdashigScenarioVariablesRow> &scenario_variables) {
    m_scenario_variables = scenario_variables;
    m_scenario_variables_isSet = true;
}

bool OAIExportCdashigTable::is_scenario_variables_Set() const{
    return m_scenario_variables_isSet;
}

bool OAIExportCdashigTable::is_scenario_variables_Valid() const{
    return m_scenario_variables_isValid;
}

bool OAIExportCdashigTable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_variables.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_scenario_variables.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExportCdashigTable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
