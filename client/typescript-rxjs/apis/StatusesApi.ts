// tslint:disable
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    Health,
    MaintenanceBody,
} from '../models';

/**
 * no description
 */
export class StatusesApi extends BaseAPI {

    /**
     * Check health of system components
     */
    healthGet(): Observable<Health>
    healthGet(opts?: OperationOpts): Observable<AjaxResponse<Health>>
    healthGet(opts?: OperationOpts): Observable<Health | AjaxResponse<Health>> {
        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<Health>({
            url: '/health',
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Set maintenance mode and message
     */
    mdrMaintenanceGet(): Observable<MaintenanceBody>
    mdrMaintenanceGet(opts?: OperationOpts): Observable<AjaxResponse<MaintenanceBody>>
    mdrMaintenanceGet(opts?: OperationOpts): Observable<MaintenanceBody | AjaxResponse<MaintenanceBody>> {
        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<MaintenanceBody>({
            url: '/mdr/maintenance',
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

}
