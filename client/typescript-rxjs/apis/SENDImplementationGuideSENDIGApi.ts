// tslint:disable
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    DefaultErrorResponse,
    ExportSendigDatasetsTable,
    ExportSendigVariablesTable,
    ExportSendigWorkbook,
    RootSendigDatasetVariable,
    SendigClass,
    SendigClassDatasets,
    SendigClasses,
    SendigDataset,
    SendigDatasetVariable,
    SendigDatasetVariables,
    SendigDatasets,
    SendigProduct,
    XmlRootSendigDatasetVariable,
    XmlSendigClass,
    XmlSendigClassDatasets,
    XmlSendigClasses,
    XmlSendigDataset,
    XmlSendigDatasetVariable,
    XmlSendigDatasetVariables,
    XmlSendigDatasets,
    XmlSendigProduct,
} from '../models';

export interface MdrRootSendigDatasetsDatasetVariablesVarGetRequest {
    dataset: string;
    _var: string;
}

export interface MdrSendigVersionClassesClassDatasetsGetRequest {
    version: string;
    _class: string;
}

export interface MdrSendigVersionClassesClassGetRequest {
    version: string;
    _class: string;
}

export interface MdrSendigVersionClassesGetRequest {
    version: string;
}

export interface MdrSendigVersionDatasetsDatasetGetRequest {
    version: string;
    dataset: string;
}

export interface MdrSendigVersionDatasetsDatasetVariablesGetRequest {
    version: string;
    dataset: string;
}

export interface MdrSendigVersionDatasetsDatasetVariablesVarGetRequest {
    version: string;
    dataset: string;
    _var: string;
}

export interface MdrSendigVersionDatasetsGetRequest {
    version: string;
}

export interface MdrSendigVersionGetRequest {
    version: string;
}

/**
 * no description
 */
export class SENDImplementationGuideSENDIGApi extends BaseAPI {

    /**
     * Get Root SENDIG Dataset Variable
     */
    mdrRootSendigDatasetsDatasetVariablesVarGet({ dataset, _var }: MdrRootSendigDatasetsDatasetVariablesVarGetRequest): Observable<RootSendigDatasetVariable>
    mdrRootSendigDatasetsDatasetVariablesVarGet({ dataset, _var }: MdrRootSendigDatasetsDatasetVariablesVarGetRequest, opts?: OperationOpts): Observable<AjaxResponse<RootSendigDatasetVariable>>
    mdrRootSendigDatasetsDatasetVariablesVarGet({ dataset, _var }: MdrRootSendigDatasetsDatasetVariablesVarGetRequest, opts?: OperationOpts): Observable<RootSendigDatasetVariable | AjaxResponse<RootSendigDatasetVariable>> {
        throwIfNullOrUndefined(dataset, 'dataset', 'mdrRootSendigDatasetsDatasetVariablesVarGet');
        throwIfNullOrUndefined(_var, '_var', 'mdrRootSendigDatasetsDatasetVariablesVarGet');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<RootSendigDatasetVariable>({
            url: '/mdr/root/sendig/datasets/{dataset}/variables/{var}'.replace('{dataset}', encodeURI(dataset)).replace('{var}', encodeURI(_var)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get SENDIG Class Dataset List
     */
    mdrSendigVersionClassesClassDatasetsGet({ version, _class }: MdrSendigVersionClassesClassDatasetsGetRequest): Observable<SendigClassDatasets>
    mdrSendigVersionClassesClassDatasetsGet({ version, _class }: MdrSendigVersionClassesClassDatasetsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<SendigClassDatasets>>
    mdrSendigVersionClassesClassDatasetsGet({ version, _class }: MdrSendigVersionClassesClassDatasetsGetRequest, opts?: OperationOpts): Observable<SendigClassDatasets | AjaxResponse<SendigClassDatasets>> {
        throwIfNullOrUndefined(version, 'version', 'mdrSendigVersionClassesClassDatasetsGet');
        throwIfNullOrUndefined(_class, '_class', 'mdrSendigVersionClassesClassDatasetsGet');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<SendigClassDatasets>({
            url: '/mdr/sendig/{version}/classes/{class}/datasets'.replace('{version}', encodeURI(version)).replace('{class}', encodeURI(_class)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get SENDIG Class
     */
    mdrSendigVersionClassesClassGet({ version, _class }: MdrSendigVersionClassesClassGetRequest): Observable<SendigClass>
    mdrSendigVersionClassesClassGet({ version, _class }: MdrSendigVersionClassesClassGetRequest, opts?: OperationOpts): Observable<AjaxResponse<SendigClass>>
    mdrSendigVersionClassesClassGet({ version, _class }: MdrSendigVersionClassesClassGetRequest, opts?: OperationOpts): Observable<SendigClass | AjaxResponse<SendigClass>> {
        throwIfNullOrUndefined(version, 'version', 'mdrSendigVersionClassesClassGet');
        throwIfNullOrUndefined(_class, '_class', 'mdrSendigVersionClassesClassGet');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<SendigClass>({
            url: '/mdr/sendig/{version}/classes/{class}'.replace('{version}', encodeURI(version)).replace('{class}', encodeURI(_class)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get SENDIG Class List
     */
    mdrSendigVersionClassesGet({ version }: MdrSendigVersionClassesGetRequest): Observable<SendigClasses>
    mdrSendigVersionClassesGet({ version }: MdrSendigVersionClassesGetRequest, opts?: OperationOpts): Observable<AjaxResponse<SendigClasses>>
    mdrSendigVersionClassesGet({ version }: MdrSendigVersionClassesGetRequest, opts?: OperationOpts): Observable<SendigClasses | AjaxResponse<SendigClasses>> {
        throwIfNullOrUndefined(version, 'version', 'mdrSendigVersionClassesGet');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<SendigClasses>({
            url: '/mdr/sendig/{version}/classes'.replace('{version}', encodeURI(version)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get SENDIG Dataset
     */
    mdrSendigVersionDatasetsDatasetGet({ version, dataset }: MdrSendigVersionDatasetsDatasetGetRequest): Observable<SendigDataset>
    mdrSendigVersionDatasetsDatasetGet({ version, dataset }: MdrSendigVersionDatasetsDatasetGetRequest, opts?: OperationOpts): Observable<AjaxResponse<SendigDataset>>
    mdrSendigVersionDatasetsDatasetGet({ version, dataset }: MdrSendigVersionDatasetsDatasetGetRequest, opts?: OperationOpts): Observable<SendigDataset | AjaxResponse<SendigDataset>> {
        throwIfNullOrUndefined(version, 'version', 'mdrSendigVersionDatasetsDatasetGet');
        throwIfNullOrUndefined(dataset, 'dataset', 'mdrSendigVersionDatasetsDatasetGet');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<SendigDataset>({
            url: '/mdr/sendig/{version}/datasets/{dataset}'.replace('{version}', encodeURI(version)).replace('{dataset}', encodeURI(dataset)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get SENDIG Dataset Variable List
     */
    mdrSendigVersionDatasetsDatasetVariablesGet({ version, dataset }: MdrSendigVersionDatasetsDatasetVariablesGetRequest): Observable<SendigDatasetVariables>
    mdrSendigVersionDatasetsDatasetVariablesGet({ version, dataset }: MdrSendigVersionDatasetsDatasetVariablesGetRequest, opts?: OperationOpts): Observable<AjaxResponse<SendigDatasetVariables>>
    mdrSendigVersionDatasetsDatasetVariablesGet({ version, dataset }: MdrSendigVersionDatasetsDatasetVariablesGetRequest, opts?: OperationOpts): Observable<SendigDatasetVariables | AjaxResponse<SendigDatasetVariables>> {
        throwIfNullOrUndefined(version, 'version', 'mdrSendigVersionDatasetsDatasetVariablesGet');
        throwIfNullOrUndefined(dataset, 'dataset', 'mdrSendigVersionDatasetsDatasetVariablesGet');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<SendigDatasetVariables>({
            url: '/mdr/sendig/{version}/datasets/{dataset}/variables'.replace('{version}', encodeURI(version)).replace('{dataset}', encodeURI(dataset)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get SENDIG Dataset Variable
     */
    mdrSendigVersionDatasetsDatasetVariablesVarGet({ version, dataset, _var }: MdrSendigVersionDatasetsDatasetVariablesVarGetRequest): Observable<SendigDatasetVariable>
    mdrSendigVersionDatasetsDatasetVariablesVarGet({ version, dataset, _var }: MdrSendigVersionDatasetsDatasetVariablesVarGetRequest, opts?: OperationOpts): Observable<AjaxResponse<SendigDatasetVariable>>
    mdrSendigVersionDatasetsDatasetVariablesVarGet({ version, dataset, _var }: MdrSendigVersionDatasetsDatasetVariablesVarGetRequest, opts?: OperationOpts): Observable<SendigDatasetVariable | AjaxResponse<SendigDatasetVariable>> {
        throwIfNullOrUndefined(version, 'version', 'mdrSendigVersionDatasetsDatasetVariablesVarGet');
        throwIfNullOrUndefined(dataset, 'dataset', 'mdrSendigVersionDatasetsDatasetVariablesVarGet');
        throwIfNullOrUndefined(_var, '_var', 'mdrSendigVersionDatasetsDatasetVariablesVarGet');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<SendigDatasetVariable>({
            url: '/mdr/sendig/{version}/datasets/{dataset}/variables/{var}'.replace('{version}', encodeURI(version)).replace('{dataset}', encodeURI(dataset)).replace('{var}', encodeURI(_var)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get SENDIG Dataset List
     */
    mdrSendigVersionDatasetsGet({ version }: MdrSendigVersionDatasetsGetRequest): Observable<SendigDatasets>
    mdrSendigVersionDatasetsGet({ version }: MdrSendigVersionDatasetsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<SendigDatasets>>
    mdrSendigVersionDatasetsGet({ version }: MdrSendigVersionDatasetsGetRequest, opts?: OperationOpts): Observable<SendigDatasets | AjaxResponse<SendigDatasets>> {
        throwIfNullOrUndefined(version, 'version', 'mdrSendigVersionDatasetsGet');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<SendigDatasets>({
            url: '/mdr/sendig/{version}/datasets'.replace('{version}', encodeURI(version)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get SENDIG product
     */
    mdrSendigVersionGet({ version }: MdrSendigVersionGetRequest): Observable<SendigProduct>
    mdrSendigVersionGet({ version }: MdrSendigVersionGetRequest, opts?: OperationOpts): Observable<AjaxResponse<SendigProduct>>
    mdrSendigVersionGet({ version }: MdrSendigVersionGetRequest, opts?: OperationOpts): Observable<SendigProduct | AjaxResponse<SendigProduct>> {
        throwIfNullOrUndefined(version, 'version', 'mdrSendigVersionGet');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<SendigProduct>({
            url: '/mdr/sendig/{version}'.replace('{version}', encodeURI(version)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

}
