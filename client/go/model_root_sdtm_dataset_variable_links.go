/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RootSdtmDatasetVariableLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RootSdtmDatasetVariableLinks{}

// RootSdtmDatasetVariableLinks struct for RootSdtmDatasetVariableLinks
type RootSdtmDatasetVariableLinks struct {
	Self *RootSdtmDatasetVariableRef `json:"self,omitempty"`
	Versions []SdtmDatasetVariableRefVersion `json:"versions,omitempty"`
}

// NewRootSdtmDatasetVariableLinks instantiates a new RootSdtmDatasetVariableLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootSdtmDatasetVariableLinks() *RootSdtmDatasetVariableLinks {
	this := RootSdtmDatasetVariableLinks{}
	return &this
}

// NewRootSdtmDatasetVariableLinksWithDefaults instantiates a new RootSdtmDatasetVariableLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootSdtmDatasetVariableLinksWithDefaults() *RootSdtmDatasetVariableLinks {
	this := RootSdtmDatasetVariableLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *RootSdtmDatasetVariableLinks) GetSelf() RootSdtmDatasetVariableRef {
	if o == nil || IsNil(o.Self) {
		var ret RootSdtmDatasetVariableRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootSdtmDatasetVariableLinks) GetSelfOk() (*RootSdtmDatasetVariableRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *RootSdtmDatasetVariableLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given RootSdtmDatasetVariableRef and assigns it to the Self field.
func (o *RootSdtmDatasetVariableLinks) SetSelf(v RootSdtmDatasetVariableRef) {
	o.Self = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *RootSdtmDatasetVariableLinks) GetVersions() []SdtmDatasetVariableRefVersion {
	if o == nil || IsNil(o.Versions) {
		var ret []SdtmDatasetVariableRefVersion
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootSdtmDatasetVariableLinks) GetVersionsOk() ([]SdtmDatasetVariableRefVersion, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *RootSdtmDatasetVariableLinks) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []SdtmDatasetVariableRefVersion and assigns it to the Versions field.
func (o *RootSdtmDatasetVariableLinks) SetVersions(v []SdtmDatasetVariableRefVersion) {
	o.Versions = v
}

func (o RootSdtmDatasetVariableLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RootSdtmDatasetVariableLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableRootSdtmDatasetVariableLinks struct {
	value *RootSdtmDatasetVariableLinks
	isSet bool
}

func (v NullableRootSdtmDatasetVariableLinks) Get() *RootSdtmDatasetVariableLinks {
	return v.value
}

func (v *NullableRootSdtmDatasetVariableLinks) Set(val *RootSdtmDatasetVariableLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableRootSdtmDatasetVariableLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableRootSdtmDatasetVariableLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootSdtmDatasetVariableLinks(val *RootSdtmDatasetVariableLinks) *NullableRootSdtmDatasetVariableLinks {
	return &NullableRootSdtmDatasetVariableLinks{value: val, isSet: true}
}

func (v NullableRootSdtmDatasetVariableLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootSdtmDatasetVariableLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


