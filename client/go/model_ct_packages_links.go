/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CtPackagesLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CtPackagesLinks{}

// CtPackagesLinks struct for CtPackagesLinks
type CtPackagesLinks struct {
	Self *CtPackagesRef `json:"self,omitempty"`
	Packages []CtPackageRefElement `json:"packages,omitempty"`
}

// NewCtPackagesLinks instantiates a new CtPackagesLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCtPackagesLinks() *CtPackagesLinks {
	this := CtPackagesLinks{}
	return &this
}

// NewCtPackagesLinksWithDefaults instantiates a new CtPackagesLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCtPackagesLinksWithDefaults() *CtPackagesLinks {
	this := CtPackagesLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *CtPackagesLinks) GetSelf() CtPackagesRef {
	if o == nil || IsNil(o.Self) {
		var ret CtPackagesRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtPackagesLinks) GetSelfOk() (*CtPackagesRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *CtPackagesLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given CtPackagesRef and assigns it to the Self field.
func (o *CtPackagesLinks) SetSelf(v CtPackagesRef) {
	o.Self = &v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *CtPackagesLinks) GetPackages() []CtPackageRefElement {
	if o == nil || IsNil(o.Packages) {
		var ret []CtPackageRefElement
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtPackagesLinks) GetPackagesOk() ([]CtPackageRefElement, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *CtPackagesLinks) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []CtPackageRefElement and assigns it to the Packages field.
func (o *CtPackagesLinks) SetPackages(v []CtPackageRefElement) {
	o.Packages = v
}

func (o CtPackagesLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CtPackagesLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	return toSerialize, nil
}

type NullableCtPackagesLinks struct {
	value *CtPackagesLinks
	isSet bool
}

func (v NullableCtPackagesLinks) Get() *CtPackagesLinks {
	return v.value
}

func (v *NullableCtPackagesLinks) Set(val *CtPackagesLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCtPackagesLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCtPackagesLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCtPackagesLinks(val *CtPackagesLinks) *NullableCtPackagesLinks {
	return &NullableCtPackagesLinks{value: val, isSet: true}
}

func (v NullableCtPackagesLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCtPackagesLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


