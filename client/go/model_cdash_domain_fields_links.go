/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CdashDomainFieldsLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdashDomainFieldsLinks{}

// CdashDomainFieldsLinks struct for CdashDomainFieldsLinks
type CdashDomainFieldsLinks struct {
	Self *CdashDomainFieldsRef `json:"self,omitempty"`
	ParentProduct *CdashProductRef `json:"parentProduct,omitempty"`
	ParentClass *CdashClassRef `json:"parentClass,omitempty"`
	Fields []CdashDomainFieldRefElement `json:"fields,omitempty"`
}

// NewCdashDomainFieldsLinks instantiates a new CdashDomainFieldsLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdashDomainFieldsLinks() *CdashDomainFieldsLinks {
	this := CdashDomainFieldsLinks{}
	return &this
}

// NewCdashDomainFieldsLinksWithDefaults instantiates a new CdashDomainFieldsLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdashDomainFieldsLinksWithDefaults() *CdashDomainFieldsLinks {
	this := CdashDomainFieldsLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *CdashDomainFieldsLinks) GetSelf() CdashDomainFieldsRef {
	if o == nil || IsNil(o.Self) {
		var ret CdashDomainFieldsRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashDomainFieldsLinks) GetSelfOk() (*CdashDomainFieldsRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *CdashDomainFieldsLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given CdashDomainFieldsRef and assigns it to the Self field.
func (o *CdashDomainFieldsLinks) SetSelf(v CdashDomainFieldsRef) {
	o.Self = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *CdashDomainFieldsLinks) GetParentProduct() CdashProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret CdashProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashDomainFieldsLinks) GetParentProductOk() (*CdashProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *CdashDomainFieldsLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given CdashProductRef and assigns it to the ParentProduct field.
func (o *CdashDomainFieldsLinks) SetParentProduct(v CdashProductRef) {
	o.ParentProduct = &v
}

// GetParentClass returns the ParentClass field value if set, zero value otherwise.
func (o *CdashDomainFieldsLinks) GetParentClass() CdashClassRef {
	if o == nil || IsNil(o.ParentClass) {
		var ret CdashClassRef
		return ret
	}
	return *o.ParentClass
}

// GetParentClassOk returns a tuple with the ParentClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashDomainFieldsLinks) GetParentClassOk() (*CdashClassRef, bool) {
	if o == nil || IsNil(o.ParentClass) {
		return nil, false
	}
	return o.ParentClass, true
}

// HasParentClass returns a boolean if a field has been set.
func (o *CdashDomainFieldsLinks) HasParentClass() bool {
	if o != nil && !IsNil(o.ParentClass) {
		return true
	}

	return false
}

// SetParentClass gets a reference to the given CdashClassRef and assigns it to the ParentClass field.
func (o *CdashDomainFieldsLinks) SetParentClass(v CdashClassRef) {
	o.ParentClass = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *CdashDomainFieldsLinks) GetFields() []CdashDomainFieldRefElement {
	if o == nil || IsNil(o.Fields) {
		var ret []CdashDomainFieldRefElement
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashDomainFieldsLinks) GetFieldsOk() ([]CdashDomainFieldRefElement, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *CdashDomainFieldsLinks) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []CdashDomainFieldRefElement and assigns it to the Fields field.
func (o *CdashDomainFieldsLinks) SetFields(v []CdashDomainFieldRefElement) {
	o.Fields = v
}

func (o CdashDomainFieldsLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdashDomainFieldsLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.ParentClass) {
		toSerialize["parentClass"] = o.ParentClass
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	return toSerialize, nil
}

type NullableCdashDomainFieldsLinks struct {
	value *CdashDomainFieldsLinks
	isSet bool
}

func (v NullableCdashDomainFieldsLinks) Get() *CdashDomainFieldsLinks {
	return v.value
}

func (v *NullableCdashDomainFieldsLinks) Set(val *CdashDomainFieldsLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCdashDomainFieldsLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCdashDomainFieldsLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdashDomainFieldsLinks(val *CdashDomainFieldsLinks) *NullableCdashDomainFieldsLinks {
	return &NullableCdashDomainFieldsLinks{value: val, isSet: true}
}

func (v NullableCdashDomainFieldsLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdashDomainFieldsLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


