/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExportQrsWorkbookItemsRow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportQrsWorkbookItemsRow{}

// ExportQrsWorkbookItemsRow struct for ExportQrsWorkbookItemsRow
type ExportQrsWorkbookItemsRow struct {
	ItemSequence *string `json:"Item Sequence,omitempty"`
	TestName *string `json:"Test Name,omitempty"`
	ItemText *string `json:"Item Text,omitempty"`
	TestsCodelistCCode *string `json:"Test's Codelist C-Code,omitempty"`
	TestsTermCCode *string `json:"Test's Term C-Code,omitempty"`
	TestCodesCodelistCCode *string `json:"Test Code's Codelist C-Code,omitempty"`
	TestCodesTermCCode *string `json:"Test Code's Term C-Code,omitempty"`
	SubcategorysCodelistCCode *string `json:"Subcategory's Codelist C-Code,omitempty"`
	SubcategorysTermCCode *string `json:"Subcategory's Term C-Code,omitempty"`
	EvaluatorsCodelistCCode *string `json:"Evaluator's Codelist C-Code,omitempty"`
	EvaluatorsTermCCode *string `json:"Evaluator's Term C-Code,omitempty"`
	FreeFormResponsesDatatype *string `json:"Free-form Response's Datatype,omitempty"`
	ResponseGroup *string `json:"Response Group,omitempty"`
}

// NewExportQrsWorkbookItemsRow instantiates a new ExportQrsWorkbookItemsRow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportQrsWorkbookItemsRow() *ExportQrsWorkbookItemsRow {
	this := ExportQrsWorkbookItemsRow{}
	return &this
}

// NewExportQrsWorkbookItemsRowWithDefaults instantiates a new ExportQrsWorkbookItemsRow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportQrsWorkbookItemsRowWithDefaults() *ExportQrsWorkbookItemsRow {
	this := ExportQrsWorkbookItemsRow{}
	return &this
}

// GetItemSequence returns the ItemSequence field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetItemSequence() string {
	if o == nil || IsNil(o.ItemSequence) {
		var ret string
		return ret
	}
	return *o.ItemSequence
}

// GetItemSequenceOk returns a tuple with the ItemSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetItemSequenceOk() (*string, bool) {
	if o == nil || IsNil(o.ItemSequence) {
		return nil, false
	}
	return o.ItemSequence, true
}

// HasItemSequence returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasItemSequence() bool {
	if o != nil && !IsNil(o.ItemSequence) {
		return true
	}

	return false
}

// SetItemSequence gets a reference to the given string and assigns it to the ItemSequence field.
func (o *ExportQrsWorkbookItemsRow) SetItemSequence(v string) {
	o.ItemSequence = &v
}

// GetTestName returns the TestName field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetTestName() string {
	if o == nil || IsNil(o.TestName) {
		var ret string
		return ret
	}
	return *o.TestName
}

// GetTestNameOk returns a tuple with the TestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetTestNameOk() (*string, bool) {
	if o == nil || IsNil(o.TestName) {
		return nil, false
	}
	return o.TestName, true
}

// HasTestName returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasTestName() bool {
	if o != nil && !IsNil(o.TestName) {
		return true
	}

	return false
}

// SetTestName gets a reference to the given string and assigns it to the TestName field.
func (o *ExportQrsWorkbookItemsRow) SetTestName(v string) {
	o.TestName = &v
}

// GetItemText returns the ItemText field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetItemText() string {
	if o == nil || IsNil(o.ItemText) {
		var ret string
		return ret
	}
	return *o.ItemText
}

// GetItemTextOk returns a tuple with the ItemText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetItemTextOk() (*string, bool) {
	if o == nil || IsNil(o.ItemText) {
		return nil, false
	}
	return o.ItemText, true
}

// HasItemText returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasItemText() bool {
	if o != nil && !IsNil(o.ItemText) {
		return true
	}

	return false
}

// SetItemText gets a reference to the given string and assigns it to the ItemText field.
func (o *ExportQrsWorkbookItemsRow) SetItemText(v string) {
	o.ItemText = &v
}

// GetTestsCodelistCCode returns the TestsCodelistCCode field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetTestsCodelistCCode() string {
	if o == nil || IsNil(o.TestsCodelistCCode) {
		var ret string
		return ret
	}
	return *o.TestsCodelistCCode
}

// GetTestsCodelistCCodeOk returns a tuple with the TestsCodelistCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetTestsCodelistCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TestsCodelistCCode) {
		return nil, false
	}
	return o.TestsCodelistCCode, true
}

// HasTestsCodelistCCode returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasTestsCodelistCCode() bool {
	if o != nil && !IsNil(o.TestsCodelistCCode) {
		return true
	}

	return false
}

// SetTestsCodelistCCode gets a reference to the given string and assigns it to the TestsCodelistCCode field.
func (o *ExportQrsWorkbookItemsRow) SetTestsCodelistCCode(v string) {
	o.TestsCodelistCCode = &v
}

// GetTestsTermCCode returns the TestsTermCCode field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetTestsTermCCode() string {
	if o == nil || IsNil(o.TestsTermCCode) {
		var ret string
		return ret
	}
	return *o.TestsTermCCode
}

// GetTestsTermCCodeOk returns a tuple with the TestsTermCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetTestsTermCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TestsTermCCode) {
		return nil, false
	}
	return o.TestsTermCCode, true
}

// HasTestsTermCCode returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasTestsTermCCode() bool {
	if o != nil && !IsNil(o.TestsTermCCode) {
		return true
	}

	return false
}

// SetTestsTermCCode gets a reference to the given string and assigns it to the TestsTermCCode field.
func (o *ExportQrsWorkbookItemsRow) SetTestsTermCCode(v string) {
	o.TestsTermCCode = &v
}

// GetTestCodesCodelistCCode returns the TestCodesCodelistCCode field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetTestCodesCodelistCCode() string {
	if o == nil || IsNil(o.TestCodesCodelistCCode) {
		var ret string
		return ret
	}
	return *o.TestCodesCodelistCCode
}

// GetTestCodesCodelistCCodeOk returns a tuple with the TestCodesCodelistCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetTestCodesCodelistCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TestCodesCodelistCCode) {
		return nil, false
	}
	return o.TestCodesCodelistCCode, true
}

// HasTestCodesCodelistCCode returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasTestCodesCodelistCCode() bool {
	if o != nil && !IsNil(o.TestCodesCodelistCCode) {
		return true
	}

	return false
}

// SetTestCodesCodelistCCode gets a reference to the given string and assigns it to the TestCodesCodelistCCode field.
func (o *ExportQrsWorkbookItemsRow) SetTestCodesCodelistCCode(v string) {
	o.TestCodesCodelistCCode = &v
}

// GetTestCodesTermCCode returns the TestCodesTermCCode field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetTestCodesTermCCode() string {
	if o == nil || IsNil(o.TestCodesTermCCode) {
		var ret string
		return ret
	}
	return *o.TestCodesTermCCode
}

// GetTestCodesTermCCodeOk returns a tuple with the TestCodesTermCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetTestCodesTermCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TestCodesTermCCode) {
		return nil, false
	}
	return o.TestCodesTermCCode, true
}

// HasTestCodesTermCCode returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasTestCodesTermCCode() bool {
	if o != nil && !IsNil(o.TestCodesTermCCode) {
		return true
	}

	return false
}

// SetTestCodesTermCCode gets a reference to the given string and assigns it to the TestCodesTermCCode field.
func (o *ExportQrsWorkbookItemsRow) SetTestCodesTermCCode(v string) {
	o.TestCodesTermCCode = &v
}

// GetSubcategorysCodelistCCode returns the SubcategorysCodelistCCode field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetSubcategorysCodelistCCode() string {
	if o == nil || IsNil(o.SubcategorysCodelistCCode) {
		var ret string
		return ret
	}
	return *o.SubcategorysCodelistCCode
}

// GetSubcategorysCodelistCCodeOk returns a tuple with the SubcategorysCodelistCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetSubcategorysCodelistCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SubcategorysCodelistCCode) {
		return nil, false
	}
	return o.SubcategorysCodelistCCode, true
}

// HasSubcategorysCodelistCCode returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasSubcategorysCodelistCCode() bool {
	if o != nil && !IsNil(o.SubcategorysCodelistCCode) {
		return true
	}

	return false
}

// SetSubcategorysCodelistCCode gets a reference to the given string and assigns it to the SubcategorysCodelistCCode field.
func (o *ExportQrsWorkbookItemsRow) SetSubcategorysCodelistCCode(v string) {
	o.SubcategorysCodelistCCode = &v
}

// GetSubcategorysTermCCode returns the SubcategorysTermCCode field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetSubcategorysTermCCode() string {
	if o == nil || IsNil(o.SubcategorysTermCCode) {
		var ret string
		return ret
	}
	return *o.SubcategorysTermCCode
}

// GetSubcategorysTermCCodeOk returns a tuple with the SubcategorysTermCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetSubcategorysTermCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SubcategorysTermCCode) {
		return nil, false
	}
	return o.SubcategorysTermCCode, true
}

// HasSubcategorysTermCCode returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasSubcategorysTermCCode() bool {
	if o != nil && !IsNil(o.SubcategorysTermCCode) {
		return true
	}

	return false
}

// SetSubcategorysTermCCode gets a reference to the given string and assigns it to the SubcategorysTermCCode field.
func (o *ExportQrsWorkbookItemsRow) SetSubcategorysTermCCode(v string) {
	o.SubcategorysTermCCode = &v
}

// GetEvaluatorsCodelistCCode returns the EvaluatorsCodelistCCode field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetEvaluatorsCodelistCCode() string {
	if o == nil || IsNil(o.EvaluatorsCodelistCCode) {
		var ret string
		return ret
	}
	return *o.EvaluatorsCodelistCCode
}

// GetEvaluatorsCodelistCCodeOk returns a tuple with the EvaluatorsCodelistCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetEvaluatorsCodelistCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.EvaluatorsCodelistCCode) {
		return nil, false
	}
	return o.EvaluatorsCodelistCCode, true
}

// HasEvaluatorsCodelistCCode returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasEvaluatorsCodelistCCode() bool {
	if o != nil && !IsNil(o.EvaluatorsCodelistCCode) {
		return true
	}

	return false
}

// SetEvaluatorsCodelistCCode gets a reference to the given string and assigns it to the EvaluatorsCodelistCCode field.
func (o *ExportQrsWorkbookItemsRow) SetEvaluatorsCodelistCCode(v string) {
	o.EvaluatorsCodelistCCode = &v
}

// GetEvaluatorsTermCCode returns the EvaluatorsTermCCode field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetEvaluatorsTermCCode() string {
	if o == nil || IsNil(o.EvaluatorsTermCCode) {
		var ret string
		return ret
	}
	return *o.EvaluatorsTermCCode
}

// GetEvaluatorsTermCCodeOk returns a tuple with the EvaluatorsTermCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetEvaluatorsTermCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.EvaluatorsTermCCode) {
		return nil, false
	}
	return o.EvaluatorsTermCCode, true
}

// HasEvaluatorsTermCCode returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasEvaluatorsTermCCode() bool {
	if o != nil && !IsNil(o.EvaluatorsTermCCode) {
		return true
	}

	return false
}

// SetEvaluatorsTermCCode gets a reference to the given string and assigns it to the EvaluatorsTermCCode field.
func (o *ExportQrsWorkbookItemsRow) SetEvaluatorsTermCCode(v string) {
	o.EvaluatorsTermCCode = &v
}

// GetFreeFormResponsesDatatype returns the FreeFormResponsesDatatype field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetFreeFormResponsesDatatype() string {
	if o == nil || IsNil(o.FreeFormResponsesDatatype) {
		var ret string
		return ret
	}
	return *o.FreeFormResponsesDatatype
}

// GetFreeFormResponsesDatatypeOk returns a tuple with the FreeFormResponsesDatatype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetFreeFormResponsesDatatypeOk() (*string, bool) {
	if o == nil || IsNil(o.FreeFormResponsesDatatype) {
		return nil, false
	}
	return o.FreeFormResponsesDatatype, true
}

// HasFreeFormResponsesDatatype returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasFreeFormResponsesDatatype() bool {
	if o != nil && !IsNil(o.FreeFormResponsesDatatype) {
		return true
	}

	return false
}

// SetFreeFormResponsesDatatype gets a reference to the given string and assigns it to the FreeFormResponsesDatatype field.
func (o *ExportQrsWorkbookItemsRow) SetFreeFormResponsesDatatype(v string) {
	o.FreeFormResponsesDatatype = &v
}

// GetResponseGroup returns the ResponseGroup field value if set, zero value otherwise.
func (o *ExportQrsWorkbookItemsRow) GetResponseGroup() string {
	if o == nil || IsNil(o.ResponseGroup) {
		var ret string
		return ret
	}
	return *o.ResponseGroup
}

// GetResponseGroupOk returns a tuple with the ResponseGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsWorkbookItemsRow) GetResponseGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseGroup) {
		return nil, false
	}
	return o.ResponseGroup, true
}

// HasResponseGroup returns a boolean if a field has been set.
func (o *ExportQrsWorkbookItemsRow) HasResponseGroup() bool {
	if o != nil && !IsNil(o.ResponseGroup) {
		return true
	}

	return false
}

// SetResponseGroup gets a reference to the given string and assigns it to the ResponseGroup field.
func (o *ExportQrsWorkbookItemsRow) SetResponseGroup(v string) {
	o.ResponseGroup = &v
}

func (o ExportQrsWorkbookItemsRow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportQrsWorkbookItemsRow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemSequence) {
		toSerialize["Item Sequence"] = o.ItemSequence
	}
	if !IsNil(o.TestName) {
		toSerialize["Test Name"] = o.TestName
	}
	if !IsNil(o.ItemText) {
		toSerialize["Item Text"] = o.ItemText
	}
	if !IsNil(o.TestsCodelistCCode) {
		toSerialize["Test's Codelist C-Code"] = o.TestsCodelistCCode
	}
	if !IsNil(o.TestsTermCCode) {
		toSerialize["Test's Term C-Code"] = o.TestsTermCCode
	}
	if !IsNil(o.TestCodesCodelistCCode) {
		toSerialize["Test Code's Codelist C-Code"] = o.TestCodesCodelistCCode
	}
	if !IsNil(o.TestCodesTermCCode) {
		toSerialize["Test Code's Term C-Code"] = o.TestCodesTermCCode
	}
	if !IsNil(o.SubcategorysCodelistCCode) {
		toSerialize["Subcategory's Codelist C-Code"] = o.SubcategorysCodelistCCode
	}
	if !IsNil(o.SubcategorysTermCCode) {
		toSerialize["Subcategory's Term C-Code"] = o.SubcategorysTermCCode
	}
	if !IsNil(o.EvaluatorsCodelistCCode) {
		toSerialize["Evaluator's Codelist C-Code"] = o.EvaluatorsCodelistCCode
	}
	if !IsNil(o.EvaluatorsTermCCode) {
		toSerialize["Evaluator's Term C-Code"] = o.EvaluatorsTermCCode
	}
	if !IsNil(o.FreeFormResponsesDatatype) {
		toSerialize["Free-form Response's Datatype"] = o.FreeFormResponsesDatatype
	}
	if !IsNil(o.ResponseGroup) {
		toSerialize["Response Group"] = o.ResponseGroup
	}
	return toSerialize, nil
}

type NullableExportQrsWorkbookItemsRow struct {
	value *ExportQrsWorkbookItemsRow
	isSet bool
}

func (v NullableExportQrsWorkbookItemsRow) Get() *ExportQrsWorkbookItemsRow {
	return v.value
}

func (v *NullableExportQrsWorkbookItemsRow) Set(val *ExportQrsWorkbookItemsRow) {
	v.value = val
	v.isSet = true
}

func (v NullableExportQrsWorkbookItemsRow) IsSet() bool {
	return v.isSet
}

func (v *NullableExportQrsWorkbookItemsRow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportQrsWorkbookItemsRow(val *ExportQrsWorkbookItemsRow) *NullableExportQrsWorkbookItemsRow {
	return &NullableExportQrsWorkbookItemsRow{value: val, isSet: true}
}

func (v NullableExportQrsWorkbookItemsRow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportQrsWorkbookItemsRow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


