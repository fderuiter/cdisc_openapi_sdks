/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SdtmClassVariableLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdtmClassVariableLinks{}

// SdtmClassVariableLinks struct for SdtmClassVariableLinks
type SdtmClassVariableLinks struct {
	Self *SdtmClassVariableRef `json:"self,omitempty"`
	ParentProduct *SdtmProductRef `json:"parentProduct,omitempty"`
	ParentClass *SdtmClassRef `json:"parentClass,omitempty"`
	QualifiesVariables []SdtmClassVariableRefQualifies `json:"qualifiesVariables,omitempty"`
	RootItem *RootSdtmClassVariableRef `json:"rootItem,omitempty"`
	PriorVersion *SdtmClassVariableRef `json:"priorVersion,omitempty"`
}

// NewSdtmClassVariableLinks instantiates a new SdtmClassVariableLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdtmClassVariableLinks() *SdtmClassVariableLinks {
	this := SdtmClassVariableLinks{}
	return &this
}

// NewSdtmClassVariableLinksWithDefaults instantiates a new SdtmClassVariableLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdtmClassVariableLinksWithDefaults() *SdtmClassVariableLinks {
	this := SdtmClassVariableLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SdtmClassVariableLinks) GetSelf() SdtmClassVariableRef {
	if o == nil || IsNil(o.Self) {
		var ret SdtmClassVariableRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassVariableLinks) GetSelfOk() (*SdtmClassVariableRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SdtmClassVariableLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given SdtmClassVariableRef and assigns it to the Self field.
func (o *SdtmClassVariableLinks) SetSelf(v SdtmClassVariableRef) {
	o.Self = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *SdtmClassVariableLinks) GetParentProduct() SdtmProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret SdtmProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassVariableLinks) GetParentProductOk() (*SdtmProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *SdtmClassVariableLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given SdtmProductRef and assigns it to the ParentProduct field.
func (o *SdtmClassVariableLinks) SetParentProduct(v SdtmProductRef) {
	o.ParentProduct = &v
}

// GetParentClass returns the ParentClass field value if set, zero value otherwise.
func (o *SdtmClassVariableLinks) GetParentClass() SdtmClassRef {
	if o == nil || IsNil(o.ParentClass) {
		var ret SdtmClassRef
		return ret
	}
	return *o.ParentClass
}

// GetParentClassOk returns a tuple with the ParentClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassVariableLinks) GetParentClassOk() (*SdtmClassRef, bool) {
	if o == nil || IsNil(o.ParentClass) {
		return nil, false
	}
	return o.ParentClass, true
}

// HasParentClass returns a boolean if a field has been set.
func (o *SdtmClassVariableLinks) HasParentClass() bool {
	if o != nil && !IsNil(o.ParentClass) {
		return true
	}

	return false
}

// SetParentClass gets a reference to the given SdtmClassRef and assigns it to the ParentClass field.
func (o *SdtmClassVariableLinks) SetParentClass(v SdtmClassRef) {
	o.ParentClass = &v
}

// GetQualifiesVariables returns the QualifiesVariables field value if set, zero value otherwise.
func (o *SdtmClassVariableLinks) GetQualifiesVariables() []SdtmClassVariableRefQualifies {
	if o == nil || IsNil(o.QualifiesVariables) {
		var ret []SdtmClassVariableRefQualifies
		return ret
	}
	return o.QualifiesVariables
}

// GetQualifiesVariablesOk returns a tuple with the QualifiesVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassVariableLinks) GetQualifiesVariablesOk() ([]SdtmClassVariableRefQualifies, bool) {
	if o == nil || IsNil(o.QualifiesVariables) {
		return nil, false
	}
	return o.QualifiesVariables, true
}

// HasQualifiesVariables returns a boolean if a field has been set.
func (o *SdtmClassVariableLinks) HasQualifiesVariables() bool {
	if o != nil && !IsNil(o.QualifiesVariables) {
		return true
	}

	return false
}

// SetQualifiesVariables gets a reference to the given []SdtmClassVariableRefQualifies and assigns it to the QualifiesVariables field.
func (o *SdtmClassVariableLinks) SetQualifiesVariables(v []SdtmClassVariableRefQualifies) {
	o.QualifiesVariables = v
}

// GetRootItem returns the RootItem field value if set, zero value otherwise.
func (o *SdtmClassVariableLinks) GetRootItem() RootSdtmClassVariableRef {
	if o == nil || IsNil(o.RootItem) {
		var ret RootSdtmClassVariableRef
		return ret
	}
	return *o.RootItem
}

// GetRootItemOk returns a tuple with the RootItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassVariableLinks) GetRootItemOk() (*RootSdtmClassVariableRef, bool) {
	if o == nil || IsNil(o.RootItem) {
		return nil, false
	}
	return o.RootItem, true
}

// HasRootItem returns a boolean if a field has been set.
func (o *SdtmClassVariableLinks) HasRootItem() bool {
	if o != nil && !IsNil(o.RootItem) {
		return true
	}

	return false
}

// SetRootItem gets a reference to the given RootSdtmClassVariableRef and assigns it to the RootItem field.
func (o *SdtmClassVariableLinks) SetRootItem(v RootSdtmClassVariableRef) {
	o.RootItem = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *SdtmClassVariableLinks) GetPriorVersion() SdtmClassVariableRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret SdtmClassVariableRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassVariableLinks) GetPriorVersionOk() (*SdtmClassVariableRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *SdtmClassVariableLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given SdtmClassVariableRef and assigns it to the PriorVersion field.
func (o *SdtmClassVariableLinks) SetPriorVersion(v SdtmClassVariableRef) {
	o.PriorVersion = &v
}

func (o SdtmClassVariableLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdtmClassVariableLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.ParentClass) {
		toSerialize["parentClass"] = o.ParentClass
	}
	if !IsNil(o.QualifiesVariables) {
		toSerialize["qualifiesVariables"] = o.QualifiesVariables
	}
	if !IsNil(o.RootItem) {
		toSerialize["rootItem"] = o.RootItem
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	return toSerialize, nil
}

type NullableSdtmClassVariableLinks struct {
	value *SdtmClassVariableLinks
	isSet bool
}

func (v NullableSdtmClassVariableLinks) Get() *SdtmClassVariableLinks {
	return v.value
}

func (v *NullableSdtmClassVariableLinks) Set(val *SdtmClassVariableLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSdtmClassVariableLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSdtmClassVariableLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdtmClassVariableLinks(val *SdtmClassVariableLinks) *NullableSdtmClassVariableLinks {
	return &NullableSdtmClassVariableLinks{value: val, isSet: true}
}

func (v NullableSdtmClassVariableLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdtmClassVariableLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


