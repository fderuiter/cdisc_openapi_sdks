/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExportSdtmWorkbook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportSdtmWorkbook{}

// ExportSdtmWorkbook struct for ExportSdtmWorkbook
type ExportSdtmWorkbook struct {
	ClassVariables []ExportSdtmClassVariablesRow `json:"class-variables,omitempty"`
	DatasetVariables []ExportSdtmDatasetVariablesRow `json:"dataset-variables,omitempty"`
	Datasets []ExportSdtmDatasetsRow `json:"datasets,omitempty"`
}

// NewExportSdtmWorkbook instantiates a new ExportSdtmWorkbook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportSdtmWorkbook() *ExportSdtmWorkbook {
	this := ExportSdtmWorkbook{}
	return &this
}

// NewExportSdtmWorkbookWithDefaults instantiates a new ExportSdtmWorkbook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportSdtmWorkbookWithDefaults() *ExportSdtmWorkbook {
	this := ExportSdtmWorkbook{}
	return &this
}

// GetClassVariables returns the ClassVariables field value if set, zero value otherwise.
func (o *ExportSdtmWorkbook) GetClassVariables() []ExportSdtmClassVariablesRow {
	if o == nil || IsNil(o.ClassVariables) {
		var ret []ExportSdtmClassVariablesRow
		return ret
	}
	return o.ClassVariables
}

// GetClassVariablesOk returns a tuple with the ClassVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmWorkbook) GetClassVariablesOk() ([]ExportSdtmClassVariablesRow, bool) {
	if o == nil || IsNil(o.ClassVariables) {
		return nil, false
	}
	return o.ClassVariables, true
}

// HasClassVariables returns a boolean if a field has been set.
func (o *ExportSdtmWorkbook) HasClassVariables() bool {
	if o != nil && !IsNil(o.ClassVariables) {
		return true
	}

	return false
}

// SetClassVariables gets a reference to the given []ExportSdtmClassVariablesRow and assigns it to the ClassVariables field.
func (o *ExportSdtmWorkbook) SetClassVariables(v []ExportSdtmClassVariablesRow) {
	o.ClassVariables = v
}

// GetDatasetVariables returns the DatasetVariables field value if set, zero value otherwise.
func (o *ExportSdtmWorkbook) GetDatasetVariables() []ExportSdtmDatasetVariablesRow {
	if o == nil || IsNil(o.DatasetVariables) {
		var ret []ExportSdtmDatasetVariablesRow
		return ret
	}
	return o.DatasetVariables
}

// GetDatasetVariablesOk returns a tuple with the DatasetVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmWorkbook) GetDatasetVariablesOk() ([]ExportSdtmDatasetVariablesRow, bool) {
	if o == nil || IsNil(o.DatasetVariables) {
		return nil, false
	}
	return o.DatasetVariables, true
}

// HasDatasetVariables returns a boolean if a field has been set.
func (o *ExportSdtmWorkbook) HasDatasetVariables() bool {
	if o != nil && !IsNil(o.DatasetVariables) {
		return true
	}

	return false
}

// SetDatasetVariables gets a reference to the given []ExportSdtmDatasetVariablesRow and assigns it to the DatasetVariables field.
func (o *ExportSdtmWorkbook) SetDatasetVariables(v []ExportSdtmDatasetVariablesRow) {
	o.DatasetVariables = v
}

// GetDatasets returns the Datasets field value if set, zero value otherwise.
func (o *ExportSdtmWorkbook) GetDatasets() []ExportSdtmDatasetsRow {
	if o == nil || IsNil(o.Datasets) {
		var ret []ExportSdtmDatasetsRow
		return ret
	}
	return o.Datasets
}

// GetDatasetsOk returns a tuple with the Datasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmWorkbook) GetDatasetsOk() ([]ExportSdtmDatasetsRow, bool) {
	if o == nil || IsNil(o.Datasets) {
		return nil, false
	}
	return o.Datasets, true
}

// HasDatasets returns a boolean if a field has been set.
func (o *ExportSdtmWorkbook) HasDatasets() bool {
	if o != nil && !IsNil(o.Datasets) {
		return true
	}

	return false
}

// SetDatasets gets a reference to the given []ExportSdtmDatasetsRow and assigns it to the Datasets field.
func (o *ExportSdtmWorkbook) SetDatasets(v []ExportSdtmDatasetsRow) {
	o.Datasets = v
}

func (o ExportSdtmWorkbook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportSdtmWorkbook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClassVariables) {
		toSerialize["class-variables"] = o.ClassVariables
	}
	if !IsNil(o.DatasetVariables) {
		toSerialize["dataset-variables"] = o.DatasetVariables
	}
	if !IsNil(o.Datasets) {
		toSerialize["datasets"] = o.Datasets
	}
	return toSerialize, nil
}

type NullableExportSdtmWorkbook struct {
	value *ExportSdtmWorkbook
	isSet bool
}

func (v NullableExportSdtmWorkbook) Get() *ExportSdtmWorkbook {
	return v.value
}

func (v *NullableExportSdtmWorkbook) Set(val *ExportSdtmWorkbook) {
	v.value = val
	v.isSet = true
}

func (v NullableExportSdtmWorkbook) IsSet() bool {
	return v.isSet
}

func (v *NullableExportSdtmWorkbook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportSdtmWorkbook(val *ExportSdtmWorkbook) *NullableExportSdtmWorkbook {
	return &NullableExportSdtmWorkbook{value: val, isSet: true}
}

func (v NullableExportSdtmWorkbook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportSdtmWorkbook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


