/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CdashClassFieldLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdashClassFieldLinks{}

// CdashClassFieldLinks struct for CdashClassFieldLinks
type CdashClassFieldLinks struct {
	Self *CdashClassFieldRef `json:"self,omitempty"`
	Codelist []RootCtCodelistRefElement `json:"codelist,omitempty"`
	ParentProduct *CdashProductRef `json:"parentProduct,omitempty"`
	ParentClass *CdashClassRef `json:"parentClass,omitempty"`
	RootItem *RootCdashClassFieldRef `json:"rootItem,omitempty"`
	PriorVersion *CdashClassFieldRef `json:"priorVersion,omitempty"`
	SdtmClassMappingTargets []SdtmClassVariableRefTarget `json:"sdtmClassMappingTargets,omitempty"`
	SdtmDatasetMappingTargets []SdtmDatasetVariableRefTarget `json:"sdtmDatasetMappingTargets,omitempty"`
}

// NewCdashClassFieldLinks instantiates a new CdashClassFieldLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdashClassFieldLinks() *CdashClassFieldLinks {
	this := CdashClassFieldLinks{}
	return &this
}

// NewCdashClassFieldLinksWithDefaults instantiates a new CdashClassFieldLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdashClassFieldLinksWithDefaults() *CdashClassFieldLinks {
	this := CdashClassFieldLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *CdashClassFieldLinks) GetSelf() CdashClassFieldRef {
	if o == nil || IsNil(o.Self) {
		var ret CdashClassFieldRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassFieldLinks) GetSelfOk() (*CdashClassFieldRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *CdashClassFieldLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given CdashClassFieldRef and assigns it to the Self field.
func (o *CdashClassFieldLinks) SetSelf(v CdashClassFieldRef) {
	o.Self = &v
}

// GetCodelist returns the Codelist field value if set, zero value otherwise.
func (o *CdashClassFieldLinks) GetCodelist() []RootCtCodelistRefElement {
	if o == nil || IsNil(o.Codelist) {
		var ret []RootCtCodelistRefElement
		return ret
	}
	return o.Codelist
}

// GetCodelistOk returns a tuple with the Codelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassFieldLinks) GetCodelistOk() ([]RootCtCodelistRefElement, bool) {
	if o == nil || IsNil(o.Codelist) {
		return nil, false
	}
	return o.Codelist, true
}

// HasCodelist returns a boolean if a field has been set.
func (o *CdashClassFieldLinks) HasCodelist() bool {
	if o != nil && !IsNil(o.Codelist) {
		return true
	}

	return false
}

// SetCodelist gets a reference to the given []RootCtCodelistRefElement and assigns it to the Codelist field.
func (o *CdashClassFieldLinks) SetCodelist(v []RootCtCodelistRefElement) {
	o.Codelist = v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *CdashClassFieldLinks) GetParentProduct() CdashProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret CdashProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassFieldLinks) GetParentProductOk() (*CdashProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *CdashClassFieldLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given CdashProductRef and assigns it to the ParentProduct field.
func (o *CdashClassFieldLinks) SetParentProduct(v CdashProductRef) {
	o.ParentProduct = &v
}

// GetParentClass returns the ParentClass field value if set, zero value otherwise.
func (o *CdashClassFieldLinks) GetParentClass() CdashClassRef {
	if o == nil || IsNil(o.ParentClass) {
		var ret CdashClassRef
		return ret
	}
	return *o.ParentClass
}

// GetParentClassOk returns a tuple with the ParentClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassFieldLinks) GetParentClassOk() (*CdashClassRef, bool) {
	if o == nil || IsNil(o.ParentClass) {
		return nil, false
	}
	return o.ParentClass, true
}

// HasParentClass returns a boolean if a field has been set.
func (o *CdashClassFieldLinks) HasParentClass() bool {
	if o != nil && !IsNil(o.ParentClass) {
		return true
	}

	return false
}

// SetParentClass gets a reference to the given CdashClassRef and assigns it to the ParentClass field.
func (o *CdashClassFieldLinks) SetParentClass(v CdashClassRef) {
	o.ParentClass = &v
}

// GetRootItem returns the RootItem field value if set, zero value otherwise.
func (o *CdashClassFieldLinks) GetRootItem() RootCdashClassFieldRef {
	if o == nil || IsNil(o.RootItem) {
		var ret RootCdashClassFieldRef
		return ret
	}
	return *o.RootItem
}

// GetRootItemOk returns a tuple with the RootItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassFieldLinks) GetRootItemOk() (*RootCdashClassFieldRef, bool) {
	if o == nil || IsNil(o.RootItem) {
		return nil, false
	}
	return o.RootItem, true
}

// HasRootItem returns a boolean if a field has been set.
func (o *CdashClassFieldLinks) HasRootItem() bool {
	if o != nil && !IsNil(o.RootItem) {
		return true
	}

	return false
}

// SetRootItem gets a reference to the given RootCdashClassFieldRef and assigns it to the RootItem field.
func (o *CdashClassFieldLinks) SetRootItem(v RootCdashClassFieldRef) {
	o.RootItem = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *CdashClassFieldLinks) GetPriorVersion() CdashClassFieldRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret CdashClassFieldRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassFieldLinks) GetPriorVersionOk() (*CdashClassFieldRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *CdashClassFieldLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given CdashClassFieldRef and assigns it to the PriorVersion field.
func (o *CdashClassFieldLinks) SetPriorVersion(v CdashClassFieldRef) {
	o.PriorVersion = &v
}

// GetSdtmClassMappingTargets returns the SdtmClassMappingTargets field value if set, zero value otherwise.
func (o *CdashClassFieldLinks) GetSdtmClassMappingTargets() []SdtmClassVariableRefTarget {
	if o == nil || IsNil(o.SdtmClassMappingTargets) {
		var ret []SdtmClassVariableRefTarget
		return ret
	}
	return o.SdtmClassMappingTargets
}

// GetSdtmClassMappingTargetsOk returns a tuple with the SdtmClassMappingTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassFieldLinks) GetSdtmClassMappingTargetsOk() ([]SdtmClassVariableRefTarget, bool) {
	if o == nil || IsNil(o.SdtmClassMappingTargets) {
		return nil, false
	}
	return o.SdtmClassMappingTargets, true
}

// HasSdtmClassMappingTargets returns a boolean if a field has been set.
func (o *CdashClassFieldLinks) HasSdtmClassMappingTargets() bool {
	if o != nil && !IsNil(o.SdtmClassMappingTargets) {
		return true
	}

	return false
}

// SetSdtmClassMappingTargets gets a reference to the given []SdtmClassVariableRefTarget and assigns it to the SdtmClassMappingTargets field.
func (o *CdashClassFieldLinks) SetSdtmClassMappingTargets(v []SdtmClassVariableRefTarget) {
	o.SdtmClassMappingTargets = v
}

// GetSdtmDatasetMappingTargets returns the SdtmDatasetMappingTargets field value if set, zero value otherwise.
func (o *CdashClassFieldLinks) GetSdtmDatasetMappingTargets() []SdtmDatasetVariableRefTarget {
	if o == nil || IsNil(o.SdtmDatasetMappingTargets) {
		var ret []SdtmDatasetVariableRefTarget
		return ret
	}
	return o.SdtmDatasetMappingTargets
}

// GetSdtmDatasetMappingTargetsOk returns a tuple with the SdtmDatasetMappingTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassFieldLinks) GetSdtmDatasetMappingTargetsOk() ([]SdtmDatasetVariableRefTarget, bool) {
	if o == nil || IsNil(o.SdtmDatasetMappingTargets) {
		return nil, false
	}
	return o.SdtmDatasetMappingTargets, true
}

// HasSdtmDatasetMappingTargets returns a boolean if a field has been set.
func (o *CdashClassFieldLinks) HasSdtmDatasetMappingTargets() bool {
	if o != nil && !IsNil(o.SdtmDatasetMappingTargets) {
		return true
	}

	return false
}

// SetSdtmDatasetMappingTargets gets a reference to the given []SdtmDatasetVariableRefTarget and assigns it to the SdtmDatasetMappingTargets field.
func (o *CdashClassFieldLinks) SetSdtmDatasetMappingTargets(v []SdtmDatasetVariableRefTarget) {
	o.SdtmDatasetMappingTargets = v
}

func (o CdashClassFieldLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdashClassFieldLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Codelist) {
		toSerialize["codelist"] = o.Codelist
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.ParentClass) {
		toSerialize["parentClass"] = o.ParentClass
	}
	if !IsNil(o.RootItem) {
		toSerialize["rootItem"] = o.RootItem
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	if !IsNil(o.SdtmClassMappingTargets) {
		toSerialize["sdtmClassMappingTargets"] = o.SdtmClassMappingTargets
	}
	if !IsNil(o.SdtmDatasetMappingTargets) {
		toSerialize["sdtmDatasetMappingTargets"] = o.SdtmDatasetMappingTargets
	}
	return toSerialize, nil
}

type NullableCdashClassFieldLinks struct {
	value *CdashClassFieldLinks
	isSet bool
}

func (v NullableCdashClassFieldLinks) Get() *CdashClassFieldLinks {
	return v.value
}

func (v *NullableCdashClassFieldLinks) Set(val *CdashClassFieldLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCdashClassFieldLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCdashClassFieldLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdashClassFieldLinks(val *CdashClassFieldLinks) *NullableCdashClassFieldLinks {
	return &NullableCdashClassFieldLinks{value: val, isSet: true}
}

func (v NullableCdashClassFieldLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdashClassFieldLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


