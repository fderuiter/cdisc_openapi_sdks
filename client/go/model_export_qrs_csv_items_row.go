/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExportQrsCsvItemsRow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportQrsCsvItemsRow{}

// ExportQrsCsvItemsRow struct for ExportQrsCsvItemsRow
type ExportQrsCsvItemsRow struct {
	QRSMeasureName *string `json:"QRS Measure Name,omitempty"`
	QRSMeasureLabel *string `json:"QRS Measure Label,omitempty"`
	QRSMeasureType *string `json:"QRS Measure Type,omitempty"`
	ItemSequence *string `json:"Item Sequence,omitempty"`
	TestName *string `json:"Test Name,omitempty"`
	ItemText *string `json:"Item Text,omitempty"`
	TestsCodelistCCode *string `json:"Test's Codelist C-Code,omitempty"`
	TestsTermCCode *string `json:"Test's Term C-Code,omitempty"`
	TestCodesCodelistCCode *string `json:"Test Code's Codelist C-Code,omitempty"`
	TestCodesTermCCode *string `json:"Test Code's Term C-Code,omitempty"`
	SubcategorysCodelistCCode *string `json:"Subcategory's Codelist C-Code,omitempty"`
	SubcategorysTermCCode *string `json:"Subcategory's Term C-Code,omitempty"`
	EvaluatorsCodelistCCode *string `json:"Evaluator's Codelist C-Code,omitempty"`
	EvaluatorsTermCCode *string `json:"Evaluator's Term C-Code,omitempty"`
	FreeFormResponsesDatatype *string `json:"Free-form Response's Datatype,omitempty"`
	ResponseGroup *string `json:"Response Group,omitempty"`
}

// NewExportQrsCsvItemsRow instantiates a new ExportQrsCsvItemsRow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportQrsCsvItemsRow() *ExportQrsCsvItemsRow {
	this := ExportQrsCsvItemsRow{}
	return &this
}

// NewExportQrsCsvItemsRowWithDefaults instantiates a new ExportQrsCsvItemsRow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportQrsCsvItemsRowWithDefaults() *ExportQrsCsvItemsRow {
	this := ExportQrsCsvItemsRow{}
	return &this
}

// GetQRSMeasureName returns the QRSMeasureName field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetQRSMeasureName() string {
	if o == nil || IsNil(o.QRSMeasureName) {
		var ret string
		return ret
	}
	return *o.QRSMeasureName
}

// GetQRSMeasureNameOk returns a tuple with the QRSMeasureName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetQRSMeasureNameOk() (*string, bool) {
	if o == nil || IsNil(o.QRSMeasureName) {
		return nil, false
	}
	return o.QRSMeasureName, true
}

// HasQRSMeasureName returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasQRSMeasureName() bool {
	if o != nil && !IsNil(o.QRSMeasureName) {
		return true
	}

	return false
}

// SetQRSMeasureName gets a reference to the given string and assigns it to the QRSMeasureName field.
func (o *ExportQrsCsvItemsRow) SetQRSMeasureName(v string) {
	o.QRSMeasureName = &v
}

// GetQRSMeasureLabel returns the QRSMeasureLabel field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetQRSMeasureLabel() string {
	if o == nil || IsNil(o.QRSMeasureLabel) {
		var ret string
		return ret
	}
	return *o.QRSMeasureLabel
}

// GetQRSMeasureLabelOk returns a tuple with the QRSMeasureLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetQRSMeasureLabelOk() (*string, bool) {
	if o == nil || IsNil(o.QRSMeasureLabel) {
		return nil, false
	}
	return o.QRSMeasureLabel, true
}

// HasQRSMeasureLabel returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasQRSMeasureLabel() bool {
	if o != nil && !IsNil(o.QRSMeasureLabel) {
		return true
	}

	return false
}

// SetQRSMeasureLabel gets a reference to the given string and assigns it to the QRSMeasureLabel field.
func (o *ExportQrsCsvItemsRow) SetQRSMeasureLabel(v string) {
	o.QRSMeasureLabel = &v
}

// GetQRSMeasureType returns the QRSMeasureType field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetQRSMeasureType() string {
	if o == nil || IsNil(o.QRSMeasureType) {
		var ret string
		return ret
	}
	return *o.QRSMeasureType
}

// GetQRSMeasureTypeOk returns a tuple with the QRSMeasureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetQRSMeasureTypeOk() (*string, bool) {
	if o == nil || IsNil(o.QRSMeasureType) {
		return nil, false
	}
	return o.QRSMeasureType, true
}

// HasQRSMeasureType returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasQRSMeasureType() bool {
	if o != nil && !IsNil(o.QRSMeasureType) {
		return true
	}

	return false
}

// SetQRSMeasureType gets a reference to the given string and assigns it to the QRSMeasureType field.
func (o *ExportQrsCsvItemsRow) SetQRSMeasureType(v string) {
	o.QRSMeasureType = &v
}

// GetItemSequence returns the ItemSequence field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetItemSequence() string {
	if o == nil || IsNil(o.ItemSequence) {
		var ret string
		return ret
	}
	return *o.ItemSequence
}

// GetItemSequenceOk returns a tuple with the ItemSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetItemSequenceOk() (*string, bool) {
	if o == nil || IsNil(o.ItemSequence) {
		return nil, false
	}
	return o.ItemSequence, true
}

// HasItemSequence returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasItemSequence() bool {
	if o != nil && !IsNil(o.ItemSequence) {
		return true
	}

	return false
}

// SetItemSequence gets a reference to the given string and assigns it to the ItemSequence field.
func (o *ExportQrsCsvItemsRow) SetItemSequence(v string) {
	o.ItemSequence = &v
}

// GetTestName returns the TestName field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetTestName() string {
	if o == nil || IsNil(o.TestName) {
		var ret string
		return ret
	}
	return *o.TestName
}

// GetTestNameOk returns a tuple with the TestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetTestNameOk() (*string, bool) {
	if o == nil || IsNil(o.TestName) {
		return nil, false
	}
	return o.TestName, true
}

// HasTestName returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasTestName() bool {
	if o != nil && !IsNil(o.TestName) {
		return true
	}

	return false
}

// SetTestName gets a reference to the given string and assigns it to the TestName field.
func (o *ExportQrsCsvItemsRow) SetTestName(v string) {
	o.TestName = &v
}

// GetItemText returns the ItemText field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetItemText() string {
	if o == nil || IsNil(o.ItemText) {
		var ret string
		return ret
	}
	return *o.ItemText
}

// GetItemTextOk returns a tuple with the ItemText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetItemTextOk() (*string, bool) {
	if o == nil || IsNil(o.ItemText) {
		return nil, false
	}
	return o.ItemText, true
}

// HasItemText returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasItemText() bool {
	if o != nil && !IsNil(o.ItemText) {
		return true
	}

	return false
}

// SetItemText gets a reference to the given string and assigns it to the ItemText field.
func (o *ExportQrsCsvItemsRow) SetItemText(v string) {
	o.ItemText = &v
}

// GetTestsCodelistCCode returns the TestsCodelistCCode field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetTestsCodelistCCode() string {
	if o == nil || IsNil(o.TestsCodelistCCode) {
		var ret string
		return ret
	}
	return *o.TestsCodelistCCode
}

// GetTestsCodelistCCodeOk returns a tuple with the TestsCodelistCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetTestsCodelistCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TestsCodelistCCode) {
		return nil, false
	}
	return o.TestsCodelistCCode, true
}

// HasTestsCodelistCCode returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasTestsCodelistCCode() bool {
	if o != nil && !IsNil(o.TestsCodelistCCode) {
		return true
	}

	return false
}

// SetTestsCodelistCCode gets a reference to the given string and assigns it to the TestsCodelistCCode field.
func (o *ExportQrsCsvItemsRow) SetTestsCodelistCCode(v string) {
	o.TestsCodelistCCode = &v
}

// GetTestsTermCCode returns the TestsTermCCode field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetTestsTermCCode() string {
	if o == nil || IsNil(o.TestsTermCCode) {
		var ret string
		return ret
	}
	return *o.TestsTermCCode
}

// GetTestsTermCCodeOk returns a tuple with the TestsTermCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetTestsTermCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TestsTermCCode) {
		return nil, false
	}
	return o.TestsTermCCode, true
}

// HasTestsTermCCode returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasTestsTermCCode() bool {
	if o != nil && !IsNil(o.TestsTermCCode) {
		return true
	}

	return false
}

// SetTestsTermCCode gets a reference to the given string and assigns it to the TestsTermCCode field.
func (o *ExportQrsCsvItemsRow) SetTestsTermCCode(v string) {
	o.TestsTermCCode = &v
}

// GetTestCodesCodelistCCode returns the TestCodesCodelistCCode field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetTestCodesCodelistCCode() string {
	if o == nil || IsNil(o.TestCodesCodelistCCode) {
		var ret string
		return ret
	}
	return *o.TestCodesCodelistCCode
}

// GetTestCodesCodelistCCodeOk returns a tuple with the TestCodesCodelistCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetTestCodesCodelistCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TestCodesCodelistCCode) {
		return nil, false
	}
	return o.TestCodesCodelistCCode, true
}

// HasTestCodesCodelistCCode returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasTestCodesCodelistCCode() bool {
	if o != nil && !IsNil(o.TestCodesCodelistCCode) {
		return true
	}

	return false
}

// SetTestCodesCodelistCCode gets a reference to the given string and assigns it to the TestCodesCodelistCCode field.
func (o *ExportQrsCsvItemsRow) SetTestCodesCodelistCCode(v string) {
	o.TestCodesCodelistCCode = &v
}

// GetTestCodesTermCCode returns the TestCodesTermCCode field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetTestCodesTermCCode() string {
	if o == nil || IsNil(o.TestCodesTermCCode) {
		var ret string
		return ret
	}
	return *o.TestCodesTermCCode
}

// GetTestCodesTermCCodeOk returns a tuple with the TestCodesTermCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetTestCodesTermCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TestCodesTermCCode) {
		return nil, false
	}
	return o.TestCodesTermCCode, true
}

// HasTestCodesTermCCode returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasTestCodesTermCCode() bool {
	if o != nil && !IsNil(o.TestCodesTermCCode) {
		return true
	}

	return false
}

// SetTestCodesTermCCode gets a reference to the given string and assigns it to the TestCodesTermCCode field.
func (o *ExportQrsCsvItemsRow) SetTestCodesTermCCode(v string) {
	o.TestCodesTermCCode = &v
}

// GetSubcategorysCodelistCCode returns the SubcategorysCodelistCCode field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetSubcategorysCodelistCCode() string {
	if o == nil || IsNil(o.SubcategorysCodelistCCode) {
		var ret string
		return ret
	}
	return *o.SubcategorysCodelistCCode
}

// GetSubcategorysCodelistCCodeOk returns a tuple with the SubcategorysCodelistCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetSubcategorysCodelistCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SubcategorysCodelistCCode) {
		return nil, false
	}
	return o.SubcategorysCodelistCCode, true
}

// HasSubcategorysCodelistCCode returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasSubcategorysCodelistCCode() bool {
	if o != nil && !IsNil(o.SubcategorysCodelistCCode) {
		return true
	}

	return false
}

// SetSubcategorysCodelistCCode gets a reference to the given string and assigns it to the SubcategorysCodelistCCode field.
func (o *ExportQrsCsvItemsRow) SetSubcategorysCodelistCCode(v string) {
	o.SubcategorysCodelistCCode = &v
}

// GetSubcategorysTermCCode returns the SubcategorysTermCCode field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetSubcategorysTermCCode() string {
	if o == nil || IsNil(o.SubcategorysTermCCode) {
		var ret string
		return ret
	}
	return *o.SubcategorysTermCCode
}

// GetSubcategorysTermCCodeOk returns a tuple with the SubcategorysTermCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetSubcategorysTermCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SubcategorysTermCCode) {
		return nil, false
	}
	return o.SubcategorysTermCCode, true
}

// HasSubcategorysTermCCode returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasSubcategorysTermCCode() bool {
	if o != nil && !IsNil(o.SubcategorysTermCCode) {
		return true
	}

	return false
}

// SetSubcategorysTermCCode gets a reference to the given string and assigns it to the SubcategorysTermCCode field.
func (o *ExportQrsCsvItemsRow) SetSubcategorysTermCCode(v string) {
	o.SubcategorysTermCCode = &v
}

// GetEvaluatorsCodelistCCode returns the EvaluatorsCodelistCCode field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetEvaluatorsCodelistCCode() string {
	if o == nil || IsNil(o.EvaluatorsCodelistCCode) {
		var ret string
		return ret
	}
	return *o.EvaluatorsCodelistCCode
}

// GetEvaluatorsCodelistCCodeOk returns a tuple with the EvaluatorsCodelistCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetEvaluatorsCodelistCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.EvaluatorsCodelistCCode) {
		return nil, false
	}
	return o.EvaluatorsCodelistCCode, true
}

// HasEvaluatorsCodelistCCode returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasEvaluatorsCodelistCCode() bool {
	if o != nil && !IsNil(o.EvaluatorsCodelistCCode) {
		return true
	}

	return false
}

// SetEvaluatorsCodelistCCode gets a reference to the given string and assigns it to the EvaluatorsCodelistCCode field.
func (o *ExportQrsCsvItemsRow) SetEvaluatorsCodelistCCode(v string) {
	o.EvaluatorsCodelistCCode = &v
}

// GetEvaluatorsTermCCode returns the EvaluatorsTermCCode field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetEvaluatorsTermCCode() string {
	if o == nil || IsNil(o.EvaluatorsTermCCode) {
		var ret string
		return ret
	}
	return *o.EvaluatorsTermCCode
}

// GetEvaluatorsTermCCodeOk returns a tuple with the EvaluatorsTermCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetEvaluatorsTermCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.EvaluatorsTermCCode) {
		return nil, false
	}
	return o.EvaluatorsTermCCode, true
}

// HasEvaluatorsTermCCode returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasEvaluatorsTermCCode() bool {
	if o != nil && !IsNil(o.EvaluatorsTermCCode) {
		return true
	}

	return false
}

// SetEvaluatorsTermCCode gets a reference to the given string and assigns it to the EvaluatorsTermCCode field.
func (o *ExportQrsCsvItemsRow) SetEvaluatorsTermCCode(v string) {
	o.EvaluatorsTermCCode = &v
}

// GetFreeFormResponsesDatatype returns the FreeFormResponsesDatatype field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetFreeFormResponsesDatatype() string {
	if o == nil || IsNil(o.FreeFormResponsesDatatype) {
		var ret string
		return ret
	}
	return *o.FreeFormResponsesDatatype
}

// GetFreeFormResponsesDatatypeOk returns a tuple with the FreeFormResponsesDatatype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetFreeFormResponsesDatatypeOk() (*string, bool) {
	if o == nil || IsNil(o.FreeFormResponsesDatatype) {
		return nil, false
	}
	return o.FreeFormResponsesDatatype, true
}

// HasFreeFormResponsesDatatype returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasFreeFormResponsesDatatype() bool {
	if o != nil && !IsNil(o.FreeFormResponsesDatatype) {
		return true
	}

	return false
}

// SetFreeFormResponsesDatatype gets a reference to the given string and assigns it to the FreeFormResponsesDatatype field.
func (o *ExportQrsCsvItemsRow) SetFreeFormResponsesDatatype(v string) {
	o.FreeFormResponsesDatatype = &v
}

// GetResponseGroup returns the ResponseGroup field value if set, zero value otherwise.
func (o *ExportQrsCsvItemsRow) GetResponseGroup() string {
	if o == nil || IsNil(o.ResponseGroup) {
		var ret string
		return ret
	}
	return *o.ResponseGroup
}

// GetResponseGroupOk returns a tuple with the ResponseGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsCsvItemsRow) GetResponseGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseGroup) {
		return nil, false
	}
	return o.ResponseGroup, true
}

// HasResponseGroup returns a boolean if a field has been set.
func (o *ExportQrsCsvItemsRow) HasResponseGroup() bool {
	if o != nil && !IsNil(o.ResponseGroup) {
		return true
	}

	return false
}

// SetResponseGroup gets a reference to the given string and assigns it to the ResponseGroup field.
func (o *ExportQrsCsvItemsRow) SetResponseGroup(v string) {
	o.ResponseGroup = &v
}

func (o ExportQrsCsvItemsRow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportQrsCsvItemsRow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QRSMeasureName) {
		toSerialize["QRS Measure Name"] = o.QRSMeasureName
	}
	if !IsNil(o.QRSMeasureLabel) {
		toSerialize["QRS Measure Label"] = o.QRSMeasureLabel
	}
	if !IsNil(o.QRSMeasureType) {
		toSerialize["QRS Measure Type"] = o.QRSMeasureType
	}
	if !IsNil(o.ItemSequence) {
		toSerialize["Item Sequence"] = o.ItemSequence
	}
	if !IsNil(o.TestName) {
		toSerialize["Test Name"] = o.TestName
	}
	if !IsNil(o.ItemText) {
		toSerialize["Item Text"] = o.ItemText
	}
	if !IsNil(o.TestsCodelistCCode) {
		toSerialize["Test's Codelist C-Code"] = o.TestsCodelistCCode
	}
	if !IsNil(o.TestsTermCCode) {
		toSerialize["Test's Term C-Code"] = o.TestsTermCCode
	}
	if !IsNil(o.TestCodesCodelistCCode) {
		toSerialize["Test Code's Codelist C-Code"] = o.TestCodesCodelistCCode
	}
	if !IsNil(o.TestCodesTermCCode) {
		toSerialize["Test Code's Term C-Code"] = o.TestCodesTermCCode
	}
	if !IsNil(o.SubcategorysCodelistCCode) {
		toSerialize["Subcategory's Codelist C-Code"] = o.SubcategorysCodelistCCode
	}
	if !IsNil(o.SubcategorysTermCCode) {
		toSerialize["Subcategory's Term C-Code"] = o.SubcategorysTermCCode
	}
	if !IsNil(o.EvaluatorsCodelistCCode) {
		toSerialize["Evaluator's Codelist C-Code"] = o.EvaluatorsCodelistCCode
	}
	if !IsNil(o.EvaluatorsTermCCode) {
		toSerialize["Evaluator's Term C-Code"] = o.EvaluatorsTermCCode
	}
	if !IsNil(o.FreeFormResponsesDatatype) {
		toSerialize["Free-form Response's Datatype"] = o.FreeFormResponsesDatatype
	}
	if !IsNil(o.ResponseGroup) {
		toSerialize["Response Group"] = o.ResponseGroup
	}
	return toSerialize, nil
}

type NullableExportQrsCsvItemsRow struct {
	value *ExportQrsCsvItemsRow
	isSet bool
}

func (v NullableExportQrsCsvItemsRow) Get() *ExportQrsCsvItemsRow {
	return v.value
}

func (v *NullableExportQrsCsvItemsRow) Set(val *ExportQrsCsvItemsRow) {
	v.value = val
	v.isSet = true
}

func (v NullableExportQrsCsvItemsRow) IsSet() bool {
	return v.isSet
}

func (v *NullableExportQrsCsvItemsRow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportQrsCsvItemsRow(val *ExportQrsCsvItemsRow) *NullableExportQrsCsvItemsRow {
	return &NullableExportQrsCsvItemsRow{value: val, isSet: true}
}

func (v NullableExportQrsCsvItemsRow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportQrsCsvItemsRow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


