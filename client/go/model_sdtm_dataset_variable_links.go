/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SdtmDatasetVariableLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdtmDatasetVariableLinks{}

// SdtmDatasetVariableLinks struct for SdtmDatasetVariableLinks
type SdtmDatasetVariableLinks struct {
	Self *SdtmDatasetVariableRef `json:"self,omitempty"`
	ParentProduct *SdtmProductRef `json:"parentProduct,omitempty"`
	ParentDataset *SdtmDatasetRef `json:"parentDataset,omitempty"`
	RootItem *RootSdtmDatasetVariableRef `json:"rootItem,omitempty"`
	PriorVersion *SdtmDatasetVariableRef `json:"priorVersion,omitempty"`
}

// NewSdtmDatasetVariableLinks instantiates a new SdtmDatasetVariableLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdtmDatasetVariableLinks() *SdtmDatasetVariableLinks {
	this := SdtmDatasetVariableLinks{}
	return &this
}

// NewSdtmDatasetVariableLinksWithDefaults instantiates a new SdtmDatasetVariableLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdtmDatasetVariableLinksWithDefaults() *SdtmDatasetVariableLinks {
	this := SdtmDatasetVariableLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SdtmDatasetVariableLinks) GetSelf() SdtmDatasetVariableRef {
	if o == nil || IsNil(o.Self) {
		var ret SdtmDatasetVariableRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmDatasetVariableLinks) GetSelfOk() (*SdtmDatasetVariableRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SdtmDatasetVariableLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given SdtmDatasetVariableRef and assigns it to the Self field.
func (o *SdtmDatasetVariableLinks) SetSelf(v SdtmDatasetVariableRef) {
	o.Self = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *SdtmDatasetVariableLinks) GetParentProduct() SdtmProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret SdtmProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmDatasetVariableLinks) GetParentProductOk() (*SdtmProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *SdtmDatasetVariableLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given SdtmProductRef and assigns it to the ParentProduct field.
func (o *SdtmDatasetVariableLinks) SetParentProduct(v SdtmProductRef) {
	o.ParentProduct = &v
}

// GetParentDataset returns the ParentDataset field value if set, zero value otherwise.
func (o *SdtmDatasetVariableLinks) GetParentDataset() SdtmDatasetRef {
	if o == nil || IsNil(o.ParentDataset) {
		var ret SdtmDatasetRef
		return ret
	}
	return *o.ParentDataset
}

// GetParentDatasetOk returns a tuple with the ParentDataset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmDatasetVariableLinks) GetParentDatasetOk() (*SdtmDatasetRef, bool) {
	if o == nil || IsNil(o.ParentDataset) {
		return nil, false
	}
	return o.ParentDataset, true
}

// HasParentDataset returns a boolean if a field has been set.
func (o *SdtmDatasetVariableLinks) HasParentDataset() bool {
	if o != nil && !IsNil(o.ParentDataset) {
		return true
	}

	return false
}

// SetParentDataset gets a reference to the given SdtmDatasetRef and assigns it to the ParentDataset field.
func (o *SdtmDatasetVariableLinks) SetParentDataset(v SdtmDatasetRef) {
	o.ParentDataset = &v
}

// GetRootItem returns the RootItem field value if set, zero value otherwise.
func (o *SdtmDatasetVariableLinks) GetRootItem() RootSdtmDatasetVariableRef {
	if o == nil || IsNil(o.RootItem) {
		var ret RootSdtmDatasetVariableRef
		return ret
	}
	return *o.RootItem
}

// GetRootItemOk returns a tuple with the RootItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmDatasetVariableLinks) GetRootItemOk() (*RootSdtmDatasetVariableRef, bool) {
	if o == nil || IsNil(o.RootItem) {
		return nil, false
	}
	return o.RootItem, true
}

// HasRootItem returns a boolean if a field has been set.
func (o *SdtmDatasetVariableLinks) HasRootItem() bool {
	if o != nil && !IsNil(o.RootItem) {
		return true
	}

	return false
}

// SetRootItem gets a reference to the given RootSdtmDatasetVariableRef and assigns it to the RootItem field.
func (o *SdtmDatasetVariableLinks) SetRootItem(v RootSdtmDatasetVariableRef) {
	o.RootItem = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *SdtmDatasetVariableLinks) GetPriorVersion() SdtmDatasetVariableRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret SdtmDatasetVariableRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmDatasetVariableLinks) GetPriorVersionOk() (*SdtmDatasetVariableRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *SdtmDatasetVariableLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given SdtmDatasetVariableRef and assigns it to the PriorVersion field.
func (o *SdtmDatasetVariableLinks) SetPriorVersion(v SdtmDatasetVariableRef) {
	o.PriorVersion = &v
}

func (o SdtmDatasetVariableLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdtmDatasetVariableLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.ParentDataset) {
		toSerialize["parentDataset"] = o.ParentDataset
	}
	if !IsNil(o.RootItem) {
		toSerialize["rootItem"] = o.RootItem
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	return toSerialize, nil
}

type NullableSdtmDatasetVariableLinks struct {
	value *SdtmDatasetVariableLinks
	isSet bool
}

func (v NullableSdtmDatasetVariableLinks) Get() *SdtmDatasetVariableLinks {
	return v.value
}

func (v *NullableSdtmDatasetVariableLinks) Set(val *SdtmDatasetVariableLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSdtmDatasetVariableLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSdtmDatasetVariableLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdtmDatasetVariableLinks(val *SdtmDatasetVariableLinks) *NullableSdtmDatasetVariableLinks {
	return &NullableSdtmDatasetVariableLinks{value: val, isSet: true}
}

func (v NullableSdtmDatasetVariableLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdtmDatasetVariableLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


