/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdamProductDatastructuresLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdamProductDatastructuresLinks{}

// AdamProductDatastructuresLinks struct for AdamProductDatastructuresLinks
type AdamProductDatastructuresLinks struct {
	Self *AdamProductDatastructuresRef `json:"self,omitempty"`
	PriorVersion *AdamProductDatastructuresRef `json:"priorVersion,omitempty"`
	DataStructures []AdamDatastructureRefElement `json:"dataStructures,omitempty"`
}

// NewAdamProductDatastructuresLinks instantiates a new AdamProductDatastructuresLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdamProductDatastructuresLinks() *AdamProductDatastructuresLinks {
	this := AdamProductDatastructuresLinks{}
	return &this
}

// NewAdamProductDatastructuresLinksWithDefaults instantiates a new AdamProductDatastructuresLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdamProductDatastructuresLinksWithDefaults() *AdamProductDatastructuresLinks {
	this := AdamProductDatastructuresLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *AdamProductDatastructuresLinks) GetSelf() AdamProductDatastructuresRef {
	if o == nil || IsNil(o.Self) {
		var ret AdamProductDatastructuresRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdamProductDatastructuresLinks) GetSelfOk() (*AdamProductDatastructuresRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *AdamProductDatastructuresLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given AdamProductDatastructuresRef and assigns it to the Self field.
func (o *AdamProductDatastructuresLinks) SetSelf(v AdamProductDatastructuresRef) {
	o.Self = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *AdamProductDatastructuresLinks) GetPriorVersion() AdamProductDatastructuresRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret AdamProductDatastructuresRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdamProductDatastructuresLinks) GetPriorVersionOk() (*AdamProductDatastructuresRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *AdamProductDatastructuresLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given AdamProductDatastructuresRef and assigns it to the PriorVersion field.
func (o *AdamProductDatastructuresLinks) SetPriorVersion(v AdamProductDatastructuresRef) {
	o.PriorVersion = &v
}

// GetDataStructures returns the DataStructures field value if set, zero value otherwise.
func (o *AdamProductDatastructuresLinks) GetDataStructures() []AdamDatastructureRefElement {
	if o == nil || IsNil(o.DataStructures) {
		var ret []AdamDatastructureRefElement
		return ret
	}
	return o.DataStructures
}

// GetDataStructuresOk returns a tuple with the DataStructures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdamProductDatastructuresLinks) GetDataStructuresOk() ([]AdamDatastructureRefElement, bool) {
	if o == nil || IsNil(o.DataStructures) {
		return nil, false
	}
	return o.DataStructures, true
}

// HasDataStructures returns a boolean if a field has been set.
func (o *AdamProductDatastructuresLinks) HasDataStructures() bool {
	if o != nil && !IsNil(o.DataStructures) {
		return true
	}

	return false
}

// SetDataStructures gets a reference to the given []AdamDatastructureRefElement and assigns it to the DataStructures field.
func (o *AdamProductDatastructuresLinks) SetDataStructures(v []AdamDatastructureRefElement) {
	o.DataStructures = v
}

func (o AdamProductDatastructuresLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdamProductDatastructuresLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	if !IsNil(o.DataStructures) {
		toSerialize["dataStructures"] = o.DataStructures
	}
	return toSerialize, nil
}

type NullableAdamProductDatastructuresLinks struct {
	value *AdamProductDatastructuresLinks
	isSet bool
}

func (v NullableAdamProductDatastructuresLinks) Get() *AdamProductDatastructuresLinks {
	return v.value
}

func (v *NullableAdamProductDatastructuresLinks) Set(val *AdamProductDatastructuresLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableAdamProductDatastructuresLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableAdamProductDatastructuresLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdamProductDatastructuresLinks(val *AdamProductDatastructuresLinks) *NullableAdamProductDatastructuresLinks {
	return &NullableAdamProductDatastructuresLinks{value: val, isSet: true}
}

func (v NullableAdamProductDatastructuresLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdamProductDatastructuresLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


