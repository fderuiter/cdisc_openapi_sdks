/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AboutLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AboutLinks{}

// AboutLinks struct for AboutLinks
type AboutLinks struct {
	Self *AboutRef `json:"self,omitempty"`
	Lastupdated *LastupdatedRef `json:"lastupdated,omitempty"`
}

// NewAboutLinks instantiates a new AboutLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAboutLinks() *AboutLinks {
	this := AboutLinks{}
	return &this
}

// NewAboutLinksWithDefaults instantiates a new AboutLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAboutLinksWithDefaults() *AboutLinks {
	this := AboutLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *AboutLinks) GetSelf() AboutRef {
	if o == nil || IsNil(o.Self) {
		var ret AboutRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AboutLinks) GetSelfOk() (*AboutRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *AboutLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given AboutRef and assigns it to the Self field.
func (o *AboutLinks) SetSelf(v AboutRef) {
	o.Self = &v
}

// GetLastupdated returns the Lastupdated field value if set, zero value otherwise.
func (o *AboutLinks) GetLastupdated() LastupdatedRef {
	if o == nil || IsNil(o.Lastupdated) {
		var ret LastupdatedRef
		return ret
	}
	return *o.Lastupdated
}

// GetLastupdatedOk returns a tuple with the Lastupdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AboutLinks) GetLastupdatedOk() (*LastupdatedRef, bool) {
	if o == nil || IsNil(o.Lastupdated) {
		return nil, false
	}
	return o.Lastupdated, true
}

// HasLastupdated returns a boolean if a field has been set.
func (o *AboutLinks) HasLastupdated() bool {
	if o != nil && !IsNil(o.Lastupdated) {
		return true
	}

	return false
}

// SetLastupdated gets a reference to the given LastupdatedRef and assigns it to the Lastupdated field.
func (o *AboutLinks) SetLastupdated(v LastupdatedRef) {
	o.Lastupdated = &v
}

func (o AboutLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AboutLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Lastupdated) {
		toSerialize["lastupdated"] = o.Lastupdated
	}
	return toSerialize, nil
}

type NullableAboutLinks struct {
	value *AboutLinks
	isSet bool
}

func (v NullableAboutLinks) Get() *AboutLinks {
	return v.value
}

func (v *NullableAboutLinks) Set(val *AboutLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableAboutLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableAboutLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAboutLinks(val *AboutLinks) *NullableAboutLinks {
	return &NullableAboutLinks{value: val, isSet: true}
}

func (v NullableAboutLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAboutLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


