/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CdashClass type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdashClass{}

// CdashClass struct for CdashClass
type CdashClass struct {
	Ordinal *string `json:"ordinal,omitempty"`
	Name *string `json:"name,omitempty"`
	Label *string `json:"label,omitempty"`
	Description *string `json:"description,omitempty"`
	Links *CdashClassLinks `json:"_links,omitempty"`
	CdashModelFields []CdashClassField `json:"cdashModelFields,omitempty"`
}

// NewCdashClass instantiates a new CdashClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdashClass() *CdashClass {
	this := CdashClass{}
	return &this
}

// NewCdashClassWithDefaults instantiates a new CdashClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdashClassWithDefaults() *CdashClass {
	this := CdashClass{}
	return &this
}

// GetOrdinal returns the Ordinal field value if set, zero value otherwise.
func (o *CdashClass) GetOrdinal() string {
	if o == nil || IsNil(o.Ordinal) {
		var ret string
		return ret
	}
	return *o.Ordinal
}

// GetOrdinalOk returns a tuple with the Ordinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClass) GetOrdinalOk() (*string, bool) {
	if o == nil || IsNil(o.Ordinal) {
		return nil, false
	}
	return o.Ordinal, true
}

// HasOrdinal returns a boolean if a field has been set.
func (o *CdashClass) HasOrdinal() bool {
	if o != nil && !IsNil(o.Ordinal) {
		return true
	}

	return false
}

// SetOrdinal gets a reference to the given string and assigns it to the Ordinal field.
func (o *CdashClass) SetOrdinal(v string) {
	o.Ordinal = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CdashClass) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClass) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CdashClass) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CdashClass) SetName(v string) {
	o.Name = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CdashClass) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClass) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CdashClass) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CdashClass) SetLabel(v string) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CdashClass) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClass) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CdashClass) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CdashClass) SetDescription(v string) {
	o.Description = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CdashClass) GetLinks() CdashClassLinks {
	if o == nil || IsNil(o.Links) {
		var ret CdashClassLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClass) GetLinksOk() (*CdashClassLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CdashClass) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given CdashClassLinks and assigns it to the Links field.
func (o *CdashClass) SetLinks(v CdashClassLinks) {
	o.Links = &v
}

// GetCdashModelFields returns the CdashModelFields field value if set, zero value otherwise.
func (o *CdashClass) GetCdashModelFields() []CdashClassField {
	if o == nil || IsNil(o.CdashModelFields) {
		var ret []CdashClassField
		return ret
	}
	return o.CdashModelFields
}

// GetCdashModelFieldsOk returns a tuple with the CdashModelFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClass) GetCdashModelFieldsOk() ([]CdashClassField, bool) {
	if o == nil || IsNil(o.CdashModelFields) {
		return nil, false
	}
	return o.CdashModelFields, true
}

// HasCdashModelFields returns a boolean if a field has been set.
func (o *CdashClass) HasCdashModelFields() bool {
	if o != nil && !IsNil(o.CdashModelFields) {
		return true
	}

	return false
}

// SetCdashModelFields gets a reference to the given []CdashClassField and assigns it to the CdashModelFields field.
func (o *CdashClass) SetCdashModelFields(v []CdashClassField) {
	o.CdashModelFields = v
}

func (o CdashClass) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdashClass) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ordinal) {
		toSerialize["ordinal"] = o.Ordinal
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.CdashModelFields) {
		toSerialize["cdashModelFields"] = o.CdashModelFields
	}
	return toSerialize, nil
}

type NullableCdashClass struct {
	value *CdashClass
	isSet bool
}

func (v NullableCdashClass) Get() *CdashClass {
	return v.value
}

func (v *NullableCdashClass) Set(val *CdashClass) {
	v.value = val
	v.isSet = true
}

func (v NullableCdashClass) IsSet() bool {
	return v.isSet
}

func (v *NullableCdashClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdashClass(val *CdashClass) *NullableCdashClass {
	return &NullableCdashClass{value: val, isSet: true}
}

func (v NullableCdashClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdashClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


