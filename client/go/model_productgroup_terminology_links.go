/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductgroupTerminologyLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductgroupTerminologyLinks{}

// ProductgroupTerminologyLinks struct for ProductgroupTerminologyLinks
type ProductgroupTerminologyLinks struct {
	Self *ProductgroupRef `json:"self,omitempty"`
	Packages []CtPackageRefElement `json:"packages,omitempty"`
}

// NewProductgroupTerminologyLinks instantiates a new ProductgroupTerminologyLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductgroupTerminologyLinks() *ProductgroupTerminologyLinks {
	this := ProductgroupTerminologyLinks{}
	return &this
}

// NewProductgroupTerminologyLinksWithDefaults instantiates a new ProductgroupTerminologyLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductgroupTerminologyLinksWithDefaults() *ProductgroupTerminologyLinks {
	this := ProductgroupTerminologyLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *ProductgroupTerminologyLinks) GetSelf() ProductgroupRef {
	if o == nil || IsNil(o.Self) {
		var ret ProductgroupRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductgroupTerminologyLinks) GetSelfOk() (*ProductgroupRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *ProductgroupTerminologyLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given ProductgroupRef and assigns it to the Self field.
func (o *ProductgroupTerminologyLinks) SetSelf(v ProductgroupRef) {
	o.Self = &v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *ProductgroupTerminologyLinks) GetPackages() []CtPackageRefElement {
	if o == nil || IsNil(o.Packages) {
		var ret []CtPackageRefElement
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductgroupTerminologyLinks) GetPackagesOk() ([]CtPackageRefElement, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *ProductgroupTerminologyLinks) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []CtPackageRefElement and assigns it to the Packages field.
func (o *ProductgroupTerminologyLinks) SetPackages(v []CtPackageRefElement) {
	o.Packages = v
}

func (o ProductgroupTerminologyLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductgroupTerminologyLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	return toSerialize, nil
}

type NullableProductgroupTerminologyLinks struct {
	value *ProductgroupTerminologyLinks
	isSet bool
}

func (v NullableProductgroupTerminologyLinks) Get() *ProductgroupTerminologyLinks {
	return v.value
}

func (v *NullableProductgroupTerminologyLinks) Set(val *ProductgroupTerminologyLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableProductgroupTerminologyLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableProductgroupTerminologyLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductgroupTerminologyLinks(val *ProductgroupTerminologyLinks) *NullableProductgroupTerminologyLinks {
	return &NullableProductgroupTerminologyLinks{value: val, isSet: true}
}

func (v NullableProductgroupTerminologyLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductgroupTerminologyLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


