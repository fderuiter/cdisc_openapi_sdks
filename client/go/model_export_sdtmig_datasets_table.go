/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExportSdtmigDatasetsTable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportSdtmigDatasetsTable{}

// ExportSdtmigDatasetsTable struct for ExportSdtmigDatasetsTable
type ExportSdtmigDatasetsTable struct {
	Datasets []ExportSdtmigDatasetsRow `json:"datasets,omitempty"`
}

// NewExportSdtmigDatasetsTable instantiates a new ExportSdtmigDatasetsTable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportSdtmigDatasetsTable() *ExportSdtmigDatasetsTable {
	this := ExportSdtmigDatasetsTable{}
	return &this
}

// NewExportSdtmigDatasetsTableWithDefaults instantiates a new ExportSdtmigDatasetsTable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportSdtmigDatasetsTableWithDefaults() *ExportSdtmigDatasetsTable {
	this := ExportSdtmigDatasetsTable{}
	return &this
}

// GetDatasets returns the Datasets field value if set, zero value otherwise.
func (o *ExportSdtmigDatasetsTable) GetDatasets() []ExportSdtmigDatasetsRow {
	if o == nil || IsNil(o.Datasets) {
		var ret []ExportSdtmigDatasetsRow
		return ret
	}
	return o.Datasets
}

// GetDatasetsOk returns a tuple with the Datasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportSdtmigDatasetsTable) GetDatasetsOk() ([]ExportSdtmigDatasetsRow, bool) {
	if o == nil || IsNil(o.Datasets) {
		return nil, false
	}
	return o.Datasets, true
}

// HasDatasets returns a boolean if a field has been set.
func (o *ExportSdtmigDatasetsTable) HasDatasets() bool {
	if o != nil && !IsNil(o.Datasets) {
		return true
	}

	return false
}

// SetDatasets gets a reference to the given []ExportSdtmigDatasetsRow and assigns it to the Datasets field.
func (o *ExportSdtmigDatasetsTable) SetDatasets(v []ExportSdtmigDatasetsRow) {
	o.Datasets = v
}

func (o ExportSdtmigDatasetsTable) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportSdtmigDatasetsTable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Datasets) {
		toSerialize["datasets"] = o.Datasets
	}
	return toSerialize, nil
}

type NullableExportSdtmigDatasetsTable struct {
	value *ExportSdtmigDatasetsTable
	isSet bool
}

func (v NullableExportSdtmigDatasetsTable) Get() *ExportSdtmigDatasetsTable {
	return v.value
}

func (v *NullableExportSdtmigDatasetsTable) Set(val *ExportSdtmigDatasetsTable) {
	v.value = val
	v.isSet = true
}

func (v NullableExportSdtmigDatasetsTable) IsSet() bool {
	return v.isSet
}

func (v *NullableExportSdtmigDatasetsTable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportSdtmigDatasetsTable(val *ExportSdtmigDatasetsTable) *NullableExportSdtmigDatasetsTable {
	return &NullableExportSdtmigDatasetsTable{value: val, isSet: true}
}

func (v NullableExportSdtmigDatasetsTable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportSdtmigDatasetsTable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


