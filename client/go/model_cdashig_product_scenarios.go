/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CdashigProductScenarios type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdashigProductScenarios{}

// CdashigProductScenarios struct for CdashigProductScenarios
type CdashigProductScenarios struct {
	Name *string `json:"name,omitempty"`
	Label *string `json:"label,omitempty"`
	Description *string `json:"description,omitempty"`
	Source *string `json:"source,omitempty"`
	EffectiveDate *string `json:"effectiveDate,omitempty"`
	RegistrationStatus *string `json:"registrationStatus,omitempty"`
	Version *string `json:"version,omitempty"`
	Links *CdashigProductScenariosLinks `json:"_links,omitempty"`
}

// NewCdashigProductScenarios instantiates a new CdashigProductScenarios object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdashigProductScenarios() *CdashigProductScenarios {
	this := CdashigProductScenarios{}
	return &this
}

// NewCdashigProductScenariosWithDefaults instantiates a new CdashigProductScenarios object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdashigProductScenariosWithDefaults() *CdashigProductScenarios {
	this := CdashigProductScenarios{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CdashigProductScenarios) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashigProductScenarios) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CdashigProductScenarios) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CdashigProductScenarios) SetName(v string) {
	o.Name = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CdashigProductScenarios) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashigProductScenarios) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CdashigProductScenarios) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CdashigProductScenarios) SetLabel(v string) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CdashigProductScenarios) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashigProductScenarios) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CdashigProductScenarios) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CdashigProductScenarios) SetDescription(v string) {
	o.Description = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *CdashigProductScenarios) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashigProductScenarios) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *CdashigProductScenarios) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *CdashigProductScenarios) SetSource(v string) {
	o.Source = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *CdashigProductScenarios) GetEffectiveDate() string {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret string
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashigProductScenarios) GetEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *CdashigProductScenarios) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given string and assigns it to the EffectiveDate field.
func (o *CdashigProductScenarios) SetEffectiveDate(v string) {
	o.EffectiveDate = &v
}

// GetRegistrationStatus returns the RegistrationStatus field value if set, zero value otherwise.
func (o *CdashigProductScenarios) GetRegistrationStatus() string {
	if o == nil || IsNil(o.RegistrationStatus) {
		var ret string
		return ret
	}
	return *o.RegistrationStatus
}

// GetRegistrationStatusOk returns a tuple with the RegistrationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashigProductScenarios) GetRegistrationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationStatus) {
		return nil, false
	}
	return o.RegistrationStatus, true
}

// HasRegistrationStatus returns a boolean if a field has been set.
func (o *CdashigProductScenarios) HasRegistrationStatus() bool {
	if o != nil && !IsNil(o.RegistrationStatus) {
		return true
	}

	return false
}

// SetRegistrationStatus gets a reference to the given string and assigns it to the RegistrationStatus field.
func (o *CdashigProductScenarios) SetRegistrationStatus(v string) {
	o.RegistrationStatus = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CdashigProductScenarios) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashigProductScenarios) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CdashigProductScenarios) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CdashigProductScenarios) SetVersion(v string) {
	o.Version = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CdashigProductScenarios) GetLinks() CdashigProductScenariosLinks {
	if o == nil || IsNil(o.Links) {
		var ret CdashigProductScenariosLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashigProductScenarios) GetLinksOk() (*CdashigProductScenariosLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CdashigProductScenarios) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given CdashigProductScenariosLinks and assigns it to the Links field.
func (o *CdashigProductScenarios) SetLinks(v CdashigProductScenariosLinks) {
	o.Links = &v
}

func (o CdashigProductScenarios) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdashigProductScenarios) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.RegistrationStatus) {
		toSerialize["registrationStatus"] = o.RegistrationStatus
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableCdashigProductScenarios struct {
	value *CdashigProductScenarios
	isSet bool
}

func (v NullableCdashigProductScenarios) Get() *CdashigProductScenarios {
	return v.value
}

func (v *NullableCdashigProductScenarios) Set(val *CdashigProductScenarios) {
	v.value = val
	v.isSet = true
}

func (v NullableCdashigProductScenarios) IsSet() bool {
	return v.isSet
}

func (v *NullableCdashigProductScenarios) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdashigProductScenarios(val *CdashigProductScenarios) *NullableCdashigProductScenarios {
	return &NullableCdashigProductScenarios{value: val, isSet: true}
}

func (v NullableCdashigProductScenarios) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdashigProductScenarios) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


