/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RootCdashigDomainField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RootCdashigDomainField{}

// RootCdashigDomainField struct for RootCdashigDomainField
type RootCdashigDomainField struct {
	Links *RootCdashigDomainFieldLinks `json:"_links,omitempty"`
}

// NewRootCdashigDomainField instantiates a new RootCdashigDomainField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootCdashigDomainField() *RootCdashigDomainField {
	this := RootCdashigDomainField{}
	return &this
}

// NewRootCdashigDomainFieldWithDefaults instantiates a new RootCdashigDomainField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootCdashigDomainFieldWithDefaults() *RootCdashigDomainField {
	this := RootCdashigDomainField{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RootCdashigDomainField) GetLinks() RootCdashigDomainFieldLinks {
	if o == nil || IsNil(o.Links) {
		var ret RootCdashigDomainFieldLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootCdashigDomainField) GetLinksOk() (*RootCdashigDomainFieldLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RootCdashigDomainField) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given RootCdashigDomainFieldLinks and assigns it to the Links field.
func (o *RootCdashigDomainField) SetLinks(v RootCdashigDomainFieldLinks) {
	o.Links = &v
}

func (o RootCdashigDomainField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RootCdashigDomainField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableRootCdashigDomainField struct {
	value *RootCdashigDomainField
	isSet bool
}

func (v NullableRootCdashigDomainField) Get() *RootCdashigDomainField {
	return v.value
}

func (v *NullableRootCdashigDomainField) Set(val *RootCdashigDomainField) {
	v.value = val
	v.isSet = true
}

func (v NullableRootCdashigDomainField) IsSet() bool {
	return v.isSet
}

func (v *NullableRootCdashigDomainField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootCdashigDomainField(val *RootCdashigDomainField) *NullableRootCdashigDomainField {
	return &NullableRootCdashigDomainField{value: val, isSet: true}
}

func (v NullableRootCdashigDomainField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootCdashigDomainField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


