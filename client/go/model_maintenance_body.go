/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MaintenanceBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaintenanceBody{}

// MaintenanceBody struct for MaintenanceBody
type MaintenanceBody struct {
	MaintenanceMode *bool `json:"maintenanceMode,omitempty"`
	MaintenanceMessage *string `json:"maintenanceMessage,omitempty"`
}

// NewMaintenanceBody instantiates a new MaintenanceBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceBody() *MaintenanceBody {
	this := MaintenanceBody{}
	return &this
}

// NewMaintenanceBodyWithDefaults instantiates a new MaintenanceBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceBodyWithDefaults() *MaintenanceBody {
	this := MaintenanceBody{}
	return &this
}

// GetMaintenanceMode returns the MaintenanceMode field value if set, zero value otherwise.
func (o *MaintenanceBody) GetMaintenanceMode() bool {
	if o == nil || IsNil(o.MaintenanceMode) {
		var ret bool
		return ret
	}
	return *o.MaintenanceMode
}

// GetMaintenanceModeOk returns a tuple with the MaintenanceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceBody) GetMaintenanceModeOk() (*bool, bool) {
	if o == nil || IsNil(o.MaintenanceMode) {
		return nil, false
	}
	return o.MaintenanceMode, true
}

// HasMaintenanceMode returns a boolean if a field has been set.
func (o *MaintenanceBody) HasMaintenanceMode() bool {
	if o != nil && !IsNil(o.MaintenanceMode) {
		return true
	}

	return false
}

// SetMaintenanceMode gets a reference to the given bool and assigns it to the MaintenanceMode field.
func (o *MaintenanceBody) SetMaintenanceMode(v bool) {
	o.MaintenanceMode = &v
}

// GetMaintenanceMessage returns the MaintenanceMessage field value if set, zero value otherwise.
func (o *MaintenanceBody) GetMaintenanceMessage() string {
	if o == nil || IsNil(o.MaintenanceMessage) {
		var ret string
		return ret
	}
	return *o.MaintenanceMessage
}

// GetMaintenanceMessageOk returns a tuple with the MaintenanceMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceBody) GetMaintenanceMessageOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceMessage) {
		return nil, false
	}
	return o.MaintenanceMessage, true
}

// HasMaintenanceMessage returns a boolean if a field has been set.
func (o *MaintenanceBody) HasMaintenanceMessage() bool {
	if o != nil && !IsNil(o.MaintenanceMessage) {
		return true
	}

	return false
}

// SetMaintenanceMessage gets a reference to the given string and assigns it to the MaintenanceMessage field.
func (o *MaintenanceBody) SetMaintenanceMessage(v string) {
	o.MaintenanceMessage = &v
}

func (o MaintenanceBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaintenanceBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaintenanceMode) {
		toSerialize["maintenanceMode"] = o.MaintenanceMode
	}
	if !IsNil(o.MaintenanceMessage) {
		toSerialize["maintenanceMessage"] = o.MaintenanceMessage
	}
	return toSerialize, nil
}

type NullableMaintenanceBody struct {
	value *MaintenanceBody
	isSet bool
}

func (v NullableMaintenanceBody) Get() *MaintenanceBody {
	return v.value
}

func (v *NullableMaintenanceBody) Set(val *MaintenanceBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceBody(val *MaintenanceBody) *NullableMaintenanceBody {
	return &NullableMaintenanceBody{value: val, isSet: true}
}

func (v NullableMaintenanceBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


