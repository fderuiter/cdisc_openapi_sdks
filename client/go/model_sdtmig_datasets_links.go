/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SdtmigDatasetsLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdtmigDatasetsLinks{}

// SdtmigDatasetsLinks struct for SdtmigDatasetsLinks
type SdtmigDatasetsLinks struct {
	Self *SdtmigDatasetsRef `json:"self,omitempty"`
	ParentProduct *SdtmigProductRef `json:"parentProduct,omitempty"`
	PriorVersion *SdtmigDatasetsRef `json:"priorVersion,omitempty"`
	Datasets []SdtmigDatasetRefElement `json:"datasets,omitempty"`
}

// NewSdtmigDatasetsLinks instantiates a new SdtmigDatasetsLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdtmigDatasetsLinks() *SdtmigDatasetsLinks {
	this := SdtmigDatasetsLinks{}
	return &this
}

// NewSdtmigDatasetsLinksWithDefaults instantiates a new SdtmigDatasetsLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdtmigDatasetsLinksWithDefaults() *SdtmigDatasetsLinks {
	this := SdtmigDatasetsLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SdtmigDatasetsLinks) GetSelf() SdtmigDatasetsRef {
	if o == nil || IsNil(o.Self) {
		var ret SdtmigDatasetsRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetsLinks) GetSelfOk() (*SdtmigDatasetsRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SdtmigDatasetsLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given SdtmigDatasetsRef and assigns it to the Self field.
func (o *SdtmigDatasetsLinks) SetSelf(v SdtmigDatasetsRef) {
	o.Self = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *SdtmigDatasetsLinks) GetParentProduct() SdtmigProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret SdtmigProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetsLinks) GetParentProductOk() (*SdtmigProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *SdtmigDatasetsLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given SdtmigProductRef and assigns it to the ParentProduct field.
func (o *SdtmigDatasetsLinks) SetParentProduct(v SdtmigProductRef) {
	o.ParentProduct = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *SdtmigDatasetsLinks) GetPriorVersion() SdtmigDatasetsRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret SdtmigDatasetsRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetsLinks) GetPriorVersionOk() (*SdtmigDatasetsRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *SdtmigDatasetsLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given SdtmigDatasetsRef and assigns it to the PriorVersion field.
func (o *SdtmigDatasetsLinks) SetPriorVersion(v SdtmigDatasetsRef) {
	o.PriorVersion = &v
}

// GetDatasets returns the Datasets field value if set, zero value otherwise.
func (o *SdtmigDatasetsLinks) GetDatasets() []SdtmigDatasetRefElement {
	if o == nil || IsNil(o.Datasets) {
		var ret []SdtmigDatasetRefElement
		return ret
	}
	return o.Datasets
}

// GetDatasetsOk returns a tuple with the Datasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigDatasetsLinks) GetDatasetsOk() ([]SdtmigDatasetRefElement, bool) {
	if o == nil || IsNil(o.Datasets) {
		return nil, false
	}
	return o.Datasets, true
}

// HasDatasets returns a boolean if a field has been set.
func (o *SdtmigDatasetsLinks) HasDatasets() bool {
	if o != nil && !IsNil(o.Datasets) {
		return true
	}

	return false
}

// SetDatasets gets a reference to the given []SdtmigDatasetRefElement and assigns it to the Datasets field.
func (o *SdtmigDatasetsLinks) SetDatasets(v []SdtmigDatasetRefElement) {
	o.Datasets = v
}

func (o SdtmigDatasetsLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdtmigDatasetsLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	if !IsNil(o.Datasets) {
		toSerialize["datasets"] = o.Datasets
	}
	return toSerialize, nil
}

type NullableSdtmigDatasetsLinks struct {
	value *SdtmigDatasetsLinks
	isSet bool
}

func (v NullableSdtmigDatasetsLinks) Get() *SdtmigDatasetsLinks {
	return v.value
}

func (v *NullableSdtmigDatasetsLinks) Set(val *SdtmigDatasetsLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSdtmigDatasetsLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSdtmigDatasetsLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdtmigDatasetsLinks(val *SdtmigDatasetsLinks) *NullableSdtmigDatasetsLinks {
	return &NullableSdtmigDatasetsLinks{value: val, isSet: true}
}

func (v NullableSdtmigDatasetsLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdtmigDatasetsLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


