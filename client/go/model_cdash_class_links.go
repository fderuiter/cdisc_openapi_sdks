/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CdashClassLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdashClassLinks{}

// CdashClassLinks struct for CdashClassLinks
type CdashClassLinks struct {
	Self *CdashClassRef `json:"self,omitempty"`
	ParentProduct *CdashProductRef `json:"parentProduct,omitempty"`
	PriorVersion *CdashClassRef `json:"priorVersion,omitempty"`
}

// NewCdashClassLinks instantiates a new CdashClassLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdashClassLinks() *CdashClassLinks {
	this := CdashClassLinks{}
	return &this
}

// NewCdashClassLinksWithDefaults instantiates a new CdashClassLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdashClassLinksWithDefaults() *CdashClassLinks {
	this := CdashClassLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *CdashClassLinks) GetSelf() CdashClassRef {
	if o == nil || IsNil(o.Self) {
		var ret CdashClassRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassLinks) GetSelfOk() (*CdashClassRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *CdashClassLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given CdashClassRef and assigns it to the Self field.
func (o *CdashClassLinks) SetSelf(v CdashClassRef) {
	o.Self = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *CdashClassLinks) GetParentProduct() CdashProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret CdashProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassLinks) GetParentProductOk() (*CdashProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *CdashClassLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given CdashProductRef and assigns it to the ParentProduct field.
func (o *CdashClassLinks) SetParentProduct(v CdashProductRef) {
	o.ParentProduct = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *CdashClassLinks) GetPriorVersion() CdashClassRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret CdashClassRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashClassLinks) GetPriorVersionOk() (*CdashClassRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *CdashClassLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given CdashClassRef and assigns it to the PriorVersion field.
func (o *CdashClassLinks) SetPriorVersion(v CdashClassRef) {
	o.PriorVersion = &v
}

func (o CdashClassLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdashClassLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	return toSerialize, nil
}

type NullableCdashClassLinks struct {
	value *CdashClassLinks
	isSet bool
}

func (v NullableCdashClassLinks) Get() *CdashClassLinks {
	return v.value
}

func (v *NullableCdashClassLinks) Set(val *CdashClassLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCdashClassLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCdashClassLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdashClassLinks(val *CdashClassLinks) *NullableCdashClassLinks {
	return &NullableCdashClassLinks{value: val, isSet: true}
}

func (v NullableCdashClassLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdashClassLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


