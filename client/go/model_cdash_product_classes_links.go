/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CdashProductClassesLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdashProductClassesLinks{}

// CdashProductClassesLinks struct for CdashProductClassesLinks
type CdashProductClassesLinks struct {
	Self *CdashProductClassesRef `json:"self,omitempty"`
	ParentProduct *CdashProductRef `json:"parentProduct,omitempty"`
	Classes []CdashClassRefElement `json:"classes,omitempty"`
}

// NewCdashProductClassesLinks instantiates a new CdashProductClassesLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdashProductClassesLinks() *CdashProductClassesLinks {
	this := CdashProductClassesLinks{}
	return &this
}

// NewCdashProductClassesLinksWithDefaults instantiates a new CdashProductClassesLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdashProductClassesLinksWithDefaults() *CdashProductClassesLinks {
	this := CdashProductClassesLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *CdashProductClassesLinks) GetSelf() CdashProductClassesRef {
	if o == nil || IsNil(o.Self) {
		var ret CdashProductClassesRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashProductClassesLinks) GetSelfOk() (*CdashProductClassesRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *CdashProductClassesLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given CdashProductClassesRef and assigns it to the Self field.
func (o *CdashProductClassesLinks) SetSelf(v CdashProductClassesRef) {
	o.Self = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *CdashProductClassesLinks) GetParentProduct() CdashProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret CdashProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashProductClassesLinks) GetParentProductOk() (*CdashProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *CdashProductClassesLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given CdashProductRef and assigns it to the ParentProduct field.
func (o *CdashProductClassesLinks) SetParentProduct(v CdashProductRef) {
	o.ParentProduct = &v
}

// GetClasses returns the Classes field value if set, zero value otherwise.
func (o *CdashProductClassesLinks) GetClasses() []CdashClassRefElement {
	if o == nil || IsNil(o.Classes) {
		var ret []CdashClassRefElement
		return ret
	}
	return o.Classes
}

// GetClassesOk returns a tuple with the Classes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdashProductClassesLinks) GetClassesOk() ([]CdashClassRefElement, bool) {
	if o == nil || IsNil(o.Classes) {
		return nil, false
	}
	return o.Classes, true
}

// HasClasses returns a boolean if a field has been set.
func (o *CdashProductClassesLinks) HasClasses() bool {
	if o != nil && !IsNil(o.Classes) {
		return true
	}

	return false
}

// SetClasses gets a reference to the given []CdashClassRefElement and assigns it to the Classes field.
func (o *CdashProductClassesLinks) SetClasses(v []CdashClassRefElement) {
	o.Classes = v
}

func (o CdashProductClassesLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdashProductClassesLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.Classes) {
		toSerialize["classes"] = o.Classes
	}
	return toSerialize, nil
}

type NullableCdashProductClassesLinks struct {
	value *CdashProductClassesLinks
	isSet bool
}

func (v NullableCdashProductClassesLinks) Get() *CdashProductClassesLinks {
	return v.value
}

func (v *NullableCdashProductClassesLinks) Set(val *CdashProductClassesLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCdashProductClassesLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCdashProductClassesLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdashProductClassesLinks(val *CdashProductClassesLinks) *NullableCdashProductClassesLinks {
	return &NullableCdashProductClassesLinks{value: val, isSet: true}
}

func (v NullableCdashProductClassesLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdashProductClassesLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


