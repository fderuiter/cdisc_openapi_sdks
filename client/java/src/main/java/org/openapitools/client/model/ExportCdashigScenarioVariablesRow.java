/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ExportCdashigScenarioVariablesRow
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-22T20:17:16.173989497Z[Etc/UTC]", comments = "Generator version: 7.16.0-SNAPSHOT")
public class ExportCdashigScenarioVariablesRow {
  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  @javax.annotation.Nullable
  private String version;

  public static final String SERIALIZED_NAME_PROPERTY_CLASS = "Class";
  @SerializedName(SERIALIZED_NAME_PROPERTY_CLASS)
  @javax.annotation.Nullable
  private String propertyClass;

  public static final String SERIALIZED_NAME_DOMAIN = "Domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  @javax.annotation.Nullable
  private String domain;

  public static final String SERIALIZED_NAME_DATA_COLLECTION_SCENARIO = "Data Collection Scenario";
  @SerializedName(SERIALIZED_NAME_DATA_COLLECTION_SCENARIO)
  @javax.annotation.Nullable
  private String dataCollectionScenario;

  public static final String SERIALIZED_NAME_VARIABLE_ORDER = "Variable Order";
  @SerializedName(SERIALIZED_NAME_VARIABLE_ORDER)
  @javax.annotation.Nullable
  private String variableOrder;

  public static final String SERIALIZED_NAME_CD_A_S_H_I_G_VARIABLE = "CDASHIG Variable";
  @SerializedName(SERIALIZED_NAME_CD_A_S_H_I_G_VARIABLE)
  @javax.annotation.Nullable
  private String cdASHIGVariable;

  public static final String SERIALIZED_NAME_CD_A_S_H_I_G_VARIABLE_LABEL = "CDASHIG Variable Label";
  @SerializedName(SERIALIZED_NAME_CD_A_S_H_I_G_VARIABLE_LABEL)
  @javax.annotation.Nullable
  private String cdASHIGVariableLabel;

  public static final String SERIALIZED_NAME_DR_A_F_T_C_D_A_S_H_I_G_DEFINITION = "DRAFT CDASHIG Definition";
  @SerializedName(SERIALIZED_NAME_DR_A_F_T_C_D_A_S_H_I_G_DEFINITION)
  @javax.annotation.Nullable
  private String drAFTCDASHIGDefinition;

  public static final String SERIALIZED_NAME_QUESTION_TEXT = "Question Text";
  @SerializedName(SERIALIZED_NAME_QUESTION_TEXT)
  @javax.annotation.Nullable
  private String questionText;

  public static final String SERIALIZED_NAME_PROMPT = "Prompt";
  @SerializedName(SERIALIZED_NAME_PROMPT)
  @javax.annotation.Nullable
  private String prompt;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  @javax.annotation.Nullable
  private String type;

  public static final String SERIALIZED_NAME_CD_A_S_H_I_G_CORE = "CDASHIG Core";
  @SerializedName(SERIALIZED_NAME_CD_A_S_H_I_G_CORE)
  @javax.annotation.Nullable
  private String cdASHIGCore;

  public static final String SERIALIZED_NAME_CASE_REPORT_FORM_COMPLETION_INSTRUCTIONS = "Case Report Form Completion Instructions";
  @SerializedName(SERIALIZED_NAME_CASE_REPORT_FORM_COMPLETION_INSTRUCTIONS)
  @javax.annotation.Nullable
  private String caseReportFormCompletionInstructions;

  public static final String SERIALIZED_NAME_SD_T_M_I_G_TARGET = "SDTMIG Target";
  @SerializedName(SERIALIZED_NAME_SD_T_M_I_G_TARGET)
  @javax.annotation.Nullable
  private List<String> sdTMIGTarget = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAPPING_INSTRUCTIONS = "Mapping Instructions";
  @SerializedName(SERIALIZED_NAME_MAPPING_INSTRUCTIONS)
  @javax.annotation.Nullable
  private String mappingInstructions;

  public static final String SERIALIZED_NAME_CONTROLLED_TERMINOLOGY_CODELIST_NAME = "Controlled Terminology Codelist Name";
  @SerializedName(SERIALIZED_NAME_CONTROLLED_TERMINOLOGY_CODELIST_NAME)
  @javax.annotation.Nullable
  private String controlledTerminologyCodelistName;

  public static final String SERIALIZED_NAME_IMPLEMENTATION_NOTES = "Implementation Notes";
  @SerializedName(SERIALIZED_NAME_IMPLEMENTATION_NOTES)
  @javax.annotation.Nullable
  private String implementationNotes;

  public ExportCdashigScenarioVariablesRow() {
  }

  public ExportCdashigScenarioVariablesRow version(@javax.annotation.Nullable String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(@javax.annotation.Nullable String version) {
    this.version = version;
  }


  public ExportCdashigScenarioVariablesRow propertyClass(@javax.annotation.Nullable String propertyClass) {
    this.propertyClass = propertyClass;
    return this;
  }

  /**
   * Get propertyClass
   * @return propertyClass
   */
  @javax.annotation.Nullable
  public String getPropertyClass() {
    return propertyClass;
  }

  public void setPropertyClass(@javax.annotation.Nullable String propertyClass) {
    this.propertyClass = propertyClass;
  }


  public ExportCdashigScenarioVariablesRow domain(@javax.annotation.Nullable String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Get domain
   * @return domain
   */
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(@javax.annotation.Nullable String domain) {
    this.domain = domain;
  }


  public ExportCdashigScenarioVariablesRow dataCollectionScenario(@javax.annotation.Nullable String dataCollectionScenario) {
    this.dataCollectionScenario = dataCollectionScenario;
    return this;
  }

  /**
   * Get dataCollectionScenario
   * @return dataCollectionScenario
   */
  @javax.annotation.Nullable
  public String getDataCollectionScenario() {
    return dataCollectionScenario;
  }

  public void setDataCollectionScenario(@javax.annotation.Nullable String dataCollectionScenario) {
    this.dataCollectionScenario = dataCollectionScenario;
  }


  public ExportCdashigScenarioVariablesRow variableOrder(@javax.annotation.Nullable String variableOrder) {
    this.variableOrder = variableOrder;
    return this;
  }

  /**
   * Get variableOrder
   * @return variableOrder
   */
  @javax.annotation.Nullable
  public String getVariableOrder() {
    return variableOrder;
  }

  public void setVariableOrder(@javax.annotation.Nullable String variableOrder) {
    this.variableOrder = variableOrder;
  }


  public ExportCdashigScenarioVariablesRow cdASHIGVariable(@javax.annotation.Nullable String cdASHIGVariable) {
    this.cdASHIGVariable = cdASHIGVariable;
    return this;
  }

  /**
   * Get cdASHIGVariable
   * @return cdASHIGVariable
   */
  @javax.annotation.Nullable
  public String getCdASHIGVariable() {
    return cdASHIGVariable;
  }

  public void setCdASHIGVariable(@javax.annotation.Nullable String cdASHIGVariable) {
    this.cdASHIGVariable = cdASHIGVariable;
  }


  public ExportCdashigScenarioVariablesRow cdASHIGVariableLabel(@javax.annotation.Nullable String cdASHIGVariableLabel) {
    this.cdASHIGVariableLabel = cdASHIGVariableLabel;
    return this;
  }

  /**
   * Get cdASHIGVariableLabel
   * @return cdASHIGVariableLabel
   */
  @javax.annotation.Nullable
  public String getCdASHIGVariableLabel() {
    return cdASHIGVariableLabel;
  }

  public void setCdASHIGVariableLabel(@javax.annotation.Nullable String cdASHIGVariableLabel) {
    this.cdASHIGVariableLabel = cdASHIGVariableLabel;
  }


  public ExportCdashigScenarioVariablesRow drAFTCDASHIGDefinition(@javax.annotation.Nullable String drAFTCDASHIGDefinition) {
    this.drAFTCDASHIGDefinition = drAFTCDASHIGDefinition;
    return this;
  }

  /**
   * Get drAFTCDASHIGDefinition
   * @return drAFTCDASHIGDefinition
   */
  @javax.annotation.Nullable
  public String getDrAFTCDASHIGDefinition() {
    return drAFTCDASHIGDefinition;
  }

  public void setDrAFTCDASHIGDefinition(@javax.annotation.Nullable String drAFTCDASHIGDefinition) {
    this.drAFTCDASHIGDefinition = drAFTCDASHIGDefinition;
  }


  public ExportCdashigScenarioVariablesRow questionText(@javax.annotation.Nullable String questionText) {
    this.questionText = questionText;
    return this;
  }

  /**
   * Get questionText
   * @return questionText
   */
  @javax.annotation.Nullable
  public String getQuestionText() {
    return questionText;
  }

  public void setQuestionText(@javax.annotation.Nullable String questionText) {
    this.questionText = questionText;
  }


  public ExportCdashigScenarioVariablesRow prompt(@javax.annotation.Nullable String prompt) {
    this.prompt = prompt;
    return this;
  }

  /**
   * Get prompt
   * @return prompt
   */
  @javax.annotation.Nullable
  public String getPrompt() {
    return prompt;
  }

  public void setPrompt(@javax.annotation.Nullable String prompt) {
    this.prompt = prompt;
  }


  public ExportCdashigScenarioVariablesRow type(@javax.annotation.Nullable String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(@javax.annotation.Nullable String type) {
    this.type = type;
  }


  public ExportCdashigScenarioVariablesRow cdASHIGCore(@javax.annotation.Nullable String cdASHIGCore) {
    this.cdASHIGCore = cdASHIGCore;
    return this;
  }

  /**
   * Get cdASHIGCore
   * @return cdASHIGCore
   */
  @javax.annotation.Nullable
  public String getCdASHIGCore() {
    return cdASHIGCore;
  }

  public void setCdASHIGCore(@javax.annotation.Nullable String cdASHIGCore) {
    this.cdASHIGCore = cdASHIGCore;
  }


  public ExportCdashigScenarioVariablesRow caseReportFormCompletionInstructions(@javax.annotation.Nullable String caseReportFormCompletionInstructions) {
    this.caseReportFormCompletionInstructions = caseReportFormCompletionInstructions;
    return this;
  }

  /**
   * Get caseReportFormCompletionInstructions
   * @return caseReportFormCompletionInstructions
   */
  @javax.annotation.Nullable
  public String getCaseReportFormCompletionInstructions() {
    return caseReportFormCompletionInstructions;
  }

  public void setCaseReportFormCompletionInstructions(@javax.annotation.Nullable String caseReportFormCompletionInstructions) {
    this.caseReportFormCompletionInstructions = caseReportFormCompletionInstructions;
  }


  public ExportCdashigScenarioVariablesRow sdTMIGTarget(@javax.annotation.Nullable List<String> sdTMIGTarget) {
    this.sdTMIGTarget = sdTMIGTarget;
    return this;
  }

  public ExportCdashigScenarioVariablesRow addSdTMIGTargetItem(String sdTMIGTargetItem) {
    if (this.sdTMIGTarget == null) {
      this.sdTMIGTarget = new ArrayList<>();
    }
    this.sdTMIGTarget.add(sdTMIGTargetItem);
    return this;
  }

  /**
   * Get sdTMIGTarget
   * @return sdTMIGTarget
   */
  @javax.annotation.Nullable
  public List<String> getSdTMIGTarget() {
    return sdTMIGTarget;
  }

  public void setSdTMIGTarget(@javax.annotation.Nullable List<String> sdTMIGTarget) {
    this.sdTMIGTarget = sdTMIGTarget;
  }


  public ExportCdashigScenarioVariablesRow mappingInstructions(@javax.annotation.Nullable String mappingInstructions) {
    this.mappingInstructions = mappingInstructions;
    return this;
  }

  /**
   * Get mappingInstructions
   * @return mappingInstructions
   */
  @javax.annotation.Nullable
  public String getMappingInstructions() {
    return mappingInstructions;
  }

  public void setMappingInstructions(@javax.annotation.Nullable String mappingInstructions) {
    this.mappingInstructions = mappingInstructions;
  }


  public ExportCdashigScenarioVariablesRow controlledTerminologyCodelistName(@javax.annotation.Nullable String controlledTerminologyCodelistName) {
    this.controlledTerminologyCodelistName = controlledTerminologyCodelistName;
    return this;
  }

  /**
   * Get controlledTerminologyCodelistName
   * @return controlledTerminologyCodelistName
   */
  @javax.annotation.Nullable
  public String getControlledTerminologyCodelistName() {
    return controlledTerminologyCodelistName;
  }

  public void setControlledTerminologyCodelistName(@javax.annotation.Nullable String controlledTerminologyCodelistName) {
    this.controlledTerminologyCodelistName = controlledTerminologyCodelistName;
  }


  public ExportCdashigScenarioVariablesRow implementationNotes(@javax.annotation.Nullable String implementationNotes) {
    this.implementationNotes = implementationNotes;
    return this;
  }

  /**
   * Get implementationNotes
   * @return implementationNotes
   */
  @javax.annotation.Nullable
  public String getImplementationNotes() {
    return implementationNotes;
  }

  public void setImplementationNotes(@javax.annotation.Nullable String implementationNotes) {
    this.implementationNotes = implementationNotes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportCdashigScenarioVariablesRow exportCdashigScenarioVariablesRow = (ExportCdashigScenarioVariablesRow) o;
    return Objects.equals(this.version, exportCdashigScenarioVariablesRow.version) &&
        Objects.equals(this.propertyClass, exportCdashigScenarioVariablesRow.propertyClass) &&
        Objects.equals(this.domain, exportCdashigScenarioVariablesRow.domain) &&
        Objects.equals(this.dataCollectionScenario, exportCdashigScenarioVariablesRow.dataCollectionScenario) &&
        Objects.equals(this.variableOrder, exportCdashigScenarioVariablesRow.variableOrder) &&
        Objects.equals(this.cdASHIGVariable, exportCdashigScenarioVariablesRow.cdASHIGVariable) &&
        Objects.equals(this.cdASHIGVariableLabel, exportCdashigScenarioVariablesRow.cdASHIGVariableLabel) &&
        Objects.equals(this.drAFTCDASHIGDefinition, exportCdashigScenarioVariablesRow.drAFTCDASHIGDefinition) &&
        Objects.equals(this.questionText, exportCdashigScenarioVariablesRow.questionText) &&
        Objects.equals(this.prompt, exportCdashigScenarioVariablesRow.prompt) &&
        Objects.equals(this.type, exportCdashigScenarioVariablesRow.type) &&
        Objects.equals(this.cdASHIGCore, exportCdashigScenarioVariablesRow.cdASHIGCore) &&
        Objects.equals(this.caseReportFormCompletionInstructions, exportCdashigScenarioVariablesRow.caseReportFormCompletionInstructions) &&
        Objects.equals(this.sdTMIGTarget, exportCdashigScenarioVariablesRow.sdTMIGTarget) &&
        Objects.equals(this.mappingInstructions, exportCdashigScenarioVariablesRow.mappingInstructions) &&
        Objects.equals(this.controlledTerminologyCodelistName, exportCdashigScenarioVariablesRow.controlledTerminologyCodelistName) &&
        Objects.equals(this.implementationNotes, exportCdashigScenarioVariablesRow.implementationNotes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, propertyClass, domain, dataCollectionScenario, variableOrder, cdASHIGVariable, cdASHIGVariableLabel, drAFTCDASHIGDefinition, questionText, prompt, type, cdASHIGCore, caseReportFormCompletionInstructions, sdTMIGTarget, mappingInstructions, controlledTerminologyCodelistName, implementationNotes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportCdashigScenarioVariablesRow {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    dataCollectionScenario: ").append(toIndentedString(dataCollectionScenario)).append("\n");
    sb.append("    variableOrder: ").append(toIndentedString(variableOrder)).append("\n");
    sb.append("    cdASHIGVariable: ").append(toIndentedString(cdASHIGVariable)).append("\n");
    sb.append("    cdASHIGVariableLabel: ").append(toIndentedString(cdASHIGVariableLabel)).append("\n");
    sb.append("    drAFTCDASHIGDefinition: ").append(toIndentedString(drAFTCDASHIGDefinition)).append("\n");
    sb.append("    questionText: ").append(toIndentedString(questionText)).append("\n");
    sb.append("    prompt: ").append(toIndentedString(prompt)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    cdASHIGCore: ").append(toIndentedString(cdASHIGCore)).append("\n");
    sb.append("    caseReportFormCompletionInstructions: ").append(toIndentedString(caseReportFormCompletionInstructions)).append("\n");
    sb.append("    sdTMIGTarget: ").append(toIndentedString(sdTMIGTarget)).append("\n");
    sb.append("    mappingInstructions: ").append(toIndentedString(mappingInstructions)).append("\n");
    sb.append("    controlledTerminologyCodelistName: ").append(toIndentedString(controlledTerminologyCodelistName)).append("\n");
    sb.append("    implementationNotes: ").append(toIndentedString(implementationNotes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("Version", "Class", "Domain", "Data Collection Scenario", "Variable Order", "CDASHIG Variable", "CDASHIG Variable Label", "DRAFT CDASHIG Definition", "Question Text", "Prompt", "Type", "CDASHIG Core", "Case Report Form Completion Instructions", "SDTMIG Target", "Mapping Instructions", "Controlled Terminology Codelist Name", "Implementation Notes"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExportCdashigScenarioVariablesRow
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExportCdashigScenarioVariablesRow.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExportCdashigScenarioVariablesRow is not found in the empty JSON string", ExportCdashigScenarioVariablesRow.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExportCdashigScenarioVariablesRow.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExportCdashigScenarioVariablesRow` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Version") != null && !jsonObj.get("Version").isJsonNull()) && !jsonObj.get("Version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Version").toString()));
      }
      if ((jsonObj.get("Class") != null && !jsonObj.get("Class").isJsonNull()) && !jsonObj.get("Class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Class").toString()));
      }
      if ((jsonObj.get("Domain") != null && !jsonObj.get("Domain").isJsonNull()) && !jsonObj.get("Domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Domain").toString()));
      }
      if ((jsonObj.get("Data Collection Scenario") != null && !jsonObj.get("Data Collection Scenario").isJsonNull()) && !jsonObj.get("Data Collection Scenario").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Data Collection Scenario` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Data Collection Scenario").toString()));
      }
      if ((jsonObj.get("Variable Order") != null && !jsonObj.get("Variable Order").isJsonNull()) && !jsonObj.get("Variable Order").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Variable Order` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Variable Order").toString()));
      }
      if ((jsonObj.get("CDASHIG Variable") != null && !jsonObj.get("CDASHIG Variable").isJsonNull()) && !jsonObj.get("CDASHIG Variable").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CDASHIG Variable` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CDASHIG Variable").toString()));
      }
      if ((jsonObj.get("CDASHIG Variable Label") != null && !jsonObj.get("CDASHIG Variable Label").isJsonNull()) && !jsonObj.get("CDASHIG Variable Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CDASHIG Variable Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CDASHIG Variable Label").toString()));
      }
      if ((jsonObj.get("DRAFT CDASHIG Definition") != null && !jsonObj.get("DRAFT CDASHIG Definition").isJsonNull()) && !jsonObj.get("DRAFT CDASHIG Definition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DRAFT CDASHIG Definition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DRAFT CDASHIG Definition").toString()));
      }
      if ((jsonObj.get("Question Text") != null && !jsonObj.get("Question Text").isJsonNull()) && !jsonObj.get("Question Text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Question Text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Question Text").toString()));
      }
      if ((jsonObj.get("Prompt") != null && !jsonObj.get("Prompt").isJsonNull()) && !jsonObj.get("Prompt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Prompt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Prompt").toString()));
      }
      if ((jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) && !jsonObj.get("Type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Type").toString()));
      }
      if ((jsonObj.get("CDASHIG Core") != null && !jsonObj.get("CDASHIG Core").isJsonNull()) && !jsonObj.get("CDASHIG Core").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CDASHIG Core` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CDASHIG Core").toString()));
      }
      if ((jsonObj.get("Case Report Form Completion Instructions") != null && !jsonObj.get("Case Report Form Completion Instructions").isJsonNull()) && !jsonObj.get("Case Report Form Completion Instructions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Case Report Form Completion Instructions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Case Report Form Completion Instructions").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("SDTMIG Target") != null && !jsonObj.get("SDTMIG Target").isJsonNull() && !jsonObj.get("SDTMIG Target").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `SDTMIG Target` to be an array in the JSON string but got `%s`", jsonObj.get("SDTMIG Target").toString()));
      }
      if ((jsonObj.get("Mapping Instructions") != null && !jsonObj.get("Mapping Instructions").isJsonNull()) && !jsonObj.get("Mapping Instructions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mapping Instructions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mapping Instructions").toString()));
      }
      if ((jsonObj.get("Controlled Terminology Codelist Name") != null && !jsonObj.get("Controlled Terminology Codelist Name").isJsonNull()) && !jsonObj.get("Controlled Terminology Codelist Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Controlled Terminology Codelist Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Controlled Terminology Codelist Name").toString()));
      }
      if ((jsonObj.get("Implementation Notes") != null && !jsonObj.get("Implementation Notes").isJsonNull()) && !jsonObj.get("Implementation Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Implementation Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Implementation Notes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExportCdashigScenarioVariablesRow.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExportCdashigScenarioVariablesRow' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExportCdashigScenarioVariablesRow> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExportCdashigScenarioVariablesRow.class));

       return (TypeAdapter<T>) new TypeAdapter<ExportCdashigScenarioVariablesRow>() {
           @Override
           public void write(JsonWriter out, ExportCdashigScenarioVariablesRow value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExportCdashigScenarioVariablesRow read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExportCdashigScenarioVariablesRow given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExportCdashigScenarioVariablesRow
   * @throws IOException if the JSON string is invalid with respect to ExportCdashigScenarioVariablesRow
   */
  public static ExportCdashigScenarioVariablesRow fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExportCdashigScenarioVariablesRow.class);
  }

  /**
   * Convert an instance of ExportCdashigScenarioVariablesRow to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

