/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CdashProductRefElement;
import org.openapitools.client.model.CdashigProductRefElement;
import org.openapitools.client.model.ProductgroupRef;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductgroupDataCollectionLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-22T20:17:16.173989497Z[Etc/UTC]", comments = "Generator version: 7.16.0-SNAPSHOT")
public class ProductgroupDataCollectionLinks {
  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  @javax.annotation.Nullable
  private ProductgroupRef self;

  public static final String SERIALIZED_NAME_CDASH = "cdash";
  @SerializedName(SERIALIZED_NAME_CDASH)
  @javax.annotation.Nullable
  private List<CdashProductRefElement> cdash = new ArrayList<>();

  public static final String SERIALIZED_NAME_CDASHIG = "cdashig";
  @SerializedName(SERIALIZED_NAME_CDASHIG)
  @javax.annotation.Nullable
  private List<CdashigProductRefElement> cdashig = new ArrayList<>();

  public ProductgroupDataCollectionLinks() {
  }

  public ProductgroupDataCollectionLinks self(@javax.annotation.Nullable ProductgroupRef self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nullable
  public ProductgroupRef getSelf() {
    return self;
  }

  public void setSelf(@javax.annotation.Nullable ProductgroupRef self) {
    this.self = self;
  }


  public ProductgroupDataCollectionLinks cdash(@javax.annotation.Nullable List<CdashProductRefElement> cdash) {
    this.cdash = cdash;
    return this;
  }

  public ProductgroupDataCollectionLinks addCdashItem(CdashProductRefElement cdashItem) {
    if (this.cdash == null) {
      this.cdash = new ArrayList<>();
    }
    this.cdash.add(cdashItem);
    return this;
  }

  /**
   * Get cdash
   * @return cdash
   */
  @javax.annotation.Nullable
  public List<CdashProductRefElement> getCdash() {
    return cdash;
  }

  public void setCdash(@javax.annotation.Nullable List<CdashProductRefElement> cdash) {
    this.cdash = cdash;
  }


  public ProductgroupDataCollectionLinks cdashig(@javax.annotation.Nullable List<CdashigProductRefElement> cdashig) {
    this.cdashig = cdashig;
    return this;
  }

  public ProductgroupDataCollectionLinks addCdashigItem(CdashigProductRefElement cdashigItem) {
    if (this.cdashig == null) {
      this.cdashig = new ArrayList<>();
    }
    this.cdashig.add(cdashigItem);
    return this;
  }

  /**
   * Get cdashig
   * @return cdashig
   */
  @javax.annotation.Nullable
  public List<CdashigProductRefElement> getCdashig() {
    return cdashig;
  }

  public void setCdashig(@javax.annotation.Nullable List<CdashigProductRefElement> cdashig) {
    this.cdashig = cdashig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductgroupDataCollectionLinks productgroupDataCollectionLinks = (ProductgroupDataCollectionLinks) o;
    return Objects.equals(this.self, productgroupDataCollectionLinks.self) &&
        Objects.equals(this.cdash, productgroupDataCollectionLinks.cdash) &&
        Objects.equals(this.cdashig, productgroupDataCollectionLinks.cdashig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, cdash, cdashig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductgroupDataCollectionLinks {\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    cdash: ").append(toIndentedString(cdash)).append("\n");
    sb.append("    cdashig: ").append(toIndentedString(cdashig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("self", "cdash", "cdashig"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductgroupDataCollectionLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductgroupDataCollectionLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductgroupDataCollectionLinks is not found in the empty JSON string", ProductgroupDataCollectionLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductgroupDataCollectionLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductgroupDataCollectionLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `self`
      if (jsonObj.get("self") != null && !jsonObj.get("self").isJsonNull()) {
        ProductgroupRef.validateJsonElement(jsonObj.get("self"));
      }
      if (jsonObj.get("cdash") != null && !jsonObj.get("cdash").isJsonNull()) {
        JsonArray jsonArraycdash = jsonObj.getAsJsonArray("cdash");
        if (jsonArraycdash != null) {
          // ensure the json data is an array
          if (!jsonObj.get("cdash").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `cdash` to be an array in the JSON string but got `%s`", jsonObj.get("cdash").toString()));
          }

          // validate the optional field `cdash` (array)
          for (int i = 0; i < jsonArraycdash.size(); i++) {
            CdashProductRefElement.validateJsonElement(jsonArraycdash.get(i));
          };
        }
      }
      if (jsonObj.get("cdashig") != null && !jsonObj.get("cdashig").isJsonNull()) {
        JsonArray jsonArraycdashig = jsonObj.getAsJsonArray("cdashig");
        if (jsonArraycdashig != null) {
          // ensure the json data is an array
          if (!jsonObj.get("cdashig").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `cdashig` to be an array in the JSON string but got `%s`", jsonObj.get("cdashig").toString()));
          }

          // validate the optional field `cdashig` (array)
          for (int i = 0; i < jsonArraycdashig.size(); i++) {
            CdashigProductRefElement.validateJsonElement(jsonArraycdashig.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductgroupDataCollectionLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductgroupDataCollectionLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductgroupDataCollectionLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductgroupDataCollectionLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductgroupDataCollectionLinks>() {
           @Override
           public void write(JsonWriter out, ProductgroupDataCollectionLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductgroupDataCollectionLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductgroupDataCollectionLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductgroupDataCollectionLinks
   * @throws IOException if the JSON string is invalid with respect to ProductgroupDataCollectionLinks
   */
  public static ProductgroupDataCollectionLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductgroupDataCollectionLinks.class);
  }

  /**
   * Convert an instance of ProductgroupDataCollectionLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

