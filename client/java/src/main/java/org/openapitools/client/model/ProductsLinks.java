/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ProductgroupDataAnalysis;
import org.openapitools.client.model.ProductgroupDataCollection;
import org.openapitools.client.model.ProductgroupDataTabulation;
import org.openapitools.client.model.ProductgroupQrs;
import org.openapitools.client.model.ProductgroupTerminology;
import org.openapitools.client.model.ProductsRef;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductsLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-22T20:17:16.173989497Z[Etc/UTC]", comments = "Generator version: 7.16.0-SNAPSHOT")
public class ProductsLinks {
  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  @javax.annotation.Nullable
  private ProductsRef self;

  public static final String SERIALIZED_NAME_DATA_COLLECTION = "data-collection";
  @SerializedName(SERIALIZED_NAME_DATA_COLLECTION)
  @javax.annotation.Nullable
  private ProductgroupDataCollection dataCollection;

  public static final String SERIALIZED_NAME_DATA_TABULATION = "data-tabulation";
  @SerializedName(SERIALIZED_NAME_DATA_TABULATION)
  @javax.annotation.Nullable
  private ProductgroupDataTabulation dataTabulation;

  public static final String SERIALIZED_NAME_DATA_ANALYSIS = "data-analysis";
  @SerializedName(SERIALIZED_NAME_DATA_ANALYSIS)
  @javax.annotation.Nullable
  private ProductgroupDataAnalysis dataAnalysis;

  public static final String SERIALIZED_NAME_TERMINOLOGY = "terminology";
  @SerializedName(SERIALIZED_NAME_TERMINOLOGY)
  @javax.annotation.Nullable
  private ProductgroupTerminology terminology;

  public static final String SERIALIZED_NAME_MEASURE = "measure";
  @SerializedName(SERIALIZED_NAME_MEASURE)
  @javax.annotation.Nullable
  private ProductgroupQrs measure;

  public ProductsLinks() {
  }

  public ProductsLinks self(@javax.annotation.Nullable ProductsRef self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nullable
  public ProductsRef getSelf() {
    return self;
  }

  public void setSelf(@javax.annotation.Nullable ProductsRef self) {
    this.self = self;
  }


  public ProductsLinks dataCollection(@javax.annotation.Nullable ProductgroupDataCollection dataCollection) {
    this.dataCollection = dataCollection;
    return this;
  }

  /**
   * Get dataCollection
   * @return dataCollection
   */
  @javax.annotation.Nullable
  public ProductgroupDataCollection getDataCollection() {
    return dataCollection;
  }

  public void setDataCollection(@javax.annotation.Nullable ProductgroupDataCollection dataCollection) {
    this.dataCollection = dataCollection;
  }


  public ProductsLinks dataTabulation(@javax.annotation.Nullable ProductgroupDataTabulation dataTabulation) {
    this.dataTabulation = dataTabulation;
    return this;
  }

  /**
   * Get dataTabulation
   * @return dataTabulation
   */
  @javax.annotation.Nullable
  public ProductgroupDataTabulation getDataTabulation() {
    return dataTabulation;
  }

  public void setDataTabulation(@javax.annotation.Nullable ProductgroupDataTabulation dataTabulation) {
    this.dataTabulation = dataTabulation;
  }


  public ProductsLinks dataAnalysis(@javax.annotation.Nullable ProductgroupDataAnalysis dataAnalysis) {
    this.dataAnalysis = dataAnalysis;
    return this;
  }

  /**
   * Get dataAnalysis
   * @return dataAnalysis
   */
  @javax.annotation.Nullable
  public ProductgroupDataAnalysis getDataAnalysis() {
    return dataAnalysis;
  }

  public void setDataAnalysis(@javax.annotation.Nullable ProductgroupDataAnalysis dataAnalysis) {
    this.dataAnalysis = dataAnalysis;
  }


  public ProductsLinks terminology(@javax.annotation.Nullable ProductgroupTerminology terminology) {
    this.terminology = terminology;
    return this;
  }

  /**
   * Get terminology
   * @return terminology
   */
  @javax.annotation.Nullable
  public ProductgroupTerminology getTerminology() {
    return terminology;
  }

  public void setTerminology(@javax.annotation.Nullable ProductgroupTerminology terminology) {
    this.terminology = terminology;
  }


  public ProductsLinks measure(@javax.annotation.Nullable ProductgroupQrs measure) {
    this.measure = measure;
    return this;
  }

  /**
   * Get measure
   * @return measure
   */
  @javax.annotation.Nullable
  public ProductgroupQrs getMeasure() {
    return measure;
  }

  public void setMeasure(@javax.annotation.Nullable ProductgroupQrs measure) {
    this.measure = measure;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductsLinks productsLinks = (ProductsLinks) o;
    return Objects.equals(this.self, productsLinks.self) &&
        Objects.equals(this.dataCollection, productsLinks.dataCollection) &&
        Objects.equals(this.dataTabulation, productsLinks.dataTabulation) &&
        Objects.equals(this.dataAnalysis, productsLinks.dataAnalysis) &&
        Objects.equals(this.terminology, productsLinks.terminology) &&
        Objects.equals(this.measure, productsLinks.measure);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, dataCollection, dataTabulation, dataAnalysis, terminology, measure);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductsLinks {\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    dataCollection: ").append(toIndentedString(dataCollection)).append("\n");
    sb.append("    dataTabulation: ").append(toIndentedString(dataTabulation)).append("\n");
    sb.append("    dataAnalysis: ").append(toIndentedString(dataAnalysis)).append("\n");
    sb.append("    terminology: ").append(toIndentedString(terminology)).append("\n");
    sb.append("    measure: ").append(toIndentedString(measure)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("self", "data-collection", "data-tabulation", "data-analysis", "terminology", "measure"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductsLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductsLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductsLinks is not found in the empty JSON string", ProductsLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductsLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductsLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `self`
      if (jsonObj.get("self") != null && !jsonObj.get("self").isJsonNull()) {
        ProductsRef.validateJsonElement(jsonObj.get("self"));
      }
      // validate the optional field `data-collection`
      if (jsonObj.get("data-collection") != null && !jsonObj.get("data-collection").isJsonNull()) {
        ProductgroupDataCollection.validateJsonElement(jsonObj.get("data-collection"));
      }
      // validate the optional field `data-tabulation`
      if (jsonObj.get("data-tabulation") != null && !jsonObj.get("data-tabulation").isJsonNull()) {
        ProductgroupDataTabulation.validateJsonElement(jsonObj.get("data-tabulation"));
      }
      // validate the optional field `data-analysis`
      if (jsonObj.get("data-analysis") != null && !jsonObj.get("data-analysis").isJsonNull()) {
        ProductgroupDataAnalysis.validateJsonElement(jsonObj.get("data-analysis"));
      }
      // validate the optional field `terminology`
      if (jsonObj.get("terminology") != null && !jsonObj.get("terminology").isJsonNull()) {
        ProductgroupTerminology.validateJsonElement(jsonObj.get("terminology"));
      }
      // validate the optional field `measure`
      if (jsonObj.get("measure") != null && !jsonObj.get("measure").isJsonNull()) {
        ProductgroupQrs.validateJsonElement(jsonObj.get("measure"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductsLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductsLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductsLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductsLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductsLinks>() {
           @Override
           public void write(JsonWriter out, ProductsLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductsLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductsLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductsLinks
   * @throws IOException if the JSON string is invalid with respect to ProductsLinks
   */
  public static ProductsLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductsLinks.class);
  }

  /**
   * Convert an instance of ProductsLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

