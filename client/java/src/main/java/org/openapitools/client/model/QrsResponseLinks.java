/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.RootCtTermRef;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * QrsResponseLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-22T20:17:16.173989497Z[Etc/UTC]", comments = "Generator version: 7.16.0-SNAPSHOT")
public class QrsResponseLinks {
  public static final String SERIALIZED_NAME_QRS_RESPONSE_O_R_R_E_S = "qrsResponseORRES";
  @SerializedName(SERIALIZED_NAME_QRS_RESPONSE_O_R_R_E_S)
  @javax.annotation.Nullable
  private RootCtTermRef qrsResponseORRES;

  public static final String SERIALIZED_NAME_QRS_RESPONSE_O_R_R_E_S_U = "qrsResponseORRESU";
  @SerializedName(SERIALIZED_NAME_QRS_RESPONSE_O_R_R_E_S_U)
  @javax.annotation.Nullable
  private RootCtTermRef qrsResponseORRESU;

  public static final String SERIALIZED_NAME_QRS_RESPONSE_S_T_R_E_S_C = "qrsResponseSTRESC";
  @SerializedName(SERIALIZED_NAME_QRS_RESPONSE_S_T_R_E_S_C)
  @javax.annotation.Nullable
  private RootCtTermRef qrsResponseSTRESC;

  public static final String SERIALIZED_NAME_QRS_RESPONSE_S_T_R_E_S_C_U = "qrsResponseSTRESCU";
  @SerializedName(SERIALIZED_NAME_QRS_RESPONSE_S_T_R_E_S_C_U)
  @javax.annotation.Nullable
  private RootCtTermRef qrsResponseSTRESCU;

  public QrsResponseLinks() {
  }

  public QrsResponseLinks qrsResponseORRES(@javax.annotation.Nullable RootCtTermRef qrsResponseORRES) {
    this.qrsResponseORRES = qrsResponseORRES;
    return this;
  }

  /**
   * Get qrsResponseORRES
   * @return qrsResponseORRES
   */
  @javax.annotation.Nullable
  public RootCtTermRef getQrsResponseORRES() {
    return qrsResponseORRES;
  }

  public void setQrsResponseORRES(@javax.annotation.Nullable RootCtTermRef qrsResponseORRES) {
    this.qrsResponseORRES = qrsResponseORRES;
  }


  public QrsResponseLinks qrsResponseORRESU(@javax.annotation.Nullable RootCtTermRef qrsResponseORRESU) {
    this.qrsResponseORRESU = qrsResponseORRESU;
    return this;
  }

  /**
   * Get qrsResponseORRESU
   * @return qrsResponseORRESU
   */
  @javax.annotation.Nullable
  public RootCtTermRef getQrsResponseORRESU() {
    return qrsResponseORRESU;
  }

  public void setQrsResponseORRESU(@javax.annotation.Nullable RootCtTermRef qrsResponseORRESU) {
    this.qrsResponseORRESU = qrsResponseORRESU;
  }


  public QrsResponseLinks qrsResponseSTRESC(@javax.annotation.Nullable RootCtTermRef qrsResponseSTRESC) {
    this.qrsResponseSTRESC = qrsResponseSTRESC;
    return this;
  }

  /**
   * Get qrsResponseSTRESC
   * @return qrsResponseSTRESC
   */
  @javax.annotation.Nullable
  public RootCtTermRef getQrsResponseSTRESC() {
    return qrsResponseSTRESC;
  }

  public void setQrsResponseSTRESC(@javax.annotation.Nullable RootCtTermRef qrsResponseSTRESC) {
    this.qrsResponseSTRESC = qrsResponseSTRESC;
  }


  public QrsResponseLinks qrsResponseSTRESCU(@javax.annotation.Nullable RootCtTermRef qrsResponseSTRESCU) {
    this.qrsResponseSTRESCU = qrsResponseSTRESCU;
    return this;
  }

  /**
   * Get qrsResponseSTRESCU
   * @return qrsResponseSTRESCU
   */
  @javax.annotation.Nullable
  public RootCtTermRef getQrsResponseSTRESCU() {
    return qrsResponseSTRESCU;
  }

  public void setQrsResponseSTRESCU(@javax.annotation.Nullable RootCtTermRef qrsResponseSTRESCU) {
    this.qrsResponseSTRESCU = qrsResponseSTRESCU;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QrsResponseLinks qrsResponseLinks = (QrsResponseLinks) o;
    return Objects.equals(this.qrsResponseORRES, qrsResponseLinks.qrsResponseORRES) &&
        Objects.equals(this.qrsResponseORRESU, qrsResponseLinks.qrsResponseORRESU) &&
        Objects.equals(this.qrsResponseSTRESC, qrsResponseLinks.qrsResponseSTRESC) &&
        Objects.equals(this.qrsResponseSTRESCU, qrsResponseLinks.qrsResponseSTRESCU);
  }

  @Override
  public int hashCode() {
    return Objects.hash(qrsResponseORRES, qrsResponseORRESU, qrsResponseSTRESC, qrsResponseSTRESCU);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QrsResponseLinks {\n");
    sb.append("    qrsResponseORRES: ").append(toIndentedString(qrsResponseORRES)).append("\n");
    sb.append("    qrsResponseORRESU: ").append(toIndentedString(qrsResponseORRESU)).append("\n");
    sb.append("    qrsResponseSTRESC: ").append(toIndentedString(qrsResponseSTRESC)).append("\n");
    sb.append("    qrsResponseSTRESCU: ").append(toIndentedString(qrsResponseSTRESCU)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("qrsResponseORRES", "qrsResponseORRESU", "qrsResponseSTRESC", "qrsResponseSTRESCU"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QrsResponseLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QrsResponseLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QrsResponseLinks is not found in the empty JSON string", QrsResponseLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QrsResponseLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QrsResponseLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `qrsResponseORRES`
      if (jsonObj.get("qrsResponseORRES") != null && !jsonObj.get("qrsResponseORRES").isJsonNull()) {
        RootCtTermRef.validateJsonElement(jsonObj.get("qrsResponseORRES"));
      }
      // validate the optional field `qrsResponseORRESU`
      if (jsonObj.get("qrsResponseORRESU") != null && !jsonObj.get("qrsResponseORRESU").isJsonNull()) {
        RootCtTermRef.validateJsonElement(jsonObj.get("qrsResponseORRESU"));
      }
      // validate the optional field `qrsResponseSTRESC`
      if (jsonObj.get("qrsResponseSTRESC") != null && !jsonObj.get("qrsResponseSTRESC").isJsonNull()) {
        RootCtTermRef.validateJsonElement(jsonObj.get("qrsResponseSTRESC"));
      }
      // validate the optional field `qrsResponseSTRESCU`
      if (jsonObj.get("qrsResponseSTRESCU") != null && !jsonObj.get("qrsResponseSTRESCU").isJsonNull()) {
        RootCtTermRef.validateJsonElement(jsonObj.get("qrsResponseSTRESCU"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QrsResponseLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QrsResponseLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QrsResponseLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QrsResponseLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<QrsResponseLinks>() {
           @Override
           public void write(JsonWriter out, QrsResponseLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QrsResponseLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QrsResponseLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QrsResponseLinks
   * @throws IOException if the JSON string is invalid with respect to QrsResponseLinks
   */
  public static QrsResponseLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QrsResponseLinks.class);
  }

  /**
   * Convert an instance of QrsResponseLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

