/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultErrorResponse;
import org.openapitools.client.model.ExportQrsItemsTable;
import org.openapitools.client.model.ExportQrsWorkbook;
import org.openapitools.client.model.QrsItem;
import org.openapitools.client.model.QrsItems;
import org.openapitools.client.model.QrsProduct;
import org.openapitools.client.model.QrsResponsegroup;
import org.openapitools.client.model.QrsResponsegroups;
import org.openapitools.client.model.XmlQrsItem;
import org.openapitools.client.model.XmlQrsItems;
import org.openapitools.client.model.XmlQrsProduct;
import org.openapitools.client.model.XmlQrsResponsegroup;
import org.openapitools.client.model.XmlQrsResponsegroups;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MeasuresApi
 */
@Disabled
public class MeasuresApiTest {

    private final MeasuresApi api = new MeasuresApi();

    /**
     * Get QRS Product
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionGetTest() throws ApiException {
        String measure = null;
        String version = null;
        QrsProduct response = api.mdrQrsMeasureVersionGet(measure, version);
        // TODO: test validations
    }

    /**
     * Get QRS Item List
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionItemsGetTest() throws ApiException {
        String measure = null;
        String version = null;
        QrsItems response = api.mdrQrsMeasureVersionItemsGet(measure, version);
        // TODO: test validations
    }

    /**
     * Get QRS Item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionItemsItemGetTest() throws ApiException {
        String measure = null;
        String version = null;
        String item = null;
        QrsItem response = api.mdrQrsMeasureVersionItemsItemGet(measure, version, item);
        // TODO: test validations
    }

    /**
     * Get QRS Response Group List
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionResponsegroupsGetTest() throws ApiException {
        String measure = null;
        String version = null;
        QrsResponsegroups response = api.mdrQrsMeasureVersionResponsegroupsGet(measure, version);
        // TODO: test validations
    }

    /**
     * Get QRS Response Group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionResponsegroupsResponsegroupGetTest() throws ApiException {
        String measure = null;
        String version = null;
        String responsegroup = null;
        QrsResponsegroup response = api.mdrQrsMeasureVersionResponsegroupsResponsegroupGet(measure, version, responsegroup);
        // TODO: test validations
    }

}
