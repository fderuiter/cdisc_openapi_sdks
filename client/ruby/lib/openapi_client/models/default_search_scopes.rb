=begin
#CDISC Library API

#REST API Documentation for CDISC Library in production server

The version of the OpenAPI document: 1.1.0
Contact: cdisc_library_support@cdisc.org
Generated by: https://openapi-generator.tech
Generator version: 7.16.0-SNAPSHOT

=end

require 'date'
require 'time'

module OpenapiClient
  class DefaultSearchScopes
    CLASS = "class".freeze
    CODELIST = "codelist".freeze
    CONCEPT_ID = "conceptId".freeze
    CORE = "core".freeze
    DATA_STRUCTURE = "dataStructure".freeze
    DATASET_STRUCTURE = "datasetStructure".freeze
    DEFINITION = "definition".freeze
    DESCRIPTION = "description".freeze
    DOMAIN = "domain".freeze
    EFFECTIVE_DATE = "effectiveDate".freeze
    EXTENSIBLE = "extensible".freeze
    HREF = "href".freeze
    LABEL = "label".freeze
    MEASURE_TYPE = "measureType".freeze
    NAME = "name".freeze
    PREFERRED_TERM = "preferredTerm".freeze
    PRODUCT = "product".freeze
    PRODUCT_GROUP = "productGroup".freeze
    REGISTRATION_STATUS = "registrationStatus".freeze
    ROLE_DESCRIPTION = "roleDescription".freeze
    SDTM_TARGET = "sdtmTarget".freeze
    SIMPLE_DATATYPE = "simpleDatatype".freeze
    SUBMISSION_VALUE = "submissionValue".freeze
    SYNONYMS = "synonyms".freeze
    TYPE = "type".freeze
    UI_HREF = "uiHref".freeze
    VALUE_DOMAIN = "valueDomain".freeze
    VARIABLE_SET = "variableSet".freeze
    VERSION = "version".freeze

    def self.all_vars
      @all_vars ||= [CLASS, CODELIST, CONCEPT_ID, CORE, DATA_STRUCTURE, DATASET_STRUCTURE, DEFINITION, DESCRIPTION, DOMAIN, EFFECTIVE_DATE, EXTENSIBLE, HREF, LABEL, MEASURE_TYPE, NAME, PREFERRED_TERM, PRODUCT, PRODUCT_GROUP, REGISTRATION_STATUS, ROLE_DESCRIPTION, SDTM_TARGET, SIMPLE_DATATYPE, SUBMISSION_VALUE, SYNONYMS, TYPE, UI_HREF, VALUE_DOMAIN, VARIABLE_SET, VERSION].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if DefaultSearchScopes.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #DefaultSearchScopes"
    end
  end
end
