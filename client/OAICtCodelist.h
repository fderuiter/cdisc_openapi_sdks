/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICtCodelist.h
 *
 * 
 */

#ifndef OAICtCodelist_H
#define OAICtCodelist_H

#include <QJsonObject>

#include "OAICtCodelistLinks.h"
#include "OAICtPackageTerm.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICtCodelistLinks;
class OAICtPackageTerm;

class OAICtCodelist : public OAIObject {
public:
    OAICtCodelist();
    OAICtCodelist(QString json);
    ~OAICtCodelist() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConceptId() const;
    void setConceptId(const QString &concept_id);
    bool is_concept_id_Set() const;
    bool is_concept_id_Valid() const;

    QString getExtensible() const;
    void setExtensible(const QString &extensible);
    bool is_extensible_Set() const;
    bool is_extensible_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSubmissionValue() const;
    void setSubmissionValue(const QString &submission_value);
    bool is_submission_value_Set() const;
    bool is_submission_value_Valid() const;

    QString getDefinition() const;
    void setDefinition(const QString &definition);
    bool is_definition_Set() const;
    bool is_definition_Valid() const;

    QString getPreferredTerm() const;
    void setPreferredTerm(const QString &preferred_term);
    bool is_preferred_term_Set() const;
    bool is_preferred_term_Valid() const;

    QList<QString> getSynonyms() const;
    void setSynonyms(const QList<QString> &synonyms);
    bool is_synonyms_Set() const;
    bool is_synonyms_Valid() const;

    OAICtCodelistLinks getLinks() const;
    void setLinks(const OAICtCodelistLinks &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QList<OAICtPackageTerm> getTerms() const;
    void setTerms(const QList<OAICtPackageTerm> &terms);
    bool is_terms_Set() const;
    bool is_terms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_concept_id;
    bool m_concept_id_isSet;
    bool m_concept_id_isValid;

    QString m_extensible;
    bool m_extensible_isSet;
    bool m_extensible_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_submission_value;
    bool m_submission_value_isSet;
    bool m_submission_value_isValid;

    QString m_definition;
    bool m_definition_isSet;
    bool m_definition_isValid;

    QString m_preferred_term;
    bool m_preferred_term_isSet;
    bool m_preferred_term_isValid;

    QList<QString> m_synonyms;
    bool m_synonyms_isSet;
    bool m_synonyms_isValid;

    OAICtCodelistLinks m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QList<OAICtPackageTerm> m_terms;
    bool m_terms_isSet;
    bool m_terms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICtCodelist)

#endif // OAICtCodelist_H
