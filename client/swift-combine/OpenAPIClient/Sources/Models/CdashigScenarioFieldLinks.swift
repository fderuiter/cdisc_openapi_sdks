//
// CdashigScenarioFieldLinks.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct CdashigScenarioFieldLinks: Codable {
    public var _self: CdashigScenarioFieldRef?
    public var codelist: [RootCtCodelistRefElement]?
    public var parentProduct: CdashigProductRef?
    public var parentDomain: CdashigDomainRef?
    public var parentScenario: CdashigScenarioRef?
    public var rootItem: RootCdashigScenarioFieldRef?
    public var priorVersion: CdashigScenarioFieldRef?
    public var sdtmigDatasetMappingTargets: [SdtmigDatasetVariableRefTarget]?

    public init(_self: CdashigScenarioFieldRef? = nil, codelist: [RootCtCodelistRefElement]? = nil, parentProduct: CdashigProductRef? = nil, parentDomain: CdashigDomainRef? = nil, parentScenario: CdashigScenarioRef? = nil, rootItem: RootCdashigScenarioFieldRef? = nil, priorVersion: CdashigScenarioFieldRef? = nil, sdtmigDatasetMappingTargets: [SdtmigDatasetVariableRefTarget]? = nil) {
        self._self = _self
        self.codelist = codelist
        self.parentProduct = parentProduct
        self.parentDomain = parentDomain
        self.parentScenario = parentScenario
        self.rootItem = rootItem
        self.priorVersion = priorVersion
        self.sdtmigDatasetMappingTargets = sdtmigDatasetMappingTargets
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _self = "self"
        case codelist
        case parentProduct
        case parentDomain
        case parentScenario
        case rootItem
        case priorVersion
        case sdtmigDatasetMappingTargets
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        _self = try container.decodeIfPresent(CdashigScenarioFieldRef.self, forKey: ._self)
        codelist = try container.decodeIfPresent([RootCtCodelistRefElement].self, forKey: .codelist)
        parentProduct = try container.decodeIfPresent(CdashigProductRef.self, forKey: .parentProduct)
        parentDomain = try container.decodeIfPresent(CdashigDomainRef.self, forKey: .parentDomain)
        parentScenario = try container.decodeIfPresent(CdashigScenarioRef.self, forKey: .parentScenario)
        rootItem = try container.decodeIfPresent(RootCdashigScenarioFieldRef.self, forKey: .rootItem)
        priorVersion = try container.decodeIfPresent(CdashigScenarioFieldRef.self, forKey: .priorVersion)
        sdtmigDatasetMappingTargets = try container.decodeIfPresent([SdtmigDatasetVariableRefTarget].self, forKey: .sdtmigDatasetMappingTargets)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_self, forKey: ._self)
        try container.encodeIfPresent(codelist, forKey: .codelist)
        try container.encodeIfPresent(parentProduct, forKey: .parentProduct)
        try container.encodeIfPresent(parentDomain, forKey: .parentDomain)
        try container.encodeIfPresent(parentScenario, forKey: .parentScenario)
        try container.encodeIfPresent(rootItem, forKey: .rootItem)
        try container.encodeIfPresent(priorVersion, forKey: .priorVersion)
        try container.encodeIfPresent(sdtmigDatasetMappingTargets, forKey: .sdtmigDatasetMappingTargets)
    }
}
