//
// CtPackageCodelistsLinks.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct CtPackageCodelistsLinks: Codable {
    public var _self: CtPackageCodelistsRef?
    public var priorVersion: CtPackageCodelistsRef?
    public var codelists: [CtCodelistRefElement]?

    public init(_self: CtPackageCodelistsRef? = nil, priorVersion: CtPackageCodelistsRef? = nil, codelists: [CtCodelistRefElement]? = nil) {
        self._self = _self
        self.priorVersion = priorVersion
        self.codelists = codelists
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _self = "self"
        case priorVersion
        case codelists
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        _self = try container.decodeIfPresent(CtPackageCodelistsRef.self, forKey: ._self)
        priorVersion = try container.decodeIfPresent(CtPackageCodelistsRef.self, forKey: .priorVersion)
        codelists = try container.decodeIfPresent([CtCodelistRefElement].self, forKey: .codelists)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_self, forKey: ._self)
        try container.encodeIfPresent(priorVersion, forKey: .priorVersion)
        try container.encodeIfPresent(codelists, forKey: .codelists)
    }
}
