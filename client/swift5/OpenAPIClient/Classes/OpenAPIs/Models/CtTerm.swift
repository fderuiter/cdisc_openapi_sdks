//
// CtTerm.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CtTerm: Codable, JSONEncodable, Hashable {

    public var conceptId: String?
    public var submissionValue: String?
    public var definition: String?
    public var preferredTerm: String?
    public var synonyms: [String]?
    public var links: CtTermLinks?

    public init(conceptId: String? = nil, submissionValue: String? = nil, definition: String? = nil, preferredTerm: String? = nil, synonyms: [String]? = nil, links: CtTermLinks? = nil) {
        self.conceptId = conceptId
        self.submissionValue = submissionValue
        self.definition = definition
        self.preferredTerm = preferredTerm
        self.synonyms = synonyms
        self.links = links
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case conceptId
        case submissionValue
        case definition
        case preferredTerm
        case synonyms
        case links = "_links"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(conceptId, forKey: .conceptId)
        try container.encodeIfPresent(submissionValue, forKey: .submissionValue)
        try container.encodeIfPresent(definition, forKey: .definition)
        try container.encodeIfPresent(preferredTerm, forKey: .preferredTerm)
        try container.encodeIfPresent(synonyms, forKey: .synonyms)
        try container.encodeIfPresent(links, forKey: .links)
    }
}

