//
// Health.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Health: Codable, JSONEncodable, Hashable {

    public var healthy: Bool?
    public var ldapAuthenticationHealthy: Bool?
    public var ldapAuthorizationHealthy: Bool?
    public var databaseHealthy: Bool?
    public var esHealthy: Bool?

    public init(healthy: Bool? = nil, ldapAuthenticationHealthy: Bool? = nil, ldapAuthorizationHealthy: Bool? = nil, databaseHealthy: Bool? = nil, esHealthy: Bool? = nil) {
        self.healthy = healthy
        self.ldapAuthenticationHealthy = ldapAuthenticationHealthy
        self.ldapAuthorizationHealthy = ldapAuthorizationHealthy
        self.databaseHealthy = databaseHealthy
        self.esHealthy = esHealthy
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case healthy
        case ldapAuthenticationHealthy
        case ldapAuthorizationHealthy
        case databaseHealthy
        case esHealthy
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(healthy, forKey: .healthy)
        try container.encodeIfPresent(ldapAuthenticationHealthy, forKey: .ldapAuthenticationHealthy)
        try container.encodeIfPresent(ldapAuthorizationHealthy, forKey: .ldapAuthorizationHealthy)
        try container.encodeIfPresent(databaseHealthy, forKey: .databaseHealthy)
        try container.encodeIfPresent(esHealthy, forKey: .esHealthy)
    }
}

