//
// ProductsLinks.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ProductsLinks: Codable, JSONEncodable, Hashable {

    public var _self: ProductsRef?
    public var dataCollection: ProductgroupDataCollection?
    public var dataTabulation: ProductgroupDataTabulation?
    public var dataAnalysis: ProductgroupDataAnalysis?
    public var terminology: ProductgroupTerminology?
    public var measure: ProductgroupQrs?

    public init(_self: ProductsRef? = nil, dataCollection: ProductgroupDataCollection? = nil, dataTabulation: ProductgroupDataTabulation? = nil, dataAnalysis: ProductgroupDataAnalysis? = nil, terminology: ProductgroupTerminology? = nil, measure: ProductgroupQrs? = nil) {
        self._self = _self
        self.dataCollection = dataCollection
        self.dataTabulation = dataTabulation
        self.dataAnalysis = dataAnalysis
        self.terminology = terminology
        self.measure = measure
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _self = "self"
        case dataCollection = "data-collection"
        case dataTabulation = "data-tabulation"
        case dataAnalysis = "data-analysis"
        case terminology
        case measure
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_self, forKey: ._self)
        try container.encodeIfPresent(dataCollection, forKey: .dataCollection)
        try container.encodeIfPresent(dataTabulation, forKey: .dataTabulation)
        try container.encodeIfPresent(dataAnalysis, forKey: .dataAnalysis)
        try container.encodeIfPresent(terminology, forKey: .terminology)
        try container.encodeIfPresent(measure, forKey: .measure)
    }
}

