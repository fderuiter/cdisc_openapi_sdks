//
// SENDImplementationGuideSENDIGAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class SENDImplementationGuideSENDIGAPI {

    /**

     - parameter dataset: (path) SENDIG Dataset Identifier 
     - parameter _var: (path) SENDIG Variable Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrRootSendigDatasetsDatasetVariablesVarGet(dataset: String, _var: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: RootSendigDatasetVariable?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrRootSendigDatasetsDatasetVariablesVarGetWithRequestBuilder(dataset: dataset, _var: _var).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/root/sendig/datasets/{dataset}/variables/{var}
     - Get Root SENDIG Dataset Variable
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter dataset: (path) SENDIG Dataset Identifier 
     - parameter _var: (path) SENDIG Variable Identifier 
     - returns: RequestBuilder<RootSendigDatasetVariable> 
     */
    open class func mdrRootSendigDatasetsDatasetVariablesVarGetWithRequestBuilder(dataset: String, _var: String) -> RequestBuilder<RootSendigDatasetVariable> {
        var localVariablePath = "/mdr/root/sendig/datasets/{dataset}/variables/{var}"
        let datasetPreEscape = "\(APIHelper.mapValueToPathItem(dataset))"
        let datasetPostEscape = datasetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{dataset}", with: datasetPostEscape, options: .literal, range: nil)
        let _varPreEscape = "\(APIHelper.mapValueToPathItem(_var))"
        let _varPostEscape = _varPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{var}", with: _varPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RootSendigDatasetVariable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SENDIG Class Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSendigVersionClassesClassDatasetsGet(version: String, _class: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SendigClassDatasets?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSendigVersionClassesClassDatasetsGetWithRequestBuilder(version: version, _class: _class).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sendig/{version}/classes/{class}/datasets
     - Get SENDIG Class Dataset List
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SENDIG Class Identifier 
     - returns: RequestBuilder<SendigClassDatasets> 
     */
    open class func mdrSendigVersionClassesClassDatasetsGetWithRequestBuilder(version: String, _class: String) -> RequestBuilder<SendigClassDatasets> {
        var localVariablePath = "/mdr/sendig/{version}/classes/{class}/datasets"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let _classPreEscape = "\(APIHelper.mapValueToPathItem(_class))"
        let _classPostEscape = _classPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{class}", with: _classPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SendigClassDatasets>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SENDIG Class Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSendigVersionClassesClassGet(version: String, _class: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SendigClass?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSendigVersionClassesClassGetWithRequestBuilder(version: version, _class: _class).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sendig/{version}/classes/{class}
     - Get SENDIG Class
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter _class: (path) SENDIG Class Identifier 
     - returns: RequestBuilder<SendigClass> 
     */
    open class func mdrSendigVersionClassesClassGetWithRequestBuilder(version: String, _class: String) -> RequestBuilder<SendigClass> {
        var localVariablePath = "/mdr/sendig/{version}/classes/{class}"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let _classPreEscape = "\(APIHelper.mapValueToPathItem(_class))"
        let _classPostEscape = _classPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{class}", with: _classPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SendigClass>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSendigVersionClassesGet(version: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SendigClasses?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSendigVersionClassesGetWithRequestBuilder(version: version).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sendig/{version}/classes
     - Get SENDIG Class List
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - returns: RequestBuilder<SendigClasses> 
     */
    open class func mdrSendigVersionClassesGetWithRequestBuilder(version: String) -> RequestBuilder<SendigClasses> {
        var localVariablePath = "/mdr/sendig/{version}/classes"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SendigClasses>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SENDIG Class Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSendigVersionDatasetsDatasetGet(version: String, dataset: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SendigDataset?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSendigVersionDatasetsDatasetGetWithRequestBuilder(version: version, dataset: dataset).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sendig/{version}/datasets/{dataset}
     - Get SENDIG Dataset
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SENDIG Class Identifier 
     - returns: RequestBuilder<SendigDataset> 
     */
    open class func mdrSendigVersionDatasetsDatasetGetWithRequestBuilder(version: String, dataset: String) -> RequestBuilder<SendigDataset> {
        var localVariablePath = "/mdr/sendig/{version}/datasets/{dataset}"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let datasetPreEscape = "\(APIHelper.mapValueToPathItem(dataset))"
        let datasetPostEscape = datasetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{dataset}", with: datasetPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SendigDataset>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SENDIG Class Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSendigVersionDatasetsDatasetVariablesGet(version: String, dataset: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SendigDatasetVariables?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSendigVersionDatasetsDatasetVariablesGetWithRequestBuilder(version: version, dataset: dataset).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sendig/{version}/datasets/{dataset}/variables
     - Get SENDIG Dataset Variable List
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SENDIG Class Identifier 
     - returns: RequestBuilder<SendigDatasetVariables> 
     */
    open class func mdrSendigVersionDatasetsDatasetVariablesGetWithRequestBuilder(version: String, dataset: String) -> RequestBuilder<SendigDatasetVariables> {
        var localVariablePath = "/mdr/sendig/{version}/datasets/{dataset}/variables"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let datasetPreEscape = "\(APIHelper.mapValueToPathItem(dataset))"
        let datasetPostEscape = datasetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{dataset}", with: datasetPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SendigDatasetVariables>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SENDIG Class Identifier 
     - parameter _var: (path) SENDIG Variable Identifier 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSendigVersionDatasetsDatasetVariablesVarGet(version: String, dataset: String, _var: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SendigDatasetVariable?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSendigVersionDatasetsDatasetVariablesVarGetWithRequestBuilder(version: version, dataset: dataset, _var: _var).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sendig/{version}/datasets/{dataset}/variables/{var}
     - Get SENDIG Dataset Variable
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - parameter dataset: (path) SENDIG Class Identifier 
     - parameter _var: (path) SENDIG Variable Identifier 
     - returns: RequestBuilder<SendigDatasetVariable> 
     */
    open class func mdrSendigVersionDatasetsDatasetVariablesVarGetWithRequestBuilder(version: String, dataset: String, _var: String) -> RequestBuilder<SendigDatasetVariable> {
        var localVariablePath = "/mdr/sendig/{version}/datasets/{dataset}/variables/{var}"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let datasetPreEscape = "\(APIHelper.mapValueToPathItem(dataset))"
        let datasetPostEscape = datasetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{dataset}", with: datasetPostEscape, options: .literal, range: nil)
        let _varPreEscape = "\(APIHelper.mapValueToPathItem(_var))"
        let _varPostEscape = _varPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{var}", with: _varPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SendigDatasetVariable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSendigVersionDatasetsGet(version: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SendigDatasets?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSendigVersionDatasetsGetWithRequestBuilder(version: version).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sendig/{version}/datasets
     - Get SENDIG Dataset List
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - returns: RequestBuilder<SendigDatasets> 
     */
    open class func mdrSendigVersionDatasetsGetWithRequestBuilder(version: String) -> RequestBuilder<SendigDatasets> {
        var localVariablePath = "/mdr/sendig/{version}/datasets"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SendigDatasets>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter version: (path) CDISC Library Product Version 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mdrSendigVersionGet(version: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SendigProduct?, _ error: Error?) -> Void)) -> RequestTask {
        return mdrSendigVersionGetWithRequestBuilder(version: version).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /mdr/sendig/{version}
     - Get SENDIG product
     - BASIC:
       - type: http
       - name: basicAuth
     - parameter version: (path) CDISC Library Product Version 
     - returns: RequestBuilder<SendigProduct> 
     */
    open class func mdrSendigVersionGetWithRequestBuilder(version: String) -> RequestBuilder<SendigProduct> {
        var localVariablePath = "/mdr/sendig/{version}"
        let versionPreEscape = "\(APIHelper.mapValueToPathItem(version))"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SendigProduct>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
