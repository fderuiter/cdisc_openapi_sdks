/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QrsResponses type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QrsResponses{}

// QrsResponses struct for QrsResponses
type QrsResponses struct {
	Ordinal *string `json:"ordinal,omitempty"`
	Links *QrsResponseLinks `json:"_links,omitempty"`
}

// NewQrsResponses instantiates a new QrsResponses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQrsResponses() *QrsResponses {
	this := QrsResponses{}
	return &this
}

// NewQrsResponsesWithDefaults instantiates a new QrsResponses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQrsResponsesWithDefaults() *QrsResponses {
	this := QrsResponses{}
	return &this
}

// GetOrdinal returns the Ordinal field value if set, zero value otherwise.
func (o *QrsResponses) GetOrdinal() string {
	if o == nil || IsNil(o.Ordinal) {
		var ret string
		return ret
	}
	return *o.Ordinal
}

// GetOrdinalOk returns a tuple with the Ordinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponses) GetOrdinalOk() (*string, bool) {
	if o == nil || IsNil(o.Ordinal) {
		return nil, false
	}
	return o.Ordinal, true
}

// HasOrdinal returns a boolean if a field has been set.
func (o *QrsResponses) HasOrdinal() bool {
	if o != nil && !IsNil(o.Ordinal) {
		return true
	}

	return false
}

// SetOrdinal gets a reference to the given string and assigns it to the Ordinal field.
func (o *QrsResponses) SetOrdinal(v string) {
	o.Ordinal = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *QrsResponses) GetLinks() QrsResponseLinks {
	if o == nil || IsNil(o.Links) {
		var ret QrsResponseLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponses) GetLinksOk() (*QrsResponseLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *QrsResponses) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given QrsResponseLinks and assigns it to the Links field.
func (o *QrsResponses) SetLinks(v QrsResponseLinks) {
	o.Links = &v
}

func (o QrsResponses) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QrsResponses) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ordinal) {
		toSerialize["ordinal"] = o.Ordinal
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableQrsResponses struct {
	value *QrsResponses
	isSet bool
}

func (v NullableQrsResponses) Get() *QrsResponses {
	return v.value
}

func (v *NullableQrsResponses) Set(val *QrsResponses) {
	v.value = val
	v.isSet = true
}

func (v NullableQrsResponses) IsSet() bool {
	return v.isSet
}

func (v *NullableQrsResponses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQrsResponses(val *QrsResponses) *NullableQrsResponses {
	return &NullableQrsResponses{value: val, isSet: true}
}

func (v NullableQrsResponses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQrsResponses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


