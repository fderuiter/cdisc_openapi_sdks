/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SdtmClassesLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdtmClassesLinks{}

// SdtmClassesLinks struct for SdtmClassesLinks
type SdtmClassesLinks struct {
	Self *SdtmClassesRef `json:"self,omitempty"`
	PriorVersion *SdtmClassesRef `json:"priorVersion,omitempty"`
	Classes []SdtmClassRefElement `json:"classes,omitempty"`
}

// NewSdtmClassesLinks instantiates a new SdtmClassesLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdtmClassesLinks() *SdtmClassesLinks {
	this := SdtmClassesLinks{}
	return &this
}

// NewSdtmClassesLinksWithDefaults instantiates a new SdtmClassesLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdtmClassesLinksWithDefaults() *SdtmClassesLinks {
	this := SdtmClassesLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SdtmClassesLinks) GetSelf() SdtmClassesRef {
	if o == nil || IsNil(o.Self) {
		var ret SdtmClassesRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassesLinks) GetSelfOk() (*SdtmClassesRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SdtmClassesLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given SdtmClassesRef and assigns it to the Self field.
func (o *SdtmClassesLinks) SetSelf(v SdtmClassesRef) {
	o.Self = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *SdtmClassesLinks) GetPriorVersion() SdtmClassesRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret SdtmClassesRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassesLinks) GetPriorVersionOk() (*SdtmClassesRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *SdtmClassesLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given SdtmClassesRef and assigns it to the PriorVersion field.
func (o *SdtmClassesLinks) SetPriorVersion(v SdtmClassesRef) {
	o.PriorVersion = &v
}

// GetClasses returns the Classes field value if set, zero value otherwise.
func (o *SdtmClassesLinks) GetClasses() []SdtmClassRefElement {
	if o == nil || IsNil(o.Classes) {
		var ret []SdtmClassRefElement
		return ret
	}
	return o.Classes
}

// GetClassesOk returns a tuple with the Classes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassesLinks) GetClassesOk() ([]SdtmClassRefElement, bool) {
	if o == nil || IsNil(o.Classes) {
		return nil, false
	}
	return o.Classes, true
}

// HasClasses returns a boolean if a field has been set.
func (o *SdtmClassesLinks) HasClasses() bool {
	if o != nil && !IsNil(o.Classes) {
		return true
	}

	return false
}

// SetClasses gets a reference to the given []SdtmClassRefElement and assigns it to the Classes field.
func (o *SdtmClassesLinks) SetClasses(v []SdtmClassRefElement) {
	o.Classes = v
}

func (o SdtmClassesLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdtmClassesLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	if !IsNil(o.Classes) {
		toSerialize["classes"] = o.Classes
	}
	return toSerialize, nil
}

type NullableSdtmClassesLinks struct {
	value *SdtmClassesLinks
	isSet bool
}

func (v NullableSdtmClassesLinks) Get() *SdtmClassesLinks {
	return v.value
}

func (v *NullableSdtmClassesLinks) Set(val *SdtmClassesLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSdtmClassesLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSdtmClassesLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdtmClassesLinks(val *SdtmClassesLinks) *NullableSdtmClassesLinks {
	return &NullableSdtmClassesLinks{value: val, isSet: true}
}

func (v NullableSdtmClassesLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdtmClassesLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


