/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SdtmClassDatasetsLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdtmClassDatasetsLinks{}

// SdtmClassDatasetsLinks struct for SdtmClassDatasetsLinks
type SdtmClassDatasetsLinks struct {
	Self *SdtmClassDatasetsRef `json:"self,omitempty"`
	ParentProduct *SdtmProductRef `json:"parentProduct,omitempty"`
	PriorVersion *SdtmClassDatasetsRef `json:"priorVersion,omitempty"`
	Datasets []SdtmDatasetRefElement `json:"datasets,omitempty"`
}

// NewSdtmClassDatasetsLinks instantiates a new SdtmClassDatasetsLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdtmClassDatasetsLinks() *SdtmClassDatasetsLinks {
	this := SdtmClassDatasetsLinks{}
	return &this
}

// NewSdtmClassDatasetsLinksWithDefaults instantiates a new SdtmClassDatasetsLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdtmClassDatasetsLinksWithDefaults() *SdtmClassDatasetsLinks {
	this := SdtmClassDatasetsLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SdtmClassDatasetsLinks) GetSelf() SdtmClassDatasetsRef {
	if o == nil || IsNil(o.Self) {
		var ret SdtmClassDatasetsRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassDatasetsLinks) GetSelfOk() (*SdtmClassDatasetsRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SdtmClassDatasetsLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given SdtmClassDatasetsRef and assigns it to the Self field.
func (o *SdtmClassDatasetsLinks) SetSelf(v SdtmClassDatasetsRef) {
	o.Self = &v
}

// GetParentProduct returns the ParentProduct field value if set, zero value otherwise.
func (o *SdtmClassDatasetsLinks) GetParentProduct() SdtmProductRef {
	if o == nil || IsNil(o.ParentProduct) {
		var ret SdtmProductRef
		return ret
	}
	return *o.ParentProduct
}

// GetParentProductOk returns a tuple with the ParentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassDatasetsLinks) GetParentProductOk() (*SdtmProductRef, bool) {
	if o == nil || IsNil(o.ParentProduct) {
		return nil, false
	}
	return o.ParentProduct, true
}

// HasParentProduct returns a boolean if a field has been set.
func (o *SdtmClassDatasetsLinks) HasParentProduct() bool {
	if o != nil && !IsNil(o.ParentProduct) {
		return true
	}

	return false
}

// SetParentProduct gets a reference to the given SdtmProductRef and assigns it to the ParentProduct field.
func (o *SdtmClassDatasetsLinks) SetParentProduct(v SdtmProductRef) {
	o.ParentProduct = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *SdtmClassDatasetsLinks) GetPriorVersion() SdtmClassDatasetsRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret SdtmClassDatasetsRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassDatasetsLinks) GetPriorVersionOk() (*SdtmClassDatasetsRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *SdtmClassDatasetsLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given SdtmClassDatasetsRef and assigns it to the PriorVersion field.
func (o *SdtmClassDatasetsLinks) SetPriorVersion(v SdtmClassDatasetsRef) {
	o.PriorVersion = &v
}

// GetDatasets returns the Datasets field value if set, zero value otherwise.
func (o *SdtmClassDatasetsLinks) GetDatasets() []SdtmDatasetRefElement {
	if o == nil || IsNil(o.Datasets) {
		var ret []SdtmDatasetRefElement
		return ret
	}
	return o.Datasets
}

// GetDatasetsOk returns a tuple with the Datasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmClassDatasetsLinks) GetDatasetsOk() ([]SdtmDatasetRefElement, bool) {
	if o == nil || IsNil(o.Datasets) {
		return nil, false
	}
	return o.Datasets, true
}

// HasDatasets returns a boolean if a field has been set.
func (o *SdtmClassDatasetsLinks) HasDatasets() bool {
	if o != nil && !IsNil(o.Datasets) {
		return true
	}

	return false
}

// SetDatasets gets a reference to the given []SdtmDatasetRefElement and assigns it to the Datasets field.
func (o *SdtmClassDatasetsLinks) SetDatasets(v []SdtmDatasetRefElement) {
	o.Datasets = v
}

func (o SdtmClassDatasetsLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdtmClassDatasetsLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.ParentProduct) {
		toSerialize["parentProduct"] = o.ParentProduct
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	if !IsNil(o.Datasets) {
		toSerialize["datasets"] = o.Datasets
	}
	return toSerialize, nil
}

type NullableSdtmClassDatasetsLinks struct {
	value *SdtmClassDatasetsLinks
	isSet bool
}

func (v NullableSdtmClassDatasetsLinks) Get() *SdtmClassDatasetsLinks {
	return v.value
}

func (v *NullableSdtmClassDatasetsLinks) Set(val *SdtmClassDatasetsLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSdtmClassDatasetsLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSdtmClassDatasetsLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdtmClassDatasetsLinks(val *SdtmClassDatasetsLinks) *NullableSdtmClassDatasetsLinks {
	return &NullableSdtmClassDatasetsLinks{value: val, isSet: true}
}

func (v NullableSdtmClassDatasetsLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdtmClassDatasetsLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


