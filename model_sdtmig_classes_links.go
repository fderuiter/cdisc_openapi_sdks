/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SdtmigClassesLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdtmigClassesLinks{}

// SdtmigClassesLinks struct for SdtmigClassesLinks
type SdtmigClassesLinks struct {
	Self *SdtmigClassesRef `json:"self,omitempty"`
	PriorVersion *SdtmigClassesRef `json:"priorVersion,omitempty"`
	Classes []SdtmigClassRefElement `json:"classes,omitempty"`
}

// NewSdtmigClassesLinks instantiates a new SdtmigClassesLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdtmigClassesLinks() *SdtmigClassesLinks {
	this := SdtmigClassesLinks{}
	return &this
}

// NewSdtmigClassesLinksWithDefaults instantiates a new SdtmigClassesLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdtmigClassesLinksWithDefaults() *SdtmigClassesLinks {
	this := SdtmigClassesLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SdtmigClassesLinks) GetSelf() SdtmigClassesRef {
	if o == nil || IsNil(o.Self) {
		var ret SdtmigClassesRef
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigClassesLinks) GetSelfOk() (*SdtmigClassesRef, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SdtmigClassesLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given SdtmigClassesRef and assigns it to the Self field.
func (o *SdtmigClassesLinks) SetSelf(v SdtmigClassesRef) {
	o.Self = &v
}

// GetPriorVersion returns the PriorVersion field value if set, zero value otherwise.
func (o *SdtmigClassesLinks) GetPriorVersion() SdtmigClassesRef {
	if o == nil || IsNil(o.PriorVersion) {
		var ret SdtmigClassesRef
		return ret
	}
	return *o.PriorVersion
}

// GetPriorVersionOk returns a tuple with the PriorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigClassesLinks) GetPriorVersionOk() (*SdtmigClassesRef, bool) {
	if o == nil || IsNil(o.PriorVersion) {
		return nil, false
	}
	return o.PriorVersion, true
}

// HasPriorVersion returns a boolean if a field has been set.
func (o *SdtmigClassesLinks) HasPriorVersion() bool {
	if o != nil && !IsNil(o.PriorVersion) {
		return true
	}

	return false
}

// SetPriorVersion gets a reference to the given SdtmigClassesRef and assigns it to the PriorVersion field.
func (o *SdtmigClassesLinks) SetPriorVersion(v SdtmigClassesRef) {
	o.PriorVersion = &v
}

// GetClasses returns the Classes field value if set, zero value otherwise.
func (o *SdtmigClassesLinks) GetClasses() []SdtmigClassRefElement {
	if o == nil || IsNil(o.Classes) {
		var ret []SdtmigClassRefElement
		return ret
	}
	return o.Classes
}

// GetClassesOk returns a tuple with the Classes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SdtmigClassesLinks) GetClassesOk() ([]SdtmigClassRefElement, bool) {
	if o == nil || IsNil(o.Classes) {
		return nil, false
	}
	return o.Classes, true
}

// HasClasses returns a boolean if a field has been set.
func (o *SdtmigClassesLinks) HasClasses() bool {
	if o != nil && !IsNil(o.Classes) {
		return true
	}

	return false
}

// SetClasses gets a reference to the given []SdtmigClassRefElement and assigns it to the Classes field.
func (o *SdtmigClassesLinks) SetClasses(v []SdtmigClassRefElement) {
	o.Classes = v
}

func (o SdtmigClassesLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdtmigClassesLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.PriorVersion) {
		toSerialize["priorVersion"] = o.PriorVersion
	}
	if !IsNil(o.Classes) {
		toSerialize["classes"] = o.Classes
	}
	return toSerialize, nil
}

type NullableSdtmigClassesLinks struct {
	value *SdtmigClassesLinks
	isSet bool
}

func (v NullableSdtmigClassesLinks) Get() *SdtmigClassesLinks {
	return v.value
}

func (v *NullableSdtmigClassesLinks) Set(val *SdtmigClassesLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSdtmigClassesLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSdtmigClassesLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdtmigClassesLinks(val *SdtmigClassesLinks) *NullableSdtmigClassesLinks {
	return &NullableSdtmigClassesLinks{value: val, isSet: true}
}

func (v NullableSdtmigClassesLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdtmigClassesLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


