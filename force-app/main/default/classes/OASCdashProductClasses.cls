/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCdashProductClasses
 */
public class OASCdashProductClasses implements OAS.MappedProperties {
    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get source
     * @return source
     */
    public String source { get; set; }

    /**
     * Get effectiveDate
     * @return effectiveDate
     */
    public String effectiveDate { get; set; }

    /**
     * Get registrationStatus
     * @return registrationStatus
     */
    public String registrationStatus { get; set; }

    /**
     * Get version
     * @return version
     */
    public String version { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASCdashProductClassesLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCdashProductClasses getExample() {
        OASCdashProductClasses cdashProductClasses = new OASCdashProductClasses();
          cdashProductClasses.name = 'CDASH Model v1.1';
          cdashProductClasses.label = 'Clinical Data Acquisition Standards Harmonization Model Version 1.1';
          cdashProductClasses.description = 'The Clinical Data Acquisition Standards Harmonization (CDASH) Model describes the foundational structure for the organization, naming, and description of variables and associated attributes to support data collection in clinical trials. The CDASH Model provides naming conventions for the CDASH Implementation Guide (CDASHIG) variables along with additional metadata to help facilitate mapping collected data to their respective SDTM Implementation Guide (SDTMIG) variables.';
          cdashProductClasses.source = 'Prepared by the CDISC CDASH Team';
          cdashProductClasses.effectiveDate = '2019-11-01';
          cdashProductClasses.registrationStatus = 'Final';
          cdashProductClasses.version = '1.1';
          cdashProductClasses.links = OASCdashProductClassesLinks.getExample();
        return cdashProductClasses;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCdashProductClasses) {           
            OASCdashProductClasses cdashProductClasses = (OASCdashProductClasses) obj;
            return this.name == cdashProductClasses.name
                && this.label == cdashProductClasses.label
                && this.description == cdashProductClasses.description
                && this.source == cdashProductClasses.source
                && this.effectiveDate == cdashProductClasses.effectiveDate
                && this.registrationStatus == cdashProductClasses.registrationStatus
                && this.version == cdashProductClasses.version
                && this.links == cdashProductClasses.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (source == null ? 0 : System.hashCode(source));
        hashCode = (17 * hashCode) + (effectiveDate == null ? 0 : System.hashCode(effectiveDate));
        hashCode = (17 * hashCode) + (registrationStatus == null ? 0 : System.hashCode(registrationStatus));
        hashCode = (17 * hashCode) + (version == null ? 0 : System.hashCode(version));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

