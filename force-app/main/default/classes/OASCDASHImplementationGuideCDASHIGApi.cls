/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASCDASHImplementationGuideCDASHIGApi {
    OASClient client;

    public OASCDASHImplementationGuideCDASHIGApi(OASClient client) {
        this.client = client;
    }

    public OASCDASHImplementationGuideCDASHIGApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * Get CDASHIG Class Domain List
     * @param version CDISC Library Product Version (required)
     * @param propertyClass CDASHIG Class Identifier (required)
     * @return OASCdashigClassDomains
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigClassDomains mdrCdashigVersionClassesClassDomainsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigClassDomains) client.invoke(
            'GET', '/mdr/cdashig/{version}/classes/{class}/domains', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigClassDomains.class
        );
    }
    /**
     * 
     * Get CDASHIG Class
     * @param version CDISC Library Product Version (required)
     * @param propertyClass CDASHIG Class Identifier (required)
     * @return OASCdashigClass
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigClass mdrCdashigVersionClassesClassGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigClass) client.invoke(
            'GET', '/mdr/cdashig/{version}/classes/{class}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigClass.class
        );
    }
    /**
     * 
     * Get CDASHIG Class Scenario List
     * @param version CDISC Library Product Version (required)
     * @param propertyClass CDASHIG Class Identifier (required)
     * @return OASCdashigClassScenarios
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigClassScenarios mdrCdashigVersionClassesClassScenariosGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigClassScenarios) client.invoke(
            'GET', '/mdr/cdashig/{version}/classes/{class}/scenarios', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigClassScenarios.class
        );
    }
    /**
     * 
     * Get CDASHIG Class List
     * @param version CDISC Library Product Version (required)
     * @return OASCdashigProductClasses
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigProductClasses mdrCdashigVersionClassesGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigProductClasses) client.invoke(
            'GET', '/mdr/cdashig/{version}/classes', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigProductClasses.class
        );
    }
    /**
     * 
     * Get CDASHIG Domain Field
     * @param version CDISC Library Product Version (required)
     * @param domain CDASHIG Domain Identifier (required)
     * @param field CDASHIG Field Identifier (required)
     * @return OASCdashigDomainField
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigDomainField mdrCdashigVersionDomainsDomainFieldsFieldGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('domain'), 'domain');
        client.assertNotNull(params.get('field'), 'field');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigDomainField) client.invoke(
            'GET', '/mdr/cdashig/{version}/domains/{domain}/fields/{field}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'domain' => (String) params.get('domain'),
                'field' => (String) params.get('field')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigDomainField.class
        );
    }
    /**
     * 
     * Get CDASHIG Domain Field List
     * @param version CDISC Library Product Version (required)
     * @param domain CDASHIG Domain Identifier (required)
     * @return OASCdashigDomainFields
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigDomainFields mdrCdashigVersionDomainsDomainFieldsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('domain'), 'domain');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigDomainFields) client.invoke(
            'GET', '/mdr/cdashig/{version}/domains/{domain}/fields', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'domain' => (String) params.get('domain')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigDomainFields.class
        );
    }
    /**
     * 
     * Get CDASHIG Domain
     * @param version CDISC Library Product Version (required)
     * @param domain CDASHIG Domain Identifier (required)
     * @return OASCdashigDomain
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigDomain mdrCdashigVersionDomainsDomainGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('domain'), 'domain');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigDomain) client.invoke(
            'GET', '/mdr/cdashig/{version}/domains/{domain}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'domain' => (String) params.get('domain')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigDomain.class
        );
    }
    /**
     * 
     * Get CDASHIG Domain List
     * @param version CDISC Library Product Version (required)
     * @return OASCdashigProductDomains
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigProductDomains mdrCdashigVersionDomainsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigProductDomains) client.invoke(
            'GET', '/mdr/cdashig/{version}/domains', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigProductDomains.class
        );
    }
    /**
     * 
     * Get CDASHIG Product
     * @param version CDISC Library Product Version (required)
     * @return OASCdashigProduct
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigProduct mdrCdashigVersionGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigProduct) client.invoke(
            'GET', '/mdr/cdashig/{version}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigProduct.class
        );
    }
    /**
     * 
     * Get CDASHIG Scenario Field
     * @param version CDISC Library Product Version (required)
     * @param domain CDASHIG Domain Identifier (required)
     * @param scenario CDASHIG Scenario Identifier (required)
     * @param field CDASHIG Field Identifier (required)
     * @return OASCdashigScenarioField
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigScenarioField mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('domain'), 'domain');
        client.assertNotNull(params.get('scenario'), 'scenario');
        client.assertNotNull(params.get('field'), 'field');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigScenarioField) client.invoke(
            'GET', '/mdr/cdashig/{version}/scenarios/{domain}.{scenario}/fields/{field}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'domain' => (String) params.get('domain'),
                'scenario' => (String) params.get('scenario'),
                'field' => (String) params.get('field')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigScenarioField.class
        );
    }
    /**
     * 
     * Get CDASHIG Scenario Field List
     * @param version CDISC Library Product Version (required)
     * @param domain CDASHIG Domain Identifier (required)
     * @param scenario CDASHIG Scenario Identifier (required)
     * @return OASCdashigScenarioFields
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigScenarioFields mdrCdashigVersionScenariosDomainScenarioFieldsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('domain'), 'domain');
        client.assertNotNull(params.get('scenario'), 'scenario');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigScenarioFields) client.invoke(
            'GET', '/mdr/cdashig/{version}/scenarios/{domain}.{scenario}/fields', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'domain' => (String) params.get('domain'),
                'scenario' => (String) params.get('scenario')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigScenarioFields.class
        );
    }
    /**
     * 
     * Get CDASHIG Scenario
     * @param version CDISC Library Product Version (required)
     * @param domain CDASHIG Domain Identifier (required)
     * @param scenario CDASHIG Scenario Identifier (required)
     * @return OASCdashigScenario
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigScenario mdrCdashigVersionScenariosDomainScenarioGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('domain'), 'domain');
        client.assertNotNull(params.get('scenario'), 'scenario');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigScenario) client.invoke(
            'GET', '/mdr/cdashig/{version}/scenarios/{domain}.{scenario}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'domain' => (String) params.get('domain'),
                'scenario' => (String) params.get('scenario')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigScenario.class
        );
    }
    /**
     * 
     * Get CDASHIG Scenario List
     * @param version CDISC Library Product Version (required)
     * @return OASCdashigProductScenarios
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashigProductScenarios mdrCdashigVersionScenariosGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashigProductScenarios) client.invoke(
            'GET', '/mdr/cdashig/{version}/scenarios', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashigProductScenarios.class
        );
    }
    /**
     * 
     * Get Root CDASHIG Domain Field
     * @param domain CDASHIG Domain Identifier (required)
     * @param field CDASHIG Field Identifier (required)
     * @return OASRootCdashigDomainField
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRootCdashigDomainField mdrRootCdashigDomainsDomainFieldsFieldGet(Map<String, Object> params) {
        client.assertNotNull(params.get('domain'), 'domain');
        client.assertNotNull(params.get('field'), 'field');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRootCdashigDomainField) client.invoke(
            'GET', '/mdr/root/cdashig/domains/{domain}/fields/{field}', '',
            query, form,
            new Map<String, Object>{
                'domain' => (String) params.get('domain'),
                'field' => (String) params.get('field')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASRootCdashigDomainField.class
        );
    }
    /**
     * 
     * Get Root CDASHIG Scenario Field
     * @param domain CDASHIG Domain Identifier (required)
     * @param scenario CDASHIG Scenario Identifier (required)
     * @param field CDASHIG Field Identifier (required)
     * @return OASRootCdashigScenarioField
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRootCdashigScenarioField mdrRootCdashigScenariosDomainScenarioFieldsFieldGet(Map<String, Object> params) {
        client.assertNotNull(params.get('domain'), 'domain');
        client.assertNotNull(params.get('scenario'), 'scenario');
        client.assertNotNull(params.get('field'), 'field');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRootCdashigScenarioField) client.invoke(
            'GET', '/mdr/root/cdashig/scenarios/{domain}.{scenario}/fields/{field}', '',
            query, form,
            new Map<String, Object>{
                'domain' => (String) params.get('domain'),
                'scenario' => (String) params.get('scenario'),
                'field' => (String) params.get('field')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASRootCdashigScenarioField.class
        );
    }
}
