/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASControlledTerminologyCTApi {
    OASClient client;

    public OASControlledTerminologyCTApi(OASClient client) {
        this.client = client;
    }

    public OASControlledTerminologyCTApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * Get CDISC Library CT Package List
     * @return OASCtPackages
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCtPackages mdrCtPackagesGet() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCtPackages) client.invoke(
            'GET', '/mdr/ct/packages', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCtPackages.class
        );
    }
    /**
     * 
     * Get CDISC Library CT Package Codelist
     * @param r_package CT Package Identifier (required)
     * @param codelist CT Codelist Identifier (required)
     * @return OASCtCodelist
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCtCodelist mdrCtPackagesPackageCodelistsCodelistGet(Map<String, Object> params) {
        client.assertNotNull(params.get('r_package'), 'r_package');
        client.assertNotNull(params.get('codelist'), 'codelist');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCtCodelist) client.invoke(
            'GET', '/mdr/ct/packages/{package}/codelists/{codelist}', '',
            query, form,
            new Map<String, Object>{
                'package' => (String) params.get('r_package'),
                'codelist' => (String) params.get('codelist')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCtCodelist.class
        );
    }
    /**
     * 
     * Get CDISC Library CT Package Codelist Term List
     * @param r_package CT Package Identifier (required)
     * @param codelist CT Codelist Identifier (required)
     * @return OASCtCodelistTerms
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCtCodelistTerms mdrCtPackagesPackageCodelistsCodelistTermsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('r_package'), 'r_package');
        client.assertNotNull(params.get('codelist'), 'codelist');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCtCodelistTerms) client.invoke(
            'GET', '/mdr/ct/packages/{package}/codelists/{codelist}/terms', '',
            query, form,
            new Map<String, Object>{
                'package' => (String) params.get('r_package'),
                'codelist' => (String) params.get('codelist')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCtCodelistTerms.class
        );
    }
    /**
     * 
     * Get CDISC Library CT Package Codelist Term
     * @param r_package CT Package Product Identifier (required)
     * @param codelist CT Codelist Identifier (required)
     * @param term CT Codelist Term Identifier (required)
     * @return OASCtTerm
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCtTerm mdrCtPackagesPackageCodelistsCodelistTermsTermGet(Map<String, Object> params) {
        client.assertNotNull(params.get('r_package'), 'r_package');
        client.assertNotNull(params.get('codelist'), 'codelist');
        client.assertNotNull(params.get('term'), 'term');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCtTerm) client.invoke(
            'GET', '/mdr/ct/packages/{package}/codelists/{codelist}/terms/{term}', '',
            query, form,
            new Map<String, Object>{
                'package' => (String) params.get('r_package'),
                'codelist' => (String) params.get('codelist'),
                'term' => (String) params.get('term')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCtTerm.class
        );
    }
    /**
     * 
     * Get CDISC Library CT Package Codelist List
     * @param r_package CT Package Identifier (required)
     * @return OASCtPackageCodelists
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCtPackageCodelists mdrCtPackagesPackageCodelistsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('r_package'), 'r_package');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCtPackageCodelists) client.invoke(
            'GET', '/mdr/ct/packages/{package}/codelists', '',
            query, form,
            new Map<String, Object>{
                'package' => (String) params.get('r_package')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCtPackageCodelists.class
        );
    }
    /**
     * 
     * Get CDISC Library CT Package
     * @param product CT Package Product Identifier (required)
     * @return OASCtPackage
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCtPackage mdrCtPackagesProductGet(Map<String, Object> params) {
        client.assertNotNull(params.get('product'), 'product');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCtPackage) client.invoke(
            'GET', '/mdr/ct/packages/{product}', '',
            query, form,
            new Map<String, Object>{
                'product' => (String) params.get('product')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCtPackage.class
        );
    }
    /**
     * 
     * Get CDISC Library Root CT Codelist
     * @param productGroup CT Product Group Identifier (required)
     * @param codelist CT Codelist Identifier (required)
     * @return OASRootCtCodelist
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRootCtCodelist mdrRootCtProductGroupCodelistsCodelistGet(Map<String, Object> params) {
        client.assertNotNull(params.get('productGroup'), 'productGroup');
        client.assertNotNull(params.get('codelist'), 'codelist');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRootCtCodelist) client.invoke(
            'GET', '/mdr/root/ct/{productGroup}/codelists/{codelist}', '',
            query, form,
            new Map<String, Object>{
                'productGroup' => (String) params.get('productGroup'),
                'codelist' => (String) params.get('codelist')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASRootCtCodelist.class
        );
    }
    /**
     * 
     * Get CDISC Library Root CT Term
     * @param productGroup CT Product Group Identifier (required)
     * @param codelist CT Codelist Identifier (required)
     * @param term CT Codelist Term Identifier (required)
     * @return OASRootCtTerm
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRootCtTerm mdrRootCtProductGroupCodelistsCodelistTermsTermGet(Map<String, Object> params) {
        client.assertNotNull(params.get('productGroup'), 'productGroup');
        client.assertNotNull(params.get('codelist'), 'codelist');
        client.assertNotNull(params.get('term'), 'term');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRootCtTerm) client.invoke(
            'GET', '/mdr/root/ct/{productGroup}/codelists/{codelist}/terms/{term}', '',
            query, form,
            new Map<String, Object>{
                'productGroup' => (String) params.get('productGroup'),
                'codelist' => (String) params.get('codelist'),
                'term' => (String) params.get('term')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASRootCtTerm.class
        );
    }
}
