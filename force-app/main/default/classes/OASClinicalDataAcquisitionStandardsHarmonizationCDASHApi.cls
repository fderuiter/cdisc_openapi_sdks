/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASClinicalDataAcquisitionStandardsHarmonizationCDASHApi {
    OASClient client;

    public OASClinicalDataAcquisitionStandardsHarmonizationCDASHApi(OASClient client) {
        this.client = client;
    }

    public OASClinicalDataAcquisitionStandardsHarmonizationCDASHApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * Get CDASH Class Domain List
     * @param version CDISC Library Product Version (required)
     * @param propertyClass CDASH Class Identifier (required)
     * @return OASCdashClassDomains
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashClassDomains mdrCdashVersionClassesClassDomainsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashClassDomains) client.invoke(
            'GET', '/mdr/cdash/{version}/classes/{class}/domains', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashClassDomains.class
        );
    }
    /**
     * 
     * Get CDASH Class Field
     * @param version CDISC Library Product Version (required)
     * @param propertyClass CDASH Class Identifier (required)
     * @param field CDASH Field Identifier (required)
     * @return OASCdashClassField
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashClassField mdrCdashVersionClassesClassFieldsFieldGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        client.assertNotNull(params.get('field'), 'field');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashClassField) client.invoke(
            'GET', '/mdr/cdash/{version}/classes/{class}/fields/{field}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass'),
                'field' => (String) params.get('field')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashClassField.class
        );
    }
    /**
     * 
     * Get CDASH Class
     * @param version CDISC Library Product Version (required)
     * @param propertyClass CDASH Class Identifier (required)
     * @return OASCdashClass
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashClass mdrCdashVersionClassesClassGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashClass) client.invoke(
            'GET', '/mdr/cdash/{version}/classes/{class}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashClass.class
        );
    }
    /**
     * 
     * Get CDASH Class List
     * @param version CDISC Library Product Version (required)
     * @return OASCdashProductClasses
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashProductClasses mdrCdashVersionClassesGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashProductClasses) client.invoke(
            'GET', '/mdr/cdash/{version}/classes', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashProductClasses.class
        );
    }
    /**
     * 
     * Get CDASH Domain Field
     * @param version CDISC Library Product Version (required)
     * @param domain CDASH Domain Identifier (required)
     * @param field CDASH Field Identifier (required)
     * @return OASCdashDomainField
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashDomainField mdrCdashVersionDomainsDomainFieldsFieldGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('domain'), 'domain');
        client.assertNotNull(params.get('field'), 'field');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashDomainField) client.invoke(
            'GET', '/mdr/cdash/{version}/domains/{domain}/fields/{field}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'domain' => (String) params.get('domain'),
                'field' => (String) params.get('field')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashDomainField.class
        );
    }
    /**
     * 
     * Get CDASH Domain Field List
     * @param version CDISC Library Product Version (required)
     * @param domain CDASH Domain Identifier (required)
     * @return OASCdashDomainFields
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashDomainFields mdrCdashVersionDomainsDomainFieldsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('domain'), 'domain');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashDomainFields) client.invoke(
            'GET', '/mdr/cdash/{version}/domains/{domain}/fields', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'domain' => (String) params.get('domain')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashDomainFields.class
        );
    }
    /**
     * 
     * Get CDASH Domain
     * @param version CDISC Library Product Version (required)
     * @param domain CDASH Domain Identifier (required)
     * @return OASCdashDomain
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashDomain mdrCdashVersionDomainsDomainGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('domain'), 'domain');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashDomain) client.invoke(
            'GET', '/mdr/cdash/{version}/domains/{domain}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'domain' => (String) params.get('domain')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashDomain.class
        );
    }
    /**
     * 
     * Get CDASH Domain List
     * @param version CDISC Library Product Version (required)
     * @return OASCdashProductDomains
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashProductDomains mdrCdashVersionDomainsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashProductDomains) client.invoke(
            'GET', '/mdr/cdash/{version}/domains', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashProductDomains.class
        );
    }
    /**
     * 
     * Get CDASH Product
     * @param version CDISC Library Product Version (required)
     * @return OASCdashProduct
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCdashProduct mdrCdashVersionGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCdashProduct) client.invoke(
            'GET', '/mdr/cdash/{version}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASCdashProduct.class
        );
    }
    /**
     * 
     * Get Root CDASH Class Field
     * @param propertyClass CDASH Class Identifier (required)
     * @param field CDASH Field Identifier (required)
     * @return OASRootCdashClassField
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRootCdashClassField mdrRootCdashClassesClassFieldsFieldGet(Map<String, Object> params) {
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        client.assertNotNull(params.get('field'), 'field');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRootCdashClassField) client.invoke(
            'GET', '/mdr/root/cdash/classes/{class}/fields/{field}', '',
            query, form,
            new Map<String, Object>{
                'class' => (String) params.get('propertyClass'),
                'field' => (String) params.get('field')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASRootCdashClassField.class
        );
    }
    /**
     * 
     * Get Root CDASH Domain Field
     * @param domain CDASH Domain Identifier (required)
     * @param field CDASH Field Identifier (required)
     * @return OASRootCdashDomainField
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRootCdashDomainField mdrRootCdashDomainsDomainFieldsFieldGet(Map<String, Object> params) {
        client.assertNotNull(params.get('domain'), 'domain');
        client.assertNotNull(params.get('field'), 'field');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRootCdashDomainField) client.invoke(
            'GET', '/mdr/root/cdash/domains/{domain}/fields/{field}', '',
            query, form,
            new Map<String, Object>{
                'domain' => (String) params.get('domain'),
                'field' => (String) params.get('field')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASRootCdashDomainField.class
        );
    }
}
