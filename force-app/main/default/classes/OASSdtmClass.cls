/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSdtmClass
 */
public class OASSdtmClass implements OAS.MappedProperties {
    /**
     * Get ordinal
     * @return ordinal
     */
    public String ordinal { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASSdtmClassLinks links { get; set; }

    /**
     * Get classVariables
     * @return classVariables
     */
    public List<OASSdtmClassVariable> classVariables { get; set; }

    /**
     * Get datasets
     * @return datasets
     */
    public List<OASSdtmDataset> datasets { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASSdtmClass() {
        classVariables = new List<OASSdtmClassVariable>();
        datasets = new List<OASSdtmDataset>();
    }

    public static OASSdtmClass getExample() {
        OASSdtmClass sdtmClass = new OASSdtmClass();
          sdtmClass.ordinal = '1';
          sdtmClass.name = 'General Observations';
          sdtmClass.label = 'General Observation Class';
          sdtmClass.description = 'The majority of observations collected during a study can be divided among three general classes: Interventions, Events, or Findings.  Datasets based on any of the general observation classes share a set of common Identifier and Timing variables. As a general rule, any valid Identifier or Timing variable is permissible for use in any submission dataset based on a general observation class. (Source: SDTM v1.8, Section 2.2)';
          sdtmClass.links = OASSdtmClassLinks.getExample();
          sdtmClass.classVariables = new List<OASSdtmClassVariable>{OASSdtmClassVariable.getExample()};
          sdtmClass.datasets = new List<OASSdtmDataset>{OASSdtmDataset.getExample()};
        return sdtmClass;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSdtmClass) {           
            OASSdtmClass sdtmClass = (OASSdtmClass) obj;
            return this.ordinal == sdtmClass.ordinal
                && this.name == sdtmClass.name
                && this.label == sdtmClass.label
                && this.description == sdtmClass.description
                && this.links == sdtmClass.links
                && this.classVariables == sdtmClass.classVariables
                && this.datasets == sdtmClass.datasets;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (ordinal == null ? 0 : System.hashCode(ordinal));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        hashCode = (17 * hashCode) + (classVariables == null ? 0 : System.hashCode(classVariables));
        hashCode = (17 * hashCode) + (datasets == null ? 0 : System.hashCode(datasets));
        return hashCode;
    }
}

