/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSendigDatasets
 */
public class OASSendigDatasets implements OAS.MappedProperties {
    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get source
     * @return source
     */
    public String source { get; set; }

    /**
     * Get effectiveDate
     * @return effectiveDate
     */
    public String effectiveDate { get; set; }

    /**
     * Get registrationStatus
     * @return registrationStatus
     */
    public String registrationStatus { get; set; }

    /**
     * Get version
     * @return version
     */
    public String version { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASSendigDatasetsLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASSendigDatasets getExample() {
        OASSendigDatasets sendigDatasets = new OASSendigDatasets();
          sendigDatasets.name = 'SENDIG v3.1';
          sendigDatasets.label = 'Standard for Exchange of Nonclinical Data Implementation Guide: Nonclinical Studies Version 3.1 (Final)';
          sendigDatasets.description = 'The SENDIG is intended to guide the organization, structure, and format of standard nonclinical tabulation datasets for interchange between organizations such as sponsors and CROs, and for submission to regulatory authorities such as the U.S. Food and Drug Administration (FDA).';
          sendigDatasets.source = 'Prepared by the CDISC Standard for Exchange of Nonclinical Data Team';
          sendigDatasets.effectiveDate = '2016-06-27';
          sendigDatasets.registrationStatus = 'Final';
          sendigDatasets.version = '3.1';
          sendigDatasets.links = OASSendigDatasetsLinks.getExample();
        return sendigDatasets;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSendigDatasets) {           
            OASSendigDatasets sendigDatasets = (OASSendigDatasets) obj;
            return this.name == sendigDatasets.name
                && this.label == sendigDatasets.label
                && this.description == sendigDatasets.description
                && this.source == sendigDatasets.source
                && this.effectiveDate == sendigDatasets.effectiveDate
                && this.registrationStatus == sendigDatasets.registrationStatus
                && this.version == sendigDatasets.version
                && this.links == sendigDatasets.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (source == null ? 0 : System.hashCode(source));
        hashCode = (17 * hashCode) + (effectiveDate == null ? 0 : System.hashCode(effectiveDate));
        hashCode = (17 * hashCode) + (registrationStatus == null ? 0 : System.hashCode(registrationStatus));
        hashCode = (17 * hashCode) + (version == null ? 0 : System.hashCode(version));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

