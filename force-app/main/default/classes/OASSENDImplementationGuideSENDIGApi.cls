/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASSENDImplementationGuideSENDIGApi {
    OASClient client;

    public OASSENDImplementationGuideSENDIGApi(OASClient client) {
        this.client = client;
    }

    public OASSENDImplementationGuideSENDIGApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * Get Root SENDIG Dataset Variable
     * @param dataset SENDIG Dataset Identifier (required)
     * @param var SENDIG Variable Identifier (required)
     * @return OASRootSendigDatasetVariable
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRootSendigDatasetVariable mdrRootSendigDatasetsDatasetVariablesVarGet(Map<String, Object> params) {
        client.assertNotNull(params.get('dataset'), 'dataset');
        client.assertNotNull(params.get('var'), 'var');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRootSendigDatasetVariable) client.invoke(
            'GET', '/mdr/root/sendig/datasets/{dataset}/variables/{var}', '',
            query, form,
            new Map<String, Object>{
                'dataset' => (String) params.get('dataset'),
                'var' => (String) params.get('var')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASRootSendigDatasetVariable.class
        );
    }
    /**
     * 
     * Get SENDIG Class Dataset List
     * @param version CDISC Library Product Version (required)
     * @param propertyClass SENDIG Class Identifier (required)
     * @return OASSendigClassDatasets
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSendigClassDatasets mdrSendigVersionClassesClassDatasetsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSendigClassDatasets) client.invoke(
            'GET', '/mdr/sendig/{version}/classes/{class}/datasets', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSendigClassDatasets.class
        );
    }
    /**
     * 
     * Get SENDIG Class
     * @param version CDISC Library Product Version (required)
     * @param propertyClass SENDIG Class Identifier (required)
     * @return OASSendigClass
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSendigClass mdrSendigVersionClassesClassGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSendigClass) client.invoke(
            'GET', '/mdr/sendig/{version}/classes/{class}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSendigClass.class
        );
    }
    /**
     * 
     * Get SENDIG Class List
     * @param version CDISC Library Product Version (required)
     * @return OASSendigClasses
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSendigClasses mdrSendigVersionClassesGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSendigClasses) client.invoke(
            'GET', '/mdr/sendig/{version}/classes', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSendigClasses.class
        );
    }
    /**
     * 
     * Get SENDIG Dataset
     * @param version CDISC Library Product Version (required)
     * @param dataset SENDIG Class Identifier (required)
     * @return OASSendigDataset
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSendigDataset mdrSendigVersionDatasetsDatasetGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('dataset'), 'dataset');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSendigDataset) client.invoke(
            'GET', '/mdr/sendig/{version}/datasets/{dataset}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'dataset' => (String) params.get('dataset')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSendigDataset.class
        );
    }
    /**
     * 
     * Get SENDIG Dataset Variable List
     * @param version CDISC Library Product Version (required)
     * @param dataset SENDIG Class Identifier (required)
     * @return OASSendigDatasetVariables
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSendigDatasetVariables mdrSendigVersionDatasetsDatasetVariablesGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('dataset'), 'dataset');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSendigDatasetVariables) client.invoke(
            'GET', '/mdr/sendig/{version}/datasets/{dataset}/variables', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'dataset' => (String) params.get('dataset')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSendigDatasetVariables.class
        );
    }
    /**
     * 
     * Get SENDIG Dataset Variable
     * @param version CDISC Library Product Version (required)
     * @param dataset SENDIG Class Identifier (required)
     * @param var SENDIG Variable Identifier (required)
     * @return OASSendigDatasetVariable
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSendigDatasetVariable mdrSendigVersionDatasetsDatasetVariablesVarGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('dataset'), 'dataset');
        client.assertNotNull(params.get('var'), 'var');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSendigDatasetVariable) client.invoke(
            'GET', '/mdr/sendig/{version}/datasets/{dataset}/variables/{var}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'dataset' => (String) params.get('dataset'),
                'var' => (String) params.get('var')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSendigDatasetVariable.class
        );
    }
    /**
     * 
     * Get SENDIG Dataset List
     * @param version CDISC Library Product Version (required)
     * @return OASSendigDatasets
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSendigDatasets mdrSendigVersionDatasetsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSendigDatasets) client.invoke(
            'GET', '/mdr/sendig/{version}/datasets', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSendigDatasets.class
        );
    }
    /**
     * 
     * Get SENDIG product
     * @param version CDISC Library Product Version (required)
     * @return OASSendigProduct
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSendigProduct mdrSendigVersionGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSendigProduct) client.invoke(
            'GET', '/mdr/sendig/{version}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSendigProduct.class
        );
    }
}
