/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASStudyDataTabulationModelSDTMApi {
    OASClient client;

    public OASStudyDataTabulationModelSDTMApi(OASClient client) {
        this.client = client;
    }

    public OASStudyDataTabulationModelSDTMApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * Get Root of SDTM Class Variable
     * @param propertyClass SDTM Class Identifier (required)
     * @param var SDTM Variable Identifier (required)
     * @return OASRootSdtmClassVariable
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRootSdtmClassVariable mdrRootSdtmClassesClassVariablesVarGet(Map<String, Object> params) {
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        client.assertNotNull(params.get('var'), 'var');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRootSdtmClassVariable) client.invoke(
            'GET', '/mdr/root/sdtm/classes/{class}/variables/{var}', '',
            query, form,
            new Map<String, Object>{
                'class' => (String) params.get('propertyClass'),
                'var' => (String) params.get('var')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASRootSdtmClassVariable.class
        );
    }
    /**
     * 
     * Get Root SDTM Dataset Variable
     * @param dataset SDTM Dataset Identifier (required)
     * @param var SDTM Variable Identifier (required)
     * @return OASRootSdtmDatasetVariable
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRootSdtmDatasetVariable mdrRootSdtmDatasetsDatasetVariablesVarGet(Map<String, Object> params) {
        client.assertNotNull(params.get('dataset'), 'dataset');
        client.assertNotNull(params.get('var'), 'var');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRootSdtmDatasetVariable) client.invoke(
            'GET', '/mdr/root/sdtm/datasets/{dataset}/variables/{var}', '',
            query, form,
            new Map<String, Object>{
                'dataset' => (String) params.get('dataset'),
                'var' => (String) params.get('var')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASRootSdtmDatasetVariable.class
        );
    }
    /**
     * 
     * Get SDTM Class Dataset List
     * @param version CDISC Library Product Version (required)
     * @param propertyClass SDTM Class Identifier (required)
     * @return OASSdtmClassDatasets
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmClassDatasets mdrSdtmVersionClassesClassDatasetsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmClassDatasets) client.invoke(
            'GET', '/mdr/sdtm/{version}/classes/{class}/datasets', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmClassDatasets.class
        );
    }
    /**
     * 
     * Get SDTM Class
     * @param version CDISC Library Product Version (required)
     * @param propertyClass SDTM Class Identifier (required)
     * @return OASSdtmClass
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmClass mdrSdtmVersionClassesClassGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmClass) client.invoke(
            'GET', '/mdr/sdtm/{version}/classes/{class}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmClass.class
        );
    }
    /**
     * 
     * Get SDTM Class Variable List
     * @param version CDISC Library Product Version (required)
     * @param propertyClass SDTM Class Identifier (required)
     * @return OASSdtmClassVariables
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmClassVariables mdrSdtmVersionClassesClassVariablesGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmClassVariables) client.invoke(
            'GET', '/mdr/sdtm/{version}/classes/{class}/variables', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmClassVariables.class
        );
    }
    /**
     * 
     * Get SDTM Class Variable
     * @param version CDISC Library Product Version (required)
     * @param propertyClass SDTM Class Identifier (required)
     * @param var SDTM Variable Identifier (required)
     * @return OASSdtmClassVariable
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmClassVariable mdrSdtmVersionClassesClassVariablesVarGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('propertyClass'), 'propertyClass');
        client.assertNotNull(params.get('var'), 'var');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmClassVariable) client.invoke(
            'GET', '/mdr/sdtm/{version}/classes/{class}/variables/{var}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'class' => (String) params.get('propertyClass'),
                'var' => (String) params.get('var')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmClassVariable.class
        );
    }
    /**
     * 
     * Get SDTM Class List
     * @param version CDISC Library Product Version (required)
     * @return OASSdtmClasses
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmClasses mdrSdtmVersionClassesGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmClasses) client.invoke(
            'GET', '/mdr/sdtm/{version}/classes', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmClasses.class
        );
    }
    /**
     * 
     * Get SDTM Dataset
     * @param version CDISC Library Product Version (required)
     * @param dataset SDTM Dataset Identifier (required)
     * @return OASSdtmDataset
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmDataset mdrSdtmVersionDatasetsDatasetGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('dataset'), 'dataset');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmDataset) client.invoke(
            'GET', '/mdr/sdtm/{version}/datasets/{dataset}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'dataset' => (String) params.get('dataset')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmDataset.class
        );
    }
    /**
     * 
     * Get SDTM Dataset Variable List
     * @param version CDISC Library Product Version (required)
     * @param dataset SDTM Dataset Identifier (required)
     * @return OASSdtmDatasetVariables
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmDatasetVariables mdrSdtmVersionDatasetsDatasetVariablesGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('dataset'), 'dataset');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmDatasetVariables) client.invoke(
            'GET', '/mdr/sdtm/{version}/datasets/{dataset}/variables', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'dataset' => (String) params.get('dataset')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmDatasetVariables.class
        );
    }
    /**
     * 
     * Get SDTM Dataset Variable
     * @param version CDISC Library Product Version (required)
     * @param dataset SDTM Dataset Identifier (required)
     * @param var SDTM Variable Identifier (required)
     * @return OASSdtmDatasetVariable
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmDatasetVariable mdrSdtmVersionDatasetsDatasetVariablesVarGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('dataset'), 'dataset');
        client.assertNotNull(params.get('var'), 'var');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmDatasetVariable) client.invoke(
            'GET', '/mdr/sdtm/{version}/datasets/{dataset}/variables/{var}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version'),
                'dataset' => (String) params.get('dataset'),
                'var' => (String) params.get('var')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmDatasetVariable.class
        );
    }
    /**
     * 
     * Get SDTM Dataset List
     * @param version CDISC Library Product Version (required)
     * @return OASSdtmDatasets
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmDatasets mdrSdtmVersionDatasetsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmDatasets) client.invoke(
            'GET', '/mdr/sdtm/{version}/datasets', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmDatasets.class
        );
    }
    /**
     * 
     * Get SDTM product
     * @param version CDISC Library Product Version (required)
     * @return OASSdtmProduct
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSdtmProduct mdrSdtmVersionGet(Map<String, Object> params) {
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSdtmProduct) client.invoke(
            'GET', '/mdr/sdtm/{version}', '',
            query, form,
            new Map<String, Object>{
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASSdtmProduct.class
        );
    }
}
