/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSdtmigDatasets
 */
public class OASSdtmigDatasets implements OAS.MappedProperties {
    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get source
     * @return source
     */
    public String source { get; set; }

    /**
     * Get effectiveDate
     * @return effectiveDate
     */
    public String effectiveDate { get; set; }

    /**
     * Get registrationStatus
     * @return registrationStatus
     */
    public String registrationStatus { get; set; }

    /**
     * Get version
     * @return version
     */
    public String version { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASSdtmigDatasetsLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASSdtmigDatasets getExample() {
        OASSdtmigDatasets sdtmigDatasets = new OASSdtmigDatasets();
          sdtmigDatasets.name = 'SDTMIG v3.3';
          sdtmigDatasets.label = 'Study Data Tabulation Model Implementation Guide: Human Clinical Trials Version 3.3 (Final)';
          sdtmigDatasets.description = 'CDISC Version 3.3 (v3.3) Study Data Tabulation Model Implementation Guide for Human Clinical Trials (SDTMIG) is intended to guide the organization, structure, and format of standard clinical trial tabulation datasets submitted to a regulatory authority.';
          sdtmigDatasets.source = 'CDISC Version 3.3 (v3.3) Study Data Tabulation Model Implementation Guide for Human Clinical Trials (SDTMIG) is intended to guide the organization, structure, and format of standard clinical trial tabulation datasets submitted to a regulatory authority.';
          sdtmigDatasets.effectiveDate = '2018-11-20';
          sdtmigDatasets.registrationStatus = 'Final';
          sdtmigDatasets.version = '3.3';
          sdtmigDatasets.links = OASSdtmigDatasetsLinks.getExample();
        return sdtmigDatasets;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSdtmigDatasets) {           
            OASSdtmigDatasets sdtmigDatasets = (OASSdtmigDatasets) obj;
            return this.name == sdtmigDatasets.name
                && this.label == sdtmigDatasets.label
                && this.description == sdtmigDatasets.description
                && this.source == sdtmigDatasets.source
                && this.effectiveDate == sdtmigDatasets.effectiveDate
                && this.registrationStatus == sdtmigDatasets.registrationStatus
                && this.version == sdtmigDatasets.version
                && this.links == sdtmigDatasets.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (source == null ? 0 : System.hashCode(source));
        hashCode = (17 * hashCode) + (effectiveDate == null ? 0 : System.hashCode(effectiveDate));
        hashCode = (17 * hashCode) + (registrationStatus == null ? 0 : System.hashCode(registrationStatus));
        hashCode = (17 * hashCode) + (version == null ? 0 : System.hashCode(version));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

