/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCtCodelist
 */
public class OASCtCodelist implements OAS.MappedProperties {
    /**
     * Get conceptId
     * @return conceptId
     */
    public String conceptId { get; set; }

    /**
     * Get extensible
     * @return extensible
     */
    public String extensible { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get submissionValue
     * @return submissionValue
     */
    public String submissionValue { get; set; }

    /**
     * Get definition
     * @return definition
     */
    public String definition { get; set; }

    /**
     * Get preferredTerm
     * @return preferredTerm
     */
    public String preferredTerm { get; set; }

    /**
     * Get synonyms
     * @return synonyms
     */
    public List<String> synonyms { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASCtCodelistLinks links { get; set; }

    /**
     * Get terms
     * @return terms
     */
    public List<OASCtPackageTerm> terms { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASCtCodelist() {
        synonyms = new List<String>();
        terms = new List<OASCtPackageTerm>();
    }

    public static OASCtCodelist getExample() {
        OASCtCodelist ctCodelist = new OASCtCodelist();
          ctCodelist.conceptId = 'C67154';
          ctCodelist.extensible = 'true';
          ctCodelist.name = 'Laboratory Test Name';
          ctCodelist.submissionValue = 'LBTEST';
          ctCodelist.definition = 'Terminology used for laboratory test names of the CDISC Study Data Tabulation Model.';
          ctCodelist.preferredTerm = 'CDISC SDTM Laboratory Test Name Terminology';
          ctCodelist.synonyms = new List<String>{''};
          ctCodelist.links = OASCtCodelistLinks.getExample();
          ctCodelist.terms = new List<OASCtPackageTerm>{OASCtPackageTerm.getExample()};
        return ctCodelist;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCtCodelist) {           
            OASCtCodelist ctCodelist = (OASCtCodelist) obj;
            return this.conceptId == ctCodelist.conceptId
                && this.extensible == ctCodelist.extensible
                && this.name == ctCodelist.name
                && this.submissionValue == ctCodelist.submissionValue
                && this.definition == ctCodelist.definition
                && this.preferredTerm == ctCodelist.preferredTerm
                && this.synonyms == ctCodelist.synonyms
                && this.links == ctCodelist.links
                && this.terms == ctCodelist.terms;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (conceptId == null ? 0 : System.hashCode(conceptId));
        hashCode = (17 * hashCode) + (extensible == null ? 0 : System.hashCode(extensible));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (submissionValue == null ? 0 : System.hashCode(submissionValue));
        hashCode = (17 * hashCode) + (definition == null ? 0 : System.hashCode(definition));
        hashCode = (17 * hashCode) + (preferredTerm == null ? 0 : System.hashCode(preferredTerm));
        hashCode = (17 * hashCode) + (synonyms == null ? 0 : System.hashCode(synonyms));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        hashCode = (17 * hashCode) + (terms == null ? 0 : System.hashCode(terms));
        return hashCode;
    }
}

