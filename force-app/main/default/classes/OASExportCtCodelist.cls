/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASExportCtCodelist
 */
public class OASExportCtCodelist implements OAS.MappedProperties {
    /**
     * Get code
     * @return code
     */
    public String code { get; set; }

    /**
     * Get codelistCode
     * @return codelistCode
     */
    public String codelistCode { get; set; }

    /**
     * Get codelistExtensibleYesNo
     * @return codelistExtensibleYesNo
     */
    public String codelistExtensibleYesNo { get; set; }

    /**
     * Get codelistName
     * @return codelistName
     */
    public String codelistName { get; set; }

    /**
     * Get cdISCSubmissionValue
     * @return cdISCSubmissionValue
     */
    public String cdISCSubmissionValue { get; set; }

    /**
     * Get cdISCSynonymS
     * @return cdISCSynonymS
     */
    public List<String> cdISCSynonymS { get; set; }

    /**
     * Get cdISCDefinition
     * @return cdISCDefinition
     */
    public String cdISCDefinition { get; set; }

    /**
     * Get ncIPreferredTerm
     * @return ncIPreferredTerm
     */
    public String ncIPreferredTerm { get; set; }

    /**
     * Get standardAndDate
     * @return standardAndDate
     */
    public String standardAndDate { get; set; }

    /**
     * Get 
     * @return 
     */
    public List<OASExportCtTerm>  { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Code' => 'code',
        'Codelist Code' => 'codelistCode',
        'Codelist Extensible (Yes/No)' => 'codelistExtensibleYesNo',
        'Codelist Name' => 'codelistName',
        'CDISC Submission Value' => 'cdISCSubmissionValue',
        'CDISC Synonym(s)' => 'cdISCSynonymS',
        'CDISC Definition' => 'cdISCDefinition',
        'NCI Preferred Term' => 'ncIPreferredTerm',
        'Standard and Date' => 'standardAndDate'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Code' => 'code',
        'Codelist Code' => 'codelistCode',
        'Codelist Extensible (Yes/No)' => 'codelistExtensibleYesNo',
        'Codelist Name' => 'codelistName',
        'CDISC Submission Value' => 'cdISCSubmissionValue',
        'CDISC Synonym(s)' => 'cdISCSynonymS',
        'CDISC Definition' => 'cdISCDefinition',
        'NCI Preferred Term' => 'ncIPreferredTerm',
        'Standard and Date' => 'standardAndDate'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Code' => 'code',
        'Codelist Code' => 'codelistCode',
        'Codelist Extensible (Yes/No)' => 'codelistExtensibleYesNo',
        'Codelist Name' => 'codelistName',
        'CDISC Submission Value' => 'cdISCSubmissionValue',
        'CDISC Synonym(s)' => 'cdISCSynonymS',
        'CDISC Definition' => 'cdISCDefinition',
        'NCI Preferred Term' => 'ncIPreferredTerm',
        'Standard and Date' => 'standardAndDate'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Code' => 'code',
        'Codelist Code' => 'codelistCode',
        'Codelist Extensible (Yes/No)' => 'codelistExtensibleYesNo',
        'Codelist Name' => 'codelistName',
        'CDISC Submission Value' => 'cdISCSubmissionValue',
        'CDISC Synonym(s)' => 'cdISCSynonymS',
        'CDISC Definition' => 'cdISCDefinition',
        'NCI Preferred Term' => 'ncIPreferredTerm',
        'Standard and Date' => 'standardAndDate'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Code' => 'code',
        'Codelist Code' => 'codelistCode',
        'Codelist Extensible (Yes/No)' => 'codelistExtensibleYesNo',
        'Codelist Name' => 'codelistName',
        'CDISC Submission Value' => 'cdISCSubmissionValue',
        'CDISC Synonym(s)' => 'cdISCSynonymS',
        'CDISC Definition' => 'cdISCDefinition',
        'NCI Preferred Term' => 'ncIPreferredTerm',
        'Standard and Date' => 'standardAndDate'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Code' => 'code',
        'Codelist Code' => 'codelistCode',
        'Codelist Extensible (Yes/No)' => 'codelistExtensibleYesNo',
        'Codelist Name' => 'codelistName',
        'CDISC Submission Value' => 'cdISCSubmissionValue',
        'CDISC Synonym(s)' => 'cdISCSynonymS',
        'CDISC Definition' => 'cdISCDefinition',
        'NCI Preferred Term' => 'ncIPreferredTerm',
        'Standard and Date' => 'standardAndDate'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Code' => 'code',
        'Codelist Code' => 'codelistCode',
        'Codelist Extensible (Yes/No)' => 'codelistExtensibleYesNo',
        'Codelist Name' => 'codelistName',
        'CDISC Submission Value' => 'cdISCSubmissionValue',
        'CDISC Synonym(s)' => 'cdISCSynonymS',
        'CDISC Definition' => 'cdISCDefinition',
        'NCI Preferred Term' => 'ncIPreferredTerm',
        'Standard and Date' => 'standardAndDate'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Code' => 'code',
        'Codelist Code' => 'codelistCode',
        'Codelist Extensible (Yes/No)' => 'codelistExtensibleYesNo',
        'Codelist Name' => 'codelistName',
        'CDISC Submission Value' => 'cdISCSubmissionValue',
        'CDISC Synonym(s)' => 'cdISCSynonymS',
        'CDISC Definition' => 'cdISCDefinition',
        'NCI Preferred Term' => 'ncIPreferredTerm',
        'Standard and Date' => 'standardAndDate'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Code' => 'code',
        'Codelist Code' => 'codelistCode',
        'Codelist Extensible (Yes/No)' => 'codelistExtensibleYesNo',
        'Codelist Name' => 'codelistName',
        'CDISC Submission Value' => 'cdISCSubmissionValue',
        'CDISC Synonym(s)' => 'cdISCSynonymS',
        'CDISC Definition' => 'cdISCDefinition',
        'NCI Preferred Term' => 'ncIPreferredTerm',
        'Standard and Date' => 'standardAndDate'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASExportCtCodelist() {
        cdISCSynonymS = new List<String>();
         = new List<OASExportCtTerm>();
    }

    public static OASExportCtCodelist getExample() {
        OASExportCtCodelist exportCtCodelist = new OASExportCtCodelist();
          exportCtCodelist.code = '';
          exportCtCodelist.codelistCode = '';
          exportCtCodelist.codelistExtensibleYesNo = '';
          exportCtCodelist.codelistName = '';
          exportCtCodelist.cdISCSubmissionValue = '';
          exportCtCodelist.cdISCSynonymS = new List<String>{''};
          exportCtCodelist.cdISCDefinition = '';
          exportCtCodelist.ncIPreferredTerm = '';
          exportCtCodelist.standardAndDate = '';
          exportCtCodelist. = new List<OASExportCtTerm>{OASExportCtTerm.getExample()};
        return exportCtCodelist;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASExportCtCodelist) {           
            OASExportCtCodelist exportCtCodelist = (OASExportCtCodelist) obj;
            return this.code == exportCtCodelist.code
                && this.codelistCode == exportCtCodelist.codelistCode
                && this.codelistExtensibleYesNo == exportCtCodelist.codelistExtensibleYesNo
                && this.codelistName == exportCtCodelist.codelistName
                && this.cdISCSubmissionValue == exportCtCodelist.cdISCSubmissionValue
                && this.cdISCSynonymS == exportCtCodelist.cdISCSynonymS
                && this.cdISCDefinition == exportCtCodelist.cdISCDefinition
                && this.ncIPreferredTerm == exportCtCodelist.ncIPreferredTerm
                && this.standardAndDate == exportCtCodelist.standardAndDate
                && this. == exportCtCodelist.;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (code == null ? 0 : System.hashCode(code));
        hashCode = (17 * hashCode) + (codelistCode == null ? 0 : System.hashCode(codelistCode));
        hashCode = (17 * hashCode) + (codelistExtensibleYesNo == null ? 0 : System.hashCode(codelistExtensibleYesNo));
        hashCode = (17 * hashCode) + (codelistName == null ? 0 : System.hashCode(codelistName));
        hashCode = (17 * hashCode) + (cdISCSubmissionValue == null ? 0 : System.hashCode(cdISCSubmissionValue));
        hashCode = (17 * hashCode) + (cdISCSynonymS == null ? 0 : System.hashCode(cdISCSynonymS));
        hashCode = (17 * hashCode) + (cdISCDefinition == null ? 0 : System.hashCode(cdISCDefinition));
        hashCode = (17 * hashCode) + (ncIPreferredTerm == null ? 0 : System.hashCode(ncIPreferredTerm));
        hashCode = (17 * hashCode) + (standardAndDate == null ? 0 : System.hashCode(standardAndDate));
        hashCode = (17 * hashCode) + ( == null ? 0 : System.hashCode());
        return hashCode;
    }
}

