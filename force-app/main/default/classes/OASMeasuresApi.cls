/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASMeasuresApi {
    OASClient client;

    public OASMeasuresApi(OASClient client) {
        this.client = client;
    }

    public OASMeasuresApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * Get QRS Product
     * @param measure QRS Measure Identifier (required)
     * @param version CDISC Library Product Version (required)
     * @return OASQrsProduct
     * @throws OAS.ApiException if fails to make API call
     */
    public OASQrsProduct mdrQrsMeasureVersionGet(Map<String, Object> params) {
        client.assertNotNull(params.get('measure'), 'measure');
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASQrsProduct) client.invoke(
            'GET', '/mdr/qrs/{measure}/{version}', '',
            query, form,
            new Map<String, Object>{
                'measure' => (String) params.get('measure'),
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASQrsProduct.class
        );
    }
    /**
     * 
     * Get QRS Item List
     * @param measure QRS Measure Identifier (required)
     * @param version CDISC Library Product Version (required)
     * @return OASQrsItems
     * @throws OAS.ApiException if fails to make API call
     */
    public OASQrsItems mdrQrsMeasureVersionItemsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('measure'), 'measure');
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASQrsItems) client.invoke(
            'GET', '/mdr/qrs/{measure}/{version}/items', '',
            query, form,
            new Map<String, Object>{
                'measure' => (String) params.get('measure'),
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASQrsItems.class
        );
    }
    /**
     * 
     * Get QRS Item
     * @param measure QRS Measure Identifier (required)
     * @param version CDISC Library Product Version (required)
     * @param item QRS Measure Item Identifier (required)
     * @return OASQrsItem
     * @throws OAS.ApiException if fails to make API call
     */
    public OASQrsItem mdrQrsMeasureVersionItemsItemGet(Map<String, Object> params) {
        client.assertNotNull(params.get('measure'), 'measure');
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('item'), 'item');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASQrsItem) client.invoke(
            'GET', '/mdr/qrs/{measure}/{version}/items/{item}', '',
            query, form,
            new Map<String, Object>{
                'measure' => (String) params.get('measure'),
                'version' => (String) params.get('version'),
                'item' => (String) params.get('item')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASQrsItem.class
        );
    }
    /**
     * 
     * Get QRS Response Group List
     * @param measure QRS Measure Identifier (required)
     * @param version CDISC Library Product Version (required)
     * @return OASQrsResponsegroups
     * @throws OAS.ApiException if fails to make API call
     */
    public OASQrsResponsegroups mdrQrsMeasureVersionResponsegroupsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('measure'), 'measure');
        client.assertNotNull(params.get('version'), 'version');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASQrsResponsegroups) client.invoke(
            'GET', '/mdr/qrs/{measure}/{version}/responsegroups', '',
            query, form,
            new Map<String, Object>{
                'measure' => (String) params.get('measure'),
                'version' => (String) params.get('version')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASQrsResponsegroups.class
        );
    }
    /**
     * 
     * Get QRS Response Group
     * @param measure QRS Measure Identifier (required)
     * @param version CDISC Library Product Version (required)
     * @param responsegroup QRS Measure\&#39;s Response Group Identifier (required)
     * @return OASQrsResponsegroup
     * @throws OAS.ApiException if fails to make API call
     */
    public OASQrsResponsegroup mdrQrsMeasureVersionResponsegroupsResponsegroupGet(Map<String, Object> params) {
        client.assertNotNull(params.get('measure'), 'measure');
        client.assertNotNull(params.get('version'), 'version');
        client.assertNotNull(params.get('responsegroup'), 'responsegroup');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASQrsResponsegroup) client.invoke(
            'GET', '/mdr/qrs/{measure}/{version}/responsegroups/{responsegroup}', '',
            query, form,
            new Map<String, Object>{
                'measure' => (String) params.get('measure'),
                'version' => (String) params.get('version'),
                'responsegroup' => (String) params.get('responsegroup')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASQrsResponsegroup.class
        );
    }
}
