/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASAnalysisDataModelAndImplementationGuideADaMAndADaMIGApi {
    OASClient client;

    public OASAnalysisDataModelAndImplementationGuideADaMAndADaMIGApi(OASClient client) {
        this.client = client;
    }

    public OASAnalysisDataModelAndImplementationGuideADaMAndADaMIGApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * Get ADaM Data Structure List
     * @param product CDISC Library Product (required)
     * @return OASAdamProductDatastructures
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdamProductDatastructures mdrAdamProductDatastructuresGet(Map<String, Object> params) {
        client.assertNotNull(params.get('product'), 'product');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdamProductDatastructures) client.invoke(
            'GET', '/mdr/adam/{product}/datastructures', '',
            query, form,
            new Map<String, Object>{
                'product' => (String) params.get('product')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASAdamProductDatastructures.class
        );
    }
    /**
     * 
     * Get ADaM Data Structure
     * @param product CDISC Library Product (required)
     * @param structure Data structure Identifier (required)
     * @return OASAdamDatastructure
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdamDatastructure mdrAdamProductDatastructuresStructureGet(Map<String, Object> params) {
        client.assertNotNull(params.get('product'), 'product');
        client.assertNotNull(params.get('structure'), 'structure');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdamDatastructure) client.invoke(
            'GET', '/mdr/adam/{product}/datastructures/{structure}', '',
            query, form,
            new Map<String, Object>{
                'product' => (String) params.get('product'),
                'structure' => (String) params.get('structure')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASAdamDatastructure.class
        );
    }
    /**
     * 
     * Get ADaM Variable List
     * @param product CDISC Library Product (required)
     * @param structure ADaM Data Structure Identifier (required)
     * @return OASAdamDatastructureVariables
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdamDatastructureVariables mdrAdamProductDatastructuresStructureVariablesGet(Map<String, Object> params) {
        client.assertNotNull(params.get('product'), 'product');
        client.assertNotNull(params.get('structure'), 'structure');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdamDatastructureVariables) client.invoke(
            'GET', '/mdr/adam/{product}/datastructures/{structure}/variables', '',
            query, form,
            new Map<String, Object>{
                'product' => (String) params.get('product'),
                'structure' => (String) params.get('structure')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASAdamDatastructureVariables.class
        );
    }
    /**
     * 
     * Get ADaM Variable
     * @param product CDISC Library Product (required)
     * @param structure ADaM Data Structure Identifier (required)
     * @param var ADaM Variable Identifier (required)
     * @return OASAdamVariable
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdamVariable mdrAdamProductDatastructuresStructureVariablesVarGet(Map<String, Object> params) {
        client.assertNotNull(params.get('product'), 'product');
        client.assertNotNull(params.get('structure'), 'structure');
        client.assertNotNull(params.get('var'), 'var');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdamVariable) client.invoke(
            'GET', '/mdr/adam/{product}/datastructures/{structure}/variables/{var}', '',
            query, form,
            new Map<String, Object>{
                'product' => (String) params.get('product'),
                'structure' => (String) params.get('structure'),
                'var' => (String) params.get('var')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASAdamVariable.class
        );
    }
    /**
     * 
     * Get ADaM Variable Set List
     * @param product CDISC Library Product (required)
     * @param structure ADaM Data Structure Identifier (required)
     * @return OASAdamDatastructureVarsets
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdamDatastructureVarsets mdrAdamProductDatastructuresStructureVarsetsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('product'), 'product');
        client.assertNotNull(params.get('structure'), 'structure');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdamDatastructureVarsets) client.invoke(
            'GET', '/mdr/adam/{product}/datastructures/{structure}/varsets', '',
            query, form,
            new Map<String, Object>{
                'product' => (String) params.get('product'),
                'structure' => (String) params.get('structure')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASAdamDatastructureVarsets.class
        );
    }
    /**
     * 
     * Get ADaM Variable Set
     * @param product CDISC Library Product (required)
     * @param structure ADaM Data Structure Identifier (required)
     * @param varset ADaM Variable Set Identifier (required)
     * @return OASAdamVarset
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdamVarset mdrAdamProductDatastructuresStructureVarsetsVarsetGet(Map<String, Object> params) {
        client.assertNotNull(params.get('product'), 'product');
        client.assertNotNull(params.get('structure'), 'structure');
        client.assertNotNull(params.get('varset'), 'varset');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdamVarset) client.invoke(
            'GET', '/mdr/adam/{product}/datastructures/{structure}/varsets/{varset}', '',
            query, form,
            new Map<String, Object>{
                'product' => (String) params.get('product'),
                'structure' => (String) params.get('structure'),
                'varset' => (String) params.get('varset')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASAdamVarset.class
        );
    }
    /**
     * 
     * Get ADaM Product
     * @param product CDISC Library Product (required)
     * @return OASAdamProduct
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdamProduct mdrAdamProductGet(Map<String, Object> params) {
        client.assertNotNull(params.get('product'), 'product');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdamProduct) client.invoke(
            'GET', '/mdr/adam/{product}', '',
            query, form,
            new Map<String, Object>{
                'product' => (String) params.get('product')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'basicAuth' },
            OASAdamProduct.class
        );
    }
}
