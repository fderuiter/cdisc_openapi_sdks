{-
   CDISC Library API
   REST API Documentation for CDISC Library in production server

   The version of the OpenAPI document: 1.1.0
   Contact: cdisc_library_support@cdisc.org

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( About
    , AboutLinks
    , AboutRef
    , AdamDatastructure
    , AdamDatastructureLinks
    , AdamDatastructureRef
    , AdamDatastructureRefElement
    , AdamDatastructureVariables
    , AdamDatastructureVariablesLinks
    , AdamDatastructureVariablesRef
    , AdamDatastructureVarsets
    , AdamDatastructureVarsetsLinks
    , AdamDatastructureVarsetsRef
    , AdamProduct
    , AdamProductDatastructures
    , AdamProductDatastructuresLinks
    , AdamProductDatastructuresRef
    , AdamProductLinks
    , AdamProductRef
    , AdamProductRefElement
    , AdamVariable
    , AdamVariableLinks
    , AdamVariableRef
    , AdamVariableRefElement
    , AdamVarset
    , AdamVarsetLinks
    , AdamVarsetRef
    , AdamVarsetRefElement
    , CdashClass
    , CdashClassDomains
    , CdashClassDomainsLinks
    , CdashClassDomainsRef
    , CdashClassField
    , CdashClassFieldLinks
    , CdashClassFieldRef
    , CdashClassFieldRefVersion
    , CdashClassLinks
    , CdashClassRef
    , CdashClassRefElement
    , CdashDomain
    , CdashDomainField
    , CdashDomainFieldLinks
    , CdashDomainFieldRef
    , CdashDomainFieldRefElement
    , CdashDomainFieldRefVersion
    , CdashDomainFields
    , CdashDomainFieldsLinks
    , CdashDomainFieldsRef
    , CdashDomainLinks
    , CdashDomainRef
    , CdashDomainRefElement
    , CdashProduct
    , CdashProductClasses
    , CdashProductClassesLinks
    , CdashProductClassesRef
    , CdashProductDomains
    , CdashProductDomainsLinks
    , CdashProductDomainsRef
    , CdashProductLinks
    , CdashProductRef
    , CdashProductRefElement
    , CdashigClass
    , CdashigClassDomains
    , CdashigClassDomainsLinks
    , CdashigClassDomainsRef
    , CdashigClassLinks
    , CdashigClassRef
    , CdashigClassRefElement
    , CdashigClassRefSubclass
    , CdashigClassScenarios
    , CdashigClassScenariosLinks
    , CdashigClassScenariosRef
    , CdashigDomain
    , CdashigDomainField
    , CdashigDomainFieldLinks
    , CdashigDomainFieldRef
    , CdashigDomainFieldRefElement
    , CdashigDomainFieldRefVersion
    , CdashigDomainFields
    , CdashigDomainFieldsLinks
    , CdashigDomainFieldsRef
    , CdashigDomainLinks
    , CdashigDomainRef
    , CdashigDomainRefElement
    , CdashigProduct
    , CdashigProductClasses
    , CdashigProductClassesLinks
    , CdashigProductClassesRef
    , CdashigProductDomains
    , CdashigProductDomainsLinks
    , CdashigProductDomainsRef
    , CdashigProductLinks
    , CdashigProductRef
    , CdashigProductRefElement
    , CdashigProductScenarios
    , CdashigProductScenariosLinks
    , CdashigProductScenariosRef
    , CdashigScenario
    , CdashigScenarioField
    , CdashigScenarioFieldLinks
    , CdashigScenarioFieldRef
    , CdashigScenarioFieldRefElement
    , CdashigScenarioFieldRefVersion
    , CdashigScenarioFields
    , CdashigScenarioFieldsLinks
    , CdashigScenarioFieldsRef
    , CdashigScenarioLinks
    , CdashigScenarioRef
    , CdashigScenarioRefElement
    , CtCodelist
    , CtCodelistLinks
    , CtCodelistRef
    , CtCodelistRefElement
    , CtCodelistRefVersion
    , CtCodelistTerms
    , CtCodelistTermsLinks
    , CtCodelistTermsRef
    , CtPackage
    , CtPackageCodelists
    , CtPackageCodelistsLinks
    , CtPackageCodelistsRef
    , CtPackageLinks
    , CtPackageRef
    , CtPackageRefElement
    , CtPackageTerm
    , CtPackages
    , CtPackagesLinks
    , CtPackagesRef
    , CtTerm
    , CtTermLinks
    , CtTermRef
    , CtTermRefElement
    , CtTermRefVersion
    , DefaultErrorResponse
    , DefaultSearchResponse
    , DefaultSearchResponseHitsInner
    , DefaultSearchScopes(..), defaultSearchScopesVariants
    , ExportAdamDatastructuresRow
    , ExportAdamDatastructuresTable
    , ExportAdamVariablesRow
    , ExportAdamVariablesTable
    , ExportAdamWorkbook
    , ExportCdashClassVariablesRow
    , ExportCdashDomainVariablesRow
    , ExportCdashTable
    , ExportCdashigDomainVariablesRow
    , ExportCdashigScenarioVariablesRow
    , ExportCdashigTable
    , ExportCtCodelist
    , ExportCtTable
    , ExportCtTerm
    , ExportQrsCsvItemsRow
    , ExportQrsGeneral
    , ExportQrsItemsTable
    , ExportQrsResponses
    , ExportQrsWorkbook
    , ExportQrsWorkbookItemsRow
    , ExportSdtmClassVariablesRow
    , ExportSdtmDatasetVariablesRow
    , ExportSdtmDatasetsRow
    , ExportSdtmDatasetsTable
    , ExportSdtmVariablesTable
    , ExportSdtmWorkbook
    , ExportSdtmigDatasetsRow
    , ExportSdtmigDatasetsTable
    , ExportSdtmigVariablesRow
    , ExportSdtmigVariablesTable
    , ExportSdtmigWorkbook
    , ExportSendigDatasetsRow
    , ExportSendigDatasetsTable
    , ExportSendigVariablesRow
    , ExportSendigVariablesTable
    , ExportSendigWorkbook
    , Health
    , Lastupdated
    , LastupdatedLinks
    , LastupdatedRef
    , MaintenanceBody
    , MdrSearchScopesGet200Response
    , ProductgroupDataAnalysis
    , ProductgroupDataAnalysisLinks
    , ProductgroupDataCollection
    , ProductgroupDataCollectionLinks
    , ProductgroupDataTabulation
    , ProductgroupDataTabulationLinks
    , ProductgroupQrs
    , ProductgroupQrsLinks
    , ProductgroupRef
    , ProductgroupTerminology
    , ProductgroupTerminologyLinks
    , Products
    , ProductsLinks
    , ProductsRef
    , QrsItem
    , QrsItemLinks
    , QrsItemRefElement
    , QrsItems
    , QrsItemsLinks
    , QrsItemsRef
    , QrsProduct
    , QrsProductLinks
    , QrsProductRef
    , QrsRefElement
    , QrsResponseLinks
    , QrsResponsegroup
    , QrsResponsegroupLinks
    , QrsResponsegroupRef
    , QrsResponsegroupRefElement
    , QrsResponsegroups
    , QrsResponsegroupsLinks
    , QrsResponsegroupsRef
    , QrsResponses
    , RootCdashClassField
    , RootCdashClassFieldLinks
    , RootCdashClassFieldRef
    , RootCdashDomainField
    , RootCdashDomainFieldLinks
    , RootCdashDomainFieldRef
    , RootCdashigDomainField
    , RootCdashigDomainFieldLinks
    , RootCdashigDomainFieldRef
    , RootCdashigScenarioField
    , RootCdashigScenarioFieldLinks
    , RootCdashigScenarioFieldRef
    , RootCtCodelist
    , RootCtCodelistLinks
    , RootCtCodelistRef
    , RootCtCodelistRefElement
    , RootCtTerm
    , RootCtTermLinks
    , RootCtTermRef
    , RootSdtmClassVariable
    , RootSdtmClassVariableLinks
    , RootSdtmClassVariableRef
    , RootSdtmDatasetVariable
    , RootSdtmDatasetVariableLinks
    , RootSdtmDatasetVariableRef
    , RootSdtmigDatasetVariable
    , RootSdtmigDatasetVariableLinks
    , RootSdtmigDatasetVariableRef
    , RootSendigDatasetVariable
    , RootSendigDatasetVariableLinks
    , RootSendigDatasetVariableRef
    , ScopeValues
    , SdtmClass
    , SdtmClassDatasets
    , SdtmClassDatasetsLinks
    , SdtmClassDatasetsRef
    , SdtmClassLinks
    , SdtmClassRef
    , SdtmClassRefElement
    , SdtmClassRefSubclass
    , SdtmClassVariable
    , SdtmClassVariableLinks
    , SdtmClassVariableRef
    , SdtmClassVariableRefElement
    , SdtmClassVariableRefQualifies
    , SdtmClassVariableRefTarget
    , SdtmClassVariableRefVersion
    , SdtmClassVariables
    , SdtmClassVariablesLinks
    , SdtmClassVariablesRef
    , SdtmClasses
    , SdtmClassesLinks
    , SdtmClassesRef
    , SdtmDataset
    , SdtmDatasetLinks
    , SdtmDatasetRef
    , SdtmDatasetRefElement
    , SdtmDatasetVariable
    , SdtmDatasetVariableLinks
    , SdtmDatasetVariableRef
    , SdtmDatasetVariableRefElement
    , SdtmDatasetVariableRefTarget
    , SdtmDatasetVariableRefVersion
    , SdtmDatasetVariables
    , SdtmDatasetVariablesLinks
    , SdtmDatasetVariablesRef
    , SdtmDatasets
    , SdtmDatasetsLinks
    , SdtmDatasetsRef
    , SdtmProduct
    , SdtmProductLinks
    , SdtmProductRef
    , SdtmProductRefElement
    , SdtmigClass
    , SdtmigClassDatasets
    , SdtmigClassDatasetsLinks
    , SdtmigClassDatasetsRef
    , SdtmigClassLinks
    , SdtmigClassRef
    , SdtmigClassRefElement
    , SdtmigClassRefSubclass
    , SdtmigClasses
    , SdtmigClassesLinks
    , SdtmigClassesRef
    , SdtmigDataset
    , SdtmigDatasetLinks
    , SdtmigDatasetRef
    , SdtmigDatasetRefElement
    , SdtmigDatasetVariable
    , SdtmigDatasetVariableLinks
    , SdtmigDatasetVariableRef
    , SdtmigDatasetVariableRefElement
    , SdtmigDatasetVariableRefTarget
    , SdtmigDatasetVariableRefVersion
    , SdtmigDatasetVariables
    , SdtmigDatasetVariablesLinks
    , SdtmigDatasetVariablesRef
    , SdtmigDatasets
    , SdtmigDatasetsLinks
    , SdtmigDatasetsRef
    , SdtmigProduct
    , SdtmigProductLinks
    , SdtmigProductRef
    , SdtmigProductRefElement
    , SendigClass
    , SendigClassDatasets
    , SendigClassDatasetsLinks
    , SendigClassDatasetsRef
    , SendigClassLinks
    , SendigClassRef
    , SendigClassRefElement
    , SendigClassRefSubclass
    , SendigClasses
    , SendigClassesLinks
    , SendigClassesRef
    , SendigDataset
    , SendigDatasetLinks
    , SendigDatasetRef
    , SendigDatasetRefElement
    , SendigDatasetVariable
    , SendigDatasetVariableLinks
    , SendigDatasetVariableRef
    , SendigDatasetVariableRefElement
    , SendigDatasetVariableRefVersion
    , SendigDatasetVariables
    , SendigDatasetVariablesLinks
    , SendigDatasetVariablesRef
    , SendigDatasets
    , SendigDatasetsLinks
    , SendigDatasetsRef
    , SendigProduct
    , SendigProductLinks
    , SendigProductRef
    , SendigProductRefElement
    , XmlAbout
    , XmlAdamDatastructure
    , XmlAdamDatastructureVariables
    , XmlAdamDatastructureVarsets
    , XmlAdamProduct
    , XmlAdamProductDatastructures
    , XmlAdamVariable
    , XmlAdamVarset
    , XmlCdashClass
    , XmlCdashClassDomains
    , XmlCdashClassField
    , XmlCdashDomain
    , XmlCdashDomainField
    , XmlCdashDomainFields
    , XmlCdashProduct
    , XmlCdashProductClasses
    , XmlCdashProductDomains
    , XmlCdashigClass
    , XmlCdashigClassDomains
    , XmlCdashigClassScenarios
    , XmlCdashigDomain
    , XmlCdashigDomainField
    , XmlCdashigDomainFields
    , XmlCdashigProduct
    , XmlCdashigProductClasses
    , XmlCdashigProductDomains
    , XmlCdashigProductScenarios
    , XmlCdashigScenario
    , XmlCdashigScenarioField
    , XmlCdashigScenarioFields
    , XmlCtCodelist
    , XmlCtCodelistTerms
    , XmlCtPackage
    , XmlCtPackageCodelists
    , XmlCtPackages
    , XmlCtTerm
    , XmlLastupdated
    , XmlProductgroupDataAnalysis
    , XmlProductgroupDataCollection
    , XmlProductgroupDataTabulation
    , XmlProductgroupTerminology
    , XmlProducts
    , XmlQrsItem
    , XmlQrsItems
    , XmlQrsProduct
    , XmlQrsResponsegroup
    , XmlQrsResponsegroups
    , XmlRootCdashClassField
    , XmlRootCdashDomainField
    , XmlRootCdashigDomainField
    , XmlRootCdashigScenarioField
    , XmlRootCtCodelist
    , XmlRootCtTerm
    , XmlRootSdtmClassVariable
    , XmlRootSdtmDatasetVariable
    , XmlRootSdtmigDatasetVariable
    , XmlRootSendigDatasetVariable
    , XmlSdtmClass
    , XmlSdtmClassDatasets
    , XmlSdtmClassVariable
    , XmlSdtmClassVariables
    , XmlSdtmClasses
    , XmlSdtmDataset
    , XmlSdtmDatasetVariable
    , XmlSdtmDatasetVariables
    , XmlSdtmDatasets
    , XmlSdtmProduct
    , XmlSdtmigClass
    , XmlSdtmigClassDatasets
    , XmlSdtmigClasses
    , XmlSdtmigDataset
    , XmlSdtmigDatasetVariable
    , XmlSdtmigDatasetVariables
    , XmlSdtmigDatasets
    , XmlSdtmigProduct
    , XmlSendigClass
    , XmlSendigClassDatasets
    , XmlSendigClasses
    , XmlSendigDataset
    , XmlSendigDatasetVariable
    , XmlSendigDatasetVariables
    , XmlSendigDatasets
    , XmlSendigProduct
    , encodeAbout
    , encodeAboutLinks
    , encodeAboutRef
    , encodeAdamDatastructure
    , encodeAdamDatastructureLinks
    , encodeAdamDatastructureRef
    , encodeAdamDatastructureRefElement
    , encodeAdamDatastructureVariables
    , encodeAdamDatastructureVariablesLinks
    , encodeAdamDatastructureVariablesRef
    , encodeAdamDatastructureVarsets
    , encodeAdamDatastructureVarsetsLinks
    , encodeAdamDatastructureVarsetsRef
    , encodeAdamProduct
    , encodeAdamProductDatastructures
    , encodeAdamProductDatastructuresLinks
    , encodeAdamProductDatastructuresRef
    , encodeAdamProductLinks
    , encodeAdamProductRef
    , encodeAdamProductRefElement
    , encodeAdamVariable
    , encodeAdamVariableLinks
    , encodeAdamVariableRef
    , encodeAdamVariableRefElement
    , encodeAdamVarset
    , encodeAdamVarsetLinks
    , encodeAdamVarsetRef
    , encodeAdamVarsetRefElement
    , encodeCdashClass
    , encodeCdashClassDomains
    , encodeCdashClassDomainsLinks
    , encodeCdashClassDomainsRef
    , encodeCdashClassField
    , encodeCdashClassFieldLinks
    , encodeCdashClassFieldRef
    , encodeCdashClassFieldRefVersion
    , encodeCdashClassLinks
    , encodeCdashClassRef
    , encodeCdashClassRefElement
    , encodeCdashDomain
    , encodeCdashDomainField
    , encodeCdashDomainFieldLinks
    , encodeCdashDomainFieldRef
    , encodeCdashDomainFieldRefElement
    , encodeCdashDomainFieldRefVersion
    , encodeCdashDomainFields
    , encodeCdashDomainFieldsLinks
    , encodeCdashDomainFieldsRef
    , encodeCdashDomainLinks
    , encodeCdashDomainRef
    , encodeCdashDomainRefElement
    , encodeCdashProduct
    , encodeCdashProductClasses
    , encodeCdashProductClassesLinks
    , encodeCdashProductClassesRef
    , encodeCdashProductDomains
    , encodeCdashProductDomainsLinks
    , encodeCdashProductDomainsRef
    , encodeCdashProductLinks
    , encodeCdashProductRef
    , encodeCdashProductRefElement
    , encodeCdashigClass
    , encodeCdashigClassDomains
    , encodeCdashigClassDomainsLinks
    , encodeCdashigClassDomainsRef
    , encodeCdashigClassLinks
    , encodeCdashigClassRef
    , encodeCdashigClassRefElement
    , encodeCdashigClassRefSubclass
    , encodeCdashigClassScenarios
    , encodeCdashigClassScenariosLinks
    , encodeCdashigClassScenariosRef
    , encodeCdashigDomain
    , encodeCdashigDomainField
    , encodeCdashigDomainFieldLinks
    , encodeCdashigDomainFieldRef
    , encodeCdashigDomainFieldRefElement
    , encodeCdashigDomainFieldRefVersion
    , encodeCdashigDomainFields
    , encodeCdashigDomainFieldsLinks
    , encodeCdashigDomainFieldsRef
    , encodeCdashigDomainLinks
    , encodeCdashigDomainRef
    , encodeCdashigDomainRefElement
    , encodeCdashigProduct
    , encodeCdashigProductClasses
    , encodeCdashigProductClassesLinks
    , encodeCdashigProductClassesRef
    , encodeCdashigProductDomains
    , encodeCdashigProductDomainsLinks
    , encodeCdashigProductDomainsRef
    , encodeCdashigProductLinks
    , encodeCdashigProductRef
    , encodeCdashigProductRefElement
    , encodeCdashigProductScenarios
    , encodeCdashigProductScenariosLinks
    , encodeCdashigProductScenariosRef
    , encodeCdashigScenario
    , encodeCdashigScenarioField
    , encodeCdashigScenarioFieldLinks
    , encodeCdashigScenarioFieldRef
    , encodeCdashigScenarioFieldRefElement
    , encodeCdashigScenarioFieldRefVersion
    , encodeCdashigScenarioFields
    , encodeCdashigScenarioFieldsLinks
    , encodeCdashigScenarioFieldsRef
    , encodeCdashigScenarioLinks
    , encodeCdashigScenarioRef
    , encodeCdashigScenarioRefElement
    , encodeCtCodelist
    , encodeCtCodelistLinks
    , encodeCtCodelistRef
    , encodeCtCodelistRefElement
    , encodeCtCodelistRefVersion
    , encodeCtCodelistTerms
    , encodeCtCodelistTermsLinks
    , encodeCtCodelistTermsRef
    , encodeCtPackage
    , encodeCtPackageCodelists
    , encodeCtPackageCodelistsLinks
    , encodeCtPackageCodelistsRef
    , encodeCtPackageLinks
    , encodeCtPackageRef
    , encodeCtPackageRefElement
    , encodeCtPackageTerm
    , encodeCtPackages
    , encodeCtPackagesLinks
    , encodeCtPackagesRef
    , encodeCtTerm
    , encodeCtTermLinks
    , encodeCtTermRef
    , encodeCtTermRefElement
    , encodeCtTermRefVersion
    , encodeDefaultErrorResponse
    , encodeDefaultSearchResponse
    , encodeDefaultSearchResponseHitsInner
    , encodeDefaultSearchScopes
    , encodeExportAdamDatastructuresRow
    , encodeExportAdamDatastructuresTable
    , encodeExportAdamVariablesRow
    , encodeExportAdamVariablesTable
    , encodeExportAdamWorkbook
    , encodeExportCdashClassVariablesRow
    , encodeExportCdashDomainVariablesRow
    , encodeExportCdashTable
    , encodeExportCdashigDomainVariablesRow
    , encodeExportCdashigScenarioVariablesRow
    , encodeExportCdashigTable
    , encodeExportCtCodelist
    , encodeExportCtTable
    , encodeExportCtTerm
    , encodeExportQrsCsvItemsRow
    , encodeExportQrsGeneral
    , encodeExportQrsItemsTable
    , encodeExportQrsResponses
    , encodeExportQrsWorkbook
    , encodeExportQrsWorkbookItemsRow
    , encodeExportSdtmClassVariablesRow
    , encodeExportSdtmDatasetVariablesRow
    , encodeExportSdtmDatasetsRow
    , encodeExportSdtmDatasetsTable
    , encodeExportSdtmVariablesTable
    , encodeExportSdtmWorkbook
    , encodeExportSdtmigDatasetsRow
    , encodeExportSdtmigDatasetsTable
    , encodeExportSdtmigVariablesRow
    , encodeExportSdtmigVariablesTable
    , encodeExportSdtmigWorkbook
    , encodeExportSendigDatasetsRow
    , encodeExportSendigDatasetsTable
    , encodeExportSendigVariablesRow
    , encodeExportSendigVariablesTable
    , encodeExportSendigWorkbook
    , encodeHealth
    , encodeLastupdated
    , encodeLastupdatedLinks
    , encodeLastupdatedRef
    , encodeMaintenanceBody
    , encodeMdrSearchScopesGet200Response
    , encodeProductgroupDataAnalysis
    , encodeProductgroupDataAnalysisLinks
    , encodeProductgroupDataCollection
    , encodeProductgroupDataCollectionLinks
    , encodeProductgroupDataTabulation
    , encodeProductgroupDataTabulationLinks
    , encodeProductgroupQrs
    , encodeProductgroupQrsLinks
    , encodeProductgroupRef
    , encodeProductgroupTerminology
    , encodeProductgroupTerminologyLinks
    , encodeProducts
    , encodeProductsLinks
    , encodeProductsRef
    , encodeQrsItem
    , encodeQrsItemLinks
    , encodeQrsItemRefElement
    , encodeQrsItems
    , encodeQrsItemsLinks
    , encodeQrsItemsRef
    , encodeQrsProduct
    , encodeQrsProductLinks
    , encodeQrsProductRef
    , encodeQrsRefElement
    , encodeQrsResponseLinks
    , encodeQrsResponsegroup
    , encodeQrsResponsegroupLinks
    , encodeQrsResponsegroupRef
    , encodeQrsResponsegroupRefElement
    , encodeQrsResponsegroups
    , encodeQrsResponsegroupsLinks
    , encodeQrsResponsegroupsRef
    , encodeQrsResponses
    , encodeRootCdashClassField
    , encodeRootCdashClassFieldLinks
    , encodeRootCdashClassFieldRef
    , encodeRootCdashDomainField
    , encodeRootCdashDomainFieldLinks
    , encodeRootCdashDomainFieldRef
    , encodeRootCdashigDomainField
    , encodeRootCdashigDomainFieldLinks
    , encodeRootCdashigDomainFieldRef
    , encodeRootCdashigScenarioField
    , encodeRootCdashigScenarioFieldLinks
    , encodeRootCdashigScenarioFieldRef
    , encodeRootCtCodelist
    , encodeRootCtCodelistLinks
    , encodeRootCtCodelistRef
    , encodeRootCtCodelistRefElement
    , encodeRootCtTerm
    , encodeRootCtTermLinks
    , encodeRootCtTermRef
    , encodeRootSdtmClassVariable
    , encodeRootSdtmClassVariableLinks
    , encodeRootSdtmClassVariableRef
    , encodeRootSdtmDatasetVariable
    , encodeRootSdtmDatasetVariableLinks
    , encodeRootSdtmDatasetVariableRef
    , encodeRootSdtmigDatasetVariable
    , encodeRootSdtmigDatasetVariableLinks
    , encodeRootSdtmigDatasetVariableRef
    , encodeRootSendigDatasetVariable
    , encodeRootSendigDatasetVariableLinks
    , encodeRootSendigDatasetVariableRef
    , encodeScopeValues
    , encodeSdtmClass
    , encodeSdtmClassDatasets
    , encodeSdtmClassDatasetsLinks
    , encodeSdtmClassDatasetsRef
    , encodeSdtmClassLinks
    , encodeSdtmClassRef
    , encodeSdtmClassRefElement
    , encodeSdtmClassRefSubclass
    , encodeSdtmClassVariable
    , encodeSdtmClassVariableLinks
    , encodeSdtmClassVariableRef
    , encodeSdtmClassVariableRefElement
    , encodeSdtmClassVariableRefQualifies
    , encodeSdtmClassVariableRefTarget
    , encodeSdtmClassVariableRefVersion
    , encodeSdtmClassVariables
    , encodeSdtmClassVariablesLinks
    , encodeSdtmClassVariablesRef
    , encodeSdtmClasses
    , encodeSdtmClassesLinks
    , encodeSdtmClassesRef
    , encodeSdtmDataset
    , encodeSdtmDatasetLinks
    , encodeSdtmDatasetRef
    , encodeSdtmDatasetRefElement
    , encodeSdtmDatasetVariable
    , encodeSdtmDatasetVariableLinks
    , encodeSdtmDatasetVariableRef
    , encodeSdtmDatasetVariableRefElement
    , encodeSdtmDatasetVariableRefTarget
    , encodeSdtmDatasetVariableRefVersion
    , encodeSdtmDatasetVariables
    , encodeSdtmDatasetVariablesLinks
    , encodeSdtmDatasetVariablesRef
    , encodeSdtmDatasets
    , encodeSdtmDatasetsLinks
    , encodeSdtmDatasetsRef
    , encodeSdtmProduct
    , encodeSdtmProductLinks
    , encodeSdtmProductRef
    , encodeSdtmProductRefElement
    , encodeSdtmigClass
    , encodeSdtmigClassDatasets
    , encodeSdtmigClassDatasetsLinks
    , encodeSdtmigClassDatasetsRef
    , encodeSdtmigClassLinks
    , encodeSdtmigClassRef
    , encodeSdtmigClassRefElement
    , encodeSdtmigClassRefSubclass
    , encodeSdtmigClasses
    , encodeSdtmigClassesLinks
    , encodeSdtmigClassesRef
    , encodeSdtmigDataset
    , encodeSdtmigDatasetLinks
    , encodeSdtmigDatasetRef
    , encodeSdtmigDatasetRefElement
    , encodeSdtmigDatasetVariable
    , encodeSdtmigDatasetVariableLinks
    , encodeSdtmigDatasetVariableRef
    , encodeSdtmigDatasetVariableRefElement
    , encodeSdtmigDatasetVariableRefTarget
    , encodeSdtmigDatasetVariableRefVersion
    , encodeSdtmigDatasetVariables
    , encodeSdtmigDatasetVariablesLinks
    , encodeSdtmigDatasetVariablesRef
    , encodeSdtmigDatasets
    , encodeSdtmigDatasetsLinks
    , encodeSdtmigDatasetsRef
    , encodeSdtmigProduct
    , encodeSdtmigProductLinks
    , encodeSdtmigProductRef
    , encodeSdtmigProductRefElement
    , encodeSendigClass
    , encodeSendigClassDatasets
    , encodeSendigClassDatasetsLinks
    , encodeSendigClassDatasetsRef
    , encodeSendigClassLinks
    , encodeSendigClassRef
    , encodeSendigClassRefElement
    , encodeSendigClassRefSubclass
    , encodeSendigClasses
    , encodeSendigClassesLinks
    , encodeSendigClassesRef
    , encodeSendigDataset
    , encodeSendigDatasetLinks
    , encodeSendigDatasetRef
    , encodeSendigDatasetRefElement
    , encodeSendigDatasetVariable
    , encodeSendigDatasetVariableLinks
    , encodeSendigDatasetVariableRef
    , encodeSendigDatasetVariableRefElement
    , encodeSendigDatasetVariableRefVersion
    , encodeSendigDatasetVariables
    , encodeSendigDatasetVariablesLinks
    , encodeSendigDatasetVariablesRef
    , encodeSendigDatasets
    , encodeSendigDatasetsLinks
    , encodeSendigDatasetsRef
    , encodeSendigProduct
    , encodeSendigProductLinks
    , encodeSendigProductRef
    , encodeSendigProductRefElement
    , encodeXmlAbout
    , encodeXmlAdamDatastructure
    , encodeXmlAdamDatastructureVariables
    , encodeXmlAdamDatastructureVarsets
    , encodeXmlAdamProduct
    , encodeXmlAdamProductDatastructures
    , encodeXmlAdamVariable
    , encodeXmlAdamVarset
    , encodeXmlCdashClass
    , encodeXmlCdashClassDomains
    , encodeXmlCdashClassField
    , encodeXmlCdashDomain
    , encodeXmlCdashDomainField
    , encodeXmlCdashDomainFields
    , encodeXmlCdashProduct
    , encodeXmlCdashProductClasses
    , encodeXmlCdashProductDomains
    , encodeXmlCdashigClass
    , encodeXmlCdashigClassDomains
    , encodeXmlCdashigClassScenarios
    , encodeXmlCdashigDomain
    , encodeXmlCdashigDomainField
    , encodeXmlCdashigDomainFields
    , encodeXmlCdashigProduct
    , encodeXmlCdashigProductClasses
    , encodeXmlCdashigProductDomains
    , encodeXmlCdashigProductScenarios
    , encodeXmlCdashigScenario
    , encodeXmlCdashigScenarioField
    , encodeXmlCdashigScenarioFields
    , encodeXmlCtCodelist
    , encodeXmlCtCodelistTerms
    , encodeXmlCtPackage
    , encodeXmlCtPackageCodelists
    , encodeXmlCtPackages
    , encodeXmlCtTerm
    , encodeXmlLastupdated
    , encodeXmlProductgroupDataAnalysis
    , encodeXmlProductgroupDataCollection
    , encodeXmlProductgroupDataTabulation
    , encodeXmlProductgroupTerminology
    , encodeXmlProducts
    , encodeXmlQrsItem
    , encodeXmlQrsItems
    , encodeXmlQrsProduct
    , encodeXmlQrsResponsegroup
    , encodeXmlQrsResponsegroups
    , encodeXmlRootCdashClassField
    , encodeXmlRootCdashDomainField
    , encodeXmlRootCdashigDomainField
    , encodeXmlRootCdashigScenarioField
    , encodeXmlRootCtCodelist
    , encodeXmlRootCtTerm
    , encodeXmlRootSdtmClassVariable
    , encodeXmlRootSdtmDatasetVariable
    , encodeXmlRootSdtmigDatasetVariable
    , encodeXmlRootSendigDatasetVariable
    , encodeXmlSdtmClass
    , encodeXmlSdtmClassDatasets
    , encodeXmlSdtmClassVariable
    , encodeXmlSdtmClassVariables
    , encodeXmlSdtmClasses
    , encodeXmlSdtmDataset
    , encodeXmlSdtmDatasetVariable
    , encodeXmlSdtmDatasetVariables
    , encodeXmlSdtmDatasets
    , encodeXmlSdtmProduct
    , encodeXmlSdtmigClass
    , encodeXmlSdtmigClassDatasets
    , encodeXmlSdtmigClasses
    , encodeXmlSdtmigDataset
    , encodeXmlSdtmigDatasetVariable
    , encodeXmlSdtmigDatasetVariables
    , encodeXmlSdtmigDatasets
    , encodeXmlSdtmigProduct
    , encodeXmlSendigClass
    , encodeXmlSendigClassDatasets
    , encodeXmlSendigClasses
    , encodeXmlSendigDataset
    , encodeXmlSendigDatasetVariable
    , encodeXmlSendigDatasetVariables
    , encodeXmlSendigDatasets
    , encodeXmlSendigProduct
    , stringFromDefaultSearchScopes
    , aboutDecoder
    , aboutLinksDecoder
    , aboutRefDecoder
    , adamDatastructureDecoder
    , adamDatastructureLinksDecoder
    , adamDatastructureRefDecoder
    , adamDatastructureRefElementDecoder
    , adamDatastructureVariablesDecoder
    , adamDatastructureVariablesLinksDecoder
    , adamDatastructureVariablesRefDecoder
    , adamDatastructureVarsetsDecoder
    , adamDatastructureVarsetsLinksDecoder
    , adamDatastructureVarsetsRefDecoder
    , adamProductDecoder
    , adamProductDatastructuresDecoder
    , adamProductDatastructuresLinksDecoder
    , adamProductDatastructuresRefDecoder
    , adamProductLinksDecoder
    , adamProductRefDecoder
    , adamProductRefElementDecoder
    , adamVariableDecoder
    , adamVariableLinksDecoder
    , adamVariableRefDecoder
    , adamVariableRefElementDecoder
    , adamVarsetDecoder
    , adamVarsetLinksDecoder
    , adamVarsetRefDecoder
    , adamVarsetRefElementDecoder
    , cdashClassDecoder
    , cdashClassDomainsDecoder
    , cdashClassDomainsLinksDecoder
    , cdashClassDomainsRefDecoder
    , cdashClassFieldDecoder
    , cdashClassFieldLinksDecoder
    , cdashClassFieldRefDecoder
    , cdashClassFieldRefVersionDecoder
    , cdashClassLinksDecoder
    , cdashClassRefDecoder
    , cdashClassRefElementDecoder
    , cdashDomainDecoder
    , cdashDomainFieldDecoder
    , cdashDomainFieldLinksDecoder
    , cdashDomainFieldRefDecoder
    , cdashDomainFieldRefElementDecoder
    , cdashDomainFieldRefVersionDecoder
    , cdashDomainFieldsDecoder
    , cdashDomainFieldsLinksDecoder
    , cdashDomainFieldsRefDecoder
    , cdashDomainLinksDecoder
    , cdashDomainRefDecoder
    , cdashDomainRefElementDecoder
    , cdashProductDecoder
    , cdashProductClassesDecoder
    , cdashProductClassesLinksDecoder
    , cdashProductClassesRefDecoder
    , cdashProductDomainsDecoder
    , cdashProductDomainsLinksDecoder
    , cdashProductDomainsRefDecoder
    , cdashProductLinksDecoder
    , cdashProductRefDecoder
    , cdashProductRefElementDecoder
    , cdashigClassDecoder
    , cdashigClassDomainsDecoder
    , cdashigClassDomainsLinksDecoder
    , cdashigClassDomainsRefDecoder
    , cdashigClassLinksDecoder
    , cdashigClassRefDecoder
    , cdashigClassRefElementDecoder
    , cdashigClassRefSubclassDecoder
    , cdashigClassScenariosDecoder
    , cdashigClassScenariosLinksDecoder
    , cdashigClassScenariosRefDecoder
    , cdashigDomainDecoder
    , cdashigDomainFieldDecoder
    , cdashigDomainFieldLinksDecoder
    , cdashigDomainFieldRefDecoder
    , cdashigDomainFieldRefElementDecoder
    , cdashigDomainFieldRefVersionDecoder
    , cdashigDomainFieldsDecoder
    , cdashigDomainFieldsLinksDecoder
    , cdashigDomainFieldsRefDecoder
    , cdashigDomainLinksDecoder
    , cdashigDomainRefDecoder
    , cdashigDomainRefElementDecoder
    , cdashigProductDecoder
    , cdashigProductClassesDecoder
    , cdashigProductClassesLinksDecoder
    , cdashigProductClassesRefDecoder
    , cdashigProductDomainsDecoder
    , cdashigProductDomainsLinksDecoder
    , cdashigProductDomainsRefDecoder
    , cdashigProductLinksDecoder
    , cdashigProductRefDecoder
    , cdashigProductRefElementDecoder
    , cdashigProductScenariosDecoder
    , cdashigProductScenariosLinksDecoder
    , cdashigProductScenariosRefDecoder
    , cdashigScenarioDecoder
    , cdashigScenarioFieldDecoder
    , cdashigScenarioFieldLinksDecoder
    , cdashigScenarioFieldRefDecoder
    , cdashigScenarioFieldRefElementDecoder
    , cdashigScenarioFieldRefVersionDecoder
    , cdashigScenarioFieldsDecoder
    , cdashigScenarioFieldsLinksDecoder
    , cdashigScenarioFieldsRefDecoder
    , cdashigScenarioLinksDecoder
    , cdashigScenarioRefDecoder
    , cdashigScenarioRefElementDecoder
    , ctCodelistDecoder
    , ctCodelistLinksDecoder
    , ctCodelistRefDecoder
    , ctCodelistRefElementDecoder
    , ctCodelistRefVersionDecoder
    , ctCodelistTermsDecoder
    , ctCodelistTermsLinksDecoder
    , ctCodelistTermsRefDecoder
    , ctPackageDecoder
    , ctPackageCodelistsDecoder
    , ctPackageCodelistsLinksDecoder
    , ctPackageCodelistsRefDecoder
    , ctPackageLinksDecoder
    , ctPackageRefDecoder
    , ctPackageRefElementDecoder
    , ctPackageTermDecoder
    , ctPackagesDecoder
    , ctPackagesLinksDecoder
    , ctPackagesRefDecoder
    , ctTermDecoder
    , ctTermLinksDecoder
    , ctTermRefDecoder
    , ctTermRefElementDecoder
    , ctTermRefVersionDecoder
    , defaultErrorResponseDecoder
    , defaultSearchResponseDecoder
    , defaultSearchResponseHitsInnerDecoder
    , defaultSearchScopesDecoder
    , exportAdamDatastructuresRowDecoder
    , exportAdamDatastructuresTableDecoder
    , exportAdamVariablesRowDecoder
    , exportAdamVariablesTableDecoder
    , exportAdamWorkbookDecoder
    , exportCdashClassVariablesRowDecoder
    , exportCdashDomainVariablesRowDecoder
    , exportCdashTableDecoder
    , exportCdashigDomainVariablesRowDecoder
    , exportCdashigScenarioVariablesRowDecoder
    , exportCdashigTableDecoder
    , exportCtCodelistDecoder
    , exportCtTableDecoder
    , exportCtTermDecoder
    , exportQrsCsvItemsRowDecoder
    , exportQrsGeneralDecoder
    , exportQrsItemsTableDecoder
    , exportQrsResponsesDecoder
    , exportQrsWorkbookDecoder
    , exportQrsWorkbookItemsRowDecoder
    , exportSdtmClassVariablesRowDecoder
    , exportSdtmDatasetVariablesRowDecoder
    , exportSdtmDatasetsRowDecoder
    , exportSdtmDatasetsTableDecoder
    , exportSdtmVariablesTableDecoder
    , exportSdtmWorkbookDecoder
    , exportSdtmigDatasetsRowDecoder
    , exportSdtmigDatasetsTableDecoder
    , exportSdtmigVariablesRowDecoder
    , exportSdtmigVariablesTableDecoder
    , exportSdtmigWorkbookDecoder
    , exportSendigDatasetsRowDecoder
    , exportSendigDatasetsTableDecoder
    , exportSendigVariablesRowDecoder
    , exportSendigVariablesTableDecoder
    , exportSendigWorkbookDecoder
    , healthDecoder
    , lastupdatedDecoder
    , lastupdatedLinksDecoder
    , lastupdatedRefDecoder
    , maintenanceBodyDecoder
    , mdrSearchScopesGet200ResponseDecoder
    , productgroupDataAnalysisDecoder
    , productgroupDataAnalysisLinksDecoder
    , productgroupDataCollectionDecoder
    , productgroupDataCollectionLinksDecoder
    , productgroupDataTabulationDecoder
    , productgroupDataTabulationLinksDecoder
    , productgroupQrsDecoder
    , productgroupQrsLinksDecoder
    , productgroupRefDecoder
    , productgroupTerminologyDecoder
    , productgroupTerminologyLinksDecoder
    , productsDecoder
    , productsLinksDecoder
    , productsRefDecoder
    , qrsItemDecoder
    , qrsItemLinksDecoder
    , qrsItemRefElementDecoder
    , qrsItemsDecoder
    , qrsItemsLinksDecoder
    , qrsItemsRefDecoder
    , qrsProductDecoder
    , qrsProductLinksDecoder
    , qrsProductRefDecoder
    , qrsRefElementDecoder
    , qrsResponseLinksDecoder
    , qrsResponsegroupDecoder
    , qrsResponsegroupLinksDecoder
    , qrsResponsegroupRefDecoder
    , qrsResponsegroupRefElementDecoder
    , qrsResponsegroupsDecoder
    , qrsResponsegroupsLinksDecoder
    , qrsResponsegroupsRefDecoder
    , qrsResponsesDecoder
    , rootCdashClassFieldDecoder
    , rootCdashClassFieldLinksDecoder
    , rootCdashClassFieldRefDecoder
    , rootCdashDomainFieldDecoder
    , rootCdashDomainFieldLinksDecoder
    , rootCdashDomainFieldRefDecoder
    , rootCdashigDomainFieldDecoder
    , rootCdashigDomainFieldLinksDecoder
    , rootCdashigDomainFieldRefDecoder
    , rootCdashigScenarioFieldDecoder
    , rootCdashigScenarioFieldLinksDecoder
    , rootCdashigScenarioFieldRefDecoder
    , rootCtCodelistDecoder
    , rootCtCodelistLinksDecoder
    , rootCtCodelistRefDecoder
    , rootCtCodelistRefElementDecoder
    , rootCtTermDecoder
    , rootCtTermLinksDecoder
    , rootCtTermRefDecoder
    , rootSdtmClassVariableDecoder
    , rootSdtmClassVariableLinksDecoder
    , rootSdtmClassVariableRefDecoder
    , rootSdtmDatasetVariableDecoder
    , rootSdtmDatasetVariableLinksDecoder
    , rootSdtmDatasetVariableRefDecoder
    , rootSdtmigDatasetVariableDecoder
    , rootSdtmigDatasetVariableLinksDecoder
    , rootSdtmigDatasetVariableRefDecoder
    , rootSendigDatasetVariableDecoder
    , rootSendigDatasetVariableLinksDecoder
    , rootSendigDatasetVariableRefDecoder
    , scopeValuesDecoder
    , sdtmClassDecoder
    , sdtmClassDatasetsDecoder
    , sdtmClassDatasetsLinksDecoder
    , sdtmClassDatasetsRefDecoder
    , sdtmClassLinksDecoder
    , sdtmClassRefDecoder
    , sdtmClassRefElementDecoder
    , sdtmClassRefSubclassDecoder
    , sdtmClassVariableDecoder
    , sdtmClassVariableLinksDecoder
    , sdtmClassVariableRefDecoder
    , sdtmClassVariableRefElementDecoder
    , sdtmClassVariableRefQualifiesDecoder
    , sdtmClassVariableRefTargetDecoder
    , sdtmClassVariableRefVersionDecoder
    , sdtmClassVariablesDecoder
    , sdtmClassVariablesLinksDecoder
    , sdtmClassVariablesRefDecoder
    , sdtmClassesDecoder
    , sdtmClassesLinksDecoder
    , sdtmClassesRefDecoder
    , sdtmDatasetDecoder
    , sdtmDatasetLinksDecoder
    , sdtmDatasetRefDecoder
    , sdtmDatasetRefElementDecoder
    , sdtmDatasetVariableDecoder
    , sdtmDatasetVariableLinksDecoder
    , sdtmDatasetVariableRefDecoder
    , sdtmDatasetVariableRefElementDecoder
    , sdtmDatasetVariableRefTargetDecoder
    , sdtmDatasetVariableRefVersionDecoder
    , sdtmDatasetVariablesDecoder
    , sdtmDatasetVariablesLinksDecoder
    , sdtmDatasetVariablesRefDecoder
    , sdtmDatasetsDecoder
    , sdtmDatasetsLinksDecoder
    , sdtmDatasetsRefDecoder
    , sdtmProductDecoder
    , sdtmProductLinksDecoder
    , sdtmProductRefDecoder
    , sdtmProductRefElementDecoder
    , sdtmigClassDecoder
    , sdtmigClassDatasetsDecoder
    , sdtmigClassDatasetsLinksDecoder
    , sdtmigClassDatasetsRefDecoder
    , sdtmigClassLinksDecoder
    , sdtmigClassRefDecoder
    , sdtmigClassRefElementDecoder
    , sdtmigClassRefSubclassDecoder
    , sdtmigClassesDecoder
    , sdtmigClassesLinksDecoder
    , sdtmigClassesRefDecoder
    , sdtmigDatasetDecoder
    , sdtmigDatasetLinksDecoder
    , sdtmigDatasetRefDecoder
    , sdtmigDatasetRefElementDecoder
    , sdtmigDatasetVariableDecoder
    , sdtmigDatasetVariableLinksDecoder
    , sdtmigDatasetVariableRefDecoder
    , sdtmigDatasetVariableRefElementDecoder
    , sdtmigDatasetVariableRefTargetDecoder
    , sdtmigDatasetVariableRefVersionDecoder
    , sdtmigDatasetVariablesDecoder
    , sdtmigDatasetVariablesLinksDecoder
    , sdtmigDatasetVariablesRefDecoder
    , sdtmigDatasetsDecoder
    , sdtmigDatasetsLinksDecoder
    , sdtmigDatasetsRefDecoder
    , sdtmigProductDecoder
    , sdtmigProductLinksDecoder
    , sdtmigProductRefDecoder
    , sdtmigProductRefElementDecoder
    , sendigClassDecoder
    , sendigClassDatasetsDecoder
    , sendigClassDatasetsLinksDecoder
    , sendigClassDatasetsRefDecoder
    , sendigClassLinksDecoder
    , sendigClassRefDecoder
    , sendigClassRefElementDecoder
    , sendigClassRefSubclassDecoder
    , sendigClassesDecoder
    , sendigClassesLinksDecoder
    , sendigClassesRefDecoder
    , sendigDatasetDecoder
    , sendigDatasetLinksDecoder
    , sendigDatasetRefDecoder
    , sendigDatasetRefElementDecoder
    , sendigDatasetVariableDecoder
    , sendigDatasetVariableLinksDecoder
    , sendigDatasetVariableRefDecoder
    , sendigDatasetVariableRefElementDecoder
    , sendigDatasetVariableRefVersionDecoder
    , sendigDatasetVariablesDecoder
    , sendigDatasetVariablesLinksDecoder
    , sendigDatasetVariablesRefDecoder
    , sendigDatasetsDecoder
    , sendigDatasetsLinksDecoder
    , sendigDatasetsRefDecoder
    , sendigProductDecoder
    , sendigProductLinksDecoder
    , sendigProductRefDecoder
    , sendigProductRefElementDecoder
    , xmlAboutDecoder
    , xmlAdamDatastructureDecoder
    , xmlAdamDatastructureVariablesDecoder
    , xmlAdamDatastructureVarsetsDecoder
    , xmlAdamProductDecoder
    , xmlAdamProductDatastructuresDecoder
    , xmlAdamVariableDecoder
    , xmlAdamVarsetDecoder
    , xmlCdashClassDecoder
    , xmlCdashClassDomainsDecoder
    , xmlCdashClassFieldDecoder
    , xmlCdashDomainDecoder
    , xmlCdashDomainFieldDecoder
    , xmlCdashDomainFieldsDecoder
    , xmlCdashProductDecoder
    , xmlCdashProductClassesDecoder
    , xmlCdashProductDomainsDecoder
    , xmlCdashigClassDecoder
    , xmlCdashigClassDomainsDecoder
    , xmlCdashigClassScenariosDecoder
    , xmlCdashigDomainDecoder
    , xmlCdashigDomainFieldDecoder
    , xmlCdashigDomainFieldsDecoder
    , xmlCdashigProductDecoder
    , xmlCdashigProductClassesDecoder
    , xmlCdashigProductDomainsDecoder
    , xmlCdashigProductScenariosDecoder
    , xmlCdashigScenarioDecoder
    , xmlCdashigScenarioFieldDecoder
    , xmlCdashigScenarioFieldsDecoder
    , xmlCtCodelistDecoder
    , xmlCtCodelistTermsDecoder
    , xmlCtPackageDecoder
    , xmlCtPackageCodelistsDecoder
    , xmlCtPackagesDecoder
    , xmlCtTermDecoder
    , xmlLastupdatedDecoder
    , xmlProductgroupDataAnalysisDecoder
    , xmlProductgroupDataCollectionDecoder
    , xmlProductgroupDataTabulationDecoder
    , xmlProductgroupTerminologyDecoder
    , xmlProductsDecoder
    , xmlQrsItemDecoder
    , xmlQrsItemsDecoder
    , xmlQrsProductDecoder
    , xmlQrsResponsegroupDecoder
    , xmlQrsResponsegroupsDecoder
    , xmlRootCdashClassFieldDecoder
    , xmlRootCdashDomainFieldDecoder
    , xmlRootCdashigDomainFieldDecoder
    , xmlRootCdashigScenarioFieldDecoder
    , xmlRootCtCodelistDecoder
    , xmlRootCtTermDecoder
    , xmlRootSdtmClassVariableDecoder
    , xmlRootSdtmDatasetVariableDecoder
    , xmlRootSdtmigDatasetVariableDecoder
    , xmlRootSendigDatasetVariableDecoder
    , xmlSdtmClassDecoder
    , xmlSdtmClassDatasetsDecoder
    , xmlSdtmClassVariableDecoder
    , xmlSdtmClassVariablesDecoder
    , xmlSdtmClassesDecoder
    , xmlSdtmDatasetDecoder
    , xmlSdtmDatasetVariableDecoder
    , xmlSdtmDatasetVariablesDecoder
    , xmlSdtmDatasetsDecoder
    , xmlSdtmProductDecoder
    , xmlSdtmigClassDecoder
    , xmlSdtmigClassDatasetsDecoder
    , xmlSdtmigClassesDecoder
    , xmlSdtmigDatasetDecoder
    , xmlSdtmigDatasetVariableDecoder
    , xmlSdtmigDatasetVariablesDecoder
    , xmlSdtmigDatasetsDecoder
    , xmlSdtmigProductDecoder
    , xmlSendigClassDecoder
    , xmlSendigClassDatasetsDecoder
    , xmlSendigClassesDecoder
    , xmlSendigDatasetDecoder
    , xmlSendigDatasetVariableDecoder
    , xmlSendigDatasetVariablesDecoder
    , xmlSendigDatasetsDecoder
    , xmlSendigProductDecoder
    )

import Api
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias About =
    { links : Maybe AboutLinks
    , releasenotes : Maybe String
    , apidocumentation : Maybe String
    }


type alias AboutLinks =
    { self : Maybe AboutRef
    , lastupdated : Maybe LastupdatedRef
    }


type alias AboutRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamDatastructure =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , class : Maybe String
    , links : Maybe AdamDatastructureLinks
    , analysisVariableSets : Maybe ( List AdamVarset )
    }


type alias AdamDatastructureLinks =
    { self : Maybe AdamDatastructureRef
    , parentProduct : Maybe AdamProductRef
    , priorVersion : Maybe AdamDatastructureRef
    }


type alias AdamDatastructureRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamDatastructureRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamDatastructureVariables =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , class : Maybe String
    , links : Maybe AdamDatastructureVariablesLinks
    }


type alias AdamDatastructureVariablesLinks =
    { self : Maybe AdamDatastructureVariablesRef
    , parentProduct : Maybe AdamProductRef
    , priorVersion : Maybe AdamDatastructureVariablesRef
    , analysisVariables : Maybe ( List AdamVariableRefElement )
    }


type alias AdamDatastructureVariablesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamDatastructureVarsets =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , class : Maybe String
    , links : Maybe AdamDatastructureVarsetsLinks
    }


type alias AdamDatastructureVarsetsLinks =
    { self : Maybe AdamDatastructureVarsetsRef
    , parentProduct : Maybe AdamProductRef
    , priorVersion : Maybe AdamDatastructureVarsetsRef
    , analysisVariableSets : Maybe ( List AdamVarsetRefElement )
    }


type alias AdamDatastructureVarsetsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamProduct =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe AdamProductLinks
    , dataStructures : Maybe ( List AdamDatastructure )
    }


type alias AdamProductDatastructures =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe AdamProductDatastructuresLinks
    }


type alias AdamProductDatastructuresLinks =
    { self : Maybe AdamProductDatastructuresRef
    , priorVersion : Maybe AdamProductDatastructuresRef
    , dataStructures : Maybe ( List AdamDatastructureRefElement )
    }


type alias AdamProductDatastructuresRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamProductLinks =
    { self : Maybe AdamProductRef
    , model : Maybe AdamProductRef
    , priorVersion : Maybe AdamProductRef
    }


type alias AdamProductRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamProductRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamVariable =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , core : Maybe String
    , simpleDatatype : Maybe String
    , describedValueDomain : Maybe String
    , valueList : Maybe ( List String )
    , links : Maybe AdamVariableLinks
    }


type alias AdamVariableLinks =
    { self : Maybe AdamVariableRef
    , codelist : Maybe RootCtCodelistRef
    , parentProduct : Maybe AdamProductRef
    , parentDatastructure : Maybe AdamDatastructureRef
    , parentVariableSet : Maybe AdamVarsetRef
    , priorVersion : Maybe AdamVariableRef
    }


type alias AdamVariableRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamVariableRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamVarset =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe AdamVarsetLinks
    , analysisVariables : Maybe ( List AdamVariable )
    }


type alias AdamVarsetLinks =
    { self : Maybe AdamVarsetRef
    , parentProduct : Maybe AdamProductRef
    , parentDatastructure : Maybe AdamDatastructureRef
    , priorVersion : Maybe AdamVarsetRef
    }


type alias AdamVarsetRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias AdamVarsetRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashClass =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe CdashClassLinks
    , cdashModelFields : Maybe ( List CdashClassField )
    }


type alias CdashClassDomains =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe CdashClassDomainsLinks
    }


type alias CdashClassDomainsLinks =
    { self : Maybe CdashClassDomainsRef
    , domains : Maybe ( List CdashDomainRefElement )
    }


type alias CdashClassDomainsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashClassField =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , definition : Maybe String
    , questionText : Maybe String
    , prompt : Maybe String
    , simpleDatatype : Maybe String
    , implementationNotes : Maybe String
    , mappingInstructions : Maybe String
    , links : Maybe CdashClassFieldLinks
    }


type alias CdashClassFieldLinks =
    { self : Maybe CdashClassFieldRef
    , codelist : Maybe ( List RootCtCodelistRefElement )
    , parentProduct : Maybe CdashProductRef
    , parentClass : Maybe CdashClassRef
    , rootItem : Maybe RootCdashClassFieldRef
    , priorVersion : Maybe CdashClassFieldRef
    , sdtmClassMappingTargets : Maybe ( List SdtmClassVariableRefTarget )
    , sdtmDatasetMappingTargets : Maybe ( List SdtmDatasetVariableRefTarget )
    }


type alias CdashClassFieldRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashClassFieldRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashClassLinks =
    { self : Maybe CdashClassRef
    , parentProduct : Maybe CdashProductRef
    , priorVersion : Maybe CdashClassRef
    }


type alias CdashClassRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashClassRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashDomain =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , links : Maybe CdashDomainLinks
    , fields : Maybe ( List CdashDomainField )
    }


type alias CdashDomainField =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , definition : Maybe String
    , domainSpecific : Maybe String
    , questionText : Maybe String
    , prompt : Maybe String
    , simpleDatatype : Maybe String
    , implementationNotes : Maybe String
    , mappingInstructions : Maybe String
    , links : Maybe CdashDomainFieldLinks
    }


type alias CdashDomainFieldLinks =
    { self : Maybe CdashDomainFieldRef
    , codelist : Maybe ( List RootCtCodelistRefElement )
    , parentProduct : Maybe CdashProductRef
    , parentClass : Maybe CdashClassRef
    , parentDomain : Maybe CdashDomainRef
    , rootItem : Maybe RootCdashDomainFieldRef
    , priorVersion : Maybe CdashDomainFieldRef
    , sdtmDatasetMappingTargets : Maybe ( List SdtmDatasetVariableRefTarget )
    , sdtmigDatasetMappingTargets : Maybe ( List SdtmigDatasetVariableRefTarget )
    }


type alias CdashDomainFieldRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashDomainFieldRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashDomainFieldRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashDomainFields =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , links : Maybe CdashDomainFieldsLinks
    }


type alias CdashDomainFieldsLinks =
    { self : Maybe CdashDomainFieldsRef
    , parentProduct : Maybe CdashProductRef
    , parentClass : Maybe CdashClassRef
    , fields : Maybe ( List CdashDomainFieldRefElement )
    }


type alias CdashDomainFieldsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashDomainLinks =
    { self : Maybe CdashDomainRef
    , parentProduct : Maybe CdashProductRef
    , parentClass : Maybe CdashClassRef
    , priorVersion : Maybe CdashDomainRef
    }


type alias CdashDomainRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashDomainRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashProduct =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe CdashProductLinks
    , classes : Maybe ( List CdashClass )
    , domains : Maybe ( List CdashDomain )
    }


type alias CdashProductClasses =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe CdashProductClassesLinks
    }


type alias CdashProductClassesLinks =
    { self : Maybe CdashProductClassesRef
    , parentProduct : Maybe CdashProductRef
    , classes : Maybe ( List CdashClassRefElement )
    }


type alias CdashProductClassesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashProductDomains =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe CdashProductDomainsLinks
    }


type alias CdashProductDomainsLinks =
    { self : Maybe CdashProductDomainsRef
    , parentProduct : Maybe CdashProductRef
    , domains : Maybe ( List CdashDomainRefElement )
    }


type alias CdashProductDomainsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashProductLinks =
    { self : Maybe CdashProductRef
    , priorVersion : Maybe CdashProductRef
    }


type alias CdashProductRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashProductRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigClass =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe CdashigClassLinks
    , domains : Maybe ( List CdashigDomain )
    , scenarios : Maybe ( List CdashigScenario )
    }


type alias CdashigClassDomains =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe CdashigClassDomainsLinks
    }


type alias CdashigClassDomainsLinks =
    { self : Maybe CdashigClassDomainsRef
    , domains : Maybe ( List CdashigDomainRefElement )
    }


type alias CdashigClassDomainsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigClassLinks =
    { self : Maybe CdashigClassRef
    , modelClass : Maybe CdashClassRef
    , parentProduct : Maybe CdashigProductRef
    , parentClass : Maybe CdashigClassRef
    , subclasses : Maybe ( List CdashigClassRefSubclass )
    , priorVersion : Maybe CdashigClassRef
    }


type alias CdashigClassRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigClassRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigClassRefSubclass =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigClassScenarios =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe CdashigClassScenariosLinks
    }


type alias CdashigClassScenariosLinks =
    { self : Maybe CdashigClassScenariosRef
    , scenarios : Maybe ( List CdashigScenarioRefElement )
    }


type alias CdashigClassScenariosRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigDomain =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , links : Maybe CdashigDomainLinks
    , fields : Maybe ( List CdashigDomainField )
    }


type alias CdashigDomainField =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , definition : Maybe String
    , questionText : Maybe String
    , prompt : Maybe String
    , completionInstructions : Maybe String
    , implementationNotes : Maybe String
    , simpleDatatype : Maybe String
    , mappingInstructions : Maybe String
    , core : Maybe String
    , links : Maybe CdashigDomainFieldLinks
    }


type alias CdashigDomainFieldLinks =
    { self : Maybe CdashigDomainFieldRef
    , codelist : Maybe ( List RootCtCodelistRefElement )
    , parentProduct : Maybe CdashigProductRef
    , parentDomain : Maybe CdashigDomainRef
    , rootItem : Maybe RootCdashigDomainFieldRef
    , priorVersion : Maybe CdashigDomainFieldRef
    , sdtmClassMappingTargets : Maybe ( List SdtmClassVariableRefTarget )
    , sdtmigDatasetMappingTargets : Maybe ( List SdtmigDatasetVariableRefTarget )
    }


type alias CdashigDomainFieldRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigDomainFieldRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigDomainFieldRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigDomainFields =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , links : Maybe CdashigDomainFieldsLinks
    }


type alias CdashigDomainFieldsLinks =
    { self : Maybe CdashigDomainFieldsRef
    , parentProduct : Maybe CdashigProductRef
    , parentClass : Maybe CdashigClassRef
    , fields : Maybe ( List CdashigDomainFieldRefElement )
    }


type alias CdashigDomainFieldsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigDomainLinks =
    { self : Maybe CdashigDomainRef
    , parentProduct : Maybe CdashigProductRef
    , parentClass : Maybe CdashigClassRef
    , priorVersion : Maybe CdashigDomainRef
    , scenarios : Maybe ( List CdashigScenarioRefElement )
    }


type alias CdashigDomainRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigDomainRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigProduct =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe CdashigProductLinks
    , classes : Maybe ( List CdashigClass )
    }


type alias CdashigProductClasses =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe CdashigProductClassesLinks
    }


type alias CdashigProductClassesLinks =
    { self : Maybe CdashigProductClassesRef
    , parentProduct : Maybe CdashigProductRef
    , classes : Maybe ( List CdashigClassRefElement )
    }


type alias CdashigProductClassesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigProductDomains =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe CdashigProductDomainsLinks
    }


type alias CdashigProductDomainsLinks =
    { self : Maybe CdashigProductDomainsRef
    , parentProduct : Maybe CdashigProductRef
    , domains : Maybe ( List CdashigDomainRefElement )
    }


type alias CdashigProductDomainsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigProductLinks =
    { self : Maybe CdashigProductRef
    , model : Maybe CdashProductRef
    , priorVersion : Maybe CdashigProductRef
    }


type alias CdashigProductRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigProductRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigProductScenarios =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe CdashigProductScenariosLinks
    }


type alias CdashigProductScenariosLinks =
    { self : Maybe CdashigProductScenariosRef
    , parentProduct : Maybe CdashigProductRef
    , scenarios : Maybe ( List CdashigScenarioRefElement )
    }


type alias CdashigProductScenariosRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigScenario =
    { ordinal : Maybe String
    , domain : Maybe String
    , scenario : Maybe String
    , links : Maybe CdashigScenarioLinks
    , fields : Maybe ( List CdashigScenarioField )
    }


type alias CdashigScenarioField =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , definition : Maybe String
    , questionText : Maybe String
    , prompt : Maybe String
    , completionInstructions : Maybe String
    , implementationNotes : Maybe String
    , simpleDatatype : Maybe String
    , mappingInstructions : Maybe String
    , core : Maybe String
    , links : Maybe CdashigScenarioFieldLinks
    }


type alias CdashigScenarioFieldLinks =
    { self : Maybe CdashigScenarioFieldRef
    , codelist : Maybe ( List RootCtCodelistRefElement )
    , parentProduct : Maybe CdashigProductRef
    , parentDomain : Maybe CdashigDomainRef
    , parentScenario : Maybe CdashigScenarioRef
    , rootItem : Maybe RootCdashigScenarioFieldRef
    , priorVersion : Maybe CdashigScenarioFieldRef
    , sdtmigDatasetMappingTargets : Maybe ( List SdtmigDatasetVariableRefTarget )
    }


type alias CdashigScenarioFieldRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigScenarioFieldRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigScenarioFieldRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigScenarioFields =
    { ordinal : Maybe String
    , domain : Maybe String
    , scenario : Maybe String
    , links : Maybe CdashigScenarioFieldsLinks
    }


type alias CdashigScenarioFieldsLinks =
    { self : Maybe CdashigScenarioFieldsRef
    , parentProduct : Maybe CdashigProductRef
    , parentClass : Maybe CdashigClassRef
    , parentDomain : Maybe CdashigDomainRef
    , fields : Maybe ( List CdashigScenarioFieldRefElement )
    }


type alias CdashigScenarioFieldsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigScenarioLinks =
    { self : Maybe CdashigScenarioRef
    , parentProduct : Maybe CdashigProductRef
    , parentClass : Maybe CdashigClassRef
    , parentDomain : Maybe CdashigDomainRef
    , priorVersion : Maybe CdashigScenarioRef
    }


type alias CdashigScenarioRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CdashigScenarioRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtCodelist =
    { conceptId : Maybe String
    , extensible : Maybe String
    , name : Maybe String
    , submissionValue : Maybe String
    , definition : Maybe String
    , preferredTerm : Maybe String
    , synonyms : Maybe ( List String )
    , links : Maybe CtCodelistLinks
    , terms : Maybe ( List CtPackageTerm )
    }


type alias CtCodelistLinks =
    { self : Maybe CtCodelistRef
    , parentPackage : Maybe CtPackageRef
    , rootItem : Maybe RootCtCodelistRef
    , priorVersion : Maybe CtCodelistRef
    }


type alias CtCodelistRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtCodelistRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtCodelistRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtCodelistTerms =
    { conceptId : Maybe String
    , extensible : Maybe String
    , name : Maybe String
    , submissionValue : Maybe String
    , definition : Maybe String
    , preferredTerm : Maybe String
    , synonyms : Maybe ( List String )
    , links : Maybe CtCodelistTermsLinks
    }


type alias CtCodelistTermsLinks =
    { self : Maybe CtCodelistTermsRef
    , parentPackage : Maybe CtPackageRef
    , rootItem : Maybe RootCtCodelistRef
    , priorVersion : Maybe CtCodelistTermsRef
    , terms : Maybe ( List CtTermRefElement )
    }


type alias CtCodelistTermsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtPackage =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe CtPackageLinks
    , codelists : Maybe ( List CtPackageCodelists )
    }


type alias CtPackageCodelists =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe CtPackageCodelistsLinks
    }


type alias CtPackageCodelistsLinks =
    { self : Maybe CtPackageCodelistsRef
    , priorVersion : Maybe CtPackageCodelistsRef
    , codelists : Maybe ( List CtCodelistRefElement )
    }


type alias CtPackageCodelistsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtPackageLinks =
    { self : Maybe CtPackageRef
    , priorVersion : Maybe CtPackageRef
    }


type alias CtPackageRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtPackageRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtPackageTerm =
    { conceptId : Maybe String
    , submissionValue : Maybe String
    , definition : Maybe String
    , preferredTerm : Maybe String
    , synonyms : Maybe ( List String )
    }


type alias CtPackages =
    { links : Maybe CtPackagesLinks
    }


type alias CtPackagesLinks =
    { self : Maybe CtPackagesRef
    , packages : Maybe ( List CtPackageRefElement )
    }


type alias CtPackagesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtTerm =
    { conceptId : Maybe String
    , submissionValue : Maybe String
    , definition : Maybe String
    , preferredTerm : Maybe String
    , synonyms : Maybe ( List String )
    , links : Maybe CtTermLinks
    }


type alias CtTermLinks =
    { self : Maybe CtTermRef
    , parentPackage : Maybe CtPackageRef
    , parentCodelist : Maybe CtCodelistRef
    , rootItem : Maybe RootCtTermRef
    , priorVersion : Maybe CtTermRef
    }


type alias CtTermRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtTermRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias CtTermRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias DefaultErrorResponse =
    { statusCode : Maybe String
    , reasonPhrase : Maybe String
    , userMessage : Maybe String
    , adminMessage : Maybe String
    }


type alias DefaultSearchResponse =
    { hits : Maybe ( List DefaultSearchResponseHitsInner )
    , totalHits : Maybe Float
    }


type alias DefaultSearchResponseHitsInner =
    { href : String
    , type_ : String
    }


type DefaultSearchScopes
    = DefaultSearchScopesClass
    | DefaultSearchScopesCodelist
    | DefaultSearchScopesConceptId
    | DefaultSearchScopesCore
    | DefaultSearchScopesDataStructure
    | DefaultSearchScopesDatasetStructure
    | DefaultSearchScopesDefinition
    | DefaultSearchScopesDescription
    | DefaultSearchScopesDomain
    | DefaultSearchScopesEffectiveDate
    | DefaultSearchScopesExtensible
    | DefaultSearchScopesHref
    | DefaultSearchScopesLabel
    | DefaultSearchScopesMeasureType
    | DefaultSearchScopesName
    | DefaultSearchScopesPreferredTerm
    | DefaultSearchScopesProduct
    | DefaultSearchScopesProductGroup
    | DefaultSearchScopesRegistrationStatus
    | DefaultSearchScopesRoleDescription
    | DefaultSearchScopesSdtmTarget
    | DefaultSearchScopesSimpleDatatype
    | DefaultSearchScopesSubmissionValue
    | DefaultSearchScopesSynonyms
    | DefaultSearchScopesType
    | DefaultSearchScopesUiHref
    | DefaultSearchScopesValueDomain
    | DefaultSearchScopesVariableSet
    | DefaultSearchScopesVersion


defaultSearchScopesVariants : List DefaultSearchScopes
defaultSearchScopesVariants =
    [ DefaultSearchScopesClass
    , DefaultSearchScopesCodelist
    , DefaultSearchScopesConceptId
    , DefaultSearchScopesCore
    , DefaultSearchScopesDataStructure
    , DefaultSearchScopesDatasetStructure
    , DefaultSearchScopesDefinition
    , DefaultSearchScopesDescription
    , DefaultSearchScopesDomain
    , DefaultSearchScopesEffectiveDate
    , DefaultSearchScopesExtensible
    , DefaultSearchScopesHref
    , DefaultSearchScopesLabel
    , DefaultSearchScopesMeasureType
    , DefaultSearchScopesName
    , DefaultSearchScopesPreferredTerm
    , DefaultSearchScopesProduct
    , DefaultSearchScopesProductGroup
    , DefaultSearchScopesRegistrationStatus
    , DefaultSearchScopesRoleDescription
    , DefaultSearchScopesSdtmTarget
    , DefaultSearchScopesSimpleDatatype
    , DefaultSearchScopesSubmissionValue
    , DefaultSearchScopesSynonyms
    , DefaultSearchScopesType
    , DefaultSearchScopesUiHref
    , DefaultSearchScopesValueDomain
    , DefaultSearchScopesVariableSet
    , DefaultSearchScopesVersion
    ]


type alias ExportAdamDatastructuresRow =
    { version : Maybe String
    , dataStructureName : Maybe String
    , datasetName : Maybe String
    , datasetLabel : Maybe String
    , datasetDescription : Maybe String
    , class : Maybe String
    }


type alias ExportAdamDatastructuresTable =
    { datastructures : Maybe ( List ExportAdamDatastructuresRow )
    }


type alias ExportAdamVariablesRow =
    { version : Maybe String
    , dataStructureName : Maybe String
    , datasetName : Maybe String
    , variableGroup : Maybe String
    , variableName : Maybe String
    , variableLabel : Maybe String
    , Type_ : Maybe String
    , codelistControlledTerms : Maybe String
    , core : Maybe String
    , cDISCNotes : Maybe String
    }


type alias ExportAdamVariablesTable =
    { variables : Maybe ( List ExportAdamVariablesRow )
    }


type alias ExportAdamWorkbook =
    { variables : Maybe ( List ExportAdamVariablesRow )
    , datastructures : Maybe ( List ExportAdamDatastructuresRow )
    }


type alias ExportCdashClassVariablesRow =
    { version : Maybe String
    , class : Maybe String
    , domain : Maybe String
    , variableOrder : Maybe String
    , cDASHVariable : Maybe String
    , cDASHVariableLabel : Maybe String
    , dRAFTCDASHDefinition : Maybe String
    , domainSpecific : Maybe String
    , questionText : Maybe String
    , prompt : Maybe String
    , Type_ : Maybe String
    , sDTMTarget : Maybe ( List String )
    , mappingInstructions : Maybe String
    , controlledTerminologyCodelistName : Maybe String
    , implementationNotes : Maybe String
    }


type alias ExportCdashDomainVariablesRow =
    { version : Maybe String
    , class : Maybe String
    , domain : Maybe String
    , variableOrder : Maybe String
    , cDASHVariable : Maybe String
    , cDASHVariableLabel : Maybe String
    , dRAFTCDASHDefinition : Maybe String
    , domainSpecific : Maybe String
    , questionText : Maybe String
    , prompt : Maybe String
    , Type_ : Maybe String
    , sDTMTarget : Maybe ( List String )
    , mappingInstructions : Maybe String
    , controlledTerminologyCodelistName : Maybe String
    , implementationNotes : Maybe String
    }


type alias ExportCdashTable =
    { classvariables : Maybe ( List ExportCdashClassVariablesRow )
    , domainvariables : Maybe ( List ExportCdashDomainVariablesRow )
    }


type alias ExportCdashigDomainVariablesRow =
    { version : Maybe String
    , class : Maybe String
    , domain : Maybe String
    , dataCollectionScenario : Maybe String
    , variableOrder : Maybe String
    , cDASHIGVariable : Maybe String
    , cDASHIGVariableLabel : Maybe String
    , dRAFTCDASHIGDefinition : Maybe String
    , questionText : Maybe String
    , prompt : Maybe String
    , Type_ : Maybe String
    , cDASHIGCore : Maybe String
    , caseReportFormCompletionInstructions : Maybe String
    , sDTMIGTarget : Maybe ( List String )
    , mappingInstructions : Maybe String
    , controlledTerminologyCodelistName : Maybe String
    , implementationNotes : Maybe String
    }


type alias ExportCdashigScenarioVariablesRow =
    { version : Maybe String
    , class : Maybe String
    , domain : Maybe String
    , dataCollectionScenario : Maybe String
    , variableOrder : Maybe String
    , cDASHIGVariable : Maybe String
    , cDASHIGVariableLabel : Maybe String
    , dRAFTCDASHIGDefinition : Maybe String
    , questionText : Maybe String
    , prompt : Maybe String
    , Type_ : Maybe String
    , cDASHIGCore : Maybe String
    , caseReportFormCompletionInstructions : Maybe String
    , sDTMIGTarget : Maybe ( List String )
    , mappingInstructions : Maybe String
    , controlledTerminologyCodelistName : Maybe String
    , implementationNotes : Maybe String
    }


type alias ExportCdashigTable =
    { domainvariables : Maybe ( List ExportCdashigDomainVariablesRow )
    , scenariovariables : Maybe ( List ExportCdashigScenarioVariablesRow )
    }


type alias ExportCtCodelist =
    { code : Maybe String
    , codelistCode : Maybe String
    , codelistExtensibleYesNo : Maybe String
    , codelistName : Maybe String
    , cDISCSubmissionValue : Maybe String
    , cDISCSynonyms : Maybe ( List String )
    , cDISCDefinition : Maybe String
    , nCIPreferredTerm : Maybe String
    , standardAndDate : Maybe String
    ,  : Maybe ( List ExportCtTerm )
    }


type alias ExportCtTable =
    { ct : Maybe ( List ExportCtCodelist )
    }


type alias ExportCtTerm =
    { bundle1 : Maybe String
    , cDISCSynonyms : Maybe ( List String )
    , bundle2 : Maybe String
    }


type alias ExportQrsCsvItemsRow =
    { qRSMeasureName : Maybe String
    , qRSMeasureLabel : Maybe String
    , qRSMeasureType : Maybe String
    , itemSequence : Maybe String
    , testName : Maybe String
    , itemText : Maybe String
    , testsCodelistCCode : Maybe String
    , testsTermCCode : Maybe String
    , testCodesCodelistCCode : Maybe String
    , testCodesTermCCode : Maybe String
    , subcategorysCodelistCCode : Maybe String
    , subcategorysTermCCode : Maybe String
    , evaluatorsCodelistCCode : Maybe String
    , evaluatorsTermCCode : Maybe String
    , freeformResponsesDatatype : Maybe String
    , responseGroup : Maybe String
    }


type alias ExportQrsGeneral =
    { name : Maybe String
    , label : Maybe String
    , effectiveDate : Maybe String
    , description : Maybe String
    , Type_ : Maybe String
    , categorysCodelistCCode : Maybe String
    , categorysTermCCode : Maybe String
    }


type alias ExportQrsItemsTable =
    { items : Maybe ( List ExportQrsCsvItemsRow )
    }


type alias ExportQrsResponses =
    { responseGroup : Maybe String
    , sequence : Maybe String
    , responsesOriginalResultCodelistCCode : Maybe String
    , responsesOriginalResultTermCCode : Maybe String
    , responsesOriginalResultUnitCodelistCCode : Maybe String
    , responsesOriginalResultUnitTermCCode : Maybe String
    , responsesStandardizedResultCodelistCCode : Maybe String
    , responsesStandardizedResultTermCCode : Maybe String
    , responsesStandardizedResultUnitCodelistCCode : Maybe String
    , responsesStandardizedResultUnitTermCCode : Maybe String
    }


type alias ExportQrsWorkbook =
    { self : Maybe ExportQrsGeneral
    , items : Maybe ( List ExportQrsWorkbookItemsRow )
    , responses : Maybe ( List ExportQrsResponses )
    }


type alias ExportQrsWorkbookItemsRow =
    { itemSequence : Maybe String
    , testName : Maybe String
    , itemText : Maybe String
    , testsCodelistCCode : Maybe String
    , testsTermCCode : Maybe String
    , testCodesCodelistCCode : Maybe String
    , testCodesTermCCode : Maybe String
    , subcategorysCodelistCCode : Maybe String
    , subcategorysTermCCode : Maybe String
    , evaluatorsCodelistCCode : Maybe String
    , evaluatorsTermCCode : Maybe String
    , freeformResponsesDatatype : Maybe String
    , responseGroup : Maybe String
    }


type alias ExportSdtmClassVariablesRow =
    { version : Maybe String
    , variableOrder : Maybe String
    , class : Maybe String
    , datasetName : Maybe String
    , variableName : Maybe String
    , variableLabel : Maybe String
    , Type_ : Maybe String
    , controlledTermsCodelistOrFormat : Maybe String
    , role : Maybe String
    , roleDescription : Maybe String
    , description : Maybe String
    }


type alias ExportSdtmDatasetVariablesRow =
    { version : Maybe String
    , variableOrder : Maybe String
    , class : Maybe String
    , datasetName : Maybe String
    , variableName : Maybe String
    , variableLabel : Maybe String
    , Type_ : Maybe String
    , controlledTermsCodelistOrFormat : Maybe String
    , role : Maybe String
    , roleDescription : Maybe String
    , description : Maybe String
    }


type alias ExportSdtmDatasetsRow =
    { version : Maybe String
    , class : Maybe String
    , datasetName : Maybe String
    , datasetLabel : Maybe String
    , structure : Maybe String
    }


type alias ExportSdtmDatasetsTable =
    { datasets : Maybe ( List ExportSdtmDatasetsRow )
    }


type alias ExportSdtmVariablesTable =
    { classvariables : Maybe ( List ExportSdtmClassVariablesRow )
    , datasetvariables : Maybe ( List ExportSdtmDatasetVariablesRow )
    }


type alias ExportSdtmWorkbook =
    { classvariables : Maybe ( List ExportSdtmClassVariablesRow )
    , datasetvariables : Maybe ( List ExportSdtmDatasetVariablesRow )
    , datasets : Maybe ( List ExportSdtmDatasetsRow )
    }


type alias ExportSdtmigDatasetsRow =
    { version : Maybe String
    , class : Maybe String
    , datasetName : Maybe String
    , datasetLabel : Maybe String
    , structure : Maybe String
    }


type alias ExportSdtmigDatasetsTable =
    { datasets : Maybe ( List ExportSdtmigDatasetsRow )
    }


type alias ExportSdtmigVariablesRow =
    { version : Maybe String
    , variableOrder : Maybe String
    , class : Maybe String
    , datasetName : Maybe String
    , variableName : Maybe String
    , variableLabel : Maybe String
    , Type_ : Maybe String
    , controlledTermsCodelistOrFormat : Maybe String
    , role : Maybe String
    , cDISCNotes : Maybe String
    , core : Maybe String
    }


type alias ExportSdtmigVariablesTable =
    { variables : Maybe ( List ExportSdtmigVariablesRow )
    }


type alias ExportSdtmigWorkbook =
    { variables : Maybe ( List ExportSdtmigVariablesRow )
    , datasets : Maybe ( List ExportSdtmigDatasetsRow )
    }


type alias ExportSendigDatasetsRow =
    { version : Maybe String
    , class : Maybe String
    , datasetName : Maybe String
    , datasetLabel : Maybe String
    , structure : Maybe String
    }


type alias ExportSendigDatasetsTable =
    { datasets : Maybe ( List ExportSendigDatasetsRow )
    }


type alias ExportSendigVariablesRow =
    { version : Maybe String
    , variableOrder : Maybe String
    , class : Maybe String
    , datasetName : Maybe String
    , variableName : Maybe String
    , variableLabel : Maybe String
    , Type_ : Maybe String
    , controlledTermsCodelistOrFormat : Maybe String
    , role : Maybe String
    , cDISCNotes : Maybe String
    , core : Maybe String
    }


type alias ExportSendigVariablesTable =
    { variables : Maybe ( List ExportSendigVariablesRow )
    }


type alias ExportSendigWorkbook =
    { variables : Maybe ( List ExportSendigVariablesRow )
    , datasets : Maybe ( List ExportSendigDatasetsRow )
    }


type alias Health =
    { healthy : Maybe Bool
    , ldapAuthenticationHealthy : Maybe Bool
    , ldapAuthorizationHealthy : Maybe Bool
    , databaseHealthy : Maybe Bool
    , esHealthy : Maybe Bool
    }


type alias Lastupdated =
    { links : Maybe LastupdatedLinks
    , overall : Maybe String
    , dataanalysis : Maybe String
    , datacollection : Maybe String
    , datatabulation : Maybe String
    , measure : Maybe String
    , terminology : Maybe String
    }


type alias LastupdatedLinks =
    { self : Maybe LastupdatedRef
    }


type alias LastupdatedRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias MaintenanceBody =
    { maintenanceMode : Maybe Bool
    , maintenanceMessage : Maybe String
    }


type alias MdrSearchScopesGet200Response =
    { scopes : Maybe ( List DefaultSearchScopes )
    }


type alias ProductgroupDataAnalysis =
    { links : Maybe ProductgroupDataAnalysisLinks
    }


type alias ProductgroupDataAnalysisLinks =
    { self : Maybe ProductgroupRef
    , adam : Maybe ( List AdamProductRefElement )
    }


type alias ProductgroupDataCollection =
    { links : Maybe ProductgroupDataCollectionLinks
    }


type alias ProductgroupDataCollectionLinks =
    { self : Maybe ProductgroupRef
    , cdash : Maybe ( List CdashProductRefElement )
    , cdashig : Maybe ( List CdashigProductRefElement )
    }


type alias ProductgroupDataTabulation =
    { links : Maybe ProductgroupDataTabulationLinks
    }


type alias ProductgroupDataTabulationLinks =
    { self : Maybe ProductgroupRef
    , sdtm : Maybe ( List SdtmProductRefElement )
    , sdtmig : Maybe ( List SdtmigProductRefElement )
    , sendig : Maybe ( List SendigProductRefElement )
    }


type alias ProductgroupQrs =
    { links : Maybe ProductgroupQrsLinks
    }


type alias ProductgroupQrsLinks =
    { self : Maybe ProductgroupRef
    , qrs : Maybe ( List QrsRefElement )
    }


type alias ProductgroupRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias ProductgroupTerminology =
    { links : Maybe ProductgroupTerminologyLinks
    }


type alias ProductgroupTerminologyLinks =
    { self : Maybe ProductgroupRef
    , packages : Maybe ( List CtPackageRefElement )
    }


type alias Products =
    { links : Maybe ProductsLinks
    }


type alias ProductsLinks =
    { self : Maybe ProductsRef
    , datacollection : Maybe ProductgroupDataCollection
    , datatabulation : Maybe ProductgroupDataTabulation
    , dataanalysis : Maybe ProductgroupDataAnalysis
    , terminology : Maybe ProductgroupTerminology
    , measure : Maybe ProductgroupQrs
    }


type alias ProductsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias QrsItem =
    { ordinal : Maybe String
    , label : Maybe String
    , questionText : Maybe String
    , links : Maybe QrsItemLinks
    }


type alias QrsItemLinks =
    { qrsItemTEST : Maybe RootCtTermRef
    , qrsItemTESTCD : Maybe RootCtTermRef
    , qrsItemEVAL : Maybe RootCtTermRef
    , qrsItemSCAT : Maybe RootCtTermRef
    , responsegroup : Maybe QrsResponsegroup
    }


type alias QrsItemRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias QrsItems =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , effectiveDate : Maybe String
    , untilDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , qrsType : Maybe String
    , links : Maybe QrsItemsLinks
    }


type alias QrsItemsLinks =
    { self : Maybe QrsItemsRef
    , parentProduct : Maybe QrsProductRef
    , items : Maybe ( List QrsItemRefElement )
    }


type alias QrsItemsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias QrsProduct =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , effectiveDate : Maybe String
    , untilDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , qrsType : Maybe String
    , links : Maybe QrsProductLinks
    , items : Maybe ( List QrsItem )
    }


type alias QrsProductLinks =
    { self : Maybe QrsProductRef
    , priorVersion : Maybe QrsProductRef
    , qrsTermCAT : Maybe RootCtTermRef
    , qrsItems : Maybe QrsItemsRef
    }


type alias QrsProductRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias QrsRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias QrsResponseLinks =
    { qrsResponseORRES : Maybe RootCtTermRef
    , qrsResponseORRESU : Maybe RootCtTermRef
    , qrsResponseSTRESC : Maybe RootCtTermRef
    , qrsResponseSTRESCU : Maybe RootCtTermRef
    }


type alias QrsResponsegroup =
    { label : Maybe String
    , links : Maybe QrsResponsegroupLinks
    }


type alias QrsResponsegroupLinks =
    { self : Maybe QrsResponsegroupRef
    , responses : Maybe ( List QrsResponses )
    }


type alias QrsResponsegroupRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias QrsResponsegroupRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias QrsResponsegroups =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , effectiveDate : Maybe String
    , untilDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , qrsType : Maybe String
    , links : Maybe QrsResponsegroupsLinks
    }


type alias QrsResponsegroupsLinks =
    { self : Maybe QrsResponsegroupsRef
    , responsegroups : Maybe ( List QrsResponsegroupRefElement )
    }


type alias QrsResponsegroupsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias QrsResponses =
    { ordinal : Maybe String
    , links : Maybe QrsResponseLinks
    }


type alias RootCdashClassField =
    { links : Maybe RootCdashClassFieldLinks
    }


type alias RootCdashClassFieldLinks =
    { self : Maybe RootCdashClassFieldRef
    , versions : Maybe ( List CdashClassFieldRefVersion )
    }


type alias RootCdashClassFieldRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootCdashDomainField =
    { links : Maybe RootCdashDomainFieldLinks
    }


type alias RootCdashDomainFieldLinks =
    { self : Maybe RootCdashDomainFieldRef
    , versions : Maybe ( List CdashDomainFieldRefVersion )
    }


type alias RootCdashDomainFieldRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootCdashigDomainField =
    { links : Maybe RootCdashigDomainFieldLinks
    }


type alias RootCdashigDomainFieldLinks =
    { self : Maybe RootCdashigDomainFieldRef
    , versions : Maybe ( List CdashigDomainFieldRefVersion )
    }


type alias RootCdashigDomainFieldRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootCdashigScenarioField =
    { links : Maybe RootCdashigScenarioFieldLinks
    }


type alias RootCdashigScenarioFieldLinks =
    { self : Maybe RootCdashigScenarioFieldRef
    , versions : Maybe ( List CdashigScenarioFieldRefVersion )
    }


type alias RootCdashigScenarioFieldRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootCtCodelist =
    { links : Maybe RootCtCodelistLinks
    }


type alias RootCtCodelistLinks =
    { self : Maybe RootCtCodelistRef
    , versions : Maybe ( List CtCodelistRefVersion )
    }


type alias RootCtCodelistRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootCtCodelistRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootCtTerm =
    { links : Maybe RootCtTermLinks
    }


type alias RootCtTermLinks =
    { self : Maybe RootCtTermRef
    , versions : Maybe ( List CtTermRefVersion )
    }


type alias RootCtTermRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootSdtmClassVariable =
    { links : Maybe RootSdtmClassVariableLinks
    }


type alias RootSdtmClassVariableLinks =
    { self : Maybe RootSdtmClassVariableRef
    , versions : Maybe ( List SdtmClassVariableRefVersion )
    }


type alias RootSdtmClassVariableRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootSdtmDatasetVariable =
    { links : Maybe RootSdtmDatasetVariableLinks
    }


type alias RootSdtmDatasetVariableLinks =
    { self : Maybe RootSdtmDatasetVariableRef
    , versions : Maybe ( List SdtmDatasetVariableRefVersion )
    }


type alias RootSdtmDatasetVariableRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootSdtmigDatasetVariable =
    { links : Maybe RootSdtmigDatasetVariableLinks
    }


type alias RootSdtmigDatasetVariableLinks =
    { self : Maybe RootSdtmigDatasetVariableRef
    , versions : Maybe ( List SdtmigDatasetVariableRefVersion )
    }


type alias RootSdtmigDatasetVariableRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias RootSendigDatasetVariable =
    { links : Maybe RootSendigDatasetVariableLinks
    }


type alias RootSendigDatasetVariableLinks =
    { self : Maybe RootSendigDatasetVariableRef
    , versions : Maybe ( List SendigDatasetVariableRefVersion )
    }


type alias RootSendigDatasetVariableRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias ScopeValues =
    { total : Maybe Float
    , hasMore : Maybe Bool
    , values : Maybe ( List String )
    }


type alias SdtmClass =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe SdtmClassLinks
    , classVariables : Maybe ( List SdtmClassVariable )
    , datasets : Maybe ( List SdtmDataset )
    }


type alias SdtmClassDatasets =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe SdtmClassDatasetsLinks
    }


type alias SdtmClassDatasetsLinks =
    { self : Maybe SdtmClassDatasetsRef
    , parentProduct : Maybe SdtmProductRef
    , priorVersion : Maybe SdtmClassDatasetsRef
    , datasets : Maybe ( List SdtmDatasetRefElement )
    }


type alias SdtmClassDatasetsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClassLinks =
    { self : Maybe SdtmClassRef
    , parentProduct : Maybe SdtmProductRef
    , parentClass : Maybe SdtmClassRef
    , subclasses : Maybe ( List SdtmClassRefSubclass )
    , priorVersion : Maybe SdtmClassRef
    }


type alias SdtmClassRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClassRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClassRefSubclass =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClassVariable =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , role : Maybe String
    , roleDescription : Maybe String
    , simpleDatatype : Maybe String
    , describedValueDomain : Maybe String
    , links : Maybe SdtmClassVariableLinks
    }


type alias SdtmClassVariableLinks =
    { self : Maybe SdtmClassVariableRef
    , parentProduct : Maybe SdtmProductRef
    , parentClass : Maybe SdtmClassRef
    , qualifiesVariables : Maybe ( List SdtmClassVariableRefQualifies )
    , rootItem : Maybe RootSdtmClassVariableRef
    , priorVersion : Maybe SdtmClassVariableRef
    }


type alias SdtmClassVariableRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClassVariableRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClassVariableRefQualifies =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClassVariableRefTarget =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClassVariableRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClassVariables =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe SdtmClassVariablesLinks
    }


type alias SdtmClassVariablesLinks =
    { self : Maybe SdtmClassVariablesRef
    , parentProduct : Maybe SdtmProductRef
    , priorVersion : Maybe SdtmClassVariablesRef
    , classVariables : Maybe ( List SdtmClassVariableRefElement )
    }


type alias SdtmClassVariablesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmClasses =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe SdtmClassesLinks
    }


type alias SdtmClassesLinks =
    { self : Maybe SdtmClassesRef
    , priorVersion : Maybe SdtmClassesRef
    , classes : Maybe ( List SdtmClassRefElement )
    }


type alias SdtmClassesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmDataset =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , datasetStructure : Maybe String
    , links : Maybe SdtmDatasetLinks
    , datasetVariables : Maybe ( List SdtmDatasetVariable )
    }


type alias SdtmDatasetLinks =
    { self : Maybe SdtmDatasetRef
    , parentProduct : Maybe SdtmProductRef
    , parentClass : Maybe SdtmClassRef
    , priorVersion : Maybe SdtmDatasetRef
    }


type alias SdtmDatasetRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmDatasetRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmDatasetVariable =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , role : Maybe String
    , roleDescription : Maybe String
    , simpleDatatype : Maybe String
    , describedValueDomain : Maybe String
    , links : Maybe SdtmDatasetVariableLinks
    }


type alias SdtmDatasetVariableLinks =
    { self : Maybe SdtmDatasetVariableRef
    , parentProduct : Maybe SdtmProductRef
    , parentDataset : Maybe SdtmDatasetRef
    , rootItem : Maybe RootSdtmDatasetVariableRef
    , priorVersion : Maybe SdtmDatasetVariableRef
    }


type alias SdtmDatasetVariableRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmDatasetVariableRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmDatasetVariableRefTarget =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmDatasetVariableRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmDatasetVariables =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , datasetStructure : Maybe String
    , links : Maybe SdtmDatasetVariablesLinks
    }


type alias SdtmDatasetVariablesLinks =
    { self : Maybe SdtmDatasetVariablesRef
    , parentProduct : Maybe SdtmProductRef
    , parentClass : Maybe SdtmClassRef
    , priorVersion : Maybe SdtmDatasetVariablesRef
    , datasetVariables : Maybe ( List SdtmDatasetVariableRefElement )
    }


type alias SdtmDatasetVariablesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmDatasets =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe SdtmDatasetsLinks
    }


type alias SdtmDatasetsLinks =
    { self : Maybe SdtmDatasetsRef
    , parentProduct : Maybe SdtmProductRef
    , priorVersion : Maybe SdtmDatasetsRef
    , datasets : Maybe ( List SdtmDatasetRefElement )
    }


type alias SdtmDatasetsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmProduct =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe SdtmProductLinks
    , classes : Maybe ( List SdtmClass )
    , datasets : Maybe ( List SdtmDataset )
    }


type alias SdtmProductLinks =
    { self : Maybe SdtmProductRef
    , priorVersion : Maybe SdtmProductRef
    }


type alias SdtmProductRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmProductRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigClass =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe SdtmigClassLinks
    , datasets : Maybe ( List SdtmigDataset )
    }


type alias SdtmigClassDatasets =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe SdtmigClassDatasetsLinks
    }


type alias SdtmigClassDatasetsLinks =
    { self : Maybe SdtmigClassDatasetsRef
    , parentProduct : Maybe SdtmigProductRef
    , priorVersion : Maybe SdtmigClassDatasetsRef
    , datasets : Maybe ( List SdtmigDatasetRefElement )
    }


type alias SdtmigClassDatasetsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigClassLinks =
    { self : Maybe SdtmigClassRef
    , modelClass : Maybe SdtmClassRef
    , parentProduct : Maybe SdtmigProductRef
    , parentClass : Maybe SdtmigClassRef
    , subclasses : Maybe ( List SdtmigClassRefSubclass )
    , priorVersion : Maybe SdtmigClassRef
    }


type alias SdtmigClassRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigClassRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigClassRefSubclass =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigClasses =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe SdtmigClassesLinks
    }


type alias SdtmigClassesLinks =
    { self : Maybe SdtmigClassesRef
    , priorVersion : Maybe SdtmigClassesRef
    , classes : Maybe ( List SdtmigClassRefElement )
    }


type alias SdtmigClassesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigDataset =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , datasetStructure : Maybe String
    , links : Maybe SdtmigDatasetLinks
    , datasetVariables : Maybe ( List SdtmigDatasetVariable )
    }


type alias SdtmigDatasetLinks =
    { self : Maybe SdtmigDatasetRef
    , modelDataset : Maybe SdtmDatasetRef
    , parentProduct : Maybe SdtmigProductRef
    , parentClass : Maybe SdtmigClassRef
    , priorVersion : Maybe SdtmigDatasetRef
    }


type alias SdtmigDatasetRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigDatasetRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigDatasetVariable =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , role : Maybe String
    , simpleDatatype : Maybe String
    , core : Maybe String
    , describedValueDomain : Maybe String
    , valueList : Maybe ( List String )
    , links : Maybe SdtmigDatasetVariableLinks
    }


type alias SdtmigDatasetVariableLinks =
    { self : Maybe SdtmigDatasetVariableRef
    , codelist : Maybe ( List RootCtCodelistRefElement )
    , modelClassVariable : Maybe SdtmClassVariableRef
    , modelDatasetVariable : Maybe SdtmDatasetVariableRef
    , parentProduct : Maybe SdtmigProductRef
    , parentDataset : Maybe SdtmigDatasetRef
    , rootItem : Maybe RootSdtmigDatasetVariableRef
    , priorVersion : Maybe SdtmigDatasetVariableRef
    }


type alias SdtmigDatasetVariableRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigDatasetVariableRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigDatasetVariableRefTarget =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigDatasetVariableRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigDatasetVariables =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , datasetStructure : Maybe String
    , links : Maybe SdtmigDatasetVariablesLinks
    }


type alias SdtmigDatasetVariablesLinks =
    { self : Maybe SdtmigDatasetVariablesRef
    , modelDataset : Maybe SdtmDatasetRef
    , parentProduct : Maybe SdtmigProductRef
    , parentClass : Maybe SdtmigClassRef
    , priorVersion : Maybe SdtmigDatasetVariablesRef
    , datasetVariables : Maybe ( List SdtmigDatasetVariableRefElement )
    }


type alias SdtmigDatasetVariablesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigDatasets =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe SdtmigDatasetsLinks
    }


type alias SdtmigDatasetsLinks =
    { self : Maybe SdtmigDatasetsRef
    , parentProduct : Maybe SdtmigProductRef
    , priorVersion : Maybe SdtmigDatasetsRef
    , datasets : Maybe ( List SdtmigDatasetRefElement )
    }


type alias SdtmigDatasetsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigProduct =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe SdtmigProductLinks
    , classes : Maybe ( List SdtmigClass )
    }


type alias SdtmigProductLinks =
    { self : Maybe SdtmigProductRef
    , model : Maybe SdtmProductRef
    , priorVersion : Maybe SdtmigProductRef
    }


type alias SdtmigProductRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SdtmigProductRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigClass =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe SendigClassLinks
    , datasets : Maybe ( List SendigDataset )
    }


type alias SendigClassDatasets =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , links : Maybe SendigClassDatasetsLinks
    }


type alias SendigClassDatasetsLinks =
    { self : Maybe SendigClassDatasetsRef
    , parentProduct : Maybe SendigProductRef
    , datasets : Maybe ( List SendigDatasetRefElement )
    }


type alias SendigClassDatasetsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigClassLinks =
    { self : Maybe SendigClassRef
    , modelClass : Maybe SdtmClassRef
    , parentProduct : Maybe SendigProductRef
    , parentClass : Maybe SendigClassRef
    , subclasses : Maybe ( List SendigClassRefSubclass )
    , priorVersion : Maybe SendigClassRef
    }


type alias SendigClassRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigClassRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigClassRefSubclass =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigClasses =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe SendigClassesLinks
    }


type alias SendigClassesLinks =
    { self : Maybe SendigClassesRef
    , priorVersion : Maybe SendigClassesRef
    , classes : Maybe ( List SendigClassRefElement )
    }


type alias SendigClassesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigDataset =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , datasetStructure : Maybe String
    , links : Maybe SendigDatasetLinks
    , datasetVariables : Maybe ( List SendigDatasetVariable )
    }


type alias SendigDatasetLinks =
    { self : Maybe SendigDatasetRef
    , modelDataset : Maybe SdtmDatasetRef
    , parentProduct : Maybe SendigProductRef
    , parentClass : Maybe SendigClassRef
    , priorVersion : Maybe SendigDatasetRef
    }


type alias SendigDatasetRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigDatasetRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigDatasetVariable =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , role : Maybe String
    , simpleDatatype : Maybe String
    , core : Maybe String
    , describedValueDomain : Maybe String
    , valueList : Maybe ( List String )
    , links : Maybe SendigDatasetVariableLinks
    }


type alias SendigDatasetVariableLinks =
    { self : Maybe SendigDatasetVariableRef
    , codelist : Maybe ( List RootCtCodelistRefElement )
    , modelClassVariable : Maybe SdtmClassVariableRef
    , modelDatasetVariable : Maybe SdtmDatasetVariableRef
    , parentProduct : Maybe SendigProductRef
    , parentDataset : Maybe SendigDatasetRef
    , rootItem : Maybe RootSendigDatasetVariableRef
    , priorVersion : Maybe SendigDatasetVariableRef
    }


type alias SendigDatasetVariableRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigDatasetVariableRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigDatasetVariableRefVersion =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigDatasetVariables =
    { ordinal : Maybe String
    , name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , datasetStructure : Maybe String
    , links : Maybe SendigDatasetVariablesLinks
    }


type alias SendigDatasetVariablesLinks =
    { self : Maybe SendigDatasetVariablesRef
    , modelDataset : Maybe SdtmDatasetRef
    , parentProduct : Maybe SendigProductRef
    , parentClass : Maybe SendigClassRef
    , priorVersion : Maybe SendigDatasetVariablesRef
    , datasetVariables : Maybe ( List SendigDatasetVariableRefElement )
    }


type alias SendigDatasetVariablesRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigDatasets =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe SendigDatasetsLinks
    }


type alias SendigDatasetsLinks =
    { self : Maybe SendigDatasetsRef
    , parentProduct : Maybe SendigProductRef
    , datasets : Maybe ( List SendigDatasetRefElement )
    }


type alias SendigDatasetsRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigProduct =
    { name : Maybe String
    , label : Maybe String
    , description : Maybe String
    , source : Maybe String
    , effectiveDate : Maybe String
    , registrationStatus : Maybe String
    , version : Maybe String
    , links : Maybe SendigProductLinks
    , classes : Maybe ( List SendigClass )
    }


type alias SendigProductLinks =
    { self : Maybe SendigProductRef
    , model : Maybe SdtmProductRef
    , priorVersion : Maybe SendigProductRef
    }


type alias SendigProductRef =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias SendigProductRefElement =
    { href : Maybe String
    , title : Maybe String
    , type_ : Maybe String
    }


type alias XmlAbout =
    { self : Maybe About
    }


type alias XmlAdamDatastructure =
    { self : Maybe AdamDatastructure
    }


type alias XmlAdamDatastructureVariables =
    { self : Maybe AdamDatastructureVariables
    }


type alias XmlAdamDatastructureVarsets =
    { self : Maybe AdamDatastructureVarsets
    }


type alias XmlAdamProduct =
    { self : Maybe AdamProduct
    }


type alias XmlAdamProductDatastructures =
    { self : Maybe AdamProductDatastructures
    }


type alias XmlAdamVariable =
    { self : Maybe AdamVariable
    }


type alias XmlAdamVarset =
    { self : Maybe AdamVarset
    }


type alias XmlCdashClass =
    { self : Maybe CdashClass
    }


type alias XmlCdashClassDomains =
    { self : Maybe CdashClassDomains
    }


type alias XmlCdashClassField =
    { self : Maybe CdashClassField
    }


type alias XmlCdashDomain =
    { self : Maybe CdashDomain
    }


type alias XmlCdashDomainField =
    { self : Maybe CdashDomainField
    }


type alias XmlCdashDomainFields =
    { self : Maybe CdashDomainFields
    }


type alias XmlCdashProduct =
    { self : Maybe CdashProduct
    }


type alias XmlCdashProductClasses =
    { self : Maybe CdashProductClasses
    }


type alias XmlCdashProductDomains =
    { self : Maybe CdashProductDomains
    }


type alias XmlCdashigClass =
    { self : Maybe CdashigClass
    }


type alias XmlCdashigClassDomains =
    { self : Maybe CdashigClassDomains
    }


type alias XmlCdashigClassScenarios =
    { self : Maybe CdashigClassScenarios
    }


type alias XmlCdashigDomain =
    { self : Maybe CdashigDomain
    }


type alias XmlCdashigDomainField =
    { self : Maybe CdashigDomainField
    }


type alias XmlCdashigDomainFields =
    { self : Maybe CdashigDomainFields
    }


type alias XmlCdashigProduct =
    { self : Maybe CdashigProduct
    }


type alias XmlCdashigProductClasses =
    { self : Maybe CdashigProductClasses
    }


type alias XmlCdashigProductDomains =
    { self : Maybe CdashigProductDomains
    }


type alias XmlCdashigProductScenarios =
    { self : Maybe CdashigProductScenarios
    }


type alias XmlCdashigScenario =
    { self : Maybe CdashigScenario
    }


type alias XmlCdashigScenarioField =
    { self : Maybe CdashigScenarioField
    }


type alias XmlCdashigScenarioFields =
    { self : Maybe CdashigScenarioFields
    }


type alias XmlCtCodelist =
    { self : Maybe CtCodelist
    }


type alias XmlCtCodelistTerms =
    { self : Maybe CtCodelistTerms
    }


type alias XmlCtPackage =
    { self : Maybe CtPackage
    }


type alias XmlCtPackageCodelists =
    { self : Maybe CtPackageCodelists
    }


type alias XmlCtPackages =
    { self : Maybe CtPackages
    }


type alias XmlCtTerm =
    { self : Maybe CtTerm
    }


type alias XmlLastupdated =
    { self : Maybe Lastupdated
    }


type alias XmlProductgroupDataAnalysis =
    { self : Maybe ProductgroupDataAnalysis
    }


type alias XmlProductgroupDataCollection =
    { self : Maybe ProductgroupDataCollection
    }


type alias XmlProductgroupDataTabulation =
    { self : Maybe ProductgroupDataTabulation
    }


type alias XmlProductgroupTerminology =
    { self : Maybe ProductgroupTerminology
    }


type alias XmlProducts =
    { self : Maybe Products
    }


type alias XmlQrsItem =
    { self : Maybe QrsItem
    }


type alias XmlQrsItems =
    { self : Maybe QrsItems
    }


type alias XmlQrsProduct =
    { self : Maybe QrsProduct
    }


type alias XmlQrsResponsegroup =
    { self : Maybe QrsResponsegroup
    }


type alias XmlQrsResponsegroups =
    { self : Maybe QrsResponsegroups
    }


type alias XmlRootCdashClassField =
    { self : Maybe RootCdashClassField
    }


type alias XmlRootCdashDomainField =
    { self : Maybe RootCdashDomainField
    }


type alias XmlRootCdashigDomainField =
    { self : Maybe RootCdashigDomainField
    }


type alias XmlRootCdashigScenarioField =
    { self : Maybe RootCdashigScenarioField
    }


type alias XmlRootCtCodelist =
    { self : Maybe RootCtCodelist
    }


type alias XmlRootCtTerm =
    { self : Maybe RootCtTerm
    }


type alias XmlRootSdtmClassVariable =
    { self : Maybe RootSdtmClassVariable
    }


type alias XmlRootSdtmDatasetVariable =
    { self : Maybe RootSdtmDatasetVariable
    }


type alias XmlRootSdtmigDatasetVariable =
    { self : Maybe RootSdtmigDatasetVariable
    }


type alias XmlRootSendigDatasetVariable =
    { self : Maybe RootSendigDatasetVariable
    }


type alias XmlSdtmClass =
    { self : Maybe SdtmClass
    }


type alias XmlSdtmClassDatasets =
    { self : Maybe SdtmClassDatasets
    }


type alias XmlSdtmClassVariable =
    { self : Maybe SdtmClassVariable
    }


type alias XmlSdtmClassVariables =
    { self : Maybe SdtmClassVariables
    }


type alias XmlSdtmClasses =
    { self : Maybe SdtmClasses
    }


type alias XmlSdtmDataset =
    { self : Maybe SdtmDataset
    }


type alias XmlSdtmDatasetVariable =
    { self : Maybe SdtmDatasetVariable
    }


type alias XmlSdtmDatasetVariables =
    { self : Maybe SdtmDatasetVariables
    }


type alias XmlSdtmDatasets =
    { self : Maybe SdtmDatasets
    }


type alias XmlSdtmProduct =
    { self : Maybe SdtmProduct
    }


type alias XmlSdtmigClass =
    { self : Maybe SdtmigClass
    }


type alias XmlSdtmigClassDatasets =
    { self : Maybe SdtmigClassDatasets
    }


type alias XmlSdtmigClasses =
    { self : Maybe SdtmigClasses
    }


type alias XmlSdtmigDataset =
    { self : Maybe SdtmigDataset
    }


type alias XmlSdtmigDatasetVariable =
    { self : Maybe SdtmigDatasetVariable
    }


type alias XmlSdtmigDatasetVariables =
    { self : Maybe SdtmigDatasetVariables
    }


type alias XmlSdtmigDatasets =
    { self : Maybe SdtmigDatasets
    }


type alias XmlSdtmigProduct =
    { self : Maybe SdtmigProduct
    }


type alias XmlSendigClass =
    { self : Maybe SendigClass
    }


type alias XmlSendigClassDatasets =
    { self : Maybe SendigClassDatasets
    }


type alias XmlSendigClasses =
    { self : Maybe SendigClasses
    }


type alias XmlSendigDataset =
    { self : Maybe SendigDataset
    }


type alias XmlSendigDatasetVariable =
    { self : Maybe SendigDatasetVariable
    }


type alias XmlSendigDatasetVariables =
    { self : Maybe SendigDatasetVariables
    }


type alias XmlSendigDatasets =
    { self : Maybe SendigDatasets
    }


type alias XmlSendigProduct =
    { self : Maybe SendigProduct
    }


-- ENCODER


encodeAbout : About -> Json.Encode.Value
encodeAbout =
    encodeObject << encodeAboutPairs


encodeAboutWithTag : ( String, String ) -> About -> Json.Encode.Value
encodeAboutWithTag (tagField, tag) model =
    encodeObject (encodeAboutPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAboutPairs : About -> List EncodedField
encodeAboutPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeAboutLinks model.links
            , maybeEncode "release-notes" Json.Encode.string model.releasenotes
            , maybeEncode "api-documentation" Json.Encode.string model.apidocumentation
            ]
    in
    pairs


encodeAboutLinks : AboutLinks -> Json.Encode.Value
encodeAboutLinks =
    encodeObject << encodeAboutLinksPairs


encodeAboutLinksWithTag : ( String, String ) -> AboutLinks -> Json.Encode.Value
encodeAboutLinksWithTag (tagField, tag) model =
    encodeObject (encodeAboutLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAboutLinksPairs : AboutLinks -> List EncodedField
encodeAboutLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAboutRef model.self
            , maybeEncode "lastupdated" encodeLastupdatedRef model.lastupdated
            ]
    in
    pairs


encodeAboutRef : AboutRef -> Json.Encode.Value
encodeAboutRef =
    encodeObject << encodeAboutRefPairs


encodeAboutRefWithTag : ( String, String ) -> AboutRef -> Json.Encode.Value
encodeAboutRefWithTag (tagField, tag) model =
    encodeObject (encodeAboutRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAboutRefPairs : AboutRef -> List EncodedField
encodeAboutRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamDatastructure : AdamDatastructure -> Json.Encode.Value
encodeAdamDatastructure =
    encodeObject << encodeAdamDatastructurePairs


encodeAdamDatastructureWithTag : ( String, String ) -> AdamDatastructure -> Json.Encode.Value
encodeAdamDatastructureWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructurePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructurePairs : AdamDatastructure -> List EncodedField
encodeAdamDatastructurePairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "class" Json.Encode.string model.class
            , maybeEncode "_links" encodeAdamDatastructureLinks model.links
            , maybeEncode "analysisVariableSets" (Json.Encode.list encodeAdamVarset) model.analysisVariableSets
            ]
    in
    pairs


encodeAdamDatastructureLinks : AdamDatastructureLinks -> Json.Encode.Value
encodeAdamDatastructureLinks =
    encodeObject << encodeAdamDatastructureLinksPairs


encodeAdamDatastructureLinksWithTag : ( String, String ) -> AdamDatastructureLinks -> Json.Encode.Value
encodeAdamDatastructureLinksWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructureLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructureLinksPairs : AdamDatastructureLinks -> List EncodedField
encodeAdamDatastructureLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamDatastructureRef model.self
            , maybeEncode "parentProduct" encodeAdamProductRef model.parentProduct
            , maybeEncode "priorVersion" encodeAdamDatastructureRef model.priorVersion
            ]
    in
    pairs


encodeAdamDatastructureRef : AdamDatastructureRef -> Json.Encode.Value
encodeAdamDatastructureRef =
    encodeObject << encodeAdamDatastructureRefPairs


encodeAdamDatastructureRefWithTag : ( String, String ) -> AdamDatastructureRef -> Json.Encode.Value
encodeAdamDatastructureRefWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructureRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructureRefPairs : AdamDatastructureRef -> List EncodedField
encodeAdamDatastructureRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamDatastructureRefElement : AdamDatastructureRefElement -> Json.Encode.Value
encodeAdamDatastructureRefElement =
    encodeObject << encodeAdamDatastructureRefElementPairs


encodeAdamDatastructureRefElementWithTag : ( String, String ) -> AdamDatastructureRefElement -> Json.Encode.Value
encodeAdamDatastructureRefElementWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructureRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructureRefElementPairs : AdamDatastructureRefElement -> List EncodedField
encodeAdamDatastructureRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamDatastructureVariables : AdamDatastructureVariables -> Json.Encode.Value
encodeAdamDatastructureVariables =
    encodeObject << encodeAdamDatastructureVariablesPairs


encodeAdamDatastructureVariablesWithTag : ( String, String ) -> AdamDatastructureVariables -> Json.Encode.Value
encodeAdamDatastructureVariablesWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructureVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructureVariablesPairs : AdamDatastructureVariables -> List EncodedField
encodeAdamDatastructureVariablesPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "class" Json.Encode.string model.class
            , maybeEncode "_links" encodeAdamDatastructureVariablesLinks model.links
            ]
    in
    pairs


encodeAdamDatastructureVariablesLinks : AdamDatastructureVariablesLinks -> Json.Encode.Value
encodeAdamDatastructureVariablesLinks =
    encodeObject << encodeAdamDatastructureVariablesLinksPairs


encodeAdamDatastructureVariablesLinksWithTag : ( String, String ) -> AdamDatastructureVariablesLinks -> Json.Encode.Value
encodeAdamDatastructureVariablesLinksWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructureVariablesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructureVariablesLinksPairs : AdamDatastructureVariablesLinks -> List EncodedField
encodeAdamDatastructureVariablesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamDatastructureVariablesRef model.self
            , maybeEncode "parentProduct" encodeAdamProductRef model.parentProduct
            , maybeEncode "priorVersion" encodeAdamDatastructureVariablesRef model.priorVersion
            , maybeEncode "analysisVariables" (Json.Encode.list encodeAdamVariableRefElement) model.analysisVariables
            ]
    in
    pairs


encodeAdamDatastructureVariablesRef : AdamDatastructureVariablesRef -> Json.Encode.Value
encodeAdamDatastructureVariablesRef =
    encodeObject << encodeAdamDatastructureVariablesRefPairs


encodeAdamDatastructureVariablesRefWithTag : ( String, String ) -> AdamDatastructureVariablesRef -> Json.Encode.Value
encodeAdamDatastructureVariablesRefWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructureVariablesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructureVariablesRefPairs : AdamDatastructureVariablesRef -> List EncodedField
encodeAdamDatastructureVariablesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamDatastructureVarsets : AdamDatastructureVarsets -> Json.Encode.Value
encodeAdamDatastructureVarsets =
    encodeObject << encodeAdamDatastructureVarsetsPairs


encodeAdamDatastructureVarsetsWithTag : ( String, String ) -> AdamDatastructureVarsets -> Json.Encode.Value
encodeAdamDatastructureVarsetsWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructureVarsetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructureVarsetsPairs : AdamDatastructureVarsets -> List EncodedField
encodeAdamDatastructureVarsetsPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "class" Json.Encode.string model.class
            , maybeEncode "_links" encodeAdamDatastructureVarsetsLinks model.links
            ]
    in
    pairs


encodeAdamDatastructureVarsetsLinks : AdamDatastructureVarsetsLinks -> Json.Encode.Value
encodeAdamDatastructureVarsetsLinks =
    encodeObject << encodeAdamDatastructureVarsetsLinksPairs


encodeAdamDatastructureVarsetsLinksWithTag : ( String, String ) -> AdamDatastructureVarsetsLinks -> Json.Encode.Value
encodeAdamDatastructureVarsetsLinksWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructureVarsetsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructureVarsetsLinksPairs : AdamDatastructureVarsetsLinks -> List EncodedField
encodeAdamDatastructureVarsetsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamDatastructureVarsetsRef model.self
            , maybeEncode "parentProduct" encodeAdamProductRef model.parentProduct
            , maybeEncode "priorVersion" encodeAdamDatastructureVarsetsRef model.priorVersion
            , maybeEncode "analysisVariableSets" (Json.Encode.list encodeAdamVarsetRefElement) model.analysisVariableSets
            ]
    in
    pairs


encodeAdamDatastructureVarsetsRef : AdamDatastructureVarsetsRef -> Json.Encode.Value
encodeAdamDatastructureVarsetsRef =
    encodeObject << encodeAdamDatastructureVarsetsRefPairs


encodeAdamDatastructureVarsetsRefWithTag : ( String, String ) -> AdamDatastructureVarsetsRef -> Json.Encode.Value
encodeAdamDatastructureVarsetsRefWithTag (tagField, tag) model =
    encodeObject (encodeAdamDatastructureVarsetsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamDatastructureVarsetsRefPairs : AdamDatastructureVarsetsRef -> List EncodedField
encodeAdamDatastructureVarsetsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamProduct : AdamProduct -> Json.Encode.Value
encodeAdamProduct =
    encodeObject << encodeAdamProductPairs


encodeAdamProductWithTag : ( String, String ) -> AdamProduct -> Json.Encode.Value
encodeAdamProductWithTag (tagField, tag) model =
    encodeObject (encodeAdamProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamProductPairs : AdamProduct -> List EncodedField
encodeAdamProductPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeAdamProductLinks model.links
            , maybeEncode "dataStructures" (Json.Encode.list encodeAdamDatastructure) model.dataStructures
            ]
    in
    pairs


encodeAdamProductDatastructures : AdamProductDatastructures -> Json.Encode.Value
encodeAdamProductDatastructures =
    encodeObject << encodeAdamProductDatastructuresPairs


encodeAdamProductDatastructuresWithTag : ( String, String ) -> AdamProductDatastructures -> Json.Encode.Value
encodeAdamProductDatastructuresWithTag (tagField, tag) model =
    encodeObject (encodeAdamProductDatastructuresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamProductDatastructuresPairs : AdamProductDatastructures -> List EncodedField
encodeAdamProductDatastructuresPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeAdamProductDatastructuresLinks model.links
            ]
    in
    pairs


encodeAdamProductDatastructuresLinks : AdamProductDatastructuresLinks -> Json.Encode.Value
encodeAdamProductDatastructuresLinks =
    encodeObject << encodeAdamProductDatastructuresLinksPairs


encodeAdamProductDatastructuresLinksWithTag : ( String, String ) -> AdamProductDatastructuresLinks -> Json.Encode.Value
encodeAdamProductDatastructuresLinksWithTag (tagField, tag) model =
    encodeObject (encodeAdamProductDatastructuresLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamProductDatastructuresLinksPairs : AdamProductDatastructuresLinks -> List EncodedField
encodeAdamProductDatastructuresLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamProductDatastructuresRef model.self
            , maybeEncode "priorVersion" encodeAdamProductDatastructuresRef model.priorVersion
            , maybeEncode "dataStructures" (Json.Encode.list encodeAdamDatastructureRefElement) model.dataStructures
            ]
    in
    pairs


encodeAdamProductDatastructuresRef : AdamProductDatastructuresRef -> Json.Encode.Value
encodeAdamProductDatastructuresRef =
    encodeObject << encodeAdamProductDatastructuresRefPairs


encodeAdamProductDatastructuresRefWithTag : ( String, String ) -> AdamProductDatastructuresRef -> Json.Encode.Value
encodeAdamProductDatastructuresRefWithTag (tagField, tag) model =
    encodeObject (encodeAdamProductDatastructuresRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamProductDatastructuresRefPairs : AdamProductDatastructuresRef -> List EncodedField
encodeAdamProductDatastructuresRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamProductLinks : AdamProductLinks -> Json.Encode.Value
encodeAdamProductLinks =
    encodeObject << encodeAdamProductLinksPairs


encodeAdamProductLinksWithTag : ( String, String ) -> AdamProductLinks -> Json.Encode.Value
encodeAdamProductLinksWithTag (tagField, tag) model =
    encodeObject (encodeAdamProductLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamProductLinksPairs : AdamProductLinks -> List EncodedField
encodeAdamProductLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamProductRef model.self
            , maybeEncode "model" encodeAdamProductRef model.model
            , maybeEncode "priorVersion" encodeAdamProductRef model.priorVersion
            ]
    in
    pairs


encodeAdamProductRef : AdamProductRef -> Json.Encode.Value
encodeAdamProductRef =
    encodeObject << encodeAdamProductRefPairs


encodeAdamProductRefWithTag : ( String, String ) -> AdamProductRef -> Json.Encode.Value
encodeAdamProductRefWithTag (tagField, tag) model =
    encodeObject (encodeAdamProductRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamProductRefPairs : AdamProductRef -> List EncodedField
encodeAdamProductRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamProductRefElement : AdamProductRefElement -> Json.Encode.Value
encodeAdamProductRefElement =
    encodeObject << encodeAdamProductRefElementPairs


encodeAdamProductRefElementWithTag : ( String, String ) -> AdamProductRefElement -> Json.Encode.Value
encodeAdamProductRefElementWithTag (tagField, tag) model =
    encodeObject (encodeAdamProductRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamProductRefElementPairs : AdamProductRefElement -> List EncodedField
encodeAdamProductRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamVariable : AdamVariable -> Json.Encode.Value
encodeAdamVariable =
    encodeObject << encodeAdamVariablePairs


encodeAdamVariableWithTag : ( String, String ) -> AdamVariable -> Json.Encode.Value
encodeAdamVariableWithTag (tagField, tag) model =
    encodeObject (encodeAdamVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamVariablePairs : AdamVariable -> List EncodedField
encodeAdamVariablePairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "core" Json.Encode.string model.core
            , maybeEncode "simpleDatatype" Json.Encode.string model.simpleDatatype
            , maybeEncode "describedValueDomain" Json.Encode.string model.describedValueDomain
            , maybeEncode "valueList" (Json.Encode.list Json.Encode.string) model.valueList
            , maybeEncode "_links" encodeAdamVariableLinks model.links
            ]
    in
    pairs


encodeAdamVariableLinks : AdamVariableLinks -> Json.Encode.Value
encodeAdamVariableLinks =
    encodeObject << encodeAdamVariableLinksPairs


encodeAdamVariableLinksWithTag : ( String, String ) -> AdamVariableLinks -> Json.Encode.Value
encodeAdamVariableLinksWithTag (tagField, tag) model =
    encodeObject (encodeAdamVariableLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamVariableLinksPairs : AdamVariableLinks -> List EncodedField
encodeAdamVariableLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamVariableRef model.self
            , maybeEncode "codelist" encodeRootCtCodelistRef model.codelist
            , maybeEncode "parentProduct" encodeAdamProductRef model.parentProduct
            , maybeEncode "parentDatastructure" encodeAdamDatastructureRef model.parentDatastructure
            , maybeEncode "parentVariableSet" encodeAdamVarsetRef model.parentVariableSet
            , maybeEncode "priorVersion" encodeAdamVariableRef model.priorVersion
            ]
    in
    pairs


encodeAdamVariableRef : AdamVariableRef -> Json.Encode.Value
encodeAdamVariableRef =
    encodeObject << encodeAdamVariableRefPairs


encodeAdamVariableRefWithTag : ( String, String ) -> AdamVariableRef -> Json.Encode.Value
encodeAdamVariableRefWithTag (tagField, tag) model =
    encodeObject (encodeAdamVariableRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamVariableRefPairs : AdamVariableRef -> List EncodedField
encodeAdamVariableRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamVariableRefElement : AdamVariableRefElement -> Json.Encode.Value
encodeAdamVariableRefElement =
    encodeObject << encodeAdamVariableRefElementPairs


encodeAdamVariableRefElementWithTag : ( String, String ) -> AdamVariableRefElement -> Json.Encode.Value
encodeAdamVariableRefElementWithTag (tagField, tag) model =
    encodeObject (encodeAdamVariableRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamVariableRefElementPairs : AdamVariableRefElement -> List EncodedField
encodeAdamVariableRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamVarset : AdamVarset -> Json.Encode.Value
encodeAdamVarset =
    encodeObject << encodeAdamVarsetPairs


encodeAdamVarsetWithTag : ( String, String ) -> AdamVarset -> Json.Encode.Value
encodeAdamVarsetWithTag (tagField, tag) model =
    encodeObject (encodeAdamVarsetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamVarsetPairs : AdamVarset -> List EncodedField
encodeAdamVarsetPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeAdamVarsetLinks model.links
            , maybeEncode "analysisVariables" (Json.Encode.list encodeAdamVariable) model.analysisVariables
            ]
    in
    pairs


encodeAdamVarsetLinks : AdamVarsetLinks -> Json.Encode.Value
encodeAdamVarsetLinks =
    encodeObject << encodeAdamVarsetLinksPairs


encodeAdamVarsetLinksWithTag : ( String, String ) -> AdamVarsetLinks -> Json.Encode.Value
encodeAdamVarsetLinksWithTag (tagField, tag) model =
    encodeObject (encodeAdamVarsetLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamVarsetLinksPairs : AdamVarsetLinks -> List EncodedField
encodeAdamVarsetLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamVarsetRef model.self
            , maybeEncode "parentProduct" encodeAdamProductRef model.parentProduct
            , maybeEncode "parentDatastructure" encodeAdamDatastructureRef model.parentDatastructure
            , maybeEncode "priorVersion" encodeAdamVarsetRef model.priorVersion
            ]
    in
    pairs


encodeAdamVarsetRef : AdamVarsetRef -> Json.Encode.Value
encodeAdamVarsetRef =
    encodeObject << encodeAdamVarsetRefPairs


encodeAdamVarsetRefWithTag : ( String, String ) -> AdamVarsetRef -> Json.Encode.Value
encodeAdamVarsetRefWithTag (tagField, tag) model =
    encodeObject (encodeAdamVarsetRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamVarsetRefPairs : AdamVarsetRef -> List EncodedField
encodeAdamVarsetRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeAdamVarsetRefElement : AdamVarsetRefElement -> Json.Encode.Value
encodeAdamVarsetRefElement =
    encodeObject << encodeAdamVarsetRefElementPairs


encodeAdamVarsetRefElementWithTag : ( String, String ) -> AdamVarsetRefElement -> Json.Encode.Value
encodeAdamVarsetRefElementWithTag (tagField, tag) model =
    encodeObject (encodeAdamVarsetRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAdamVarsetRefElementPairs : AdamVarsetRefElement -> List EncodedField
encodeAdamVarsetRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashClass : CdashClass -> Json.Encode.Value
encodeCdashClass =
    encodeObject << encodeCdashClassPairs


encodeCdashClassWithTag : ( String, String ) -> CdashClass -> Json.Encode.Value
encodeCdashClassWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassPairs : CdashClass -> List EncodedField
encodeCdashClassPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeCdashClassLinks model.links
            , maybeEncode "cdashModelFields" (Json.Encode.list encodeCdashClassField) model.cdashModelFields
            ]
    in
    pairs


encodeCdashClassDomains : CdashClassDomains -> Json.Encode.Value
encodeCdashClassDomains =
    encodeObject << encodeCdashClassDomainsPairs


encodeCdashClassDomainsWithTag : ( String, String ) -> CdashClassDomains -> Json.Encode.Value
encodeCdashClassDomainsWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassDomainsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassDomainsPairs : CdashClassDomains -> List EncodedField
encodeCdashClassDomainsPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeCdashClassDomainsLinks model.links
            ]
    in
    pairs


encodeCdashClassDomainsLinks : CdashClassDomainsLinks -> Json.Encode.Value
encodeCdashClassDomainsLinks =
    encodeObject << encodeCdashClassDomainsLinksPairs


encodeCdashClassDomainsLinksWithTag : ( String, String ) -> CdashClassDomainsLinks -> Json.Encode.Value
encodeCdashClassDomainsLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassDomainsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassDomainsLinksPairs : CdashClassDomainsLinks -> List EncodedField
encodeCdashClassDomainsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashClassDomainsRef model.self
            , maybeEncode "domains" (Json.Encode.list encodeCdashDomainRefElement) model.domains
            ]
    in
    pairs


encodeCdashClassDomainsRef : CdashClassDomainsRef -> Json.Encode.Value
encodeCdashClassDomainsRef =
    encodeObject << encodeCdashClassDomainsRefPairs


encodeCdashClassDomainsRefWithTag : ( String, String ) -> CdashClassDomainsRef -> Json.Encode.Value
encodeCdashClassDomainsRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassDomainsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassDomainsRefPairs : CdashClassDomainsRef -> List EncodedField
encodeCdashClassDomainsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashClassField : CdashClassField -> Json.Encode.Value
encodeCdashClassField =
    encodeObject << encodeCdashClassFieldPairs


encodeCdashClassFieldWithTag : ( String, String ) -> CdashClassField -> Json.Encode.Value
encodeCdashClassFieldWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassFieldPairs : CdashClassField -> List EncodedField
encodeCdashClassFieldPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "definition" Json.Encode.string model.definition
            , maybeEncode "questionText" Json.Encode.string model.questionText
            , maybeEncode "prompt" Json.Encode.string model.prompt
            , maybeEncode "simpleDatatype" Json.Encode.string model.simpleDatatype
            , maybeEncode "implementationNotes" Json.Encode.string model.implementationNotes
            , maybeEncode "mappingInstructions" Json.Encode.string model.mappingInstructions
            , maybeEncode "_links" encodeCdashClassFieldLinks model.links
            ]
    in
    pairs


encodeCdashClassFieldLinks : CdashClassFieldLinks -> Json.Encode.Value
encodeCdashClassFieldLinks =
    encodeObject << encodeCdashClassFieldLinksPairs


encodeCdashClassFieldLinksWithTag : ( String, String ) -> CdashClassFieldLinks -> Json.Encode.Value
encodeCdashClassFieldLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassFieldLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassFieldLinksPairs : CdashClassFieldLinks -> List EncodedField
encodeCdashClassFieldLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashClassFieldRef model.self
            , maybeEncode "codelist" (Json.Encode.list encodeRootCtCodelistRefElement) model.codelist
            , maybeEncode "parentProduct" encodeCdashProductRef model.parentProduct
            , maybeEncode "parentClass" encodeCdashClassRef model.parentClass
            , maybeEncode "rootItem" encodeRootCdashClassFieldRef model.rootItem
            , maybeEncode "priorVersion" encodeCdashClassFieldRef model.priorVersion
            , maybeEncode "sdtmClassMappingTargets" (Json.Encode.list encodeSdtmClassVariableRefTarget) model.sdtmClassMappingTargets
            , maybeEncode "sdtmDatasetMappingTargets" (Json.Encode.list encodeSdtmDatasetVariableRefTarget) model.sdtmDatasetMappingTargets
            ]
    in
    pairs


encodeCdashClassFieldRef : CdashClassFieldRef -> Json.Encode.Value
encodeCdashClassFieldRef =
    encodeObject << encodeCdashClassFieldRefPairs


encodeCdashClassFieldRefWithTag : ( String, String ) -> CdashClassFieldRef -> Json.Encode.Value
encodeCdashClassFieldRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassFieldRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassFieldRefPairs : CdashClassFieldRef -> List EncodedField
encodeCdashClassFieldRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashClassFieldRefVersion : CdashClassFieldRefVersion -> Json.Encode.Value
encodeCdashClassFieldRefVersion =
    encodeObject << encodeCdashClassFieldRefVersionPairs


encodeCdashClassFieldRefVersionWithTag : ( String, String ) -> CdashClassFieldRefVersion -> Json.Encode.Value
encodeCdashClassFieldRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassFieldRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassFieldRefVersionPairs : CdashClassFieldRefVersion -> List EncodedField
encodeCdashClassFieldRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashClassLinks : CdashClassLinks -> Json.Encode.Value
encodeCdashClassLinks =
    encodeObject << encodeCdashClassLinksPairs


encodeCdashClassLinksWithTag : ( String, String ) -> CdashClassLinks -> Json.Encode.Value
encodeCdashClassLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassLinksPairs : CdashClassLinks -> List EncodedField
encodeCdashClassLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashClassRef model.self
            , maybeEncode "parentProduct" encodeCdashProductRef model.parentProduct
            , maybeEncode "priorVersion" encodeCdashClassRef model.priorVersion
            ]
    in
    pairs


encodeCdashClassRef : CdashClassRef -> Json.Encode.Value
encodeCdashClassRef =
    encodeObject << encodeCdashClassRefPairs


encodeCdashClassRefWithTag : ( String, String ) -> CdashClassRef -> Json.Encode.Value
encodeCdashClassRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassRefPairs : CdashClassRef -> List EncodedField
encodeCdashClassRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashClassRefElement : CdashClassRefElement -> Json.Encode.Value
encodeCdashClassRefElement =
    encodeObject << encodeCdashClassRefElementPairs


encodeCdashClassRefElementWithTag : ( String, String ) -> CdashClassRefElement -> Json.Encode.Value
encodeCdashClassRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashClassRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashClassRefElementPairs : CdashClassRefElement -> List EncodedField
encodeCdashClassRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashDomain : CdashDomain -> Json.Encode.Value
encodeCdashDomain =
    encodeObject << encodeCdashDomainPairs


encodeCdashDomainWithTag : ( String, String ) -> CdashDomain -> Json.Encode.Value
encodeCdashDomainWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainPairs : CdashDomain -> List EncodedField
encodeCdashDomainPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "_links" encodeCdashDomainLinks model.links
            , maybeEncode "fields" (Json.Encode.list encodeCdashDomainField) model.fields
            ]
    in
    pairs


encodeCdashDomainField : CdashDomainField -> Json.Encode.Value
encodeCdashDomainField =
    encodeObject << encodeCdashDomainFieldPairs


encodeCdashDomainFieldWithTag : ( String, String ) -> CdashDomainField -> Json.Encode.Value
encodeCdashDomainFieldWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainFieldPairs : CdashDomainField -> List EncodedField
encodeCdashDomainFieldPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "definition" Json.Encode.string model.definition
            , maybeEncode "domainSpecific" Json.Encode.string model.domainSpecific
            , maybeEncode "questionText" Json.Encode.string model.questionText
            , maybeEncode "prompt" Json.Encode.string model.prompt
            , maybeEncode "simpleDatatype" Json.Encode.string model.simpleDatatype
            , maybeEncode "implementationNotes" Json.Encode.string model.implementationNotes
            , maybeEncode "mappingInstructions" Json.Encode.string model.mappingInstructions
            , maybeEncode "_links" encodeCdashDomainFieldLinks model.links
            ]
    in
    pairs


encodeCdashDomainFieldLinks : CdashDomainFieldLinks -> Json.Encode.Value
encodeCdashDomainFieldLinks =
    encodeObject << encodeCdashDomainFieldLinksPairs


encodeCdashDomainFieldLinksWithTag : ( String, String ) -> CdashDomainFieldLinks -> Json.Encode.Value
encodeCdashDomainFieldLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainFieldLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainFieldLinksPairs : CdashDomainFieldLinks -> List EncodedField
encodeCdashDomainFieldLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashDomainFieldRef model.self
            , maybeEncode "codelist" (Json.Encode.list encodeRootCtCodelistRefElement) model.codelist
            , maybeEncode "parentProduct" encodeCdashProductRef model.parentProduct
            , maybeEncode "parentClass" encodeCdashClassRef model.parentClass
            , maybeEncode "parentDomain" encodeCdashDomainRef model.parentDomain
            , maybeEncode "rootItem" encodeRootCdashDomainFieldRef model.rootItem
            , maybeEncode "priorVersion" encodeCdashDomainFieldRef model.priorVersion
            , maybeEncode "sdtmDatasetMappingTargets" (Json.Encode.list encodeSdtmDatasetVariableRefTarget) model.sdtmDatasetMappingTargets
            , maybeEncode "sdtmigDatasetMappingTargets" (Json.Encode.list encodeSdtmigDatasetVariableRefTarget) model.sdtmigDatasetMappingTargets
            ]
    in
    pairs


encodeCdashDomainFieldRef : CdashDomainFieldRef -> Json.Encode.Value
encodeCdashDomainFieldRef =
    encodeObject << encodeCdashDomainFieldRefPairs


encodeCdashDomainFieldRefWithTag : ( String, String ) -> CdashDomainFieldRef -> Json.Encode.Value
encodeCdashDomainFieldRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainFieldRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainFieldRefPairs : CdashDomainFieldRef -> List EncodedField
encodeCdashDomainFieldRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashDomainFieldRefElement : CdashDomainFieldRefElement -> Json.Encode.Value
encodeCdashDomainFieldRefElement =
    encodeObject << encodeCdashDomainFieldRefElementPairs


encodeCdashDomainFieldRefElementWithTag : ( String, String ) -> CdashDomainFieldRefElement -> Json.Encode.Value
encodeCdashDomainFieldRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainFieldRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainFieldRefElementPairs : CdashDomainFieldRefElement -> List EncodedField
encodeCdashDomainFieldRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashDomainFieldRefVersion : CdashDomainFieldRefVersion -> Json.Encode.Value
encodeCdashDomainFieldRefVersion =
    encodeObject << encodeCdashDomainFieldRefVersionPairs


encodeCdashDomainFieldRefVersionWithTag : ( String, String ) -> CdashDomainFieldRefVersion -> Json.Encode.Value
encodeCdashDomainFieldRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainFieldRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainFieldRefVersionPairs : CdashDomainFieldRefVersion -> List EncodedField
encodeCdashDomainFieldRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashDomainFields : CdashDomainFields -> Json.Encode.Value
encodeCdashDomainFields =
    encodeObject << encodeCdashDomainFieldsPairs


encodeCdashDomainFieldsWithTag : ( String, String ) -> CdashDomainFields -> Json.Encode.Value
encodeCdashDomainFieldsWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainFieldsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainFieldsPairs : CdashDomainFields -> List EncodedField
encodeCdashDomainFieldsPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "_links" encodeCdashDomainFieldsLinks model.links
            ]
    in
    pairs


encodeCdashDomainFieldsLinks : CdashDomainFieldsLinks -> Json.Encode.Value
encodeCdashDomainFieldsLinks =
    encodeObject << encodeCdashDomainFieldsLinksPairs


encodeCdashDomainFieldsLinksWithTag : ( String, String ) -> CdashDomainFieldsLinks -> Json.Encode.Value
encodeCdashDomainFieldsLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainFieldsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainFieldsLinksPairs : CdashDomainFieldsLinks -> List EncodedField
encodeCdashDomainFieldsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashDomainFieldsRef model.self
            , maybeEncode "parentProduct" encodeCdashProductRef model.parentProduct
            , maybeEncode "parentClass" encodeCdashClassRef model.parentClass
            , maybeEncode "fields" (Json.Encode.list encodeCdashDomainFieldRefElement) model.fields
            ]
    in
    pairs


encodeCdashDomainFieldsRef : CdashDomainFieldsRef -> Json.Encode.Value
encodeCdashDomainFieldsRef =
    encodeObject << encodeCdashDomainFieldsRefPairs


encodeCdashDomainFieldsRefWithTag : ( String, String ) -> CdashDomainFieldsRef -> Json.Encode.Value
encodeCdashDomainFieldsRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainFieldsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainFieldsRefPairs : CdashDomainFieldsRef -> List EncodedField
encodeCdashDomainFieldsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashDomainLinks : CdashDomainLinks -> Json.Encode.Value
encodeCdashDomainLinks =
    encodeObject << encodeCdashDomainLinksPairs


encodeCdashDomainLinksWithTag : ( String, String ) -> CdashDomainLinks -> Json.Encode.Value
encodeCdashDomainLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainLinksPairs : CdashDomainLinks -> List EncodedField
encodeCdashDomainLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashDomainRef model.self
            , maybeEncode "parentProduct" encodeCdashProductRef model.parentProduct
            , maybeEncode "parentClass" encodeCdashClassRef model.parentClass
            , maybeEncode "priorVersion" encodeCdashDomainRef model.priorVersion
            ]
    in
    pairs


encodeCdashDomainRef : CdashDomainRef -> Json.Encode.Value
encodeCdashDomainRef =
    encodeObject << encodeCdashDomainRefPairs


encodeCdashDomainRefWithTag : ( String, String ) -> CdashDomainRef -> Json.Encode.Value
encodeCdashDomainRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainRefPairs : CdashDomainRef -> List EncodedField
encodeCdashDomainRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashDomainRefElement : CdashDomainRefElement -> Json.Encode.Value
encodeCdashDomainRefElement =
    encodeObject << encodeCdashDomainRefElementPairs


encodeCdashDomainRefElementWithTag : ( String, String ) -> CdashDomainRefElement -> Json.Encode.Value
encodeCdashDomainRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashDomainRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashDomainRefElementPairs : CdashDomainRefElement -> List EncodedField
encodeCdashDomainRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashProduct : CdashProduct -> Json.Encode.Value
encodeCdashProduct =
    encodeObject << encodeCdashProductPairs


encodeCdashProductWithTag : ( String, String ) -> CdashProduct -> Json.Encode.Value
encodeCdashProductWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductPairs : CdashProduct -> List EncodedField
encodeCdashProductPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeCdashProductLinks model.links
            , maybeEncode "classes" (Json.Encode.list encodeCdashClass) model.classes
            , maybeEncode "domains" (Json.Encode.list encodeCdashDomain) model.domains
            ]
    in
    pairs


encodeCdashProductClasses : CdashProductClasses -> Json.Encode.Value
encodeCdashProductClasses =
    encodeObject << encodeCdashProductClassesPairs


encodeCdashProductClassesWithTag : ( String, String ) -> CdashProductClasses -> Json.Encode.Value
encodeCdashProductClassesWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductClassesPairs : CdashProductClasses -> List EncodedField
encodeCdashProductClassesPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeCdashProductClassesLinks model.links
            ]
    in
    pairs


encodeCdashProductClassesLinks : CdashProductClassesLinks -> Json.Encode.Value
encodeCdashProductClassesLinks =
    encodeObject << encodeCdashProductClassesLinksPairs


encodeCdashProductClassesLinksWithTag : ( String, String ) -> CdashProductClassesLinks -> Json.Encode.Value
encodeCdashProductClassesLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductClassesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductClassesLinksPairs : CdashProductClassesLinks -> List EncodedField
encodeCdashProductClassesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashProductClassesRef model.self
            , maybeEncode "parentProduct" encodeCdashProductRef model.parentProduct
            , maybeEncode "classes" (Json.Encode.list encodeCdashClassRefElement) model.classes
            ]
    in
    pairs


encodeCdashProductClassesRef : CdashProductClassesRef -> Json.Encode.Value
encodeCdashProductClassesRef =
    encodeObject << encodeCdashProductClassesRefPairs


encodeCdashProductClassesRefWithTag : ( String, String ) -> CdashProductClassesRef -> Json.Encode.Value
encodeCdashProductClassesRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductClassesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductClassesRefPairs : CdashProductClassesRef -> List EncodedField
encodeCdashProductClassesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashProductDomains : CdashProductDomains -> Json.Encode.Value
encodeCdashProductDomains =
    encodeObject << encodeCdashProductDomainsPairs


encodeCdashProductDomainsWithTag : ( String, String ) -> CdashProductDomains -> Json.Encode.Value
encodeCdashProductDomainsWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductDomainsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductDomainsPairs : CdashProductDomains -> List EncodedField
encodeCdashProductDomainsPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeCdashProductDomainsLinks model.links
            ]
    in
    pairs


encodeCdashProductDomainsLinks : CdashProductDomainsLinks -> Json.Encode.Value
encodeCdashProductDomainsLinks =
    encodeObject << encodeCdashProductDomainsLinksPairs


encodeCdashProductDomainsLinksWithTag : ( String, String ) -> CdashProductDomainsLinks -> Json.Encode.Value
encodeCdashProductDomainsLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductDomainsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductDomainsLinksPairs : CdashProductDomainsLinks -> List EncodedField
encodeCdashProductDomainsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashProductDomainsRef model.self
            , maybeEncode "parentProduct" encodeCdashProductRef model.parentProduct
            , maybeEncode "domains" (Json.Encode.list encodeCdashDomainRefElement) model.domains
            ]
    in
    pairs


encodeCdashProductDomainsRef : CdashProductDomainsRef -> Json.Encode.Value
encodeCdashProductDomainsRef =
    encodeObject << encodeCdashProductDomainsRefPairs


encodeCdashProductDomainsRefWithTag : ( String, String ) -> CdashProductDomainsRef -> Json.Encode.Value
encodeCdashProductDomainsRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductDomainsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductDomainsRefPairs : CdashProductDomainsRef -> List EncodedField
encodeCdashProductDomainsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashProductLinks : CdashProductLinks -> Json.Encode.Value
encodeCdashProductLinks =
    encodeObject << encodeCdashProductLinksPairs


encodeCdashProductLinksWithTag : ( String, String ) -> CdashProductLinks -> Json.Encode.Value
encodeCdashProductLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductLinksPairs : CdashProductLinks -> List EncodedField
encodeCdashProductLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashProductRef model.self
            , maybeEncode "priorVersion" encodeCdashProductRef model.priorVersion
            ]
    in
    pairs


encodeCdashProductRef : CdashProductRef -> Json.Encode.Value
encodeCdashProductRef =
    encodeObject << encodeCdashProductRefPairs


encodeCdashProductRefWithTag : ( String, String ) -> CdashProductRef -> Json.Encode.Value
encodeCdashProductRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductRefPairs : CdashProductRef -> List EncodedField
encodeCdashProductRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashProductRefElement : CdashProductRefElement -> Json.Encode.Value
encodeCdashProductRefElement =
    encodeObject << encodeCdashProductRefElementPairs


encodeCdashProductRefElementWithTag : ( String, String ) -> CdashProductRefElement -> Json.Encode.Value
encodeCdashProductRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashProductRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashProductRefElementPairs : CdashProductRefElement -> List EncodedField
encodeCdashProductRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigClass : CdashigClass -> Json.Encode.Value
encodeCdashigClass =
    encodeObject << encodeCdashigClassPairs


encodeCdashigClassWithTag : ( String, String ) -> CdashigClass -> Json.Encode.Value
encodeCdashigClassWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassPairs : CdashigClass -> List EncodedField
encodeCdashigClassPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeCdashigClassLinks model.links
            , maybeEncode "domains" (Json.Encode.list encodeCdashigDomain) model.domains
            , maybeEncode "scenarios" (Json.Encode.list encodeCdashigScenario) model.scenarios
            ]
    in
    pairs


encodeCdashigClassDomains : CdashigClassDomains -> Json.Encode.Value
encodeCdashigClassDomains =
    encodeObject << encodeCdashigClassDomainsPairs


encodeCdashigClassDomainsWithTag : ( String, String ) -> CdashigClassDomains -> Json.Encode.Value
encodeCdashigClassDomainsWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassDomainsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassDomainsPairs : CdashigClassDomains -> List EncodedField
encodeCdashigClassDomainsPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeCdashigClassDomainsLinks model.links
            ]
    in
    pairs


encodeCdashigClassDomainsLinks : CdashigClassDomainsLinks -> Json.Encode.Value
encodeCdashigClassDomainsLinks =
    encodeObject << encodeCdashigClassDomainsLinksPairs


encodeCdashigClassDomainsLinksWithTag : ( String, String ) -> CdashigClassDomainsLinks -> Json.Encode.Value
encodeCdashigClassDomainsLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassDomainsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassDomainsLinksPairs : CdashigClassDomainsLinks -> List EncodedField
encodeCdashigClassDomainsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigClassDomainsRef model.self
            , maybeEncode "domains" (Json.Encode.list encodeCdashigDomainRefElement) model.domains
            ]
    in
    pairs


encodeCdashigClassDomainsRef : CdashigClassDomainsRef -> Json.Encode.Value
encodeCdashigClassDomainsRef =
    encodeObject << encodeCdashigClassDomainsRefPairs


encodeCdashigClassDomainsRefWithTag : ( String, String ) -> CdashigClassDomainsRef -> Json.Encode.Value
encodeCdashigClassDomainsRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassDomainsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassDomainsRefPairs : CdashigClassDomainsRef -> List EncodedField
encodeCdashigClassDomainsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigClassLinks : CdashigClassLinks -> Json.Encode.Value
encodeCdashigClassLinks =
    encodeObject << encodeCdashigClassLinksPairs


encodeCdashigClassLinksWithTag : ( String, String ) -> CdashigClassLinks -> Json.Encode.Value
encodeCdashigClassLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassLinksPairs : CdashigClassLinks -> List EncodedField
encodeCdashigClassLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigClassRef model.self
            , maybeEncode "modelClass" encodeCdashClassRef model.modelClass
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeCdashigClassRef model.parentClass
            , maybeEncode "subclasses" (Json.Encode.list encodeCdashigClassRefSubclass) model.subclasses
            , maybeEncode "priorVersion" encodeCdashigClassRef model.priorVersion
            ]
    in
    pairs


encodeCdashigClassRef : CdashigClassRef -> Json.Encode.Value
encodeCdashigClassRef =
    encodeObject << encodeCdashigClassRefPairs


encodeCdashigClassRefWithTag : ( String, String ) -> CdashigClassRef -> Json.Encode.Value
encodeCdashigClassRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassRefPairs : CdashigClassRef -> List EncodedField
encodeCdashigClassRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigClassRefElement : CdashigClassRefElement -> Json.Encode.Value
encodeCdashigClassRefElement =
    encodeObject << encodeCdashigClassRefElementPairs


encodeCdashigClassRefElementWithTag : ( String, String ) -> CdashigClassRefElement -> Json.Encode.Value
encodeCdashigClassRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassRefElementPairs : CdashigClassRefElement -> List EncodedField
encodeCdashigClassRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigClassRefSubclass : CdashigClassRefSubclass -> Json.Encode.Value
encodeCdashigClassRefSubclass =
    encodeObject << encodeCdashigClassRefSubclassPairs


encodeCdashigClassRefSubclassWithTag : ( String, String ) -> CdashigClassRefSubclass -> Json.Encode.Value
encodeCdashigClassRefSubclassWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassRefSubclassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassRefSubclassPairs : CdashigClassRefSubclass -> List EncodedField
encodeCdashigClassRefSubclassPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigClassScenarios : CdashigClassScenarios -> Json.Encode.Value
encodeCdashigClassScenarios =
    encodeObject << encodeCdashigClassScenariosPairs


encodeCdashigClassScenariosWithTag : ( String, String ) -> CdashigClassScenarios -> Json.Encode.Value
encodeCdashigClassScenariosWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassScenariosPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassScenariosPairs : CdashigClassScenarios -> List EncodedField
encodeCdashigClassScenariosPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeCdashigClassScenariosLinks model.links
            ]
    in
    pairs


encodeCdashigClassScenariosLinks : CdashigClassScenariosLinks -> Json.Encode.Value
encodeCdashigClassScenariosLinks =
    encodeObject << encodeCdashigClassScenariosLinksPairs


encodeCdashigClassScenariosLinksWithTag : ( String, String ) -> CdashigClassScenariosLinks -> Json.Encode.Value
encodeCdashigClassScenariosLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassScenariosLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassScenariosLinksPairs : CdashigClassScenariosLinks -> List EncodedField
encodeCdashigClassScenariosLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigClassScenariosRef model.self
            , maybeEncode "scenarios" (Json.Encode.list encodeCdashigScenarioRefElement) model.scenarios
            ]
    in
    pairs


encodeCdashigClassScenariosRef : CdashigClassScenariosRef -> Json.Encode.Value
encodeCdashigClassScenariosRef =
    encodeObject << encodeCdashigClassScenariosRefPairs


encodeCdashigClassScenariosRefWithTag : ( String, String ) -> CdashigClassScenariosRef -> Json.Encode.Value
encodeCdashigClassScenariosRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigClassScenariosRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigClassScenariosRefPairs : CdashigClassScenariosRef -> List EncodedField
encodeCdashigClassScenariosRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigDomain : CdashigDomain -> Json.Encode.Value
encodeCdashigDomain =
    encodeObject << encodeCdashigDomainPairs


encodeCdashigDomainWithTag : ( String, String ) -> CdashigDomain -> Json.Encode.Value
encodeCdashigDomainWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainPairs : CdashigDomain -> List EncodedField
encodeCdashigDomainPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "_links" encodeCdashigDomainLinks model.links
            , maybeEncode "fields" (Json.Encode.list encodeCdashigDomainField) model.fields
            ]
    in
    pairs


encodeCdashigDomainField : CdashigDomainField -> Json.Encode.Value
encodeCdashigDomainField =
    encodeObject << encodeCdashigDomainFieldPairs


encodeCdashigDomainFieldWithTag : ( String, String ) -> CdashigDomainField -> Json.Encode.Value
encodeCdashigDomainFieldWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainFieldPairs : CdashigDomainField -> List EncodedField
encodeCdashigDomainFieldPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "definition" Json.Encode.string model.definition
            , maybeEncode "questionText" Json.Encode.string model.questionText
            , maybeEncode "prompt" Json.Encode.string model.prompt
            , maybeEncode "completionInstructions" Json.Encode.string model.completionInstructions
            , maybeEncode "implementationNotes" Json.Encode.string model.implementationNotes
            , maybeEncode "simpleDatatype" Json.Encode.string model.simpleDatatype
            , maybeEncode "mappingInstructions" Json.Encode.string model.mappingInstructions
            , maybeEncode "core" Json.Encode.string model.core
            , maybeEncode "_links" encodeCdashigDomainFieldLinks model.links
            ]
    in
    pairs


encodeCdashigDomainFieldLinks : CdashigDomainFieldLinks -> Json.Encode.Value
encodeCdashigDomainFieldLinks =
    encodeObject << encodeCdashigDomainFieldLinksPairs


encodeCdashigDomainFieldLinksWithTag : ( String, String ) -> CdashigDomainFieldLinks -> Json.Encode.Value
encodeCdashigDomainFieldLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainFieldLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainFieldLinksPairs : CdashigDomainFieldLinks -> List EncodedField
encodeCdashigDomainFieldLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigDomainFieldRef model.self
            , maybeEncode "codelist" (Json.Encode.list encodeRootCtCodelistRefElement) model.codelist
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "parentDomain" encodeCdashigDomainRef model.parentDomain
            , maybeEncode "rootItem" encodeRootCdashigDomainFieldRef model.rootItem
            , maybeEncode "priorVersion" encodeCdashigDomainFieldRef model.priorVersion
            , maybeEncode "sdtmClassMappingTargets" (Json.Encode.list encodeSdtmClassVariableRefTarget) model.sdtmClassMappingTargets
            , maybeEncode "sdtmigDatasetMappingTargets" (Json.Encode.list encodeSdtmigDatasetVariableRefTarget) model.sdtmigDatasetMappingTargets
            ]
    in
    pairs


encodeCdashigDomainFieldRef : CdashigDomainFieldRef -> Json.Encode.Value
encodeCdashigDomainFieldRef =
    encodeObject << encodeCdashigDomainFieldRefPairs


encodeCdashigDomainFieldRefWithTag : ( String, String ) -> CdashigDomainFieldRef -> Json.Encode.Value
encodeCdashigDomainFieldRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainFieldRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainFieldRefPairs : CdashigDomainFieldRef -> List EncodedField
encodeCdashigDomainFieldRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigDomainFieldRefElement : CdashigDomainFieldRefElement -> Json.Encode.Value
encodeCdashigDomainFieldRefElement =
    encodeObject << encodeCdashigDomainFieldRefElementPairs


encodeCdashigDomainFieldRefElementWithTag : ( String, String ) -> CdashigDomainFieldRefElement -> Json.Encode.Value
encodeCdashigDomainFieldRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainFieldRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainFieldRefElementPairs : CdashigDomainFieldRefElement -> List EncodedField
encodeCdashigDomainFieldRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigDomainFieldRefVersion : CdashigDomainFieldRefVersion -> Json.Encode.Value
encodeCdashigDomainFieldRefVersion =
    encodeObject << encodeCdashigDomainFieldRefVersionPairs


encodeCdashigDomainFieldRefVersionWithTag : ( String, String ) -> CdashigDomainFieldRefVersion -> Json.Encode.Value
encodeCdashigDomainFieldRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainFieldRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainFieldRefVersionPairs : CdashigDomainFieldRefVersion -> List EncodedField
encodeCdashigDomainFieldRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigDomainFields : CdashigDomainFields -> Json.Encode.Value
encodeCdashigDomainFields =
    encodeObject << encodeCdashigDomainFieldsPairs


encodeCdashigDomainFieldsWithTag : ( String, String ) -> CdashigDomainFields -> Json.Encode.Value
encodeCdashigDomainFieldsWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainFieldsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainFieldsPairs : CdashigDomainFields -> List EncodedField
encodeCdashigDomainFieldsPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "_links" encodeCdashigDomainFieldsLinks model.links
            ]
    in
    pairs


encodeCdashigDomainFieldsLinks : CdashigDomainFieldsLinks -> Json.Encode.Value
encodeCdashigDomainFieldsLinks =
    encodeObject << encodeCdashigDomainFieldsLinksPairs


encodeCdashigDomainFieldsLinksWithTag : ( String, String ) -> CdashigDomainFieldsLinks -> Json.Encode.Value
encodeCdashigDomainFieldsLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainFieldsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainFieldsLinksPairs : CdashigDomainFieldsLinks -> List EncodedField
encodeCdashigDomainFieldsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigDomainFieldsRef model.self
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeCdashigClassRef model.parentClass
            , maybeEncode "fields" (Json.Encode.list encodeCdashigDomainFieldRefElement) model.fields
            ]
    in
    pairs


encodeCdashigDomainFieldsRef : CdashigDomainFieldsRef -> Json.Encode.Value
encodeCdashigDomainFieldsRef =
    encodeObject << encodeCdashigDomainFieldsRefPairs


encodeCdashigDomainFieldsRefWithTag : ( String, String ) -> CdashigDomainFieldsRef -> Json.Encode.Value
encodeCdashigDomainFieldsRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainFieldsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainFieldsRefPairs : CdashigDomainFieldsRef -> List EncodedField
encodeCdashigDomainFieldsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigDomainLinks : CdashigDomainLinks -> Json.Encode.Value
encodeCdashigDomainLinks =
    encodeObject << encodeCdashigDomainLinksPairs


encodeCdashigDomainLinksWithTag : ( String, String ) -> CdashigDomainLinks -> Json.Encode.Value
encodeCdashigDomainLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainLinksPairs : CdashigDomainLinks -> List EncodedField
encodeCdashigDomainLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigDomainRef model.self
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeCdashigClassRef model.parentClass
            , maybeEncode "priorVersion" encodeCdashigDomainRef model.priorVersion
            , maybeEncode "scenarios" (Json.Encode.list encodeCdashigScenarioRefElement) model.scenarios
            ]
    in
    pairs


encodeCdashigDomainRef : CdashigDomainRef -> Json.Encode.Value
encodeCdashigDomainRef =
    encodeObject << encodeCdashigDomainRefPairs


encodeCdashigDomainRefWithTag : ( String, String ) -> CdashigDomainRef -> Json.Encode.Value
encodeCdashigDomainRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainRefPairs : CdashigDomainRef -> List EncodedField
encodeCdashigDomainRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigDomainRefElement : CdashigDomainRefElement -> Json.Encode.Value
encodeCdashigDomainRefElement =
    encodeObject << encodeCdashigDomainRefElementPairs


encodeCdashigDomainRefElementWithTag : ( String, String ) -> CdashigDomainRefElement -> Json.Encode.Value
encodeCdashigDomainRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashigDomainRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigDomainRefElementPairs : CdashigDomainRefElement -> List EncodedField
encodeCdashigDomainRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigProduct : CdashigProduct -> Json.Encode.Value
encodeCdashigProduct =
    encodeObject << encodeCdashigProductPairs


encodeCdashigProductWithTag : ( String, String ) -> CdashigProduct -> Json.Encode.Value
encodeCdashigProductWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductPairs : CdashigProduct -> List EncodedField
encodeCdashigProductPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeCdashigProductLinks model.links
            , maybeEncode "classes" (Json.Encode.list encodeCdashigClass) model.classes
            ]
    in
    pairs


encodeCdashigProductClasses : CdashigProductClasses -> Json.Encode.Value
encodeCdashigProductClasses =
    encodeObject << encodeCdashigProductClassesPairs


encodeCdashigProductClassesWithTag : ( String, String ) -> CdashigProductClasses -> Json.Encode.Value
encodeCdashigProductClassesWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductClassesPairs : CdashigProductClasses -> List EncodedField
encodeCdashigProductClassesPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeCdashigProductClassesLinks model.links
            ]
    in
    pairs


encodeCdashigProductClassesLinks : CdashigProductClassesLinks -> Json.Encode.Value
encodeCdashigProductClassesLinks =
    encodeObject << encodeCdashigProductClassesLinksPairs


encodeCdashigProductClassesLinksWithTag : ( String, String ) -> CdashigProductClassesLinks -> Json.Encode.Value
encodeCdashigProductClassesLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductClassesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductClassesLinksPairs : CdashigProductClassesLinks -> List EncodedField
encodeCdashigProductClassesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigProductClassesRef model.self
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "classes" (Json.Encode.list encodeCdashigClassRefElement) model.classes
            ]
    in
    pairs


encodeCdashigProductClassesRef : CdashigProductClassesRef -> Json.Encode.Value
encodeCdashigProductClassesRef =
    encodeObject << encodeCdashigProductClassesRefPairs


encodeCdashigProductClassesRefWithTag : ( String, String ) -> CdashigProductClassesRef -> Json.Encode.Value
encodeCdashigProductClassesRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductClassesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductClassesRefPairs : CdashigProductClassesRef -> List EncodedField
encodeCdashigProductClassesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigProductDomains : CdashigProductDomains -> Json.Encode.Value
encodeCdashigProductDomains =
    encodeObject << encodeCdashigProductDomainsPairs


encodeCdashigProductDomainsWithTag : ( String, String ) -> CdashigProductDomains -> Json.Encode.Value
encodeCdashigProductDomainsWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductDomainsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductDomainsPairs : CdashigProductDomains -> List EncodedField
encodeCdashigProductDomainsPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeCdashigProductDomainsLinks model.links
            ]
    in
    pairs


encodeCdashigProductDomainsLinks : CdashigProductDomainsLinks -> Json.Encode.Value
encodeCdashigProductDomainsLinks =
    encodeObject << encodeCdashigProductDomainsLinksPairs


encodeCdashigProductDomainsLinksWithTag : ( String, String ) -> CdashigProductDomainsLinks -> Json.Encode.Value
encodeCdashigProductDomainsLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductDomainsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductDomainsLinksPairs : CdashigProductDomainsLinks -> List EncodedField
encodeCdashigProductDomainsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigProductDomainsRef model.self
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "domains" (Json.Encode.list encodeCdashigDomainRefElement) model.domains
            ]
    in
    pairs


encodeCdashigProductDomainsRef : CdashigProductDomainsRef -> Json.Encode.Value
encodeCdashigProductDomainsRef =
    encodeObject << encodeCdashigProductDomainsRefPairs


encodeCdashigProductDomainsRefWithTag : ( String, String ) -> CdashigProductDomainsRef -> Json.Encode.Value
encodeCdashigProductDomainsRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductDomainsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductDomainsRefPairs : CdashigProductDomainsRef -> List EncodedField
encodeCdashigProductDomainsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigProductLinks : CdashigProductLinks -> Json.Encode.Value
encodeCdashigProductLinks =
    encodeObject << encodeCdashigProductLinksPairs


encodeCdashigProductLinksWithTag : ( String, String ) -> CdashigProductLinks -> Json.Encode.Value
encodeCdashigProductLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductLinksPairs : CdashigProductLinks -> List EncodedField
encodeCdashigProductLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigProductRef model.self
            , maybeEncode "model" encodeCdashProductRef model.model
            , maybeEncode "priorVersion" encodeCdashigProductRef model.priorVersion
            ]
    in
    pairs


encodeCdashigProductRef : CdashigProductRef -> Json.Encode.Value
encodeCdashigProductRef =
    encodeObject << encodeCdashigProductRefPairs


encodeCdashigProductRefWithTag : ( String, String ) -> CdashigProductRef -> Json.Encode.Value
encodeCdashigProductRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductRefPairs : CdashigProductRef -> List EncodedField
encodeCdashigProductRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigProductRefElement : CdashigProductRefElement -> Json.Encode.Value
encodeCdashigProductRefElement =
    encodeObject << encodeCdashigProductRefElementPairs


encodeCdashigProductRefElementWithTag : ( String, String ) -> CdashigProductRefElement -> Json.Encode.Value
encodeCdashigProductRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductRefElementPairs : CdashigProductRefElement -> List EncodedField
encodeCdashigProductRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigProductScenarios : CdashigProductScenarios -> Json.Encode.Value
encodeCdashigProductScenarios =
    encodeObject << encodeCdashigProductScenariosPairs


encodeCdashigProductScenariosWithTag : ( String, String ) -> CdashigProductScenarios -> Json.Encode.Value
encodeCdashigProductScenariosWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductScenariosPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductScenariosPairs : CdashigProductScenarios -> List EncodedField
encodeCdashigProductScenariosPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeCdashigProductScenariosLinks model.links
            ]
    in
    pairs


encodeCdashigProductScenariosLinks : CdashigProductScenariosLinks -> Json.Encode.Value
encodeCdashigProductScenariosLinks =
    encodeObject << encodeCdashigProductScenariosLinksPairs


encodeCdashigProductScenariosLinksWithTag : ( String, String ) -> CdashigProductScenariosLinks -> Json.Encode.Value
encodeCdashigProductScenariosLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductScenariosLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductScenariosLinksPairs : CdashigProductScenariosLinks -> List EncodedField
encodeCdashigProductScenariosLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigProductScenariosRef model.self
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "scenarios" (Json.Encode.list encodeCdashigScenarioRefElement) model.scenarios
            ]
    in
    pairs


encodeCdashigProductScenariosRef : CdashigProductScenariosRef -> Json.Encode.Value
encodeCdashigProductScenariosRef =
    encodeObject << encodeCdashigProductScenariosRefPairs


encodeCdashigProductScenariosRefWithTag : ( String, String ) -> CdashigProductScenariosRef -> Json.Encode.Value
encodeCdashigProductScenariosRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigProductScenariosRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigProductScenariosRefPairs : CdashigProductScenariosRef -> List EncodedField
encodeCdashigProductScenariosRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigScenario : CdashigScenario -> Json.Encode.Value
encodeCdashigScenario =
    encodeObject << encodeCdashigScenarioPairs


encodeCdashigScenarioWithTag : ( String, String ) -> CdashigScenario -> Json.Encode.Value
encodeCdashigScenarioWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioPairs : CdashigScenario -> List EncodedField
encodeCdashigScenarioPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "domain" Json.Encode.string model.domain
            , maybeEncode "scenario" Json.Encode.string model.scenario
            , maybeEncode "_links" encodeCdashigScenarioLinks model.links
            , maybeEncode "fields" (Json.Encode.list encodeCdashigScenarioField) model.fields
            ]
    in
    pairs


encodeCdashigScenarioField : CdashigScenarioField -> Json.Encode.Value
encodeCdashigScenarioField =
    encodeObject << encodeCdashigScenarioFieldPairs


encodeCdashigScenarioFieldWithTag : ( String, String ) -> CdashigScenarioField -> Json.Encode.Value
encodeCdashigScenarioFieldWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioFieldPairs : CdashigScenarioField -> List EncodedField
encodeCdashigScenarioFieldPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "definition" Json.Encode.string model.definition
            , maybeEncode "questionText" Json.Encode.string model.questionText
            , maybeEncode "prompt" Json.Encode.string model.prompt
            , maybeEncode "completionInstructions" Json.Encode.string model.completionInstructions
            , maybeEncode "implementationNotes" Json.Encode.string model.implementationNotes
            , maybeEncode "simpleDatatype" Json.Encode.string model.simpleDatatype
            , maybeEncode "mappingInstructions" Json.Encode.string model.mappingInstructions
            , maybeEncode "core" Json.Encode.string model.core
            , maybeEncode "_links" encodeCdashigScenarioFieldLinks model.links
            ]
    in
    pairs


encodeCdashigScenarioFieldLinks : CdashigScenarioFieldLinks -> Json.Encode.Value
encodeCdashigScenarioFieldLinks =
    encodeObject << encodeCdashigScenarioFieldLinksPairs


encodeCdashigScenarioFieldLinksWithTag : ( String, String ) -> CdashigScenarioFieldLinks -> Json.Encode.Value
encodeCdashigScenarioFieldLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioFieldLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioFieldLinksPairs : CdashigScenarioFieldLinks -> List EncodedField
encodeCdashigScenarioFieldLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigScenarioFieldRef model.self
            , maybeEncode "codelist" (Json.Encode.list encodeRootCtCodelistRefElement) model.codelist
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "parentDomain" encodeCdashigDomainRef model.parentDomain
            , maybeEncode "parentScenario" encodeCdashigScenarioRef model.parentScenario
            , maybeEncode "rootItem" encodeRootCdashigScenarioFieldRef model.rootItem
            , maybeEncode "priorVersion" encodeCdashigScenarioFieldRef model.priorVersion
            , maybeEncode "sdtmigDatasetMappingTargets" (Json.Encode.list encodeSdtmigDatasetVariableRefTarget) model.sdtmigDatasetMappingTargets
            ]
    in
    pairs


encodeCdashigScenarioFieldRef : CdashigScenarioFieldRef -> Json.Encode.Value
encodeCdashigScenarioFieldRef =
    encodeObject << encodeCdashigScenarioFieldRefPairs


encodeCdashigScenarioFieldRefWithTag : ( String, String ) -> CdashigScenarioFieldRef -> Json.Encode.Value
encodeCdashigScenarioFieldRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioFieldRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioFieldRefPairs : CdashigScenarioFieldRef -> List EncodedField
encodeCdashigScenarioFieldRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigScenarioFieldRefElement : CdashigScenarioFieldRefElement -> Json.Encode.Value
encodeCdashigScenarioFieldRefElement =
    encodeObject << encodeCdashigScenarioFieldRefElementPairs


encodeCdashigScenarioFieldRefElementWithTag : ( String, String ) -> CdashigScenarioFieldRefElement -> Json.Encode.Value
encodeCdashigScenarioFieldRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioFieldRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioFieldRefElementPairs : CdashigScenarioFieldRefElement -> List EncodedField
encodeCdashigScenarioFieldRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigScenarioFieldRefVersion : CdashigScenarioFieldRefVersion -> Json.Encode.Value
encodeCdashigScenarioFieldRefVersion =
    encodeObject << encodeCdashigScenarioFieldRefVersionPairs


encodeCdashigScenarioFieldRefVersionWithTag : ( String, String ) -> CdashigScenarioFieldRefVersion -> Json.Encode.Value
encodeCdashigScenarioFieldRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioFieldRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioFieldRefVersionPairs : CdashigScenarioFieldRefVersion -> List EncodedField
encodeCdashigScenarioFieldRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigScenarioFields : CdashigScenarioFields -> Json.Encode.Value
encodeCdashigScenarioFields =
    encodeObject << encodeCdashigScenarioFieldsPairs


encodeCdashigScenarioFieldsWithTag : ( String, String ) -> CdashigScenarioFields -> Json.Encode.Value
encodeCdashigScenarioFieldsWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioFieldsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioFieldsPairs : CdashigScenarioFields -> List EncodedField
encodeCdashigScenarioFieldsPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "domain" Json.Encode.string model.domain
            , maybeEncode "scenario" Json.Encode.string model.scenario
            , maybeEncode "_links" encodeCdashigScenarioFieldsLinks model.links
            ]
    in
    pairs


encodeCdashigScenarioFieldsLinks : CdashigScenarioFieldsLinks -> Json.Encode.Value
encodeCdashigScenarioFieldsLinks =
    encodeObject << encodeCdashigScenarioFieldsLinksPairs


encodeCdashigScenarioFieldsLinksWithTag : ( String, String ) -> CdashigScenarioFieldsLinks -> Json.Encode.Value
encodeCdashigScenarioFieldsLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioFieldsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioFieldsLinksPairs : CdashigScenarioFieldsLinks -> List EncodedField
encodeCdashigScenarioFieldsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigScenarioFieldsRef model.self
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeCdashigClassRef model.parentClass
            , maybeEncode "parentDomain" encodeCdashigDomainRef model.parentDomain
            , maybeEncode "fields" (Json.Encode.list encodeCdashigScenarioFieldRefElement) model.fields
            ]
    in
    pairs


encodeCdashigScenarioFieldsRef : CdashigScenarioFieldsRef -> Json.Encode.Value
encodeCdashigScenarioFieldsRef =
    encodeObject << encodeCdashigScenarioFieldsRefPairs


encodeCdashigScenarioFieldsRefWithTag : ( String, String ) -> CdashigScenarioFieldsRef -> Json.Encode.Value
encodeCdashigScenarioFieldsRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioFieldsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioFieldsRefPairs : CdashigScenarioFieldsRef -> List EncodedField
encodeCdashigScenarioFieldsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigScenarioLinks : CdashigScenarioLinks -> Json.Encode.Value
encodeCdashigScenarioLinks =
    encodeObject << encodeCdashigScenarioLinksPairs


encodeCdashigScenarioLinksWithTag : ( String, String ) -> CdashigScenarioLinks -> Json.Encode.Value
encodeCdashigScenarioLinksWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioLinksPairs : CdashigScenarioLinks -> List EncodedField
encodeCdashigScenarioLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigScenarioRef model.self
            , maybeEncode "parentProduct" encodeCdashigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeCdashigClassRef model.parentClass
            , maybeEncode "parentDomain" encodeCdashigDomainRef model.parentDomain
            , maybeEncode "priorVersion" encodeCdashigScenarioRef model.priorVersion
            ]
    in
    pairs


encodeCdashigScenarioRef : CdashigScenarioRef -> Json.Encode.Value
encodeCdashigScenarioRef =
    encodeObject << encodeCdashigScenarioRefPairs


encodeCdashigScenarioRefWithTag : ( String, String ) -> CdashigScenarioRef -> Json.Encode.Value
encodeCdashigScenarioRefWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioRefPairs : CdashigScenarioRef -> List EncodedField
encodeCdashigScenarioRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCdashigScenarioRefElement : CdashigScenarioRefElement -> Json.Encode.Value
encodeCdashigScenarioRefElement =
    encodeObject << encodeCdashigScenarioRefElementPairs


encodeCdashigScenarioRefElementWithTag : ( String, String ) -> CdashigScenarioRefElement -> Json.Encode.Value
encodeCdashigScenarioRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCdashigScenarioRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCdashigScenarioRefElementPairs : CdashigScenarioRefElement -> List EncodedField
encodeCdashigScenarioRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtCodelist : CtCodelist -> Json.Encode.Value
encodeCtCodelist =
    encodeObject << encodeCtCodelistPairs


encodeCtCodelistWithTag : ( String, String ) -> CtCodelist -> Json.Encode.Value
encodeCtCodelistWithTag (tagField, tag) model =
    encodeObject (encodeCtCodelistPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtCodelistPairs : CtCodelist -> List EncodedField
encodeCtCodelistPairs model =
    let
        pairs =
            [ maybeEncode "conceptId" Json.Encode.string model.conceptId
            , maybeEncode "extensible" Json.Encode.string model.extensible
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "submissionValue" Json.Encode.string model.submissionValue
            , maybeEncode "definition" Json.Encode.string model.definition
            , maybeEncode "preferredTerm" Json.Encode.string model.preferredTerm
            , maybeEncode "synonyms" (Json.Encode.list Json.Encode.string) model.synonyms
            , maybeEncode "_links" encodeCtCodelistLinks model.links
            , maybeEncode "terms" (Json.Encode.list encodeCtPackageTerm) model.terms
            ]
    in
    pairs


encodeCtCodelistLinks : CtCodelistLinks -> Json.Encode.Value
encodeCtCodelistLinks =
    encodeObject << encodeCtCodelistLinksPairs


encodeCtCodelistLinksWithTag : ( String, String ) -> CtCodelistLinks -> Json.Encode.Value
encodeCtCodelistLinksWithTag (tagField, tag) model =
    encodeObject (encodeCtCodelistLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtCodelistLinksPairs : CtCodelistLinks -> List EncodedField
encodeCtCodelistLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtCodelistRef model.self
            , maybeEncode "parentPackage" encodeCtPackageRef model.parentPackage
            , maybeEncode "rootItem" encodeRootCtCodelistRef model.rootItem
            , maybeEncode "priorVersion" encodeCtCodelistRef model.priorVersion
            ]
    in
    pairs


encodeCtCodelistRef : CtCodelistRef -> Json.Encode.Value
encodeCtCodelistRef =
    encodeObject << encodeCtCodelistRefPairs


encodeCtCodelistRefWithTag : ( String, String ) -> CtCodelistRef -> Json.Encode.Value
encodeCtCodelistRefWithTag (tagField, tag) model =
    encodeObject (encodeCtCodelistRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtCodelistRefPairs : CtCodelistRef -> List EncodedField
encodeCtCodelistRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtCodelistRefElement : CtCodelistRefElement -> Json.Encode.Value
encodeCtCodelistRefElement =
    encodeObject << encodeCtCodelistRefElementPairs


encodeCtCodelistRefElementWithTag : ( String, String ) -> CtCodelistRefElement -> Json.Encode.Value
encodeCtCodelistRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCtCodelistRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtCodelistRefElementPairs : CtCodelistRefElement -> List EncodedField
encodeCtCodelistRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtCodelistRefVersion : CtCodelistRefVersion -> Json.Encode.Value
encodeCtCodelistRefVersion =
    encodeObject << encodeCtCodelistRefVersionPairs


encodeCtCodelistRefVersionWithTag : ( String, String ) -> CtCodelistRefVersion -> Json.Encode.Value
encodeCtCodelistRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeCtCodelistRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtCodelistRefVersionPairs : CtCodelistRefVersion -> List EncodedField
encodeCtCodelistRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtCodelistTerms : CtCodelistTerms -> Json.Encode.Value
encodeCtCodelistTerms =
    encodeObject << encodeCtCodelistTermsPairs


encodeCtCodelistTermsWithTag : ( String, String ) -> CtCodelistTerms -> Json.Encode.Value
encodeCtCodelistTermsWithTag (tagField, tag) model =
    encodeObject (encodeCtCodelistTermsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtCodelistTermsPairs : CtCodelistTerms -> List EncodedField
encodeCtCodelistTermsPairs model =
    let
        pairs =
            [ maybeEncode "conceptId" Json.Encode.string model.conceptId
            , maybeEncode "extensible" Json.Encode.string model.extensible
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "submissionValue" Json.Encode.string model.submissionValue
            , maybeEncode "definition" Json.Encode.string model.definition
            , maybeEncode "preferredTerm" Json.Encode.string model.preferredTerm
            , maybeEncode "synonyms" (Json.Encode.list Json.Encode.string) model.synonyms
            , maybeEncode "_links" encodeCtCodelistTermsLinks model.links
            ]
    in
    pairs


encodeCtCodelistTermsLinks : CtCodelistTermsLinks -> Json.Encode.Value
encodeCtCodelistTermsLinks =
    encodeObject << encodeCtCodelistTermsLinksPairs


encodeCtCodelistTermsLinksWithTag : ( String, String ) -> CtCodelistTermsLinks -> Json.Encode.Value
encodeCtCodelistTermsLinksWithTag (tagField, tag) model =
    encodeObject (encodeCtCodelistTermsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtCodelistTermsLinksPairs : CtCodelistTermsLinks -> List EncodedField
encodeCtCodelistTermsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtCodelistTermsRef model.self
            , maybeEncode "parentPackage" encodeCtPackageRef model.parentPackage
            , maybeEncode "rootItem" encodeRootCtCodelistRef model.rootItem
            , maybeEncode "priorVersion" encodeCtCodelistTermsRef model.priorVersion
            , maybeEncode "terms" (Json.Encode.list encodeCtTermRefElement) model.terms
            ]
    in
    pairs


encodeCtCodelistTermsRef : CtCodelistTermsRef -> Json.Encode.Value
encodeCtCodelistTermsRef =
    encodeObject << encodeCtCodelistTermsRefPairs


encodeCtCodelistTermsRefWithTag : ( String, String ) -> CtCodelistTermsRef -> Json.Encode.Value
encodeCtCodelistTermsRefWithTag (tagField, tag) model =
    encodeObject (encodeCtCodelistTermsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtCodelistTermsRefPairs : CtCodelistTermsRef -> List EncodedField
encodeCtCodelistTermsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtPackage : CtPackage -> Json.Encode.Value
encodeCtPackage =
    encodeObject << encodeCtPackagePairs


encodeCtPackageWithTag : ( String, String ) -> CtPackage -> Json.Encode.Value
encodeCtPackageWithTag (tagField, tag) model =
    encodeObject (encodeCtPackagePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackagePairs : CtPackage -> List EncodedField
encodeCtPackagePairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeCtPackageLinks model.links
            , maybeEncode "codelists" (Json.Encode.list encodeCtPackageCodelists) model.codelists
            ]
    in
    pairs


encodeCtPackageCodelists : CtPackageCodelists -> Json.Encode.Value
encodeCtPackageCodelists =
    encodeObject << encodeCtPackageCodelistsPairs


encodeCtPackageCodelistsWithTag : ( String, String ) -> CtPackageCodelists -> Json.Encode.Value
encodeCtPackageCodelistsWithTag (tagField, tag) model =
    encodeObject (encodeCtPackageCodelistsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackageCodelistsPairs : CtPackageCodelists -> List EncodedField
encodeCtPackageCodelistsPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeCtPackageCodelistsLinks model.links
            ]
    in
    pairs


encodeCtPackageCodelistsLinks : CtPackageCodelistsLinks -> Json.Encode.Value
encodeCtPackageCodelistsLinks =
    encodeObject << encodeCtPackageCodelistsLinksPairs


encodeCtPackageCodelistsLinksWithTag : ( String, String ) -> CtPackageCodelistsLinks -> Json.Encode.Value
encodeCtPackageCodelistsLinksWithTag (tagField, tag) model =
    encodeObject (encodeCtPackageCodelistsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackageCodelistsLinksPairs : CtPackageCodelistsLinks -> List EncodedField
encodeCtPackageCodelistsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtPackageCodelistsRef model.self
            , maybeEncode "priorVersion" encodeCtPackageCodelistsRef model.priorVersion
            , maybeEncode "codelists" (Json.Encode.list encodeCtCodelistRefElement) model.codelists
            ]
    in
    pairs


encodeCtPackageCodelistsRef : CtPackageCodelistsRef -> Json.Encode.Value
encodeCtPackageCodelistsRef =
    encodeObject << encodeCtPackageCodelistsRefPairs


encodeCtPackageCodelistsRefWithTag : ( String, String ) -> CtPackageCodelistsRef -> Json.Encode.Value
encodeCtPackageCodelistsRefWithTag (tagField, tag) model =
    encodeObject (encodeCtPackageCodelistsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackageCodelistsRefPairs : CtPackageCodelistsRef -> List EncodedField
encodeCtPackageCodelistsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtPackageLinks : CtPackageLinks -> Json.Encode.Value
encodeCtPackageLinks =
    encodeObject << encodeCtPackageLinksPairs


encodeCtPackageLinksWithTag : ( String, String ) -> CtPackageLinks -> Json.Encode.Value
encodeCtPackageLinksWithTag (tagField, tag) model =
    encodeObject (encodeCtPackageLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackageLinksPairs : CtPackageLinks -> List EncodedField
encodeCtPackageLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtPackageRef model.self
            , maybeEncode "priorVersion" encodeCtPackageRef model.priorVersion
            ]
    in
    pairs


encodeCtPackageRef : CtPackageRef -> Json.Encode.Value
encodeCtPackageRef =
    encodeObject << encodeCtPackageRefPairs


encodeCtPackageRefWithTag : ( String, String ) -> CtPackageRef -> Json.Encode.Value
encodeCtPackageRefWithTag (tagField, tag) model =
    encodeObject (encodeCtPackageRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackageRefPairs : CtPackageRef -> List EncodedField
encodeCtPackageRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtPackageRefElement : CtPackageRefElement -> Json.Encode.Value
encodeCtPackageRefElement =
    encodeObject << encodeCtPackageRefElementPairs


encodeCtPackageRefElementWithTag : ( String, String ) -> CtPackageRefElement -> Json.Encode.Value
encodeCtPackageRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCtPackageRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackageRefElementPairs : CtPackageRefElement -> List EncodedField
encodeCtPackageRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtPackageTerm : CtPackageTerm -> Json.Encode.Value
encodeCtPackageTerm =
    encodeObject << encodeCtPackageTermPairs


encodeCtPackageTermWithTag : ( String, String ) -> CtPackageTerm -> Json.Encode.Value
encodeCtPackageTermWithTag (tagField, tag) model =
    encodeObject (encodeCtPackageTermPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackageTermPairs : CtPackageTerm -> List EncodedField
encodeCtPackageTermPairs model =
    let
        pairs =
            [ maybeEncode "conceptId" Json.Encode.string model.conceptId
            , maybeEncode "submissionValue" Json.Encode.string model.submissionValue
            , maybeEncode "definition" Json.Encode.string model.definition
            , maybeEncode "preferredTerm" Json.Encode.string model.preferredTerm
            , maybeEncode "synonyms" (Json.Encode.list Json.Encode.string) model.synonyms
            ]
    in
    pairs


encodeCtPackages : CtPackages -> Json.Encode.Value
encodeCtPackages =
    encodeObject << encodeCtPackagesPairs


encodeCtPackagesWithTag : ( String, String ) -> CtPackages -> Json.Encode.Value
encodeCtPackagesWithTag (tagField, tag) model =
    encodeObject (encodeCtPackagesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackagesPairs : CtPackages -> List EncodedField
encodeCtPackagesPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeCtPackagesLinks model.links
            ]
    in
    pairs


encodeCtPackagesLinks : CtPackagesLinks -> Json.Encode.Value
encodeCtPackagesLinks =
    encodeObject << encodeCtPackagesLinksPairs


encodeCtPackagesLinksWithTag : ( String, String ) -> CtPackagesLinks -> Json.Encode.Value
encodeCtPackagesLinksWithTag (tagField, tag) model =
    encodeObject (encodeCtPackagesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackagesLinksPairs : CtPackagesLinks -> List EncodedField
encodeCtPackagesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtPackagesRef model.self
            , maybeEncode "packages" (Json.Encode.list encodeCtPackageRefElement) model.packages
            ]
    in
    pairs


encodeCtPackagesRef : CtPackagesRef -> Json.Encode.Value
encodeCtPackagesRef =
    encodeObject << encodeCtPackagesRefPairs


encodeCtPackagesRefWithTag : ( String, String ) -> CtPackagesRef -> Json.Encode.Value
encodeCtPackagesRefWithTag (tagField, tag) model =
    encodeObject (encodeCtPackagesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtPackagesRefPairs : CtPackagesRef -> List EncodedField
encodeCtPackagesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtTerm : CtTerm -> Json.Encode.Value
encodeCtTerm =
    encodeObject << encodeCtTermPairs


encodeCtTermWithTag : ( String, String ) -> CtTerm -> Json.Encode.Value
encodeCtTermWithTag (tagField, tag) model =
    encodeObject (encodeCtTermPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtTermPairs : CtTerm -> List EncodedField
encodeCtTermPairs model =
    let
        pairs =
            [ maybeEncode "conceptId" Json.Encode.string model.conceptId
            , maybeEncode "submissionValue" Json.Encode.string model.submissionValue
            , maybeEncode "definition" Json.Encode.string model.definition
            , maybeEncode "preferredTerm" Json.Encode.string model.preferredTerm
            , maybeEncode "synonyms" (Json.Encode.list Json.Encode.string) model.synonyms
            , maybeEncode "_links" encodeCtTermLinks model.links
            ]
    in
    pairs


encodeCtTermLinks : CtTermLinks -> Json.Encode.Value
encodeCtTermLinks =
    encodeObject << encodeCtTermLinksPairs


encodeCtTermLinksWithTag : ( String, String ) -> CtTermLinks -> Json.Encode.Value
encodeCtTermLinksWithTag (tagField, tag) model =
    encodeObject (encodeCtTermLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtTermLinksPairs : CtTermLinks -> List EncodedField
encodeCtTermLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtTermRef model.self
            , maybeEncode "parentPackage" encodeCtPackageRef model.parentPackage
            , maybeEncode "parentCodelist" encodeCtCodelistRef model.parentCodelist
            , maybeEncode "rootItem" encodeRootCtTermRef model.rootItem
            , maybeEncode "priorVersion" encodeCtTermRef model.priorVersion
            ]
    in
    pairs


encodeCtTermRef : CtTermRef -> Json.Encode.Value
encodeCtTermRef =
    encodeObject << encodeCtTermRefPairs


encodeCtTermRefWithTag : ( String, String ) -> CtTermRef -> Json.Encode.Value
encodeCtTermRefWithTag (tagField, tag) model =
    encodeObject (encodeCtTermRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtTermRefPairs : CtTermRef -> List EncodedField
encodeCtTermRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtTermRefElement : CtTermRefElement -> Json.Encode.Value
encodeCtTermRefElement =
    encodeObject << encodeCtTermRefElementPairs


encodeCtTermRefElementWithTag : ( String, String ) -> CtTermRefElement -> Json.Encode.Value
encodeCtTermRefElementWithTag (tagField, tag) model =
    encodeObject (encodeCtTermRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtTermRefElementPairs : CtTermRefElement -> List EncodedField
encodeCtTermRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeCtTermRefVersion : CtTermRefVersion -> Json.Encode.Value
encodeCtTermRefVersion =
    encodeObject << encodeCtTermRefVersionPairs


encodeCtTermRefVersionWithTag : ( String, String ) -> CtTermRefVersion -> Json.Encode.Value
encodeCtTermRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeCtTermRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCtTermRefVersionPairs : CtTermRefVersion -> List EncodedField
encodeCtTermRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeDefaultErrorResponse : DefaultErrorResponse -> Json.Encode.Value
encodeDefaultErrorResponse =
    encodeObject << encodeDefaultErrorResponsePairs


encodeDefaultErrorResponseWithTag : ( String, String ) -> DefaultErrorResponse -> Json.Encode.Value
encodeDefaultErrorResponseWithTag (tagField, tag) model =
    encodeObject (encodeDefaultErrorResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDefaultErrorResponsePairs : DefaultErrorResponse -> List EncodedField
encodeDefaultErrorResponsePairs model =
    let
        pairs =
            [ maybeEncode "statusCode" Json.Encode.string model.statusCode
            , maybeEncode "reasonPhrase" Json.Encode.string model.reasonPhrase
            , maybeEncode "userMessage" Json.Encode.string model.userMessage
            , maybeEncode "adminMessage" Json.Encode.string model.adminMessage
            ]
    in
    pairs


encodeDefaultSearchResponse : DefaultSearchResponse -> Json.Encode.Value
encodeDefaultSearchResponse =
    encodeObject << encodeDefaultSearchResponsePairs


encodeDefaultSearchResponseWithTag : ( String, String ) -> DefaultSearchResponse -> Json.Encode.Value
encodeDefaultSearchResponseWithTag (tagField, tag) model =
    encodeObject (encodeDefaultSearchResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDefaultSearchResponsePairs : DefaultSearchResponse -> List EncodedField
encodeDefaultSearchResponsePairs model =
    let
        pairs =
            [ maybeEncode "hits" (Json.Encode.list encodeDefaultSearchResponseHitsInner) model.hits
            , maybeEncode "totalHits" Json.Encode.float model.totalHits
            ]
    in
    pairs


encodeDefaultSearchResponseHitsInner : DefaultSearchResponseHitsInner -> Json.Encode.Value
encodeDefaultSearchResponseHitsInner =
    encodeObject << encodeDefaultSearchResponseHitsInnerPairs


encodeDefaultSearchResponseHitsInnerWithTag : ( String, String ) -> DefaultSearchResponseHitsInner -> Json.Encode.Value
encodeDefaultSearchResponseHitsInnerWithTag (tagField, tag) model =
    encodeObject (encodeDefaultSearchResponseHitsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDefaultSearchResponseHitsInnerPairs : DefaultSearchResponseHitsInner -> List EncodedField
encodeDefaultSearchResponseHitsInnerPairs model =
    let
        pairs =
            [ encode "href" Json.Encode.string model.href
            , encode "type" Json.Encode.string model.type_
            ]
    in
    pairs


stringFromDefaultSearchScopes : DefaultSearchScopes -> String
stringFromDefaultSearchScopes model =
    case model of
        DefaultSearchScopesClass ->
            "class"

        DefaultSearchScopesCodelist ->
            "codelist"

        DefaultSearchScopesConceptId ->
            "conceptId"

        DefaultSearchScopesCore ->
            "core"

        DefaultSearchScopesDataStructure ->
            "dataStructure"

        DefaultSearchScopesDatasetStructure ->
            "datasetStructure"

        DefaultSearchScopesDefinition ->
            "definition"

        DefaultSearchScopesDescription ->
            "description"

        DefaultSearchScopesDomain ->
            "domain"

        DefaultSearchScopesEffectiveDate ->
            "effectiveDate"

        DefaultSearchScopesExtensible ->
            "extensible"

        DefaultSearchScopesHref ->
            "href"

        DefaultSearchScopesLabel ->
            "label"

        DefaultSearchScopesMeasureType ->
            "measureType"

        DefaultSearchScopesName ->
            "name"

        DefaultSearchScopesPreferredTerm ->
            "preferredTerm"

        DefaultSearchScopesProduct ->
            "product"

        DefaultSearchScopesProductGroup ->
            "productGroup"

        DefaultSearchScopesRegistrationStatus ->
            "registrationStatus"

        DefaultSearchScopesRoleDescription ->
            "roleDescription"

        DefaultSearchScopesSdtmTarget ->
            "sdtmTarget"

        DefaultSearchScopesSimpleDatatype ->
            "simpleDatatype"

        DefaultSearchScopesSubmissionValue ->
            "submissionValue"

        DefaultSearchScopesSynonyms ->
            "synonyms"

        DefaultSearchScopesType ->
            "type"

        DefaultSearchScopesUiHref ->
            "uiHref"

        DefaultSearchScopesValueDomain ->
            "valueDomain"

        DefaultSearchScopesVariableSet ->
            "variableSet"

        DefaultSearchScopesVersion ->
            "version"


encodeDefaultSearchScopes : DefaultSearchScopes -> Json.Encode.Value
encodeDefaultSearchScopes =
    Json.Encode.string << stringFromDefaultSearchScopes


encodeExportAdamDatastructuresRow : ExportAdamDatastructuresRow -> Json.Encode.Value
encodeExportAdamDatastructuresRow =
    encodeObject << encodeExportAdamDatastructuresRowPairs


encodeExportAdamDatastructuresRowWithTag : ( String, String ) -> ExportAdamDatastructuresRow -> Json.Encode.Value
encodeExportAdamDatastructuresRowWithTag (tagField, tag) model =
    encodeObject (encodeExportAdamDatastructuresRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportAdamDatastructuresRowPairs : ExportAdamDatastructuresRow -> List EncodedField
encodeExportAdamDatastructuresRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Data Structure Name" Json.Encode.string model.dataStructureName
            , maybeEncode "Dataset Name" Json.Encode.string model.datasetName
            , maybeEncode "Dataset Label" Json.Encode.string model.datasetLabel
            , maybeEncode "Dataset Description" Json.Encode.string model.datasetDescription
            , maybeEncode "Class" Json.Encode.string model.class
            ]
    in
    pairs


encodeExportAdamDatastructuresTable : ExportAdamDatastructuresTable -> Json.Encode.Value
encodeExportAdamDatastructuresTable =
    encodeObject << encodeExportAdamDatastructuresTablePairs


encodeExportAdamDatastructuresTableWithTag : ( String, String ) -> ExportAdamDatastructuresTable -> Json.Encode.Value
encodeExportAdamDatastructuresTableWithTag (tagField, tag) model =
    encodeObject (encodeExportAdamDatastructuresTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportAdamDatastructuresTablePairs : ExportAdamDatastructuresTable -> List EncodedField
encodeExportAdamDatastructuresTablePairs model =
    let
        pairs =
            [ maybeEncode "datastructures" (Json.Encode.list encodeExportAdamDatastructuresRow) model.datastructures
            ]
    in
    pairs


encodeExportAdamVariablesRow : ExportAdamVariablesRow -> Json.Encode.Value
encodeExportAdamVariablesRow =
    encodeObject << encodeExportAdamVariablesRowPairs


encodeExportAdamVariablesRowWithTag : ( String, String ) -> ExportAdamVariablesRow -> Json.Encode.Value
encodeExportAdamVariablesRowWithTag (tagField, tag) model =
    encodeObject (encodeExportAdamVariablesRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportAdamVariablesRowPairs : ExportAdamVariablesRow -> List EncodedField
encodeExportAdamVariablesRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Data Structure Name" Json.Encode.string model.dataStructureName
            , maybeEncode "Dataset Name" Json.Encode.string model.datasetName
            , maybeEncode "Variable Group" Json.Encode.string model.variableGroup
            , maybeEncode "Variable Name" Json.Encode.string model.variableName
            , maybeEncode "Variable Label" Json.Encode.string model.variableLabel
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "Codelist/Controlled Terms" Json.Encode.string model.codelistControlledTerms
            , maybeEncode "Core" Json.Encode.string model.core
            , maybeEncode "CDISC Notes" Json.Encode.string model.cDISCNotes
            ]
    in
    pairs


encodeExportAdamVariablesTable : ExportAdamVariablesTable -> Json.Encode.Value
encodeExportAdamVariablesTable =
    encodeObject << encodeExportAdamVariablesTablePairs


encodeExportAdamVariablesTableWithTag : ( String, String ) -> ExportAdamVariablesTable -> Json.Encode.Value
encodeExportAdamVariablesTableWithTag (tagField, tag) model =
    encodeObject (encodeExportAdamVariablesTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportAdamVariablesTablePairs : ExportAdamVariablesTable -> List EncodedField
encodeExportAdamVariablesTablePairs model =
    let
        pairs =
            [ maybeEncode "variables" (Json.Encode.list encodeExportAdamVariablesRow) model.variables
            ]
    in
    pairs


encodeExportAdamWorkbook : ExportAdamWorkbook -> Json.Encode.Value
encodeExportAdamWorkbook =
    encodeObject << encodeExportAdamWorkbookPairs


encodeExportAdamWorkbookWithTag : ( String, String ) -> ExportAdamWorkbook -> Json.Encode.Value
encodeExportAdamWorkbookWithTag (tagField, tag) model =
    encodeObject (encodeExportAdamWorkbookPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportAdamWorkbookPairs : ExportAdamWorkbook -> List EncodedField
encodeExportAdamWorkbookPairs model =
    let
        pairs =
            [ maybeEncode "variables" (Json.Encode.list encodeExportAdamVariablesRow) model.variables
            , maybeEncode "datastructures" (Json.Encode.list encodeExportAdamDatastructuresRow) model.datastructures
            ]
    in
    pairs


encodeExportCdashClassVariablesRow : ExportCdashClassVariablesRow -> Json.Encode.Value
encodeExportCdashClassVariablesRow =
    encodeObject << encodeExportCdashClassVariablesRowPairs


encodeExportCdashClassVariablesRowWithTag : ( String, String ) -> ExportCdashClassVariablesRow -> Json.Encode.Value
encodeExportCdashClassVariablesRowWithTag (tagField, tag) model =
    encodeObject (encodeExportCdashClassVariablesRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportCdashClassVariablesRowPairs : ExportCdashClassVariablesRow -> List EncodedField
encodeExportCdashClassVariablesRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Domain" Json.Encode.string model.domain
            , maybeEncode "Variable Order" Json.Encode.string model.variableOrder
            , maybeEncode "CDASH Variable" Json.Encode.string model.cDASHVariable
            , maybeEncode "CDASH Variable Label" Json.Encode.string model.cDASHVariableLabel
            , maybeEncode "DRAFT CDASH Definition" Json.Encode.string model.dRAFTCDASHDefinition
            , maybeEncode "Domain Specific" Json.Encode.string model.domainSpecific
            , maybeEncode "Question Text" Json.Encode.string model.questionText
            , maybeEncode "Prompt" Json.Encode.string model.prompt
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "SDTM Target" (Json.Encode.list Json.Encode.string) model.sDTMTarget
            , maybeEncode "Mapping Instructions" Json.Encode.string model.mappingInstructions
            , maybeEncode "Controlled Terminology Codelist Name" Json.Encode.string model.controlledTerminologyCodelistName
            , maybeEncode "Implementation Notes" Json.Encode.string model.implementationNotes
            ]
    in
    pairs


encodeExportCdashDomainVariablesRow : ExportCdashDomainVariablesRow -> Json.Encode.Value
encodeExportCdashDomainVariablesRow =
    encodeObject << encodeExportCdashDomainVariablesRowPairs


encodeExportCdashDomainVariablesRowWithTag : ( String, String ) -> ExportCdashDomainVariablesRow -> Json.Encode.Value
encodeExportCdashDomainVariablesRowWithTag (tagField, tag) model =
    encodeObject (encodeExportCdashDomainVariablesRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportCdashDomainVariablesRowPairs : ExportCdashDomainVariablesRow -> List EncodedField
encodeExportCdashDomainVariablesRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Domain" Json.Encode.string model.domain
            , maybeEncode "Variable Order" Json.Encode.string model.variableOrder
            , maybeEncode "CDASH Variable" Json.Encode.string model.cDASHVariable
            , maybeEncode "CDASH Variable Label" Json.Encode.string model.cDASHVariableLabel
            , maybeEncode "DRAFT CDASH Definition" Json.Encode.string model.dRAFTCDASHDefinition
            , maybeEncode "Domain Specific" Json.Encode.string model.domainSpecific
            , maybeEncode "Question Text" Json.Encode.string model.questionText
            , maybeEncode "Prompt" Json.Encode.string model.prompt
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "SDTM Target" (Json.Encode.list Json.Encode.string) model.sDTMTarget
            , maybeEncode "Mapping Instructions" Json.Encode.string model.mappingInstructions
            , maybeEncode "Controlled Terminology Codelist Name" Json.Encode.string model.controlledTerminologyCodelistName
            , maybeEncode "Implementation Notes" Json.Encode.string model.implementationNotes
            ]
    in
    pairs


encodeExportCdashTable : ExportCdashTable -> Json.Encode.Value
encodeExportCdashTable =
    encodeObject << encodeExportCdashTablePairs


encodeExportCdashTableWithTag : ( String, String ) -> ExportCdashTable -> Json.Encode.Value
encodeExportCdashTableWithTag (tagField, tag) model =
    encodeObject (encodeExportCdashTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportCdashTablePairs : ExportCdashTable -> List EncodedField
encodeExportCdashTablePairs model =
    let
        pairs =
            [ maybeEncode "class-variables" (Json.Encode.list encodeExportCdashClassVariablesRow) model.classvariables
            , maybeEncode "domain-variables" (Json.Encode.list encodeExportCdashDomainVariablesRow) model.domainvariables
            ]
    in
    pairs


encodeExportCdashigDomainVariablesRow : ExportCdashigDomainVariablesRow -> Json.Encode.Value
encodeExportCdashigDomainVariablesRow =
    encodeObject << encodeExportCdashigDomainVariablesRowPairs


encodeExportCdashigDomainVariablesRowWithTag : ( String, String ) -> ExportCdashigDomainVariablesRow -> Json.Encode.Value
encodeExportCdashigDomainVariablesRowWithTag (tagField, tag) model =
    encodeObject (encodeExportCdashigDomainVariablesRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportCdashigDomainVariablesRowPairs : ExportCdashigDomainVariablesRow -> List EncodedField
encodeExportCdashigDomainVariablesRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Domain" Json.Encode.string model.domain
            , maybeEncode "Data Collection Scenario" Json.Encode.string model.dataCollectionScenario
            , maybeEncode "Variable Order" Json.Encode.string model.variableOrder
            , maybeEncode "CDASHIG Variable" Json.Encode.string model.cDASHIGVariable
            , maybeEncode "CDASHIG Variable Label" Json.Encode.string model.cDASHIGVariableLabel
            , maybeEncode "DRAFT CDASHIG Definition" Json.Encode.string model.dRAFTCDASHIGDefinition
            , maybeEncode "Question Text" Json.Encode.string model.questionText
            , maybeEncode "Prompt" Json.Encode.string model.prompt
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "CDASHIG Core" Json.Encode.string model.cDASHIGCore
            , maybeEncode "Case Report Form Completion Instructions" Json.Encode.string model.caseReportFormCompletionInstructions
            , maybeEncode "SDTMIG Target" (Json.Encode.list Json.Encode.string) model.sDTMIGTarget
            , maybeEncode "Mapping Instructions" Json.Encode.string model.mappingInstructions
            , maybeEncode "Controlled Terminology Codelist Name" Json.Encode.string model.controlledTerminologyCodelistName
            , maybeEncode "Implementation Notes" Json.Encode.string model.implementationNotes
            ]
    in
    pairs


encodeExportCdashigScenarioVariablesRow : ExportCdashigScenarioVariablesRow -> Json.Encode.Value
encodeExportCdashigScenarioVariablesRow =
    encodeObject << encodeExportCdashigScenarioVariablesRowPairs


encodeExportCdashigScenarioVariablesRowWithTag : ( String, String ) -> ExportCdashigScenarioVariablesRow -> Json.Encode.Value
encodeExportCdashigScenarioVariablesRowWithTag (tagField, tag) model =
    encodeObject (encodeExportCdashigScenarioVariablesRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportCdashigScenarioVariablesRowPairs : ExportCdashigScenarioVariablesRow -> List EncodedField
encodeExportCdashigScenarioVariablesRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Domain" Json.Encode.string model.domain
            , maybeEncode "Data Collection Scenario" Json.Encode.string model.dataCollectionScenario
            , maybeEncode "Variable Order" Json.Encode.string model.variableOrder
            , maybeEncode "CDASHIG Variable" Json.Encode.string model.cDASHIGVariable
            , maybeEncode "CDASHIG Variable Label" Json.Encode.string model.cDASHIGVariableLabel
            , maybeEncode "DRAFT CDASHIG Definition" Json.Encode.string model.dRAFTCDASHIGDefinition
            , maybeEncode "Question Text" Json.Encode.string model.questionText
            , maybeEncode "Prompt" Json.Encode.string model.prompt
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "CDASHIG Core" Json.Encode.string model.cDASHIGCore
            , maybeEncode "Case Report Form Completion Instructions" Json.Encode.string model.caseReportFormCompletionInstructions
            , maybeEncode "SDTMIG Target" (Json.Encode.list Json.Encode.string) model.sDTMIGTarget
            , maybeEncode "Mapping Instructions" Json.Encode.string model.mappingInstructions
            , maybeEncode "Controlled Terminology Codelist Name" Json.Encode.string model.controlledTerminologyCodelistName
            , maybeEncode "Implementation Notes" Json.Encode.string model.implementationNotes
            ]
    in
    pairs


encodeExportCdashigTable : ExportCdashigTable -> Json.Encode.Value
encodeExportCdashigTable =
    encodeObject << encodeExportCdashigTablePairs


encodeExportCdashigTableWithTag : ( String, String ) -> ExportCdashigTable -> Json.Encode.Value
encodeExportCdashigTableWithTag (tagField, tag) model =
    encodeObject (encodeExportCdashigTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportCdashigTablePairs : ExportCdashigTable -> List EncodedField
encodeExportCdashigTablePairs model =
    let
        pairs =
            [ maybeEncode "domain-variables" (Json.Encode.list encodeExportCdashigDomainVariablesRow) model.domainvariables
            , maybeEncode "scenario-variables" (Json.Encode.list encodeExportCdashigScenarioVariablesRow) model.scenariovariables
            ]
    in
    pairs


encodeExportCtCodelist : ExportCtCodelist -> Json.Encode.Value
encodeExportCtCodelist =
    encodeObject << encodeExportCtCodelistPairs


encodeExportCtCodelistWithTag : ( String, String ) -> ExportCtCodelist -> Json.Encode.Value
encodeExportCtCodelistWithTag (tagField, tag) model =
    encodeObject (encodeExportCtCodelistPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportCtCodelistPairs : ExportCtCodelist -> List EncodedField
encodeExportCtCodelistPairs model =
    let
        pairs =
            [ maybeEncode "Code" Json.Encode.string model.code
            , maybeEncode "Codelist Code" Json.Encode.string model.codelistCode
            , maybeEncode "Codelist Extensible (Yes/No)" Json.Encode.string model.codelistExtensibleYesNo
            , maybeEncode "Codelist Name" Json.Encode.string model.codelistName
            , maybeEncode "CDISC Submission Value" Json.Encode.string model.cDISCSubmissionValue
            , maybeEncode "CDISC Synonym(s)" (Json.Encode.list Json.Encode.string) model.cDISCSynonyms
            , maybeEncode "CDISC Definition" Json.Encode.string model.cDISCDefinition
            , maybeEncode "NCI Preferred Term" Json.Encode.string model.nCIPreferredTerm
            , maybeEncode "Standard and Date" Json.Encode.string model.standardAndDate
            , maybeEncode "" (Json.Encode.list encodeExportCtTerm) model.
            ]
    in
    pairs


encodeExportCtTable : ExportCtTable -> Json.Encode.Value
encodeExportCtTable =
    encodeObject << encodeExportCtTablePairs


encodeExportCtTableWithTag : ( String, String ) -> ExportCtTable -> Json.Encode.Value
encodeExportCtTableWithTag (tagField, tag) model =
    encodeObject (encodeExportCtTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportCtTablePairs : ExportCtTable -> List EncodedField
encodeExportCtTablePairs model =
    let
        pairs =
            [ maybeEncode "ct" (Json.Encode.list encodeExportCtCodelist) model.ct
            ]
    in
    pairs


encodeExportCtTerm : ExportCtTerm -> Json.Encode.Value
encodeExportCtTerm =
    encodeObject << encodeExportCtTermPairs


encodeExportCtTermWithTag : ( String, String ) -> ExportCtTerm -> Json.Encode.Value
encodeExportCtTermWithTag (tagField, tag) model =
    encodeObject (encodeExportCtTermPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportCtTermPairs : ExportCtTerm -> List EncodedField
encodeExportCtTermPairs model =
    let
        pairs =
            [ maybeEncode "bundle-1" Json.Encode.string model.bundle1
            , maybeEncode "CDISC Synonym(s)" (Json.Encode.list Json.Encode.string) model.cDISCSynonyms
            , maybeEncode "bundle-2" Json.Encode.string model.bundle2
            ]
    in
    pairs


encodeExportQrsCsvItemsRow : ExportQrsCsvItemsRow -> Json.Encode.Value
encodeExportQrsCsvItemsRow =
    encodeObject << encodeExportQrsCsvItemsRowPairs


encodeExportQrsCsvItemsRowWithTag : ( String, String ) -> ExportQrsCsvItemsRow -> Json.Encode.Value
encodeExportQrsCsvItemsRowWithTag (tagField, tag) model =
    encodeObject (encodeExportQrsCsvItemsRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportQrsCsvItemsRowPairs : ExportQrsCsvItemsRow -> List EncodedField
encodeExportQrsCsvItemsRowPairs model =
    let
        pairs =
            [ maybeEncode "QRS Measure Name" Json.Encode.string model.qRSMeasureName
            , maybeEncode "QRS Measure Label" Json.Encode.string model.qRSMeasureLabel
            , maybeEncode "QRS Measure Type" Json.Encode.string model.qRSMeasureType
            , maybeEncode "Item Sequence" Json.Encode.string model.itemSequence
            , maybeEncode "Test Name" Json.Encode.string model.testName
            , maybeEncode "Item Text" Json.Encode.string model.itemText
            , maybeEncode "Test&#39;s Codelist C-Code" Json.Encode.string model.testsCodelistCCode
            , maybeEncode "Test&#39;s Term C-Code" Json.Encode.string model.testsTermCCode
            , maybeEncode "Test Code&#39;s Codelist C-Code" Json.Encode.string model.testCodesCodelistCCode
            , maybeEncode "Test Code&#39;s Term C-Code" Json.Encode.string model.testCodesTermCCode
            , maybeEncode "Subcategory&#39;s Codelist C-Code" Json.Encode.string model.subcategorysCodelistCCode
            , maybeEncode "Subcategory&#39;s Term C-Code" Json.Encode.string model.subcategorysTermCCode
            , maybeEncode "Evaluator&#39;s Codelist C-Code" Json.Encode.string model.evaluatorsCodelistCCode
            , maybeEncode "Evaluator&#39;s Term C-Code" Json.Encode.string model.evaluatorsTermCCode
            , maybeEncode "Free-form Response&#39;s Datatype" Json.Encode.string model.freeformResponsesDatatype
            , maybeEncode "Response Group" Json.Encode.string model.responseGroup
            ]
    in
    pairs


encodeExportQrsGeneral : ExportQrsGeneral -> Json.Encode.Value
encodeExportQrsGeneral =
    encodeObject << encodeExportQrsGeneralPairs


encodeExportQrsGeneralWithTag : ( String, String ) -> ExportQrsGeneral -> Json.Encode.Value
encodeExportQrsGeneralWithTag (tagField, tag) model =
    encodeObject (encodeExportQrsGeneralPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportQrsGeneralPairs : ExportQrsGeneral -> List EncodedField
encodeExportQrsGeneralPairs model =
    let
        pairs =
            [ maybeEncode "Name" Json.Encode.string model.name
            , maybeEncode "Label" Json.Encode.string model.label
            , maybeEncode "Effective Date" Json.Encode.string model.effectiveDate
            , maybeEncode "Description" Json.Encode.string model.description
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "Category&#39;s Codelist C-Code" Json.Encode.string model.categorysCodelistCCode
            , maybeEncode "Category&#39;s Term C-Code" Json.Encode.string model.categorysTermCCode
            ]
    in
    pairs


encodeExportQrsItemsTable : ExportQrsItemsTable -> Json.Encode.Value
encodeExportQrsItemsTable =
    encodeObject << encodeExportQrsItemsTablePairs


encodeExportQrsItemsTableWithTag : ( String, String ) -> ExportQrsItemsTable -> Json.Encode.Value
encodeExportQrsItemsTableWithTag (tagField, tag) model =
    encodeObject (encodeExportQrsItemsTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportQrsItemsTablePairs : ExportQrsItemsTable -> List EncodedField
encodeExportQrsItemsTablePairs model =
    let
        pairs =
            [ maybeEncode "items" (Json.Encode.list encodeExportQrsCsvItemsRow) model.items
            ]
    in
    pairs


encodeExportQrsResponses : ExportQrsResponses -> Json.Encode.Value
encodeExportQrsResponses =
    encodeObject << encodeExportQrsResponsesPairs


encodeExportQrsResponsesWithTag : ( String, String ) -> ExportQrsResponses -> Json.Encode.Value
encodeExportQrsResponsesWithTag (tagField, tag) model =
    encodeObject (encodeExportQrsResponsesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportQrsResponsesPairs : ExportQrsResponses -> List EncodedField
encodeExportQrsResponsesPairs model =
    let
        pairs =
            [ maybeEncode "Response Group" Json.Encode.string model.responseGroup
            , maybeEncode "Sequence" Json.Encode.string model.sequence
            , maybeEncode "Response&#39;s Original Result Codelist C-Code" Json.Encode.string model.responsesOriginalResultCodelistCCode
            , maybeEncode "Response&#39;s Original Result Term C-Code" Json.Encode.string model.responsesOriginalResultTermCCode
            , maybeEncode "Response&#39;s Original Result Unit Codelist C-Code" Json.Encode.string model.responsesOriginalResultUnitCodelistCCode
            , maybeEncode "Response&#39;s Original Result Unit Term C-Code" Json.Encode.string model.responsesOriginalResultUnitTermCCode
            , maybeEncode "Response&#39;s Standardized Result Codelist C-Code" Json.Encode.string model.responsesStandardizedResultCodelistCCode
            , maybeEncode "Response&#39;s Standardized Result Term C-Code" Json.Encode.string model.responsesStandardizedResultTermCCode
            , maybeEncode "Response&#39;s Standardized Result Unit Codelist C-Code" Json.Encode.string model.responsesStandardizedResultUnitCodelistCCode
            , maybeEncode "Response&#39;s Standardized Result Unit Term C-Code" Json.Encode.string model.responsesStandardizedResultUnitTermCCode
            ]
    in
    pairs


encodeExportQrsWorkbook : ExportQrsWorkbook -> Json.Encode.Value
encodeExportQrsWorkbook =
    encodeObject << encodeExportQrsWorkbookPairs


encodeExportQrsWorkbookWithTag : ( String, String ) -> ExportQrsWorkbook -> Json.Encode.Value
encodeExportQrsWorkbookWithTag (tagField, tag) model =
    encodeObject (encodeExportQrsWorkbookPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportQrsWorkbookPairs : ExportQrsWorkbook -> List EncodedField
encodeExportQrsWorkbookPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeExportQrsGeneral model.self
            , maybeEncode "items" (Json.Encode.list encodeExportQrsWorkbookItemsRow) model.items
            , maybeEncode "responses" (Json.Encode.list encodeExportQrsResponses) model.responses
            ]
    in
    pairs


encodeExportQrsWorkbookItemsRow : ExportQrsWorkbookItemsRow -> Json.Encode.Value
encodeExportQrsWorkbookItemsRow =
    encodeObject << encodeExportQrsWorkbookItemsRowPairs


encodeExportQrsWorkbookItemsRowWithTag : ( String, String ) -> ExportQrsWorkbookItemsRow -> Json.Encode.Value
encodeExportQrsWorkbookItemsRowWithTag (tagField, tag) model =
    encodeObject (encodeExportQrsWorkbookItemsRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportQrsWorkbookItemsRowPairs : ExportQrsWorkbookItemsRow -> List EncodedField
encodeExportQrsWorkbookItemsRowPairs model =
    let
        pairs =
            [ maybeEncode "Item Sequence" Json.Encode.string model.itemSequence
            , maybeEncode "Test Name" Json.Encode.string model.testName
            , maybeEncode "Item Text" Json.Encode.string model.itemText
            , maybeEncode "Test&#39;s Codelist C-Code" Json.Encode.string model.testsCodelistCCode
            , maybeEncode "Test&#39;s Term C-Code" Json.Encode.string model.testsTermCCode
            , maybeEncode "Test Code&#39;s Codelist C-Code" Json.Encode.string model.testCodesCodelistCCode
            , maybeEncode "Test Code&#39;s Term C-Code" Json.Encode.string model.testCodesTermCCode
            , maybeEncode "Subcategory&#39;s Codelist C-Code" Json.Encode.string model.subcategorysCodelistCCode
            , maybeEncode "Subcategory&#39;s Term C-Code" Json.Encode.string model.subcategorysTermCCode
            , maybeEncode "Evaluator&#39;s Codelist C-Code" Json.Encode.string model.evaluatorsCodelistCCode
            , maybeEncode "Evaluator&#39;s Term C-Code" Json.Encode.string model.evaluatorsTermCCode
            , maybeEncode "Free-form Response&#39;s Datatype" Json.Encode.string model.freeformResponsesDatatype
            , maybeEncode "Response Group" Json.Encode.string model.responseGroup
            ]
    in
    pairs


encodeExportSdtmClassVariablesRow : ExportSdtmClassVariablesRow -> Json.Encode.Value
encodeExportSdtmClassVariablesRow =
    encodeObject << encodeExportSdtmClassVariablesRowPairs


encodeExportSdtmClassVariablesRowWithTag : ( String, String ) -> ExportSdtmClassVariablesRow -> Json.Encode.Value
encodeExportSdtmClassVariablesRowWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmClassVariablesRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmClassVariablesRowPairs : ExportSdtmClassVariablesRow -> List EncodedField
encodeExportSdtmClassVariablesRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Variable Order" Json.Encode.string model.variableOrder
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Dataset Name" Json.Encode.string model.datasetName
            , maybeEncode "Variable Name" Json.Encode.string model.variableName
            , maybeEncode "Variable Label" Json.Encode.string model.variableLabel
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "Controlled Terms, Codelist or Format" Json.Encode.string model.controlledTermsCodelistOrFormat
            , maybeEncode "Role" Json.Encode.string model.role
            , maybeEncode "Role Description" Json.Encode.string model.roleDescription
            , maybeEncode "Description" Json.Encode.string model.description
            ]
    in
    pairs


encodeExportSdtmDatasetVariablesRow : ExportSdtmDatasetVariablesRow -> Json.Encode.Value
encodeExportSdtmDatasetVariablesRow =
    encodeObject << encodeExportSdtmDatasetVariablesRowPairs


encodeExportSdtmDatasetVariablesRowWithTag : ( String, String ) -> ExportSdtmDatasetVariablesRow -> Json.Encode.Value
encodeExportSdtmDatasetVariablesRowWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmDatasetVariablesRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmDatasetVariablesRowPairs : ExportSdtmDatasetVariablesRow -> List EncodedField
encodeExportSdtmDatasetVariablesRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Variable Order" Json.Encode.string model.variableOrder
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Dataset Name" Json.Encode.string model.datasetName
            , maybeEncode "Variable Name" Json.Encode.string model.variableName
            , maybeEncode "Variable Label" Json.Encode.string model.variableLabel
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "Controlled Terms, Codelist or Format" Json.Encode.string model.controlledTermsCodelistOrFormat
            , maybeEncode "Role" Json.Encode.string model.role
            , maybeEncode "Role Description" Json.Encode.string model.roleDescription
            , maybeEncode "Description" Json.Encode.string model.description
            ]
    in
    pairs


encodeExportSdtmDatasetsRow : ExportSdtmDatasetsRow -> Json.Encode.Value
encodeExportSdtmDatasetsRow =
    encodeObject << encodeExportSdtmDatasetsRowPairs


encodeExportSdtmDatasetsRowWithTag : ( String, String ) -> ExportSdtmDatasetsRow -> Json.Encode.Value
encodeExportSdtmDatasetsRowWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmDatasetsRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmDatasetsRowPairs : ExportSdtmDatasetsRow -> List EncodedField
encodeExportSdtmDatasetsRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Dataset Name" Json.Encode.string model.datasetName
            , maybeEncode "Dataset Label" Json.Encode.string model.datasetLabel
            , maybeEncode "Structure" Json.Encode.string model.structure
            ]
    in
    pairs


encodeExportSdtmDatasetsTable : ExportSdtmDatasetsTable -> Json.Encode.Value
encodeExportSdtmDatasetsTable =
    encodeObject << encodeExportSdtmDatasetsTablePairs


encodeExportSdtmDatasetsTableWithTag : ( String, String ) -> ExportSdtmDatasetsTable -> Json.Encode.Value
encodeExportSdtmDatasetsTableWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmDatasetsTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmDatasetsTablePairs : ExportSdtmDatasetsTable -> List EncodedField
encodeExportSdtmDatasetsTablePairs model =
    let
        pairs =
            [ maybeEncode "datasets" (Json.Encode.list encodeExportSdtmDatasetsRow) model.datasets
            ]
    in
    pairs


encodeExportSdtmVariablesTable : ExportSdtmVariablesTable -> Json.Encode.Value
encodeExportSdtmVariablesTable =
    encodeObject << encodeExportSdtmVariablesTablePairs


encodeExportSdtmVariablesTableWithTag : ( String, String ) -> ExportSdtmVariablesTable -> Json.Encode.Value
encodeExportSdtmVariablesTableWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmVariablesTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmVariablesTablePairs : ExportSdtmVariablesTable -> List EncodedField
encodeExportSdtmVariablesTablePairs model =
    let
        pairs =
            [ maybeEncode "class-variables" (Json.Encode.list encodeExportSdtmClassVariablesRow) model.classvariables
            , maybeEncode "dataset-variables" (Json.Encode.list encodeExportSdtmDatasetVariablesRow) model.datasetvariables
            ]
    in
    pairs


encodeExportSdtmWorkbook : ExportSdtmWorkbook -> Json.Encode.Value
encodeExportSdtmWorkbook =
    encodeObject << encodeExportSdtmWorkbookPairs


encodeExportSdtmWorkbookWithTag : ( String, String ) -> ExportSdtmWorkbook -> Json.Encode.Value
encodeExportSdtmWorkbookWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmWorkbookPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmWorkbookPairs : ExportSdtmWorkbook -> List EncodedField
encodeExportSdtmWorkbookPairs model =
    let
        pairs =
            [ maybeEncode "class-variables" (Json.Encode.list encodeExportSdtmClassVariablesRow) model.classvariables
            , maybeEncode "dataset-variables" (Json.Encode.list encodeExportSdtmDatasetVariablesRow) model.datasetvariables
            , maybeEncode "datasets" (Json.Encode.list encodeExportSdtmDatasetsRow) model.datasets
            ]
    in
    pairs


encodeExportSdtmigDatasetsRow : ExportSdtmigDatasetsRow -> Json.Encode.Value
encodeExportSdtmigDatasetsRow =
    encodeObject << encodeExportSdtmigDatasetsRowPairs


encodeExportSdtmigDatasetsRowWithTag : ( String, String ) -> ExportSdtmigDatasetsRow -> Json.Encode.Value
encodeExportSdtmigDatasetsRowWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmigDatasetsRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmigDatasetsRowPairs : ExportSdtmigDatasetsRow -> List EncodedField
encodeExportSdtmigDatasetsRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Dataset Name" Json.Encode.string model.datasetName
            , maybeEncode "Dataset Label" Json.Encode.string model.datasetLabel
            , maybeEncode "Structure" Json.Encode.string model.structure
            ]
    in
    pairs


encodeExportSdtmigDatasetsTable : ExportSdtmigDatasetsTable -> Json.Encode.Value
encodeExportSdtmigDatasetsTable =
    encodeObject << encodeExportSdtmigDatasetsTablePairs


encodeExportSdtmigDatasetsTableWithTag : ( String, String ) -> ExportSdtmigDatasetsTable -> Json.Encode.Value
encodeExportSdtmigDatasetsTableWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmigDatasetsTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmigDatasetsTablePairs : ExportSdtmigDatasetsTable -> List EncodedField
encodeExportSdtmigDatasetsTablePairs model =
    let
        pairs =
            [ maybeEncode "datasets" (Json.Encode.list encodeExportSdtmigDatasetsRow) model.datasets
            ]
    in
    pairs


encodeExportSdtmigVariablesRow : ExportSdtmigVariablesRow -> Json.Encode.Value
encodeExportSdtmigVariablesRow =
    encodeObject << encodeExportSdtmigVariablesRowPairs


encodeExportSdtmigVariablesRowWithTag : ( String, String ) -> ExportSdtmigVariablesRow -> Json.Encode.Value
encodeExportSdtmigVariablesRowWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmigVariablesRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmigVariablesRowPairs : ExportSdtmigVariablesRow -> List EncodedField
encodeExportSdtmigVariablesRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Variable Order" Json.Encode.string model.variableOrder
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Dataset Name" Json.Encode.string model.datasetName
            , maybeEncode "Variable Name" Json.Encode.string model.variableName
            , maybeEncode "Variable Label" Json.Encode.string model.variableLabel
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "Controlled Terms, Codelist or Format" Json.Encode.string model.controlledTermsCodelistOrFormat
            , maybeEncode "Role" Json.Encode.string model.role
            , maybeEncode "CDISC Notes" Json.Encode.string model.cDISCNotes
            , maybeEncode "Core" Json.Encode.string model.core
            ]
    in
    pairs


encodeExportSdtmigVariablesTable : ExportSdtmigVariablesTable -> Json.Encode.Value
encodeExportSdtmigVariablesTable =
    encodeObject << encodeExportSdtmigVariablesTablePairs


encodeExportSdtmigVariablesTableWithTag : ( String, String ) -> ExportSdtmigVariablesTable -> Json.Encode.Value
encodeExportSdtmigVariablesTableWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmigVariablesTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmigVariablesTablePairs : ExportSdtmigVariablesTable -> List EncodedField
encodeExportSdtmigVariablesTablePairs model =
    let
        pairs =
            [ maybeEncode "variables" (Json.Encode.list encodeExportSdtmigVariablesRow) model.variables
            ]
    in
    pairs


encodeExportSdtmigWorkbook : ExportSdtmigWorkbook -> Json.Encode.Value
encodeExportSdtmigWorkbook =
    encodeObject << encodeExportSdtmigWorkbookPairs


encodeExportSdtmigWorkbookWithTag : ( String, String ) -> ExportSdtmigWorkbook -> Json.Encode.Value
encodeExportSdtmigWorkbookWithTag (tagField, tag) model =
    encodeObject (encodeExportSdtmigWorkbookPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSdtmigWorkbookPairs : ExportSdtmigWorkbook -> List EncodedField
encodeExportSdtmigWorkbookPairs model =
    let
        pairs =
            [ maybeEncode "variables" (Json.Encode.list encodeExportSdtmigVariablesRow) model.variables
            , maybeEncode "datasets" (Json.Encode.list encodeExportSdtmigDatasetsRow) model.datasets
            ]
    in
    pairs


encodeExportSendigDatasetsRow : ExportSendigDatasetsRow -> Json.Encode.Value
encodeExportSendigDatasetsRow =
    encodeObject << encodeExportSendigDatasetsRowPairs


encodeExportSendigDatasetsRowWithTag : ( String, String ) -> ExportSendigDatasetsRow -> Json.Encode.Value
encodeExportSendigDatasetsRowWithTag (tagField, tag) model =
    encodeObject (encodeExportSendigDatasetsRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSendigDatasetsRowPairs : ExportSendigDatasetsRow -> List EncodedField
encodeExportSendigDatasetsRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Dataset Name" Json.Encode.string model.datasetName
            , maybeEncode "Dataset Label" Json.Encode.string model.datasetLabel
            , maybeEncode "Structure" Json.Encode.string model.structure
            ]
    in
    pairs


encodeExportSendigDatasetsTable : ExportSendigDatasetsTable -> Json.Encode.Value
encodeExportSendigDatasetsTable =
    encodeObject << encodeExportSendigDatasetsTablePairs


encodeExportSendigDatasetsTableWithTag : ( String, String ) -> ExportSendigDatasetsTable -> Json.Encode.Value
encodeExportSendigDatasetsTableWithTag (tagField, tag) model =
    encodeObject (encodeExportSendigDatasetsTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSendigDatasetsTablePairs : ExportSendigDatasetsTable -> List EncodedField
encodeExportSendigDatasetsTablePairs model =
    let
        pairs =
            [ maybeEncode "datasets" (Json.Encode.list encodeExportSendigDatasetsRow) model.datasets
            ]
    in
    pairs


encodeExportSendigVariablesRow : ExportSendigVariablesRow -> Json.Encode.Value
encodeExportSendigVariablesRow =
    encodeObject << encodeExportSendigVariablesRowPairs


encodeExportSendigVariablesRowWithTag : ( String, String ) -> ExportSendigVariablesRow -> Json.Encode.Value
encodeExportSendigVariablesRowWithTag (tagField, tag) model =
    encodeObject (encodeExportSendigVariablesRowPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSendigVariablesRowPairs : ExportSendigVariablesRow -> List EncodedField
encodeExportSendigVariablesRowPairs model =
    let
        pairs =
            [ maybeEncode "Version" Json.Encode.string model.version
            , maybeEncode "Variable Order" Json.Encode.string model.variableOrder
            , maybeEncode "Class" Json.Encode.string model.class
            , maybeEncode "Dataset Name" Json.Encode.string model.datasetName
            , maybeEncode "Variable Name" Json.Encode.string model.variableName
            , maybeEncode "Variable Label" Json.Encode.string model.variableLabel
            , maybeEncode "Type" Json.Encode.string model.Type_
            , maybeEncode "Controlled Terms, Codelist or Format" Json.Encode.string model.controlledTermsCodelistOrFormat
            , maybeEncode "Role" Json.Encode.string model.role
            , maybeEncode "CDISC Notes" Json.Encode.string model.cDISCNotes
            , maybeEncode "Core" Json.Encode.string model.core
            ]
    in
    pairs


encodeExportSendigVariablesTable : ExportSendigVariablesTable -> Json.Encode.Value
encodeExportSendigVariablesTable =
    encodeObject << encodeExportSendigVariablesTablePairs


encodeExportSendigVariablesTableWithTag : ( String, String ) -> ExportSendigVariablesTable -> Json.Encode.Value
encodeExportSendigVariablesTableWithTag (tagField, tag) model =
    encodeObject (encodeExportSendigVariablesTablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSendigVariablesTablePairs : ExportSendigVariablesTable -> List EncodedField
encodeExportSendigVariablesTablePairs model =
    let
        pairs =
            [ maybeEncode "variables" (Json.Encode.list encodeExportSendigVariablesRow) model.variables
            ]
    in
    pairs


encodeExportSendigWorkbook : ExportSendigWorkbook -> Json.Encode.Value
encodeExportSendigWorkbook =
    encodeObject << encodeExportSendigWorkbookPairs


encodeExportSendigWorkbookWithTag : ( String, String ) -> ExportSendigWorkbook -> Json.Encode.Value
encodeExportSendigWorkbookWithTag (tagField, tag) model =
    encodeObject (encodeExportSendigWorkbookPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExportSendigWorkbookPairs : ExportSendigWorkbook -> List EncodedField
encodeExportSendigWorkbookPairs model =
    let
        pairs =
            [ maybeEncode "variables" (Json.Encode.list encodeExportSendigVariablesRow) model.variables
            , maybeEncode "datasets" (Json.Encode.list encodeExportSendigDatasetsRow) model.datasets
            ]
    in
    pairs


encodeHealth : Health -> Json.Encode.Value
encodeHealth =
    encodeObject << encodeHealthPairs


encodeHealthWithTag : ( String, String ) -> Health -> Json.Encode.Value
encodeHealthWithTag (tagField, tag) model =
    encodeObject (encodeHealthPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeHealthPairs : Health -> List EncodedField
encodeHealthPairs model =
    let
        pairs =
            [ maybeEncode "healthy" Json.Encode.bool model.healthy
            , maybeEncode "ldapAuthenticationHealthy" Json.Encode.bool model.ldapAuthenticationHealthy
            , maybeEncode "ldapAuthorizationHealthy" Json.Encode.bool model.ldapAuthorizationHealthy
            , maybeEncode "databaseHealthy" Json.Encode.bool model.databaseHealthy
            , maybeEncode "esHealthy" Json.Encode.bool model.esHealthy
            ]
    in
    pairs


encodeLastupdated : Lastupdated -> Json.Encode.Value
encodeLastupdated =
    encodeObject << encodeLastupdatedPairs


encodeLastupdatedWithTag : ( String, String ) -> Lastupdated -> Json.Encode.Value
encodeLastupdatedWithTag (tagField, tag) model =
    encodeObject (encodeLastupdatedPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeLastupdatedPairs : Lastupdated -> List EncodedField
encodeLastupdatedPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeLastupdatedLinks model.links
            , maybeEncode "overall" Json.Encode.string model.overall
            , maybeEncode "data-analysis" Json.Encode.string model.dataanalysis
            , maybeEncode "data-collection" Json.Encode.string model.datacollection
            , maybeEncode "data-tabulation" Json.Encode.string model.datatabulation
            , maybeEncode "measure" Json.Encode.string model.measure
            , maybeEncode "terminology" Json.Encode.string model.terminology
            ]
    in
    pairs


encodeLastupdatedLinks : LastupdatedLinks -> Json.Encode.Value
encodeLastupdatedLinks =
    encodeObject << encodeLastupdatedLinksPairs


encodeLastupdatedLinksWithTag : ( String, String ) -> LastupdatedLinks -> Json.Encode.Value
encodeLastupdatedLinksWithTag (tagField, tag) model =
    encodeObject (encodeLastupdatedLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeLastupdatedLinksPairs : LastupdatedLinks -> List EncodedField
encodeLastupdatedLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeLastupdatedRef model.self
            ]
    in
    pairs


encodeLastupdatedRef : LastupdatedRef -> Json.Encode.Value
encodeLastupdatedRef =
    encodeObject << encodeLastupdatedRefPairs


encodeLastupdatedRefWithTag : ( String, String ) -> LastupdatedRef -> Json.Encode.Value
encodeLastupdatedRefWithTag (tagField, tag) model =
    encodeObject (encodeLastupdatedRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeLastupdatedRefPairs : LastupdatedRef -> List EncodedField
encodeLastupdatedRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeMaintenanceBody : MaintenanceBody -> Json.Encode.Value
encodeMaintenanceBody =
    encodeObject << encodeMaintenanceBodyPairs


encodeMaintenanceBodyWithTag : ( String, String ) -> MaintenanceBody -> Json.Encode.Value
encodeMaintenanceBodyWithTag (tagField, tag) model =
    encodeObject (encodeMaintenanceBodyPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeMaintenanceBodyPairs : MaintenanceBody -> List EncodedField
encodeMaintenanceBodyPairs model =
    let
        pairs =
            [ maybeEncode "maintenanceMode" Json.Encode.bool model.maintenanceMode
            , maybeEncode "maintenanceMessage" Json.Encode.string model.maintenanceMessage
            ]
    in
    pairs


encodeMdrSearchScopesGet200Response : MdrSearchScopesGet200Response -> Json.Encode.Value
encodeMdrSearchScopesGet200Response =
    encodeObject << encodeMdrSearchScopesGet200ResponsePairs


encodeMdrSearchScopesGet200ResponseWithTag : ( String, String ) -> MdrSearchScopesGet200Response -> Json.Encode.Value
encodeMdrSearchScopesGet200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeMdrSearchScopesGet200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeMdrSearchScopesGet200ResponsePairs : MdrSearchScopesGet200Response -> List EncodedField
encodeMdrSearchScopesGet200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "scopes" (Json.Encode.list encodeDefaultSearchScopes) model.scopes
            ]
    in
    pairs


encodeProductgroupDataAnalysis : ProductgroupDataAnalysis -> Json.Encode.Value
encodeProductgroupDataAnalysis =
    encodeObject << encodeProductgroupDataAnalysisPairs


encodeProductgroupDataAnalysisWithTag : ( String, String ) -> ProductgroupDataAnalysis -> Json.Encode.Value
encodeProductgroupDataAnalysisWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupDataAnalysisPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupDataAnalysisPairs : ProductgroupDataAnalysis -> List EncodedField
encodeProductgroupDataAnalysisPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeProductgroupDataAnalysisLinks model.links
            ]
    in
    pairs


encodeProductgroupDataAnalysisLinks : ProductgroupDataAnalysisLinks -> Json.Encode.Value
encodeProductgroupDataAnalysisLinks =
    encodeObject << encodeProductgroupDataAnalysisLinksPairs


encodeProductgroupDataAnalysisLinksWithTag : ( String, String ) -> ProductgroupDataAnalysisLinks -> Json.Encode.Value
encodeProductgroupDataAnalysisLinksWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupDataAnalysisLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupDataAnalysisLinksPairs : ProductgroupDataAnalysisLinks -> List EncodedField
encodeProductgroupDataAnalysisLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductgroupRef model.self
            , maybeEncode "adam" (Json.Encode.list encodeAdamProductRefElement) model.adam
            ]
    in
    pairs


encodeProductgroupDataCollection : ProductgroupDataCollection -> Json.Encode.Value
encodeProductgroupDataCollection =
    encodeObject << encodeProductgroupDataCollectionPairs


encodeProductgroupDataCollectionWithTag : ( String, String ) -> ProductgroupDataCollection -> Json.Encode.Value
encodeProductgroupDataCollectionWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupDataCollectionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupDataCollectionPairs : ProductgroupDataCollection -> List EncodedField
encodeProductgroupDataCollectionPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeProductgroupDataCollectionLinks model.links
            ]
    in
    pairs


encodeProductgroupDataCollectionLinks : ProductgroupDataCollectionLinks -> Json.Encode.Value
encodeProductgroupDataCollectionLinks =
    encodeObject << encodeProductgroupDataCollectionLinksPairs


encodeProductgroupDataCollectionLinksWithTag : ( String, String ) -> ProductgroupDataCollectionLinks -> Json.Encode.Value
encodeProductgroupDataCollectionLinksWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupDataCollectionLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupDataCollectionLinksPairs : ProductgroupDataCollectionLinks -> List EncodedField
encodeProductgroupDataCollectionLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductgroupRef model.self
            , maybeEncode "cdash" (Json.Encode.list encodeCdashProductRefElement) model.cdash
            , maybeEncode "cdashig" (Json.Encode.list encodeCdashigProductRefElement) model.cdashig
            ]
    in
    pairs


encodeProductgroupDataTabulation : ProductgroupDataTabulation -> Json.Encode.Value
encodeProductgroupDataTabulation =
    encodeObject << encodeProductgroupDataTabulationPairs


encodeProductgroupDataTabulationWithTag : ( String, String ) -> ProductgroupDataTabulation -> Json.Encode.Value
encodeProductgroupDataTabulationWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupDataTabulationPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupDataTabulationPairs : ProductgroupDataTabulation -> List EncodedField
encodeProductgroupDataTabulationPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeProductgroupDataTabulationLinks model.links
            ]
    in
    pairs


encodeProductgroupDataTabulationLinks : ProductgroupDataTabulationLinks -> Json.Encode.Value
encodeProductgroupDataTabulationLinks =
    encodeObject << encodeProductgroupDataTabulationLinksPairs


encodeProductgroupDataTabulationLinksWithTag : ( String, String ) -> ProductgroupDataTabulationLinks -> Json.Encode.Value
encodeProductgroupDataTabulationLinksWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupDataTabulationLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupDataTabulationLinksPairs : ProductgroupDataTabulationLinks -> List EncodedField
encodeProductgroupDataTabulationLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductgroupRef model.self
            , maybeEncode "sdtm" (Json.Encode.list encodeSdtmProductRefElement) model.sdtm
            , maybeEncode "sdtmig" (Json.Encode.list encodeSdtmigProductRefElement) model.sdtmig
            , maybeEncode "sendig" (Json.Encode.list encodeSendigProductRefElement) model.sendig
            ]
    in
    pairs


encodeProductgroupQrs : ProductgroupQrs -> Json.Encode.Value
encodeProductgroupQrs =
    encodeObject << encodeProductgroupQrsPairs


encodeProductgroupQrsWithTag : ( String, String ) -> ProductgroupQrs -> Json.Encode.Value
encodeProductgroupQrsWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupQrsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupQrsPairs : ProductgroupQrs -> List EncodedField
encodeProductgroupQrsPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeProductgroupQrsLinks model.links
            ]
    in
    pairs


encodeProductgroupQrsLinks : ProductgroupQrsLinks -> Json.Encode.Value
encodeProductgroupQrsLinks =
    encodeObject << encodeProductgroupQrsLinksPairs


encodeProductgroupQrsLinksWithTag : ( String, String ) -> ProductgroupQrsLinks -> Json.Encode.Value
encodeProductgroupQrsLinksWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupQrsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupQrsLinksPairs : ProductgroupQrsLinks -> List EncodedField
encodeProductgroupQrsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductgroupRef model.self
            , maybeEncode "qrs" (Json.Encode.list encodeQrsRefElement) model.qrs
            ]
    in
    pairs


encodeProductgroupRef : ProductgroupRef -> Json.Encode.Value
encodeProductgroupRef =
    encodeObject << encodeProductgroupRefPairs


encodeProductgroupRefWithTag : ( String, String ) -> ProductgroupRef -> Json.Encode.Value
encodeProductgroupRefWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupRefPairs : ProductgroupRef -> List EncodedField
encodeProductgroupRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeProductgroupTerminology : ProductgroupTerminology -> Json.Encode.Value
encodeProductgroupTerminology =
    encodeObject << encodeProductgroupTerminologyPairs


encodeProductgroupTerminologyWithTag : ( String, String ) -> ProductgroupTerminology -> Json.Encode.Value
encodeProductgroupTerminologyWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupTerminologyPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupTerminologyPairs : ProductgroupTerminology -> List EncodedField
encodeProductgroupTerminologyPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeProductgroupTerminologyLinks model.links
            ]
    in
    pairs


encodeProductgroupTerminologyLinks : ProductgroupTerminologyLinks -> Json.Encode.Value
encodeProductgroupTerminologyLinks =
    encodeObject << encodeProductgroupTerminologyLinksPairs


encodeProductgroupTerminologyLinksWithTag : ( String, String ) -> ProductgroupTerminologyLinks -> Json.Encode.Value
encodeProductgroupTerminologyLinksWithTag (tagField, tag) model =
    encodeObject (encodeProductgroupTerminologyLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductgroupTerminologyLinksPairs : ProductgroupTerminologyLinks -> List EncodedField
encodeProductgroupTerminologyLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductgroupRef model.self
            , maybeEncode "packages" (Json.Encode.list encodeCtPackageRefElement) model.packages
            ]
    in
    pairs


encodeProducts : Products -> Json.Encode.Value
encodeProducts =
    encodeObject << encodeProductsPairs


encodeProductsWithTag : ( String, String ) -> Products -> Json.Encode.Value
encodeProductsWithTag (tagField, tag) model =
    encodeObject (encodeProductsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductsPairs : Products -> List EncodedField
encodeProductsPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeProductsLinks model.links
            ]
    in
    pairs


encodeProductsLinks : ProductsLinks -> Json.Encode.Value
encodeProductsLinks =
    encodeObject << encodeProductsLinksPairs


encodeProductsLinksWithTag : ( String, String ) -> ProductsLinks -> Json.Encode.Value
encodeProductsLinksWithTag (tagField, tag) model =
    encodeObject (encodeProductsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductsLinksPairs : ProductsLinks -> List EncodedField
encodeProductsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductsRef model.self
            , maybeEncode "data-collection" encodeProductgroupDataCollection model.datacollection
            , maybeEncode "data-tabulation" encodeProductgroupDataTabulation model.datatabulation
            , maybeEncode "data-analysis" encodeProductgroupDataAnalysis model.dataanalysis
            , maybeEncode "terminology" encodeProductgroupTerminology model.terminology
            , maybeEncode "measure" encodeProductgroupQrs model.measure
            ]
    in
    pairs


encodeProductsRef : ProductsRef -> Json.Encode.Value
encodeProductsRef =
    encodeObject << encodeProductsRefPairs


encodeProductsRefWithTag : ( String, String ) -> ProductsRef -> Json.Encode.Value
encodeProductsRefWithTag (tagField, tag) model =
    encodeObject (encodeProductsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeProductsRefPairs : ProductsRef -> List EncodedField
encodeProductsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeQrsItem : QrsItem -> Json.Encode.Value
encodeQrsItem =
    encodeObject << encodeQrsItemPairs


encodeQrsItemWithTag : ( String, String ) -> QrsItem -> Json.Encode.Value
encodeQrsItemWithTag (tagField, tag) model =
    encodeObject (encodeQrsItemPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsItemPairs : QrsItem -> List EncodedField
encodeQrsItemPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "questionText" Json.Encode.string model.questionText
            , maybeEncode "_links" encodeQrsItemLinks model.links
            ]
    in
    pairs


encodeQrsItemLinks : QrsItemLinks -> Json.Encode.Value
encodeQrsItemLinks =
    encodeObject << encodeQrsItemLinksPairs


encodeQrsItemLinksWithTag : ( String, String ) -> QrsItemLinks -> Json.Encode.Value
encodeQrsItemLinksWithTag (tagField, tag) model =
    encodeObject (encodeQrsItemLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsItemLinksPairs : QrsItemLinks -> List EncodedField
encodeQrsItemLinksPairs model =
    let
        pairs =
            [ maybeEncode "qrsItemTEST" encodeRootCtTermRef model.qrsItemTEST
            , maybeEncode "qrsItemTESTCD" encodeRootCtTermRef model.qrsItemTESTCD
            , maybeEncode "qrsItemEVAL" encodeRootCtTermRef model.qrsItemEVAL
            , maybeEncode "qrsItemSCAT" encodeRootCtTermRef model.qrsItemSCAT
            , maybeEncode "responsegroup" encodeQrsResponsegroup model.responsegroup
            ]
    in
    pairs


encodeQrsItemRefElement : QrsItemRefElement -> Json.Encode.Value
encodeQrsItemRefElement =
    encodeObject << encodeQrsItemRefElementPairs


encodeQrsItemRefElementWithTag : ( String, String ) -> QrsItemRefElement -> Json.Encode.Value
encodeQrsItemRefElementWithTag (tagField, tag) model =
    encodeObject (encodeQrsItemRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsItemRefElementPairs : QrsItemRefElement -> List EncodedField
encodeQrsItemRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeQrsItems : QrsItems -> Json.Encode.Value
encodeQrsItems =
    encodeObject << encodeQrsItemsPairs


encodeQrsItemsWithTag : ( String, String ) -> QrsItems -> Json.Encode.Value
encodeQrsItemsWithTag (tagField, tag) model =
    encodeObject (encodeQrsItemsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsItemsPairs : QrsItems -> List EncodedField
encodeQrsItemsPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "untilDate" Json.Encode.string model.untilDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "qrsType" Json.Encode.string model.qrsType
            , maybeEncode "_links" encodeQrsItemsLinks model.links
            ]
    in
    pairs


encodeQrsItemsLinks : QrsItemsLinks -> Json.Encode.Value
encodeQrsItemsLinks =
    encodeObject << encodeQrsItemsLinksPairs


encodeQrsItemsLinksWithTag : ( String, String ) -> QrsItemsLinks -> Json.Encode.Value
encodeQrsItemsLinksWithTag (tagField, tag) model =
    encodeObject (encodeQrsItemsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsItemsLinksPairs : QrsItemsLinks -> List EncodedField
encodeQrsItemsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeQrsItemsRef model.self
            , maybeEncode "parentProduct" encodeQrsProductRef model.parentProduct
            , maybeEncode "items" (Json.Encode.list encodeQrsItemRefElement) model.items
            ]
    in
    pairs


encodeQrsItemsRef : QrsItemsRef -> Json.Encode.Value
encodeQrsItemsRef =
    encodeObject << encodeQrsItemsRefPairs


encodeQrsItemsRefWithTag : ( String, String ) -> QrsItemsRef -> Json.Encode.Value
encodeQrsItemsRefWithTag (tagField, tag) model =
    encodeObject (encodeQrsItemsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsItemsRefPairs : QrsItemsRef -> List EncodedField
encodeQrsItemsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeQrsProduct : QrsProduct -> Json.Encode.Value
encodeQrsProduct =
    encodeObject << encodeQrsProductPairs


encodeQrsProductWithTag : ( String, String ) -> QrsProduct -> Json.Encode.Value
encodeQrsProductWithTag (tagField, tag) model =
    encodeObject (encodeQrsProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsProductPairs : QrsProduct -> List EncodedField
encodeQrsProductPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "untilDate" Json.Encode.string model.untilDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "qrsType" Json.Encode.string model.qrsType
            , maybeEncode "_links" encodeQrsProductLinks model.links
            , maybeEncode "items" (Json.Encode.list encodeQrsItem) model.items
            ]
    in
    pairs


encodeQrsProductLinks : QrsProductLinks -> Json.Encode.Value
encodeQrsProductLinks =
    encodeObject << encodeQrsProductLinksPairs


encodeQrsProductLinksWithTag : ( String, String ) -> QrsProductLinks -> Json.Encode.Value
encodeQrsProductLinksWithTag (tagField, tag) model =
    encodeObject (encodeQrsProductLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsProductLinksPairs : QrsProductLinks -> List EncodedField
encodeQrsProductLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeQrsProductRef model.self
            , maybeEncode "priorVersion" encodeQrsProductRef model.priorVersion
            , maybeEncode "qrsTermCAT" encodeRootCtTermRef model.qrsTermCAT
            , maybeEncode "qrsItems" encodeQrsItemsRef model.qrsItems
            ]
    in
    pairs


encodeQrsProductRef : QrsProductRef -> Json.Encode.Value
encodeQrsProductRef =
    encodeObject << encodeQrsProductRefPairs


encodeQrsProductRefWithTag : ( String, String ) -> QrsProductRef -> Json.Encode.Value
encodeQrsProductRefWithTag (tagField, tag) model =
    encodeObject (encodeQrsProductRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsProductRefPairs : QrsProductRef -> List EncodedField
encodeQrsProductRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeQrsRefElement : QrsRefElement -> Json.Encode.Value
encodeQrsRefElement =
    encodeObject << encodeQrsRefElementPairs


encodeQrsRefElementWithTag : ( String, String ) -> QrsRefElement -> Json.Encode.Value
encodeQrsRefElementWithTag (tagField, tag) model =
    encodeObject (encodeQrsRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsRefElementPairs : QrsRefElement -> List EncodedField
encodeQrsRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeQrsResponseLinks : QrsResponseLinks -> Json.Encode.Value
encodeQrsResponseLinks =
    encodeObject << encodeQrsResponseLinksPairs


encodeQrsResponseLinksWithTag : ( String, String ) -> QrsResponseLinks -> Json.Encode.Value
encodeQrsResponseLinksWithTag (tagField, tag) model =
    encodeObject (encodeQrsResponseLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsResponseLinksPairs : QrsResponseLinks -> List EncodedField
encodeQrsResponseLinksPairs model =
    let
        pairs =
            [ maybeEncode "qrsResponseORRES" encodeRootCtTermRef model.qrsResponseORRES
            , maybeEncode "qrsResponseORRESU" encodeRootCtTermRef model.qrsResponseORRESU
            , maybeEncode "qrsResponseSTRESC" encodeRootCtTermRef model.qrsResponseSTRESC
            , maybeEncode "qrsResponseSTRESCU" encodeRootCtTermRef model.qrsResponseSTRESCU
            ]
    in
    pairs


encodeQrsResponsegroup : QrsResponsegroup -> Json.Encode.Value
encodeQrsResponsegroup =
    encodeObject << encodeQrsResponsegroupPairs


encodeQrsResponsegroupWithTag : ( String, String ) -> QrsResponsegroup -> Json.Encode.Value
encodeQrsResponsegroupWithTag (tagField, tag) model =
    encodeObject (encodeQrsResponsegroupPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsResponsegroupPairs : QrsResponsegroup -> List EncodedField
encodeQrsResponsegroupPairs model =
    let
        pairs =
            [ maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "_links" encodeQrsResponsegroupLinks model.links
            ]
    in
    pairs


encodeQrsResponsegroupLinks : QrsResponsegroupLinks -> Json.Encode.Value
encodeQrsResponsegroupLinks =
    encodeObject << encodeQrsResponsegroupLinksPairs


encodeQrsResponsegroupLinksWithTag : ( String, String ) -> QrsResponsegroupLinks -> Json.Encode.Value
encodeQrsResponsegroupLinksWithTag (tagField, tag) model =
    encodeObject (encodeQrsResponsegroupLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsResponsegroupLinksPairs : QrsResponsegroupLinks -> List EncodedField
encodeQrsResponsegroupLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeQrsResponsegroupRef model.self
            , maybeEncode "responses" (Json.Encode.list encodeQrsResponses) model.responses
            ]
    in
    pairs


encodeQrsResponsegroupRef : QrsResponsegroupRef -> Json.Encode.Value
encodeQrsResponsegroupRef =
    encodeObject << encodeQrsResponsegroupRefPairs


encodeQrsResponsegroupRefWithTag : ( String, String ) -> QrsResponsegroupRef -> Json.Encode.Value
encodeQrsResponsegroupRefWithTag (tagField, tag) model =
    encodeObject (encodeQrsResponsegroupRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsResponsegroupRefPairs : QrsResponsegroupRef -> List EncodedField
encodeQrsResponsegroupRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeQrsResponsegroupRefElement : QrsResponsegroupRefElement -> Json.Encode.Value
encodeQrsResponsegroupRefElement =
    encodeObject << encodeQrsResponsegroupRefElementPairs


encodeQrsResponsegroupRefElementWithTag : ( String, String ) -> QrsResponsegroupRefElement -> Json.Encode.Value
encodeQrsResponsegroupRefElementWithTag (tagField, tag) model =
    encodeObject (encodeQrsResponsegroupRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsResponsegroupRefElementPairs : QrsResponsegroupRefElement -> List EncodedField
encodeQrsResponsegroupRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeQrsResponsegroups : QrsResponsegroups -> Json.Encode.Value
encodeQrsResponsegroups =
    encodeObject << encodeQrsResponsegroupsPairs


encodeQrsResponsegroupsWithTag : ( String, String ) -> QrsResponsegroups -> Json.Encode.Value
encodeQrsResponsegroupsWithTag (tagField, tag) model =
    encodeObject (encodeQrsResponsegroupsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsResponsegroupsPairs : QrsResponsegroups -> List EncodedField
encodeQrsResponsegroupsPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "untilDate" Json.Encode.string model.untilDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "qrsType" Json.Encode.string model.qrsType
            , maybeEncode "_links" encodeQrsResponsegroupsLinks model.links
            ]
    in
    pairs


encodeQrsResponsegroupsLinks : QrsResponsegroupsLinks -> Json.Encode.Value
encodeQrsResponsegroupsLinks =
    encodeObject << encodeQrsResponsegroupsLinksPairs


encodeQrsResponsegroupsLinksWithTag : ( String, String ) -> QrsResponsegroupsLinks -> Json.Encode.Value
encodeQrsResponsegroupsLinksWithTag (tagField, tag) model =
    encodeObject (encodeQrsResponsegroupsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsResponsegroupsLinksPairs : QrsResponsegroupsLinks -> List EncodedField
encodeQrsResponsegroupsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeQrsResponsegroupsRef model.self
            , maybeEncode "responsegroups" (Json.Encode.list encodeQrsResponsegroupRefElement) model.responsegroups
            ]
    in
    pairs


encodeQrsResponsegroupsRef : QrsResponsegroupsRef -> Json.Encode.Value
encodeQrsResponsegroupsRef =
    encodeObject << encodeQrsResponsegroupsRefPairs


encodeQrsResponsegroupsRefWithTag : ( String, String ) -> QrsResponsegroupsRef -> Json.Encode.Value
encodeQrsResponsegroupsRefWithTag (tagField, tag) model =
    encodeObject (encodeQrsResponsegroupsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsResponsegroupsRefPairs : QrsResponsegroupsRef -> List EncodedField
encodeQrsResponsegroupsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeQrsResponses : QrsResponses -> Json.Encode.Value
encodeQrsResponses =
    encodeObject << encodeQrsResponsesPairs


encodeQrsResponsesWithTag : ( String, String ) -> QrsResponses -> Json.Encode.Value
encodeQrsResponsesWithTag (tagField, tag) model =
    encodeObject (encodeQrsResponsesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeQrsResponsesPairs : QrsResponses -> List EncodedField
encodeQrsResponsesPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "_links" encodeQrsResponseLinks model.links
            ]
    in
    pairs


encodeRootCdashClassField : RootCdashClassField -> Json.Encode.Value
encodeRootCdashClassField =
    encodeObject << encodeRootCdashClassFieldPairs


encodeRootCdashClassFieldWithTag : ( String, String ) -> RootCdashClassField -> Json.Encode.Value
encodeRootCdashClassFieldWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashClassFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashClassFieldPairs : RootCdashClassField -> List EncodedField
encodeRootCdashClassFieldPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootCdashClassFieldLinks model.links
            ]
    in
    pairs


encodeRootCdashClassFieldLinks : RootCdashClassFieldLinks -> Json.Encode.Value
encodeRootCdashClassFieldLinks =
    encodeObject << encodeRootCdashClassFieldLinksPairs


encodeRootCdashClassFieldLinksWithTag : ( String, String ) -> RootCdashClassFieldLinks -> Json.Encode.Value
encodeRootCdashClassFieldLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashClassFieldLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashClassFieldLinksPairs : RootCdashClassFieldLinks -> List EncodedField
encodeRootCdashClassFieldLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCdashClassFieldRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeCdashClassFieldRefVersion) model.versions
            ]
    in
    pairs


encodeRootCdashClassFieldRef : RootCdashClassFieldRef -> Json.Encode.Value
encodeRootCdashClassFieldRef =
    encodeObject << encodeRootCdashClassFieldRefPairs


encodeRootCdashClassFieldRefWithTag : ( String, String ) -> RootCdashClassFieldRef -> Json.Encode.Value
encodeRootCdashClassFieldRefWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashClassFieldRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashClassFieldRefPairs : RootCdashClassFieldRef -> List EncodedField
encodeRootCdashClassFieldRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootCdashDomainField : RootCdashDomainField -> Json.Encode.Value
encodeRootCdashDomainField =
    encodeObject << encodeRootCdashDomainFieldPairs


encodeRootCdashDomainFieldWithTag : ( String, String ) -> RootCdashDomainField -> Json.Encode.Value
encodeRootCdashDomainFieldWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashDomainFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashDomainFieldPairs : RootCdashDomainField -> List EncodedField
encodeRootCdashDomainFieldPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootCdashDomainFieldLinks model.links
            ]
    in
    pairs


encodeRootCdashDomainFieldLinks : RootCdashDomainFieldLinks -> Json.Encode.Value
encodeRootCdashDomainFieldLinks =
    encodeObject << encodeRootCdashDomainFieldLinksPairs


encodeRootCdashDomainFieldLinksWithTag : ( String, String ) -> RootCdashDomainFieldLinks -> Json.Encode.Value
encodeRootCdashDomainFieldLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashDomainFieldLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashDomainFieldLinksPairs : RootCdashDomainFieldLinks -> List EncodedField
encodeRootCdashDomainFieldLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCdashDomainFieldRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeCdashDomainFieldRefVersion) model.versions
            ]
    in
    pairs


encodeRootCdashDomainFieldRef : RootCdashDomainFieldRef -> Json.Encode.Value
encodeRootCdashDomainFieldRef =
    encodeObject << encodeRootCdashDomainFieldRefPairs


encodeRootCdashDomainFieldRefWithTag : ( String, String ) -> RootCdashDomainFieldRef -> Json.Encode.Value
encodeRootCdashDomainFieldRefWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashDomainFieldRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashDomainFieldRefPairs : RootCdashDomainFieldRef -> List EncodedField
encodeRootCdashDomainFieldRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootCdashigDomainField : RootCdashigDomainField -> Json.Encode.Value
encodeRootCdashigDomainField =
    encodeObject << encodeRootCdashigDomainFieldPairs


encodeRootCdashigDomainFieldWithTag : ( String, String ) -> RootCdashigDomainField -> Json.Encode.Value
encodeRootCdashigDomainFieldWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashigDomainFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashigDomainFieldPairs : RootCdashigDomainField -> List EncodedField
encodeRootCdashigDomainFieldPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootCdashigDomainFieldLinks model.links
            ]
    in
    pairs


encodeRootCdashigDomainFieldLinks : RootCdashigDomainFieldLinks -> Json.Encode.Value
encodeRootCdashigDomainFieldLinks =
    encodeObject << encodeRootCdashigDomainFieldLinksPairs


encodeRootCdashigDomainFieldLinksWithTag : ( String, String ) -> RootCdashigDomainFieldLinks -> Json.Encode.Value
encodeRootCdashigDomainFieldLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashigDomainFieldLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashigDomainFieldLinksPairs : RootCdashigDomainFieldLinks -> List EncodedField
encodeRootCdashigDomainFieldLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCdashigDomainFieldRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeCdashigDomainFieldRefVersion) model.versions
            ]
    in
    pairs


encodeRootCdashigDomainFieldRef : RootCdashigDomainFieldRef -> Json.Encode.Value
encodeRootCdashigDomainFieldRef =
    encodeObject << encodeRootCdashigDomainFieldRefPairs


encodeRootCdashigDomainFieldRefWithTag : ( String, String ) -> RootCdashigDomainFieldRef -> Json.Encode.Value
encodeRootCdashigDomainFieldRefWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashigDomainFieldRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashigDomainFieldRefPairs : RootCdashigDomainFieldRef -> List EncodedField
encodeRootCdashigDomainFieldRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootCdashigScenarioField : RootCdashigScenarioField -> Json.Encode.Value
encodeRootCdashigScenarioField =
    encodeObject << encodeRootCdashigScenarioFieldPairs


encodeRootCdashigScenarioFieldWithTag : ( String, String ) -> RootCdashigScenarioField -> Json.Encode.Value
encodeRootCdashigScenarioFieldWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashigScenarioFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashigScenarioFieldPairs : RootCdashigScenarioField -> List EncodedField
encodeRootCdashigScenarioFieldPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootCdashigScenarioFieldLinks model.links
            ]
    in
    pairs


encodeRootCdashigScenarioFieldLinks : RootCdashigScenarioFieldLinks -> Json.Encode.Value
encodeRootCdashigScenarioFieldLinks =
    encodeObject << encodeRootCdashigScenarioFieldLinksPairs


encodeRootCdashigScenarioFieldLinksWithTag : ( String, String ) -> RootCdashigScenarioFieldLinks -> Json.Encode.Value
encodeRootCdashigScenarioFieldLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashigScenarioFieldLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashigScenarioFieldLinksPairs : RootCdashigScenarioFieldLinks -> List EncodedField
encodeRootCdashigScenarioFieldLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCdashigScenarioFieldRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeCdashigScenarioFieldRefVersion) model.versions
            ]
    in
    pairs


encodeRootCdashigScenarioFieldRef : RootCdashigScenarioFieldRef -> Json.Encode.Value
encodeRootCdashigScenarioFieldRef =
    encodeObject << encodeRootCdashigScenarioFieldRefPairs


encodeRootCdashigScenarioFieldRefWithTag : ( String, String ) -> RootCdashigScenarioFieldRef -> Json.Encode.Value
encodeRootCdashigScenarioFieldRefWithTag (tagField, tag) model =
    encodeObject (encodeRootCdashigScenarioFieldRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCdashigScenarioFieldRefPairs : RootCdashigScenarioFieldRef -> List EncodedField
encodeRootCdashigScenarioFieldRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootCtCodelist : RootCtCodelist -> Json.Encode.Value
encodeRootCtCodelist =
    encodeObject << encodeRootCtCodelistPairs


encodeRootCtCodelistWithTag : ( String, String ) -> RootCtCodelist -> Json.Encode.Value
encodeRootCtCodelistWithTag (tagField, tag) model =
    encodeObject (encodeRootCtCodelistPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCtCodelistPairs : RootCtCodelist -> List EncodedField
encodeRootCtCodelistPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootCtCodelistLinks model.links
            ]
    in
    pairs


encodeRootCtCodelistLinks : RootCtCodelistLinks -> Json.Encode.Value
encodeRootCtCodelistLinks =
    encodeObject << encodeRootCtCodelistLinksPairs


encodeRootCtCodelistLinksWithTag : ( String, String ) -> RootCtCodelistLinks -> Json.Encode.Value
encodeRootCtCodelistLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootCtCodelistLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCtCodelistLinksPairs : RootCtCodelistLinks -> List EncodedField
encodeRootCtCodelistLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCtCodelistRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeCtCodelistRefVersion) model.versions
            ]
    in
    pairs


encodeRootCtCodelistRef : RootCtCodelistRef -> Json.Encode.Value
encodeRootCtCodelistRef =
    encodeObject << encodeRootCtCodelistRefPairs


encodeRootCtCodelistRefWithTag : ( String, String ) -> RootCtCodelistRef -> Json.Encode.Value
encodeRootCtCodelistRefWithTag (tagField, tag) model =
    encodeObject (encodeRootCtCodelistRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCtCodelistRefPairs : RootCtCodelistRef -> List EncodedField
encodeRootCtCodelistRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootCtCodelistRefElement : RootCtCodelistRefElement -> Json.Encode.Value
encodeRootCtCodelistRefElement =
    encodeObject << encodeRootCtCodelistRefElementPairs


encodeRootCtCodelistRefElementWithTag : ( String, String ) -> RootCtCodelistRefElement -> Json.Encode.Value
encodeRootCtCodelistRefElementWithTag (tagField, tag) model =
    encodeObject (encodeRootCtCodelistRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCtCodelistRefElementPairs : RootCtCodelistRefElement -> List EncodedField
encodeRootCtCodelistRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootCtTerm : RootCtTerm -> Json.Encode.Value
encodeRootCtTerm =
    encodeObject << encodeRootCtTermPairs


encodeRootCtTermWithTag : ( String, String ) -> RootCtTerm -> Json.Encode.Value
encodeRootCtTermWithTag (tagField, tag) model =
    encodeObject (encodeRootCtTermPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCtTermPairs : RootCtTerm -> List EncodedField
encodeRootCtTermPairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootCtTermLinks model.links
            ]
    in
    pairs


encodeRootCtTermLinks : RootCtTermLinks -> Json.Encode.Value
encodeRootCtTermLinks =
    encodeObject << encodeRootCtTermLinksPairs


encodeRootCtTermLinksWithTag : ( String, String ) -> RootCtTermLinks -> Json.Encode.Value
encodeRootCtTermLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootCtTermLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCtTermLinksPairs : RootCtTermLinks -> List EncodedField
encodeRootCtTermLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCtTermRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeCtTermRefVersion) model.versions
            ]
    in
    pairs


encodeRootCtTermRef : RootCtTermRef -> Json.Encode.Value
encodeRootCtTermRef =
    encodeObject << encodeRootCtTermRefPairs


encodeRootCtTermRefWithTag : ( String, String ) -> RootCtTermRef -> Json.Encode.Value
encodeRootCtTermRefWithTag (tagField, tag) model =
    encodeObject (encodeRootCtTermRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootCtTermRefPairs : RootCtTermRef -> List EncodedField
encodeRootCtTermRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootSdtmClassVariable : RootSdtmClassVariable -> Json.Encode.Value
encodeRootSdtmClassVariable =
    encodeObject << encodeRootSdtmClassVariablePairs


encodeRootSdtmClassVariableWithTag : ( String, String ) -> RootSdtmClassVariable -> Json.Encode.Value
encodeRootSdtmClassVariableWithTag (tagField, tag) model =
    encodeObject (encodeRootSdtmClassVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSdtmClassVariablePairs : RootSdtmClassVariable -> List EncodedField
encodeRootSdtmClassVariablePairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootSdtmClassVariableLinks model.links
            ]
    in
    pairs


encodeRootSdtmClassVariableLinks : RootSdtmClassVariableLinks -> Json.Encode.Value
encodeRootSdtmClassVariableLinks =
    encodeObject << encodeRootSdtmClassVariableLinksPairs


encodeRootSdtmClassVariableLinksWithTag : ( String, String ) -> RootSdtmClassVariableLinks -> Json.Encode.Value
encodeRootSdtmClassVariableLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootSdtmClassVariableLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSdtmClassVariableLinksPairs : RootSdtmClassVariableLinks -> List EncodedField
encodeRootSdtmClassVariableLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootSdtmClassVariableRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeSdtmClassVariableRefVersion) model.versions
            ]
    in
    pairs


encodeRootSdtmClassVariableRef : RootSdtmClassVariableRef -> Json.Encode.Value
encodeRootSdtmClassVariableRef =
    encodeObject << encodeRootSdtmClassVariableRefPairs


encodeRootSdtmClassVariableRefWithTag : ( String, String ) -> RootSdtmClassVariableRef -> Json.Encode.Value
encodeRootSdtmClassVariableRefWithTag (tagField, tag) model =
    encodeObject (encodeRootSdtmClassVariableRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSdtmClassVariableRefPairs : RootSdtmClassVariableRef -> List EncodedField
encodeRootSdtmClassVariableRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootSdtmDatasetVariable : RootSdtmDatasetVariable -> Json.Encode.Value
encodeRootSdtmDatasetVariable =
    encodeObject << encodeRootSdtmDatasetVariablePairs


encodeRootSdtmDatasetVariableWithTag : ( String, String ) -> RootSdtmDatasetVariable -> Json.Encode.Value
encodeRootSdtmDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeRootSdtmDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSdtmDatasetVariablePairs : RootSdtmDatasetVariable -> List EncodedField
encodeRootSdtmDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootSdtmDatasetVariableLinks model.links
            ]
    in
    pairs


encodeRootSdtmDatasetVariableLinks : RootSdtmDatasetVariableLinks -> Json.Encode.Value
encodeRootSdtmDatasetVariableLinks =
    encodeObject << encodeRootSdtmDatasetVariableLinksPairs


encodeRootSdtmDatasetVariableLinksWithTag : ( String, String ) -> RootSdtmDatasetVariableLinks -> Json.Encode.Value
encodeRootSdtmDatasetVariableLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootSdtmDatasetVariableLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSdtmDatasetVariableLinksPairs : RootSdtmDatasetVariableLinks -> List EncodedField
encodeRootSdtmDatasetVariableLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootSdtmDatasetVariableRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeSdtmDatasetVariableRefVersion) model.versions
            ]
    in
    pairs


encodeRootSdtmDatasetVariableRef : RootSdtmDatasetVariableRef -> Json.Encode.Value
encodeRootSdtmDatasetVariableRef =
    encodeObject << encodeRootSdtmDatasetVariableRefPairs


encodeRootSdtmDatasetVariableRefWithTag : ( String, String ) -> RootSdtmDatasetVariableRef -> Json.Encode.Value
encodeRootSdtmDatasetVariableRefWithTag (tagField, tag) model =
    encodeObject (encodeRootSdtmDatasetVariableRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSdtmDatasetVariableRefPairs : RootSdtmDatasetVariableRef -> List EncodedField
encodeRootSdtmDatasetVariableRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootSdtmigDatasetVariable : RootSdtmigDatasetVariable -> Json.Encode.Value
encodeRootSdtmigDatasetVariable =
    encodeObject << encodeRootSdtmigDatasetVariablePairs


encodeRootSdtmigDatasetVariableWithTag : ( String, String ) -> RootSdtmigDatasetVariable -> Json.Encode.Value
encodeRootSdtmigDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeRootSdtmigDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSdtmigDatasetVariablePairs : RootSdtmigDatasetVariable -> List EncodedField
encodeRootSdtmigDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootSdtmigDatasetVariableLinks model.links
            ]
    in
    pairs


encodeRootSdtmigDatasetVariableLinks : RootSdtmigDatasetVariableLinks -> Json.Encode.Value
encodeRootSdtmigDatasetVariableLinks =
    encodeObject << encodeRootSdtmigDatasetVariableLinksPairs


encodeRootSdtmigDatasetVariableLinksWithTag : ( String, String ) -> RootSdtmigDatasetVariableLinks -> Json.Encode.Value
encodeRootSdtmigDatasetVariableLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootSdtmigDatasetVariableLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSdtmigDatasetVariableLinksPairs : RootSdtmigDatasetVariableLinks -> List EncodedField
encodeRootSdtmigDatasetVariableLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootSdtmigDatasetVariableRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeSdtmigDatasetVariableRefVersion) model.versions
            ]
    in
    pairs


encodeRootSdtmigDatasetVariableRef : RootSdtmigDatasetVariableRef -> Json.Encode.Value
encodeRootSdtmigDatasetVariableRef =
    encodeObject << encodeRootSdtmigDatasetVariableRefPairs


encodeRootSdtmigDatasetVariableRefWithTag : ( String, String ) -> RootSdtmigDatasetVariableRef -> Json.Encode.Value
encodeRootSdtmigDatasetVariableRefWithTag (tagField, tag) model =
    encodeObject (encodeRootSdtmigDatasetVariableRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSdtmigDatasetVariableRefPairs : RootSdtmigDatasetVariableRef -> List EncodedField
encodeRootSdtmigDatasetVariableRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeRootSendigDatasetVariable : RootSendigDatasetVariable -> Json.Encode.Value
encodeRootSendigDatasetVariable =
    encodeObject << encodeRootSendigDatasetVariablePairs


encodeRootSendigDatasetVariableWithTag : ( String, String ) -> RootSendigDatasetVariable -> Json.Encode.Value
encodeRootSendigDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeRootSendigDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSendigDatasetVariablePairs : RootSendigDatasetVariable -> List EncodedField
encodeRootSendigDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "_links" encodeRootSendigDatasetVariableLinks model.links
            ]
    in
    pairs


encodeRootSendigDatasetVariableLinks : RootSendigDatasetVariableLinks -> Json.Encode.Value
encodeRootSendigDatasetVariableLinks =
    encodeObject << encodeRootSendigDatasetVariableLinksPairs


encodeRootSendigDatasetVariableLinksWithTag : ( String, String ) -> RootSendigDatasetVariableLinks -> Json.Encode.Value
encodeRootSendigDatasetVariableLinksWithTag (tagField, tag) model =
    encodeObject (encodeRootSendigDatasetVariableLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSendigDatasetVariableLinksPairs : RootSendigDatasetVariableLinks -> List EncodedField
encodeRootSendigDatasetVariableLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootSendigDatasetVariableRef model.self
            , maybeEncode "versions" (Json.Encode.list encodeSendigDatasetVariableRefVersion) model.versions
            ]
    in
    pairs


encodeRootSendigDatasetVariableRef : RootSendigDatasetVariableRef -> Json.Encode.Value
encodeRootSendigDatasetVariableRef =
    encodeObject << encodeRootSendigDatasetVariableRefPairs


encodeRootSendigDatasetVariableRefWithTag : ( String, String ) -> RootSendigDatasetVariableRef -> Json.Encode.Value
encodeRootSendigDatasetVariableRefWithTag (tagField, tag) model =
    encodeObject (encodeRootSendigDatasetVariableRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRootSendigDatasetVariableRefPairs : RootSendigDatasetVariableRef -> List EncodedField
encodeRootSendigDatasetVariableRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeScopeValues : ScopeValues -> Json.Encode.Value
encodeScopeValues =
    encodeObject << encodeScopeValuesPairs


encodeScopeValuesWithTag : ( String, String ) -> ScopeValues -> Json.Encode.Value
encodeScopeValuesWithTag (tagField, tag) model =
    encodeObject (encodeScopeValuesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScopeValuesPairs : ScopeValues -> List EncodedField
encodeScopeValuesPairs model =
    let
        pairs =
            [ maybeEncode "total" Json.Encode.float model.total
            , maybeEncode "hasMore" Json.Encode.bool model.hasMore
            , maybeEncode "values" (Json.Encode.list Json.Encode.string) model.values
            ]
    in
    pairs


encodeSdtmClass : SdtmClass -> Json.Encode.Value
encodeSdtmClass =
    encodeObject << encodeSdtmClassPairs


encodeSdtmClassWithTag : ( String, String ) -> SdtmClass -> Json.Encode.Value
encodeSdtmClassWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassPairs : SdtmClass -> List EncodedField
encodeSdtmClassPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeSdtmClassLinks model.links
            , maybeEncode "classVariables" (Json.Encode.list encodeSdtmClassVariable) model.classVariables
            , maybeEncode "datasets" (Json.Encode.list encodeSdtmDataset) model.datasets
            ]
    in
    pairs


encodeSdtmClassDatasets : SdtmClassDatasets -> Json.Encode.Value
encodeSdtmClassDatasets =
    encodeObject << encodeSdtmClassDatasetsPairs


encodeSdtmClassDatasetsWithTag : ( String, String ) -> SdtmClassDatasets -> Json.Encode.Value
encodeSdtmClassDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassDatasetsPairs : SdtmClassDatasets -> List EncodedField
encodeSdtmClassDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeSdtmClassDatasetsLinks model.links
            ]
    in
    pairs


encodeSdtmClassDatasetsLinks : SdtmClassDatasetsLinks -> Json.Encode.Value
encodeSdtmClassDatasetsLinks =
    encodeObject << encodeSdtmClassDatasetsLinksPairs


encodeSdtmClassDatasetsLinksWithTag : ( String, String ) -> SdtmClassDatasetsLinks -> Json.Encode.Value
encodeSdtmClassDatasetsLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassDatasetsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassDatasetsLinksPairs : SdtmClassDatasetsLinks -> List EncodedField
encodeSdtmClassDatasetsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClassDatasetsRef model.self
            , maybeEncode "parentProduct" encodeSdtmProductRef model.parentProduct
            , maybeEncode "priorVersion" encodeSdtmClassDatasetsRef model.priorVersion
            , maybeEncode "datasets" (Json.Encode.list encodeSdtmDatasetRefElement) model.datasets
            ]
    in
    pairs


encodeSdtmClassDatasetsRef : SdtmClassDatasetsRef -> Json.Encode.Value
encodeSdtmClassDatasetsRef =
    encodeObject << encodeSdtmClassDatasetsRefPairs


encodeSdtmClassDatasetsRefWithTag : ( String, String ) -> SdtmClassDatasetsRef -> Json.Encode.Value
encodeSdtmClassDatasetsRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassDatasetsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassDatasetsRefPairs : SdtmClassDatasetsRef -> List EncodedField
encodeSdtmClassDatasetsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClassLinks : SdtmClassLinks -> Json.Encode.Value
encodeSdtmClassLinks =
    encodeObject << encodeSdtmClassLinksPairs


encodeSdtmClassLinksWithTag : ( String, String ) -> SdtmClassLinks -> Json.Encode.Value
encodeSdtmClassLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassLinksPairs : SdtmClassLinks -> List EncodedField
encodeSdtmClassLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClassRef model.self
            , maybeEncode "parentProduct" encodeSdtmProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSdtmClassRef model.parentClass
            , maybeEncode "subclasses" (Json.Encode.list encodeSdtmClassRefSubclass) model.subclasses
            , maybeEncode "priorVersion" encodeSdtmClassRef model.priorVersion
            ]
    in
    pairs


encodeSdtmClassRef : SdtmClassRef -> Json.Encode.Value
encodeSdtmClassRef =
    encodeObject << encodeSdtmClassRefPairs


encodeSdtmClassRefWithTag : ( String, String ) -> SdtmClassRef -> Json.Encode.Value
encodeSdtmClassRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassRefPairs : SdtmClassRef -> List EncodedField
encodeSdtmClassRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClassRefElement : SdtmClassRefElement -> Json.Encode.Value
encodeSdtmClassRefElement =
    encodeObject << encodeSdtmClassRefElementPairs


encodeSdtmClassRefElementWithTag : ( String, String ) -> SdtmClassRefElement -> Json.Encode.Value
encodeSdtmClassRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassRefElementPairs : SdtmClassRefElement -> List EncodedField
encodeSdtmClassRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClassRefSubclass : SdtmClassRefSubclass -> Json.Encode.Value
encodeSdtmClassRefSubclass =
    encodeObject << encodeSdtmClassRefSubclassPairs


encodeSdtmClassRefSubclassWithTag : ( String, String ) -> SdtmClassRefSubclass -> Json.Encode.Value
encodeSdtmClassRefSubclassWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassRefSubclassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassRefSubclassPairs : SdtmClassRefSubclass -> List EncodedField
encodeSdtmClassRefSubclassPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClassVariable : SdtmClassVariable -> Json.Encode.Value
encodeSdtmClassVariable =
    encodeObject << encodeSdtmClassVariablePairs


encodeSdtmClassVariableWithTag : ( String, String ) -> SdtmClassVariable -> Json.Encode.Value
encodeSdtmClassVariableWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariablePairs : SdtmClassVariable -> List EncodedField
encodeSdtmClassVariablePairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "role" Json.Encode.string model.role
            , maybeEncode "roleDescription" Json.Encode.string model.roleDescription
            , maybeEncode "simpleDatatype" Json.Encode.string model.simpleDatatype
            , maybeEncode "describedValueDomain" Json.Encode.string model.describedValueDomain
            , maybeEncode "_links" encodeSdtmClassVariableLinks model.links
            ]
    in
    pairs


encodeSdtmClassVariableLinks : SdtmClassVariableLinks -> Json.Encode.Value
encodeSdtmClassVariableLinks =
    encodeObject << encodeSdtmClassVariableLinksPairs


encodeSdtmClassVariableLinksWithTag : ( String, String ) -> SdtmClassVariableLinks -> Json.Encode.Value
encodeSdtmClassVariableLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariableLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariableLinksPairs : SdtmClassVariableLinks -> List EncodedField
encodeSdtmClassVariableLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClassVariableRef model.self
            , maybeEncode "parentProduct" encodeSdtmProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSdtmClassRef model.parentClass
            , maybeEncode "qualifiesVariables" (Json.Encode.list encodeSdtmClassVariableRefQualifies) model.qualifiesVariables
            , maybeEncode "rootItem" encodeRootSdtmClassVariableRef model.rootItem
            , maybeEncode "priorVersion" encodeSdtmClassVariableRef model.priorVersion
            ]
    in
    pairs


encodeSdtmClassVariableRef : SdtmClassVariableRef -> Json.Encode.Value
encodeSdtmClassVariableRef =
    encodeObject << encodeSdtmClassVariableRefPairs


encodeSdtmClassVariableRefWithTag : ( String, String ) -> SdtmClassVariableRef -> Json.Encode.Value
encodeSdtmClassVariableRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariableRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariableRefPairs : SdtmClassVariableRef -> List EncodedField
encodeSdtmClassVariableRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClassVariableRefElement : SdtmClassVariableRefElement -> Json.Encode.Value
encodeSdtmClassVariableRefElement =
    encodeObject << encodeSdtmClassVariableRefElementPairs


encodeSdtmClassVariableRefElementWithTag : ( String, String ) -> SdtmClassVariableRefElement -> Json.Encode.Value
encodeSdtmClassVariableRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariableRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariableRefElementPairs : SdtmClassVariableRefElement -> List EncodedField
encodeSdtmClassVariableRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClassVariableRefQualifies : SdtmClassVariableRefQualifies -> Json.Encode.Value
encodeSdtmClassVariableRefQualifies =
    encodeObject << encodeSdtmClassVariableRefQualifiesPairs


encodeSdtmClassVariableRefQualifiesWithTag : ( String, String ) -> SdtmClassVariableRefQualifies -> Json.Encode.Value
encodeSdtmClassVariableRefQualifiesWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariableRefQualifiesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariableRefQualifiesPairs : SdtmClassVariableRefQualifies -> List EncodedField
encodeSdtmClassVariableRefQualifiesPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClassVariableRefTarget : SdtmClassVariableRefTarget -> Json.Encode.Value
encodeSdtmClassVariableRefTarget =
    encodeObject << encodeSdtmClassVariableRefTargetPairs


encodeSdtmClassVariableRefTargetWithTag : ( String, String ) -> SdtmClassVariableRefTarget -> Json.Encode.Value
encodeSdtmClassVariableRefTargetWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariableRefTargetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariableRefTargetPairs : SdtmClassVariableRefTarget -> List EncodedField
encodeSdtmClassVariableRefTargetPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClassVariableRefVersion : SdtmClassVariableRefVersion -> Json.Encode.Value
encodeSdtmClassVariableRefVersion =
    encodeObject << encodeSdtmClassVariableRefVersionPairs


encodeSdtmClassVariableRefVersionWithTag : ( String, String ) -> SdtmClassVariableRefVersion -> Json.Encode.Value
encodeSdtmClassVariableRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariableRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariableRefVersionPairs : SdtmClassVariableRefVersion -> List EncodedField
encodeSdtmClassVariableRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClassVariables : SdtmClassVariables -> Json.Encode.Value
encodeSdtmClassVariables =
    encodeObject << encodeSdtmClassVariablesPairs


encodeSdtmClassVariablesWithTag : ( String, String ) -> SdtmClassVariables -> Json.Encode.Value
encodeSdtmClassVariablesWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariablesPairs : SdtmClassVariables -> List EncodedField
encodeSdtmClassVariablesPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeSdtmClassVariablesLinks model.links
            ]
    in
    pairs


encodeSdtmClassVariablesLinks : SdtmClassVariablesLinks -> Json.Encode.Value
encodeSdtmClassVariablesLinks =
    encodeObject << encodeSdtmClassVariablesLinksPairs


encodeSdtmClassVariablesLinksWithTag : ( String, String ) -> SdtmClassVariablesLinks -> Json.Encode.Value
encodeSdtmClassVariablesLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariablesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariablesLinksPairs : SdtmClassVariablesLinks -> List EncodedField
encodeSdtmClassVariablesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClassVariablesRef model.self
            , maybeEncode "parentProduct" encodeSdtmProductRef model.parentProduct
            , maybeEncode "priorVersion" encodeSdtmClassVariablesRef model.priorVersion
            , maybeEncode "classVariables" (Json.Encode.list encodeSdtmClassVariableRefElement) model.classVariables
            ]
    in
    pairs


encodeSdtmClassVariablesRef : SdtmClassVariablesRef -> Json.Encode.Value
encodeSdtmClassVariablesRef =
    encodeObject << encodeSdtmClassVariablesRefPairs


encodeSdtmClassVariablesRefWithTag : ( String, String ) -> SdtmClassVariablesRef -> Json.Encode.Value
encodeSdtmClassVariablesRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassVariablesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassVariablesRefPairs : SdtmClassVariablesRef -> List EncodedField
encodeSdtmClassVariablesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmClasses : SdtmClasses -> Json.Encode.Value
encodeSdtmClasses =
    encodeObject << encodeSdtmClassesPairs


encodeSdtmClassesWithTag : ( String, String ) -> SdtmClasses -> Json.Encode.Value
encodeSdtmClassesWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassesPairs : SdtmClasses -> List EncodedField
encodeSdtmClassesPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeSdtmClassesLinks model.links
            ]
    in
    pairs


encodeSdtmClassesLinks : SdtmClassesLinks -> Json.Encode.Value
encodeSdtmClassesLinks =
    encodeObject << encodeSdtmClassesLinksPairs


encodeSdtmClassesLinksWithTag : ( String, String ) -> SdtmClassesLinks -> Json.Encode.Value
encodeSdtmClassesLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassesLinksPairs : SdtmClassesLinks -> List EncodedField
encodeSdtmClassesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClassesRef model.self
            , maybeEncode "priorVersion" encodeSdtmClassesRef model.priorVersion
            , maybeEncode "classes" (Json.Encode.list encodeSdtmClassRefElement) model.classes
            ]
    in
    pairs


encodeSdtmClassesRef : SdtmClassesRef -> Json.Encode.Value
encodeSdtmClassesRef =
    encodeObject << encodeSdtmClassesRefPairs


encodeSdtmClassesRefWithTag : ( String, String ) -> SdtmClassesRef -> Json.Encode.Value
encodeSdtmClassesRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmClassesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmClassesRefPairs : SdtmClassesRef -> List EncodedField
encodeSdtmClassesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmDataset : SdtmDataset -> Json.Encode.Value
encodeSdtmDataset =
    encodeObject << encodeSdtmDatasetPairs


encodeSdtmDatasetWithTag : ( String, String ) -> SdtmDataset -> Json.Encode.Value
encodeSdtmDatasetWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetPairs : SdtmDataset -> List EncodedField
encodeSdtmDatasetPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "datasetStructure" Json.Encode.string model.datasetStructure
            , maybeEncode "_links" encodeSdtmDatasetLinks model.links
            , maybeEncode "datasetVariables" (Json.Encode.list encodeSdtmDatasetVariable) model.datasetVariables
            ]
    in
    pairs


encodeSdtmDatasetLinks : SdtmDatasetLinks -> Json.Encode.Value
encodeSdtmDatasetLinks =
    encodeObject << encodeSdtmDatasetLinksPairs


encodeSdtmDatasetLinksWithTag : ( String, String ) -> SdtmDatasetLinks -> Json.Encode.Value
encodeSdtmDatasetLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetLinksPairs : SdtmDatasetLinks -> List EncodedField
encodeSdtmDatasetLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmDatasetRef model.self
            , maybeEncode "parentProduct" encodeSdtmProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSdtmClassRef model.parentClass
            , maybeEncode "priorVersion" encodeSdtmDatasetRef model.priorVersion
            ]
    in
    pairs


encodeSdtmDatasetRef : SdtmDatasetRef -> Json.Encode.Value
encodeSdtmDatasetRef =
    encodeObject << encodeSdtmDatasetRefPairs


encodeSdtmDatasetRefWithTag : ( String, String ) -> SdtmDatasetRef -> Json.Encode.Value
encodeSdtmDatasetRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetRefPairs : SdtmDatasetRef -> List EncodedField
encodeSdtmDatasetRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmDatasetRefElement : SdtmDatasetRefElement -> Json.Encode.Value
encodeSdtmDatasetRefElement =
    encodeObject << encodeSdtmDatasetRefElementPairs


encodeSdtmDatasetRefElementWithTag : ( String, String ) -> SdtmDatasetRefElement -> Json.Encode.Value
encodeSdtmDatasetRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetRefElementPairs : SdtmDatasetRefElement -> List EncodedField
encodeSdtmDatasetRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmDatasetVariable : SdtmDatasetVariable -> Json.Encode.Value
encodeSdtmDatasetVariable =
    encodeObject << encodeSdtmDatasetVariablePairs


encodeSdtmDatasetVariableWithTag : ( String, String ) -> SdtmDatasetVariable -> Json.Encode.Value
encodeSdtmDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetVariablePairs : SdtmDatasetVariable -> List EncodedField
encodeSdtmDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "role" Json.Encode.string model.role
            , maybeEncode "roleDescription" Json.Encode.string model.roleDescription
            , maybeEncode "simpleDatatype" Json.Encode.string model.simpleDatatype
            , maybeEncode "describedValueDomain" Json.Encode.string model.describedValueDomain
            , maybeEncode "_links" encodeSdtmDatasetVariableLinks model.links
            ]
    in
    pairs


encodeSdtmDatasetVariableLinks : SdtmDatasetVariableLinks -> Json.Encode.Value
encodeSdtmDatasetVariableLinks =
    encodeObject << encodeSdtmDatasetVariableLinksPairs


encodeSdtmDatasetVariableLinksWithTag : ( String, String ) -> SdtmDatasetVariableLinks -> Json.Encode.Value
encodeSdtmDatasetVariableLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetVariableLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetVariableLinksPairs : SdtmDatasetVariableLinks -> List EncodedField
encodeSdtmDatasetVariableLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmDatasetVariableRef model.self
            , maybeEncode "parentProduct" encodeSdtmProductRef model.parentProduct
            , maybeEncode "parentDataset" encodeSdtmDatasetRef model.parentDataset
            , maybeEncode "rootItem" encodeRootSdtmDatasetVariableRef model.rootItem
            , maybeEncode "priorVersion" encodeSdtmDatasetVariableRef model.priorVersion
            ]
    in
    pairs


encodeSdtmDatasetVariableRef : SdtmDatasetVariableRef -> Json.Encode.Value
encodeSdtmDatasetVariableRef =
    encodeObject << encodeSdtmDatasetVariableRefPairs


encodeSdtmDatasetVariableRefWithTag : ( String, String ) -> SdtmDatasetVariableRef -> Json.Encode.Value
encodeSdtmDatasetVariableRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetVariableRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetVariableRefPairs : SdtmDatasetVariableRef -> List EncodedField
encodeSdtmDatasetVariableRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmDatasetVariableRefElement : SdtmDatasetVariableRefElement -> Json.Encode.Value
encodeSdtmDatasetVariableRefElement =
    encodeObject << encodeSdtmDatasetVariableRefElementPairs


encodeSdtmDatasetVariableRefElementWithTag : ( String, String ) -> SdtmDatasetVariableRefElement -> Json.Encode.Value
encodeSdtmDatasetVariableRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetVariableRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetVariableRefElementPairs : SdtmDatasetVariableRefElement -> List EncodedField
encodeSdtmDatasetVariableRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmDatasetVariableRefTarget : SdtmDatasetVariableRefTarget -> Json.Encode.Value
encodeSdtmDatasetVariableRefTarget =
    encodeObject << encodeSdtmDatasetVariableRefTargetPairs


encodeSdtmDatasetVariableRefTargetWithTag : ( String, String ) -> SdtmDatasetVariableRefTarget -> Json.Encode.Value
encodeSdtmDatasetVariableRefTargetWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetVariableRefTargetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetVariableRefTargetPairs : SdtmDatasetVariableRefTarget -> List EncodedField
encodeSdtmDatasetVariableRefTargetPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmDatasetVariableRefVersion : SdtmDatasetVariableRefVersion -> Json.Encode.Value
encodeSdtmDatasetVariableRefVersion =
    encodeObject << encodeSdtmDatasetVariableRefVersionPairs


encodeSdtmDatasetVariableRefVersionWithTag : ( String, String ) -> SdtmDatasetVariableRefVersion -> Json.Encode.Value
encodeSdtmDatasetVariableRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetVariableRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetVariableRefVersionPairs : SdtmDatasetVariableRefVersion -> List EncodedField
encodeSdtmDatasetVariableRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmDatasetVariables : SdtmDatasetVariables -> Json.Encode.Value
encodeSdtmDatasetVariables =
    encodeObject << encodeSdtmDatasetVariablesPairs


encodeSdtmDatasetVariablesWithTag : ( String, String ) -> SdtmDatasetVariables -> Json.Encode.Value
encodeSdtmDatasetVariablesWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetVariablesPairs : SdtmDatasetVariables -> List EncodedField
encodeSdtmDatasetVariablesPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "datasetStructure" Json.Encode.string model.datasetStructure
            , maybeEncode "_links" encodeSdtmDatasetVariablesLinks model.links
            ]
    in
    pairs


encodeSdtmDatasetVariablesLinks : SdtmDatasetVariablesLinks -> Json.Encode.Value
encodeSdtmDatasetVariablesLinks =
    encodeObject << encodeSdtmDatasetVariablesLinksPairs


encodeSdtmDatasetVariablesLinksWithTag : ( String, String ) -> SdtmDatasetVariablesLinks -> Json.Encode.Value
encodeSdtmDatasetVariablesLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetVariablesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetVariablesLinksPairs : SdtmDatasetVariablesLinks -> List EncodedField
encodeSdtmDatasetVariablesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmDatasetVariablesRef model.self
            , maybeEncode "parentProduct" encodeSdtmProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSdtmClassRef model.parentClass
            , maybeEncode "priorVersion" encodeSdtmDatasetVariablesRef model.priorVersion
            , maybeEncode "datasetVariables" (Json.Encode.list encodeSdtmDatasetVariableRefElement) model.datasetVariables
            ]
    in
    pairs


encodeSdtmDatasetVariablesRef : SdtmDatasetVariablesRef -> Json.Encode.Value
encodeSdtmDatasetVariablesRef =
    encodeObject << encodeSdtmDatasetVariablesRefPairs


encodeSdtmDatasetVariablesRefWithTag : ( String, String ) -> SdtmDatasetVariablesRef -> Json.Encode.Value
encodeSdtmDatasetVariablesRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetVariablesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetVariablesRefPairs : SdtmDatasetVariablesRef -> List EncodedField
encodeSdtmDatasetVariablesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmDatasets : SdtmDatasets -> Json.Encode.Value
encodeSdtmDatasets =
    encodeObject << encodeSdtmDatasetsPairs


encodeSdtmDatasetsWithTag : ( String, String ) -> SdtmDatasets -> Json.Encode.Value
encodeSdtmDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetsPairs : SdtmDatasets -> List EncodedField
encodeSdtmDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeSdtmDatasetsLinks model.links
            ]
    in
    pairs


encodeSdtmDatasetsLinks : SdtmDatasetsLinks -> Json.Encode.Value
encodeSdtmDatasetsLinks =
    encodeObject << encodeSdtmDatasetsLinksPairs


encodeSdtmDatasetsLinksWithTag : ( String, String ) -> SdtmDatasetsLinks -> Json.Encode.Value
encodeSdtmDatasetsLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetsLinksPairs : SdtmDatasetsLinks -> List EncodedField
encodeSdtmDatasetsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmDatasetsRef model.self
            , maybeEncode "parentProduct" encodeSdtmProductRef model.parentProduct
            , maybeEncode "priorVersion" encodeSdtmDatasetsRef model.priorVersion
            , maybeEncode "datasets" (Json.Encode.list encodeSdtmDatasetRefElement) model.datasets
            ]
    in
    pairs


encodeSdtmDatasetsRef : SdtmDatasetsRef -> Json.Encode.Value
encodeSdtmDatasetsRef =
    encodeObject << encodeSdtmDatasetsRefPairs


encodeSdtmDatasetsRefWithTag : ( String, String ) -> SdtmDatasetsRef -> Json.Encode.Value
encodeSdtmDatasetsRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmDatasetsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmDatasetsRefPairs : SdtmDatasetsRef -> List EncodedField
encodeSdtmDatasetsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmProduct : SdtmProduct -> Json.Encode.Value
encodeSdtmProduct =
    encodeObject << encodeSdtmProductPairs


encodeSdtmProductWithTag : ( String, String ) -> SdtmProduct -> Json.Encode.Value
encodeSdtmProductWithTag (tagField, tag) model =
    encodeObject (encodeSdtmProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmProductPairs : SdtmProduct -> List EncodedField
encodeSdtmProductPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeSdtmProductLinks model.links
            , maybeEncode "classes" (Json.Encode.list encodeSdtmClass) model.classes
            , maybeEncode "datasets" (Json.Encode.list encodeSdtmDataset) model.datasets
            ]
    in
    pairs


encodeSdtmProductLinks : SdtmProductLinks -> Json.Encode.Value
encodeSdtmProductLinks =
    encodeObject << encodeSdtmProductLinksPairs


encodeSdtmProductLinksWithTag : ( String, String ) -> SdtmProductLinks -> Json.Encode.Value
encodeSdtmProductLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmProductLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmProductLinksPairs : SdtmProductLinks -> List EncodedField
encodeSdtmProductLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmProductRef model.self
            , maybeEncode "priorVersion" encodeSdtmProductRef model.priorVersion
            ]
    in
    pairs


encodeSdtmProductRef : SdtmProductRef -> Json.Encode.Value
encodeSdtmProductRef =
    encodeObject << encodeSdtmProductRefPairs


encodeSdtmProductRefWithTag : ( String, String ) -> SdtmProductRef -> Json.Encode.Value
encodeSdtmProductRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmProductRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmProductRefPairs : SdtmProductRef -> List EncodedField
encodeSdtmProductRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmProductRefElement : SdtmProductRefElement -> Json.Encode.Value
encodeSdtmProductRefElement =
    encodeObject << encodeSdtmProductRefElementPairs


encodeSdtmProductRefElementWithTag : ( String, String ) -> SdtmProductRefElement -> Json.Encode.Value
encodeSdtmProductRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSdtmProductRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmProductRefElementPairs : SdtmProductRefElement -> List EncodedField
encodeSdtmProductRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigClass : SdtmigClass -> Json.Encode.Value
encodeSdtmigClass =
    encodeObject << encodeSdtmigClassPairs


encodeSdtmigClassWithTag : ( String, String ) -> SdtmigClass -> Json.Encode.Value
encodeSdtmigClassWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassPairs : SdtmigClass -> List EncodedField
encodeSdtmigClassPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeSdtmigClassLinks model.links
            , maybeEncode "datasets" (Json.Encode.list encodeSdtmigDataset) model.datasets
            ]
    in
    pairs


encodeSdtmigClassDatasets : SdtmigClassDatasets -> Json.Encode.Value
encodeSdtmigClassDatasets =
    encodeObject << encodeSdtmigClassDatasetsPairs


encodeSdtmigClassDatasetsWithTag : ( String, String ) -> SdtmigClassDatasets -> Json.Encode.Value
encodeSdtmigClassDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassDatasetsPairs : SdtmigClassDatasets -> List EncodedField
encodeSdtmigClassDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeSdtmigClassDatasetsLinks model.links
            ]
    in
    pairs


encodeSdtmigClassDatasetsLinks : SdtmigClassDatasetsLinks -> Json.Encode.Value
encodeSdtmigClassDatasetsLinks =
    encodeObject << encodeSdtmigClassDatasetsLinksPairs


encodeSdtmigClassDatasetsLinksWithTag : ( String, String ) -> SdtmigClassDatasetsLinks -> Json.Encode.Value
encodeSdtmigClassDatasetsLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassDatasetsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassDatasetsLinksPairs : SdtmigClassDatasetsLinks -> List EncodedField
encodeSdtmigClassDatasetsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigClassDatasetsRef model.self
            , maybeEncode "parentProduct" encodeSdtmigProductRef model.parentProduct
            , maybeEncode "priorVersion" encodeSdtmigClassDatasetsRef model.priorVersion
            , maybeEncode "datasets" (Json.Encode.list encodeSdtmigDatasetRefElement) model.datasets
            ]
    in
    pairs


encodeSdtmigClassDatasetsRef : SdtmigClassDatasetsRef -> Json.Encode.Value
encodeSdtmigClassDatasetsRef =
    encodeObject << encodeSdtmigClassDatasetsRefPairs


encodeSdtmigClassDatasetsRefWithTag : ( String, String ) -> SdtmigClassDatasetsRef -> Json.Encode.Value
encodeSdtmigClassDatasetsRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassDatasetsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassDatasetsRefPairs : SdtmigClassDatasetsRef -> List EncodedField
encodeSdtmigClassDatasetsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigClassLinks : SdtmigClassLinks -> Json.Encode.Value
encodeSdtmigClassLinks =
    encodeObject << encodeSdtmigClassLinksPairs


encodeSdtmigClassLinksWithTag : ( String, String ) -> SdtmigClassLinks -> Json.Encode.Value
encodeSdtmigClassLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassLinksPairs : SdtmigClassLinks -> List EncodedField
encodeSdtmigClassLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigClassRef model.self
            , maybeEncode "modelClass" encodeSdtmClassRef model.modelClass
            , maybeEncode "parentProduct" encodeSdtmigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSdtmigClassRef model.parentClass
            , maybeEncode "subclasses" (Json.Encode.list encodeSdtmigClassRefSubclass) model.subclasses
            , maybeEncode "priorVersion" encodeSdtmigClassRef model.priorVersion
            ]
    in
    pairs


encodeSdtmigClassRef : SdtmigClassRef -> Json.Encode.Value
encodeSdtmigClassRef =
    encodeObject << encodeSdtmigClassRefPairs


encodeSdtmigClassRefWithTag : ( String, String ) -> SdtmigClassRef -> Json.Encode.Value
encodeSdtmigClassRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassRefPairs : SdtmigClassRef -> List EncodedField
encodeSdtmigClassRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigClassRefElement : SdtmigClassRefElement -> Json.Encode.Value
encodeSdtmigClassRefElement =
    encodeObject << encodeSdtmigClassRefElementPairs


encodeSdtmigClassRefElementWithTag : ( String, String ) -> SdtmigClassRefElement -> Json.Encode.Value
encodeSdtmigClassRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassRefElementPairs : SdtmigClassRefElement -> List EncodedField
encodeSdtmigClassRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigClassRefSubclass : SdtmigClassRefSubclass -> Json.Encode.Value
encodeSdtmigClassRefSubclass =
    encodeObject << encodeSdtmigClassRefSubclassPairs


encodeSdtmigClassRefSubclassWithTag : ( String, String ) -> SdtmigClassRefSubclass -> Json.Encode.Value
encodeSdtmigClassRefSubclassWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassRefSubclassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassRefSubclassPairs : SdtmigClassRefSubclass -> List EncodedField
encodeSdtmigClassRefSubclassPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigClasses : SdtmigClasses -> Json.Encode.Value
encodeSdtmigClasses =
    encodeObject << encodeSdtmigClassesPairs


encodeSdtmigClassesWithTag : ( String, String ) -> SdtmigClasses -> Json.Encode.Value
encodeSdtmigClassesWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassesPairs : SdtmigClasses -> List EncodedField
encodeSdtmigClassesPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeSdtmigClassesLinks model.links
            ]
    in
    pairs


encodeSdtmigClassesLinks : SdtmigClassesLinks -> Json.Encode.Value
encodeSdtmigClassesLinks =
    encodeObject << encodeSdtmigClassesLinksPairs


encodeSdtmigClassesLinksWithTag : ( String, String ) -> SdtmigClassesLinks -> Json.Encode.Value
encodeSdtmigClassesLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassesLinksPairs : SdtmigClassesLinks -> List EncodedField
encodeSdtmigClassesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigClassesRef model.self
            , maybeEncode "priorVersion" encodeSdtmigClassesRef model.priorVersion
            , maybeEncode "classes" (Json.Encode.list encodeSdtmigClassRefElement) model.classes
            ]
    in
    pairs


encodeSdtmigClassesRef : SdtmigClassesRef -> Json.Encode.Value
encodeSdtmigClassesRef =
    encodeObject << encodeSdtmigClassesRefPairs


encodeSdtmigClassesRefWithTag : ( String, String ) -> SdtmigClassesRef -> Json.Encode.Value
encodeSdtmigClassesRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigClassesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigClassesRefPairs : SdtmigClassesRef -> List EncodedField
encodeSdtmigClassesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigDataset : SdtmigDataset -> Json.Encode.Value
encodeSdtmigDataset =
    encodeObject << encodeSdtmigDatasetPairs


encodeSdtmigDatasetWithTag : ( String, String ) -> SdtmigDataset -> Json.Encode.Value
encodeSdtmigDatasetWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetPairs : SdtmigDataset -> List EncodedField
encodeSdtmigDatasetPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "datasetStructure" Json.Encode.string model.datasetStructure
            , maybeEncode "_links" encodeSdtmigDatasetLinks model.links
            , maybeEncode "datasetVariables" (Json.Encode.list encodeSdtmigDatasetVariable) model.datasetVariables
            ]
    in
    pairs


encodeSdtmigDatasetLinks : SdtmigDatasetLinks -> Json.Encode.Value
encodeSdtmigDatasetLinks =
    encodeObject << encodeSdtmigDatasetLinksPairs


encodeSdtmigDatasetLinksWithTag : ( String, String ) -> SdtmigDatasetLinks -> Json.Encode.Value
encodeSdtmigDatasetLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetLinksPairs : SdtmigDatasetLinks -> List EncodedField
encodeSdtmigDatasetLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigDatasetRef model.self
            , maybeEncode "modelDataset" encodeSdtmDatasetRef model.modelDataset
            , maybeEncode "parentProduct" encodeSdtmigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSdtmigClassRef model.parentClass
            , maybeEncode "priorVersion" encodeSdtmigDatasetRef model.priorVersion
            ]
    in
    pairs


encodeSdtmigDatasetRef : SdtmigDatasetRef -> Json.Encode.Value
encodeSdtmigDatasetRef =
    encodeObject << encodeSdtmigDatasetRefPairs


encodeSdtmigDatasetRefWithTag : ( String, String ) -> SdtmigDatasetRef -> Json.Encode.Value
encodeSdtmigDatasetRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetRefPairs : SdtmigDatasetRef -> List EncodedField
encodeSdtmigDatasetRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigDatasetRefElement : SdtmigDatasetRefElement -> Json.Encode.Value
encodeSdtmigDatasetRefElement =
    encodeObject << encodeSdtmigDatasetRefElementPairs


encodeSdtmigDatasetRefElementWithTag : ( String, String ) -> SdtmigDatasetRefElement -> Json.Encode.Value
encodeSdtmigDatasetRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetRefElementPairs : SdtmigDatasetRefElement -> List EncodedField
encodeSdtmigDatasetRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigDatasetVariable : SdtmigDatasetVariable -> Json.Encode.Value
encodeSdtmigDatasetVariable =
    encodeObject << encodeSdtmigDatasetVariablePairs


encodeSdtmigDatasetVariableWithTag : ( String, String ) -> SdtmigDatasetVariable -> Json.Encode.Value
encodeSdtmigDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetVariablePairs : SdtmigDatasetVariable -> List EncodedField
encodeSdtmigDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "role" Json.Encode.string model.role
            , maybeEncode "simpleDatatype" Json.Encode.string model.simpleDatatype
            , maybeEncode "core" Json.Encode.string model.core
            , maybeEncode "describedValueDomain" Json.Encode.string model.describedValueDomain
            , maybeEncode "valueList" (Json.Encode.list Json.Encode.string) model.valueList
            , maybeEncode "_links" encodeSdtmigDatasetVariableLinks model.links
            ]
    in
    pairs


encodeSdtmigDatasetVariableLinks : SdtmigDatasetVariableLinks -> Json.Encode.Value
encodeSdtmigDatasetVariableLinks =
    encodeObject << encodeSdtmigDatasetVariableLinksPairs


encodeSdtmigDatasetVariableLinksWithTag : ( String, String ) -> SdtmigDatasetVariableLinks -> Json.Encode.Value
encodeSdtmigDatasetVariableLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetVariableLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetVariableLinksPairs : SdtmigDatasetVariableLinks -> List EncodedField
encodeSdtmigDatasetVariableLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigDatasetVariableRef model.self
            , maybeEncode "codelist" (Json.Encode.list encodeRootCtCodelistRefElement) model.codelist
            , maybeEncode "modelClassVariable" encodeSdtmClassVariableRef model.modelClassVariable
            , maybeEncode "modelDatasetVariable" encodeSdtmDatasetVariableRef model.modelDatasetVariable
            , maybeEncode "parentProduct" encodeSdtmigProductRef model.parentProduct
            , maybeEncode "parentDataset" encodeSdtmigDatasetRef model.parentDataset
            , maybeEncode "rootItem" encodeRootSdtmigDatasetVariableRef model.rootItem
            , maybeEncode "priorVersion" encodeSdtmigDatasetVariableRef model.priorVersion
            ]
    in
    pairs


encodeSdtmigDatasetVariableRef : SdtmigDatasetVariableRef -> Json.Encode.Value
encodeSdtmigDatasetVariableRef =
    encodeObject << encodeSdtmigDatasetVariableRefPairs


encodeSdtmigDatasetVariableRefWithTag : ( String, String ) -> SdtmigDatasetVariableRef -> Json.Encode.Value
encodeSdtmigDatasetVariableRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetVariableRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetVariableRefPairs : SdtmigDatasetVariableRef -> List EncodedField
encodeSdtmigDatasetVariableRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigDatasetVariableRefElement : SdtmigDatasetVariableRefElement -> Json.Encode.Value
encodeSdtmigDatasetVariableRefElement =
    encodeObject << encodeSdtmigDatasetVariableRefElementPairs


encodeSdtmigDatasetVariableRefElementWithTag : ( String, String ) -> SdtmigDatasetVariableRefElement -> Json.Encode.Value
encodeSdtmigDatasetVariableRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetVariableRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetVariableRefElementPairs : SdtmigDatasetVariableRefElement -> List EncodedField
encodeSdtmigDatasetVariableRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigDatasetVariableRefTarget : SdtmigDatasetVariableRefTarget -> Json.Encode.Value
encodeSdtmigDatasetVariableRefTarget =
    encodeObject << encodeSdtmigDatasetVariableRefTargetPairs


encodeSdtmigDatasetVariableRefTargetWithTag : ( String, String ) -> SdtmigDatasetVariableRefTarget -> Json.Encode.Value
encodeSdtmigDatasetVariableRefTargetWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetVariableRefTargetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetVariableRefTargetPairs : SdtmigDatasetVariableRefTarget -> List EncodedField
encodeSdtmigDatasetVariableRefTargetPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigDatasetVariableRefVersion : SdtmigDatasetVariableRefVersion -> Json.Encode.Value
encodeSdtmigDatasetVariableRefVersion =
    encodeObject << encodeSdtmigDatasetVariableRefVersionPairs


encodeSdtmigDatasetVariableRefVersionWithTag : ( String, String ) -> SdtmigDatasetVariableRefVersion -> Json.Encode.Value
encodeSdtmigDatasetVariableRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetVariableRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetVariableRefVersionPairs : SdtmigDatasetVariableRefVersion -> List EncodedField
encodeSdtmigDatasetVariableRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigDatasetVariables : SdtmigDatasetVariables -> Json.Encode.Value
encodeSdtmigDatasetVariables =
    encodeObject << encodeSdtmigDatasetVariablesPairs


encodeSdtmigDatasetVariablesWithTag : ( String, String ) -> SdtmigDatasetVariables -> Json.Encode.Value
encodeSdtmigDatasetVariablesWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetVariablesPairs : SdtmigDatasetVariables -> List EncodedField
encodeSdtmigDatasetVariablesPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "datasetStructure" Json.Encode.string model.datasetStructure
            , maybeEncode "_links" encodeSdtmigDatasetVariablesLinks model.links
            ]
    in
    pairs


encodeSdtmigDatasetVariablesLinks : SdtmigDatasetVariablesLinks -> Json.Encode.Value
encodeSdtmigDatasetVariablesLinks =
    encodeObject << encodeSdtmigDatasetVariablesLinksPairs


encodeSdtmigDatasetVariablesLinksWithTag : ( String, String ) -> SdtmigDatasetVariablesLinks -> Json.Encode.Value
encodeSdtmigDatasetVariablesLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetVariablesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetVariablesLinksPairs : SdtmigDatasetVariablesLinks -> List EncodedField
encodeSdtmigDatasetVariablesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigDatasetVariablesRef model.self
            , maybeEncode "modelDataset" encodeSdtmDatasetRef model.modelDataset
            , maybeEncode "parentProduct" encodeSdtmigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSdtmigClassRef model.parentClass
            , maybeEncode "priorVersion" encodeSdtmigDatasetVariablesRef model.priorVersion
            , maybeEncode "datasetVariables" (Json.Encode.list encodeSdtmigDatasetVariableRefElement) model.datasetVariables
            ]
    in
    pairs


encodeSdtmigDatasetVariablesRef : SdtmigDatasetVariablesRef -> Json.Encode.Value
encodeSdtmigDatasetVariablesRef =
    encodeObject << encodeSdtmigDatasetVariablesRefPairs


encodeSdtmigDatasetVariablesRefWithTag : ( String, String ) -> SdtmigDatasetVariablesRef -> Json.Encode.Value
encodeSdtmigDatasetVariablesRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetVariablesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetVariablesRefPairs : SdtmigDatasetVariablesRef -> List EncodedField
encodeSdtmigDatasetVariablesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigDatasets : SdtmigDatasets -> Json.Encode.Value
encodeSdtmigDatasets =
    encodeObject << encodeSdtmigDatasetsPairs


encodeSdtmigDatasetsWithTag : ( String, String ) -> SdtmigDatasets -> Json.Encode.Value
encodeSdtmigDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetsPairs : SdtmigDatasets -> List EncodedField
encodeSdtmigDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeSdtmigDatasetsLinks model.links
            ]
    in
    pairs


encodeSdtmigDatasetsLinks : SdtmigDatasetsLinks -> Json.Encode.Value
encodeSdtmigDatasetsLinks =
    encodeObject << encodeSdtmigDatasetsLinksPairs


encodeSdtmigDatasetsLinksWithTag : ( String, String ) -> SdtmigDatasetsLinks -> Json.Encode.Value
encodeSdtmigDatasetsLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetsLinksPairs : SdtmigDatasetsLinks -> List EncodedField
encodeSdtmigDatasetsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigDatasetsRef model.self
            , maybeEncode "parentProduct" encodeSdtmigProductRef model.parentProduct
            , maybeEncode "priorVersion" encodeSdtmigDatasetsRef model.priorVersion
            , maybeEncode "datasets" (Json.Encode.list encodeSdtmigDatasetRefElement) model.datasets
            ]
    in
    pairs


encodeSdtmigDatasetsRef : SdtmigDatasetsRef -> Json.Encode.Value
encodeSdtmigDatasetsRef =
    encodeObject << encodeSdtmigDatasetsRefPairs


encodeSdtmigDatasetsRefWithTag : ( String, String ) -> SdtmigDatasetsRef -> Json.Encode.Value
encodeSdtmigDatasetsRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigDatasetsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigDatasetsRefPairs : SdtmigDatasetsRef -> List EncodedField
encodeSdtmigDatasetsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigProduct : SdtmigProduct -> Json.Encode.Value
encodeSdtmigProduct =
    encodeObject << encodeSdtmigProductPairs


encodeSdtmigProductWithTag : ( String, String ) -> SdtmigProduct -> Json.Encode.Value
encodeSdtmigProductWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigProductPairs : SdtmigProduct -> List EncodedField
encodeSdtmigProductPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeSdtmigProductLinks model.links
            , maybeEncode "classes" (Json.Encode.list encodeSdtmigClass) model.classes
            ]
    in
    pairs


encodeSdtmigProductLinks : SdtmigProductLinks -> Json.Encode.Value
encodeSdtmigProductLinks =
    encodeObject << encodeSdtmigProductLinksPairs


encodeSdtmigProductLinksWithTag : ( String, String ) -> SdtmigProductLinks -> Json.Encode.Value
encodeSdtmigProductLinksWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigProductLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigProductLinksPairs : SdtmigProductLinks -> List EncodedField
encodeSdtmigProductLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigProductRef model.self
            , maybeEncode "model" encodeSdtmProductRef model.model
            , maybeEncode "priorVersion" encodeSdtmigProductRef model.priorVersion
            ]
    in
    pairs


encodeSdtmigProductRef : SdtmigProductRef -> Json.Encode.Value
encodeSdtmigProductRef =
    encodeObject << encodeSdtmigProductRefPairs


encodeSdtmigProductRefWithTag : ( String, String ) -> SdtmigProductRef -> Json.Encode.Value
encodeSdtmigProductRefWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigProductRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigProductRefPairs : SdtmigProductRef -> List EncodedField
encodeSdtmigProductRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSdtmigProductRefElement : SdtmigProductRefElement -> Json.Encode.Value
encodeSdtmigProductRefElement =
    encodeObject << encodeSdtmigProductRefElementPairs


encodeSdtmigProductRefElementWithTag : ( String, String ) -> SdtmigProductRefElement -> Json.Encode.Value
encodeSdtmigProductRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSdtmigProductRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSdtmigProductRefElementPairs : SdtmigProductRefElement -> List EncodedField
encodeSdtmigProductRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigClass : SendigClass -> Json.Encode.Value
encodeSendigClass =
    encodeObject << encodeSendigClassPairs


encodeSendigClassWithTag : ( String, String ) -> SendigClass -> Json.Encode.Value
encodeSendigClassWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassPairs : SendigClass -> List EncodedField
encodeSendigClassPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeSendigClassLinks model.links
            , maybeEncode "datasets" (Json.Encode.list encodeSendigDataset) model.datasets
            ]
    in
    pairs


encodeSendigClassDatasets : SendigClassDatasets -> Json.Encode.Value
encodeSendigClassDatasets =
    encodeObject << encodeSendigClassDatasetsPairs


encodeSendigClassDatasetsWithTag : ( String, String ) -> SendigClassDatasets -> Json.Encode.Value
encodeSendigClassDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassDatasetsPairs : SendigClassDatasets -> List EncodedField
encodeSendigClassDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "_links" encodeSendigClassDatasetsLinks model.links
            ]
    in
    pairs


encodeSendigClassDatasetsLinks : SendigClassDatasetsLinks -> Json.Encode.Value
encodeSendigClassDatasetsLinks =
    encodeObject << encodeSendigClassDatasetsLinksPairs


encodeSendigClassDatasetsLinksWithTag : ( String, String ) -> SendigClassDatasetsLinks -> Json.Encode.Value
encodeSendigClassDatasetsLinksWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassDatasetsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassDatasetsLinksPairs : SendigClassDatasetsLinks -> List EncodedField
encodeSendigClassDatasetsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigClassDatasetsRef model.self
            , maybeEncode "parentProduct" encodeSendigProductRef model.parentProduct
            , maybeEncode "datasets" (Json.Encode.list encodeSendigDatasetRefElement) model.datasets
            ]
    in
    pairs


encodeSendigClassDatasetsRef : SendigClassDatasetsRef -> Json.Encode.Value
encodeSendigClassDatasetsRef =
    encodeObject << encodeSendigClassDatasetsRefPairs


encodeSendigClassDatasetsRefWithTag : ( String, String ) -> SendigClassDatasetsRef -> Json.Encode.Value
encodeSendigClassDatasetsRefWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassDatasetsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassDatasetsRefPairs : SendigClassDatasetsRef -> List EncodedField
encodeSendigClassDatasetsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigClassLinks : SendigClassLinks -> Json.Encode.Value
encodeSendigClassLinks =
    encodeObject << encodeSendigClassLinksPairs


encodeSendigClassLinksWithTag : ( String, String ) -> SendigClassLinks -> Json.Encode.Value
encodeSendigClassLinksWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassLinksPairs : SendigClassLinks -> List EncodedField
encodeSendigClassLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigClassRef model.self
            , maybeEncode "modelClass" encodeSdtmClassRef model.modelClass
            , maybeEncode "parentProduct" encodeSendigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSendigClassRef model.parentClass
            , maybeEncode "subclasses" (Json.Encode.list encodeSendigClassRefSubclass) model.subclasses
            , maybeEncode "priorVersion" encodeSendigClassRef model.priorVersion
            ]
    in
    pairs


encodeSendigClassRef : SendigClassRef -> Json.Encode.Value
encodeSendigClassRef =
    encodeObject << encodeSendigClassRefPairs


encodeSendigClassRefWithTag : ( String, String ) -> SendigClassRef -> Json.Encode.Value
encodeSendigClassRefWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassRefPairs : SendigClassRef -> List EncodedField
encodeSendigClassRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigClassRefElement : SendigClassRefElement -> Json.Encode.Value
encodeSendigClassRefElement =
    encodeObject << encodeSendigClassRefElementPairs


encodeSendigClassRefElementWithTag : ( String, String ) -> SendigClassRefElement -> Json.Encode.Value
encodeSendigClassRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassRefElementPairs : SendigClassRefElement -> List EncodedField
encodeSendigClassRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigClassRefSubclass : SendigClassRefSubclass -> Json.Encode.Value
encodeSendigClassRefSubclass =
    encodeObject << encodeSendigClassRefSubclassPairs


encodeSendigClassRefSubclassWithTag : ( String, String ) -> SendigClassRefSubclass -> Json.Encode.Value
encodeSendigClassRefSubclassWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassRefSubclassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassRefSubclassPairs : SendigClassRefSubclass -> List EncodedField
encodeSendigClassRefSubclassPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigClasses : SendigClasses -> Json.Encode.Value
encodeSendigClasses =
    encodeObject << encodeSendigClassesPairs


encodeSendigClassesWithTag : ( String, String ) -> SendigClasses -> Json.Encode.Value
encodeSendigClassesWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassesPairs : SendigClasses -> List EncodedField
encodeSendigClassesPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeSendigClassesLinks model.links
            ]
    in
    pairs


encodeSendigClassesLinks : SendigClassesLinks -> Json.Encode.Value
encodeSendigClassesLinks =
    encodeObject << encodeSendigClassesLinksPairs


encodeSendigClassesLinksWithTag : ( String, String ) -> SendigClassesLinks -> Json.Encode.Value
encodeSendigClassesLinksWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassesLinksPairs : SendigClassesLinks -> List EncodedField
encodeSendigClassesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigClassesRef model.self
            , maybeEncode "priorVersion" encodeSendigClassesRef model.priorVersion
            , maybeEncode "classes" (Json.Encode.list encodeSendigClassRefElement) model.classes
            ]
    in
    pairs


encodeSendigClassesRef : SendigClassesRef -> Json.Encode.Value
encodeSendigClassesRef =
    encodeObject << encodeSendigClassesRefPairs


encodeSendigClassesRefWithTag : ( String, String ) -> SendigClassesRef -> Json.Encode.Value
encodeSendigClassesRefWithTag (tagField, tag) model =
    encodeObject (encodeSendigClassesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigClassesRefPairs : SendigClassesRef -> List EncodedField
encodeSendigClassesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigDataset : SendigDataset -> Json.Encode.Value
encodeSendigDataset =
    encodeObject << encodeSendigDatasetPairs


encodeSendigDatasetWithTag : ( String, String ) -> SendigDataset -> Json.Encode.Value
encodeSendigDatasetWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetPairs : SendigDataset -> List EncodedField
encodeSendigDatasetPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "datasetStructure" Json.Encode.string model.datasetStructure
            , maybeEncode "_links" encodeSendigDatasetLinks model.links
            , maybeEncode "datasetVariables" (Json.Encode.list encodeSendigDatasetVariable) model.datasetVariables
            ]
    in
    pairs


encodeSendigDatasetLinks : SendigDatasetLinks -> Json.Encode.Value
encodeSendigDatasetLinks =
    encodeObject << encodeSendigDatasetLinksPairs


encodeSendigDatasetLinksWithTag : ( String, String ) -> SendigDatasetLinks -> Json.Encode.Value
encodeSendigDatasetLinksWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetLinksPairs : SendigDatasetLinks -> List EncodedField
encodeSendigDatasetLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigDatasetRef model.self
            , maybeEncode "modelDataset" encodeSdtmDatasetRef model.modelDataset
            , maybeEncode "parentProduct" encodeSendigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSendigClassRef model.parentClass
            , maybeEncode "priorVersion" encodeSendigDatasetRef model.priorVersion
            ]
    in
    pairs


encodeSendigDatasetRef : SendigDatasetRef -> Json.Encode.Value
encodeSendigDatasetRef =
    encodeObject << encodeSendigDatasetRefPairs


encodeSendigDatasetRefWithTag : ( String, String ) -> SendigDatasetRef -> Json.Encode.Value
encodeSendigDatasetRefWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetRefPairs : SendigDatasetRef -> List EncodedField
encodeSendigDatasetRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigDatasetRefElement : SendigDatasetRefElement -> Json.Encode.Value
encodeSendigDatasetRefElement =
    encodeObject << encodeSendigDatasetRefElementPairs


encodeSendigDatasetRefElementWithTag : ( String, String ) -> SendigDatasetRefElement -> Json.Encode.Value
encodeSendigDatasetRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetRefElementPairs : SendigDatasetRefElement -> List EncodedField
encodeSendigDatasetRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigDatasetVariable : SendigDatasetVariable -> Json.Encode.Value
encodeSendigDatasetVariable =
    encodeObject << encodeSendigDatasetVariablePairs


encodeSendigDatasetVariableWithTag : ( String, String ) -> SendigDatasetVariable -> Json.Encode.Value
encodeSendigDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetVariablePairs : SendigDatasetVariable -> List EncodedField
encodeSendigDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "role" Json.Encode.string model.role
            , maybeEncode "simpleDatatype" Json.Encode.string model.simpleDatatype
            , maybeEncode "core" Json.Encode.string model.core
            , maybeEncode "describedValueDomain" Json.Encode.string model.describedValueDomain
            , maybeEncode "valueList" (Json.Encode.list Json.Encode.string) model.valueList
            , maybeEncode "_links" encodeSendigDatasetVariableLinks model.links
            ]
    in
    pairs


encodeSendigDatasetVariableLinks : SendigDatasetVariableLinks -> Json.Encode.Value
encodeSendigDatasetVariableLinks =
    encodeObject << encodeSendigDatasetVariableLinksPairs


encodeSendigDatasetVariableLinksWithTag : ( String, String ) -> SendigDatasetVariableLinks -> Json.Encode.Value
encodeSendigDatasetVariableLinksWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetVariableLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetVariableLinksPairs : SendigDatasetVariableLinks -> List EncodedField
encodeSendigDatasetVariableLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigDatasetVariableRef model.self
            , maybeEncode "codelist" (Json.Encode.list encodeRootCtCodelistRefElement) model.codelist
            , maybeEncode "modelClassVariable" encodeSdtmClassVariableRef model.modelClassVariable
            , maybeEncode "modelDatasetVariable" encodeSdtmDatasetVariableRef model.modelDatasetVariable
            , maybeEncode "parentProduct" encodeSendigProductRef model.parentProduct
            , maybeEncode "parentDataset" encodeSendigDatasetRef model.parentDataset
            , maybeEncode "rootItem" encodeRootSendigDatasetVariableRef model.rootItem
            , maybeEncode "priorVersion" encodeSendigDatasetVariableRef model.priorVersion
            ]
    in
    pairs


encodeSendigDatasetVariableRef : SendigDatasetVariableRef -> Json.Encode.Value
encodeSendigDatasetVariableRef =
    encodeObject << encodeSendigDatasetVariableRefPairs


encodeSendigDatasetVariableRefWithTag : ( String, String ) -> SendigDatasetVariableRef -> Json.Encode.Value
encodeSendigDatasetVariableRefWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetVariableRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetVariableRefPairs : SendigDatasetVariableRef -> List EncodedField
encodeSendigDatasetVariableRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigDatasetVariableRefElement : SendigDatasetVariableRefElement -> Json.Encode.Value
encodeSendigDatasetVariableRefElement =
    encodeObject << encodeSendigDatasetVariableRefElementPairs


encodeSendigDatasetVariableRefElementWithTag : ( String, String ) -> SendigDatasetVariableRefElement -> Json.Encode.Value
encodeSendigDatasetVariableRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetVariableRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetVariableRefElementPairs : SendigDatasetVariableRefElement -> List EncodedField
encodeSendigDatasetVariableRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigDatasetVariableRefVersion : SendigDatasetVariableRefVersion -> Json.Encode.Value
encodeSendigDatasetVariableRefVersion =
    encodeObject << encodeSendigDatasetVariableRefVersionPairs


encodeSendigDatasetVariableRefVersionWithTag : ( String, String ) -> SendigDatasetVariableRefVersion -> Json.Encode.Value
encodeSendigDatasetVariableRefVersionWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetVariableRefVersionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetVariableRefVersionPairs : SendigDatasetVariableRefVersion -> List EncodedField
encodeSendigDatasetVariableRefVersionPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigDatasetVariables : SendigDatasetVariables -> Json.Encode.Value
encodeSendigDatasetVariables =
    encodeObject << encodeSendigDatasetVariablesPairs


encodeSendigDatasetVariablesWithTag : ( String, String ) -> SendigDatasetVariables -> Json.Encode.Value
encodeSendigDatasetVariablesWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetVariablesPairs : SendigDatasetVariables -> List EncodedField
encodeSendigDatasetVariablesPairs model =
    let
        pairs =
            [ maybeEncode "ordinal" Json.Encode.string model.ordinal
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "datasetStructure" Json.Encode.string model.datasetStructure
            , maybeEncode "_links" encodeSendigDatasetVariablesLinks model.links
            ]
    in
    pairs


encodeSendigDatasetVariablesLinks : SendigDatasetVariablesLinks -> Json.Encode.Value
encodeSendigDatasetVariablesLinks =
    encodeObject << encodeSendigDatasetVariablesLinksPairs


encodeSendigDatasetVariablesLinksWithTag : ( String, String ) -> SendigDatasetVariablesLinks -> Json.Encode.Value
encodeSendigDatasetVariablesLinksWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetVariablesLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetVariablesLinksPairs : SendigDatasetVariablesLinks -> List EncodedField
encodeSendigDatasetVariablesLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigDatasetVariablesRef model.self
            , maybeEncode "modelDataset" encodeSdtmDatasetRef model.modelDataset
            , maybeEncode "parentProduct" encodeSendigProductRef model.parentProduct
            , maybeEncode "parentClass" encodeSendigClassRef model.parentClass
            , maybeEncode "priorVersion" encodeSendigDatasetVariablesRef model.priorVersion
            , maybeEncode "datasetVariables" (Json.Encode.list encodeSendigDatasetVariableRefElement) model.datasetVariables
            ]
    in
    pairs


encodeSendigDatasetVariablesRef : SendigDatasetVariablesRef -> Json.Encode.Value
encodeSendigDatasetVariablesRef =
    encodeObject << encodeSendigDatasetVariablesRefPairs


encodeSendigDatasetVariablesRefWithTag : ( String, String ) -> SendigDatasetVariablesRef -> Json.Encode.Value
encodeSendigDatasetVariablesRefWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetVariablesRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetVariablesRefPairs : SendigDatasetVariablesRef -> List EncodedField
encodeSendigDatasetVariablesRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigDatasets : SendigDatasets -> Json.Encode.Value
encodeSendigDatasets =
    encodeObject << encodeSendigDatasetsPairs


encodeSendigDatasetsWithTag : ( String, String ) -> SendigDatasets -> Json.Encode.Value
encodeSendigDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetsPairs : SendigDatasets -> List EncodedField
encodeSendigDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeSendigDatasetsLinks model.links
            ]
    in
    pairs


encodeSendigDatasetsLinks : SendigDatasetsLinks -> Json.Encode.Value
encodeSendigDatasetsLinks =
    encodeObject << encodeSendigDatasetsLinksPairs


encodeSendigDatasetsLinksWithTag : ( String, String ) -> SendigDatasetsLinks -> Json.Encode.Value
encodeSendigDatasetsLinksWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetsLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetsLinksPairs : SendigDatasetsLinks -> List EncodedField
encodeSendigDatasetsLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigDatasetsRef model.self
            , maybeEncode "parentProduct" encodeSendigProductRef model.parentProduct
            , maybeEncode "datasets" (Json.Encode.list encodeSendigDatasetRefElement) model.datasets
            ]
    in
    pairs


encodeSendigDatasetsRef : SendigDatasetsRef -> Json.Encode.Value
encodeSendigDatasetsRef =
    encodeObject << encodeSendigDatasetsRefPairs


encodeSendigDatasetsRefWithTag : ( String, String ) -> SendigDatasetsRef -> Json.Encode.Value
encodeSendigDatasetsRefWithTag (tagField, tag) model =
    encodeObject (encodeSendigDatasetsRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigDatasetsRefPairs : SendigDatasetsRef -> List EncodedField
encodeSendigDatasetsRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigProduct : SendigProduct -> Json.Encode.Value
encodeSendigProduct =
    encodeObject << encodeSendigProductPairs


encodeSendigProductWithTag : ( String, String ) -> SendigProduct -> Json.Encode.Value
encodeSendigProductWithTag (tagField, tag) model =
    encodeObject (encodeSendigProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigProductPairs : SendigProduct -> List EncodedField
encodeSendigProductPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "label" Json.Encode.string model.label
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "effectiveDate" Json.Encode.string model.effectiveDate
            , maybeEncode "registrationStatus" Json.Encode.string model.registrationStatus
            , maybeEncode "version" Json.Encode.string model.version
            , maybeEncode "_links" encodeSendigProductLinks model.links
            , maybeEncode "classes" (Json.Encode.list encodeSendigClass) model.classes
            ]
    in
    pairs


encodeSendigProductLinks : SendigProductLinks -> Json.Encode.Value
encodeSendigProductLinks =
    encodeObject << encodeSendigProductLinksPairs


encodeSendigProductLinksWithTag : ( String, String ) -> SendigProductLinks -> Json.Encode.Value
encodeSendigProductLinksWithTag (tagField, tag) model =
    encodeObject (encodeSendigProductLinksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigProductLinksPairs : SendigProductLinks -> List EncodedField
encodeSendigProductLinksPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigProductRef model.self
            , maybeEncode "model" encodeSdtmProductRef model.model
            , maybeEncode "priorVersion" encodeSendigProductRef model.priorVersion
            ]
    in
    pairs


encodeSendigProductRef : SendigProductRef -> Json.Encode.Value
encodeSendigProductRef =
    encodeObject << encodeSendigProductRefPairs


encodeSendigProductRefWithTag : ( String, String ) -> SendigProductRef -> Json.Encode.Value
encodeSendigProductRefWithTag (tagField, tag) model =
    encodeObject (encodeSendigProductRefPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigProductRefPairs : SendigProductRef -> List EncodedField
encodeSendigProductRefPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeSendigProductRefElement : SendigProductRefElement -> Json.Encode.Value
encodeSendigProductRefElement =
    encodeObject << encodeSendigProductRefElementPairs


encodeSendigProductRefElementWithTag : ( String, String ) -> SendigProductRefElement -> Json.Encode.Value
encodeSendigProductRefElementWithTag (tagField, tag) model =
    encodeObject (encodeSendigProductRefElementPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSendigProductRefElementPairs : SendigProductRefElement -> List EncodedField
encodeSendigProductRefElementPairs model =
    let
        pairs =
            [ maybeEncode "href" Json.Encode.string model.href
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "type" Json.Encode.string model.type_
            ]
    in
    pairs


encodeXmlAbout : XmlAbout -> Json.Encode.Value
encodeXmlAbout =
    encodeObject << encodeXmlAboutPairs


encodeXmlAboutWithTag : ( String, String ) -> XmlAbout -> Json.Encode.Value
encodeXmlAboutWithTag (tagField, tag) model =
    encodeObject (encodeXmlAboutPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlAboutPairs : XmlAbout -> List EncodedField
encodeXmlAboutPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAbout model.self
            ]
    in
    pairs


encodeXmlAdamDatastructure : XmlAdamDatastructure -> Json.Encode.Value
encodeXmlAdamDatastructure =
    encodeObject << encodeXmlAdamDatastructurePairs


encodeXmlAdamDatastructureWithTag : ( String, String ) -> XmlAdamDatastructure -> Json.Encode.Value
encodeXmlAdamDatastructureWithTag (tagField, tag) model =
    encodeObject (encodeXmlAdamDatastructurePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlAdamDatastructurePairs : XmlAdamDatastructure -> List EncodedField
encodeXmlAdamDatastructurePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamDatastructure model.self
            ]
    in
    pairs


encodeXmlAdamDatastructureVariables : XmlAdamDatastructureVariables -> Json.Encode.Value
encodeXmlAdamDatastructureVariables =
    encodeObject << encodeXmlAdamDatastructureVariablesPairs


encodeXmlAdamDatastructureVariablesWithTag : ( String, String ) -> XmlAdamDatastructureVariables -> Json.Encode.Value
encodeXmlAdamDatastructureVariablesWithTag (tagField, tag) model =
    encodeObject (encodeXmlAdamDatastructureVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlAdamDatastructureVariablesPairs : XmlAdamDatastructureVariables -> List EncodedField
encodeXmlAdamDatastructureVariablesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamDatastructureVariables model.self
            ]
    in
    pairs


encodeXmlAdamDatastructureVarsets : XmlAdamDatastructureVarsets -> Json.Encode.Value
encodeXmlAdamDatastructureVarsets =
    encodeObject << encodeXmlAdamDatastructureVarsetsPairs


encodeXmlAdamDatastructureVarsetsWithTag : ( String, String ) -> XmlAdamDatastructureVarsets -> Json.Encode.Value
encodeXmlAdamDatastructureVarsetsWithTag (tagField, tag) model =
    encodeObject (encodeXmlAdamDatastructureVarsetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlAdamDatastructureVarsetsPairs : XmlAdamDatastructureVarsets -> List EncodedField
encodeXmlAdamDatastructureVarsetsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamDatastructureVarsets model.self
            ]
    in
    pairs


encodeXmlAdamProduct : XmlAdamProduct -> Json.Encode.Value
encodeXmlAdamProduct =
    encodeObject << encodeXmlAdamProductPairs


encodeXmlAdamProductWithTag : ( String, String ) -> XmlAdamProduct -> Json.Encode.Value
encodeXmlAdamProductWithTag (tagField, tag) model =
    encodeObject (encodeXmlAdamProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlAdamProductPairs : XmlAdamProduct -> List EncodedField
encodeXmlAdamProductPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamProduct model.self
            ]
    in
    pairs


encodeXmlAdamProductDatastructures : XmlAdamProductDatastructures -> Json.Encode.Value
encodeXmlAdamProductDatastructures =
    encodeObject << encodeXmlAdamProductDatastructuresPairs


encodeXmlAdamProductDatastructuresWithTag : ( String, String ) -> XmlAdamProductDatastructures -> Json.Encode.Value
encodeXmlAdamProductDatastructuresWithTag (tagField, tag) model =
    encodeObject (encodeXmlAdamProductDatastructuresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlAdamProductDatastructuresPairs : XmlAdamProductDatastructures -> List EncodedField
encodeXmlAdamProductDatastructuresPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamProductDatastructures model.self
            ]
    in
    pairs


encodeXmlAdamVariable : XmlAdamVariable -> Json.Encode.Value
encodeXmlAdamVariable =
    encodeObject << encodeXmlAdamVariablePairs


encodeXmlAdamVariableWithTag : ( String, String ) -> XmlAdamVariable -> Json.Encode.Value
encodeXmlAdamVariableWithTag (tagField, tag) model =
    encodeObject (encodeXmlAdamVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlAdamVariablePairs : XmlAdamVariable -> List EncodedField
encodeXmlAdamVariablePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamVariable model.self
            ]
    in
    pairs


encodeXmlAdamVarset : XmlAdamVarset -> Json.Encode.Value
encodeXmlAdamVarset =
    encodeObject << encodeXmlAdamVarsetPairs


encodeXmlAdamVarsetWithTag : ( String, String ) -> XmlAdamVarset -> Json.Encode.Value
encodeXmlAdamVarsetWithTag (tagField, tag) model =
    encodeObject (encodeXmlAdamVarsetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlAdamVarsetPairs : XmlAdamVarset -> List EncodedField
encodeXmlAdamVarsetPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeAdamVarset model.self
            ]
    in
    pairs


encodeXmlCdashClass : XmlCdashClass -> Json.Encode.Value
encodeXmlCdashClass =
    encodeObject << encodeXmlCdashClassPairs


encodeXmlCdashClassWithTag : ( String, String ) -> XmlCdashClass -> Json.Encode.Value
encodeXmlCdashClassWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashClassPairs : XmlCdashClass -> List EncodedField
encodeXmlCdashClassPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashClass model.self
            ]
    in
    pairs


encodeXmlCdashClassDomains : XmlCdashClassDomains -> Json.Encode.Value
encodeXmlCdashClassDomains =
    encodeObject << encodeXmlCdashClassDomainsPairs


encodeXmlCdashClassDomainsWithTag : ( String, String ) -> XmlCdashClassDomains -> Json.Encode.Value
encodeXmlCdashClassDomainsWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashClassDomainsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashClassDomainsPairs : XmlCdashClassDomains -> List EncodedField
encodeXmlCdashClassDomainsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashClassDomains model.self
            ]
    in
    pairs


encodeXmlCdashClassField : XmlCdashClassField -> Json.Encode.Value
encodeXmlCdashClassField =
    encodeObject << encodeXmlCdashClassFieldPairs


encodeXmlCdashClassFieldWithTag : ( String, String ) -> XmlCdashClassField -> Json.Encode.Value
encodeXmlCdashClassFieldWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashClassFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashClassFieldPairs : XmlCdashClassField -> List EncodedField
encodeXmlCdashClassFieldPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashClassField model.self
            ]
    in
    pairs


encodeXmlCdashDomain : XmlCdashDomain -> Json.Encode.Value
encodeXmlCdashDomain =
    encodeObject << encodeXmlCdashDomainPairs


encodeXmlCdashDomainWithTag : ( String, String ) -> XmlCdashDomain -> Json.Encode.Value
encodeXmlCdashDomainWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashDomainPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashDomainPairs : XmlCdashDomain -> List EncodedField
encodeXmlCdashDomainPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashDomain model.self
            ]
    in
    pairs


encodeXmlCdashDomainField : XmlCdashDomainField -> Json.Encode.Value
encodeXmlCdashDomainField =
    encodeObject << encodeXmlCdashDomainFieldPairs


encodeXmlCdashDomainFieldWithTag : ( String, String ) -> XmlCdashDomainField -> Json.Encode.Value
encodeXmlCdashDomainFieldWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashDomainFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashDomainFieldPairs : XmlCdashDomainField -> List EncodedField
encodeXmlCdashDomainFieldPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashDomainField model.self
            ]
    in
    pairs


encodeXmlCdashDomainFields : XmlCdashDomainFields -> Json.Encode.Value
encodeXmlCdashDomainFields =
    encodeObject << encodeXmlCdashDomainFieldsPairs


encodeXmlCdashDomainFieldsWithTag : ( String, String ) -> XmlCdashDomainFields -> Json.Encode.Value
encodeXmlCdashDomainFieldsWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashDomainFieldsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashDomainFieldsPairs : XmlCdashDomainFields -> List EncodedField
encodeXmlCdashDomainFieldsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashDomainFields model.self
            ]
    in
    pairs


encodeXmlCdashProduct : XmlCdashProduct -> Json.Encode.Value
encodeXmlCdashProduct =
    encodeObject << encodeXmlCdashProductPairs


encodeXmlCdashProductWithTag : ( String, String ) -> XmlCdashProduct -> Json.Encode.Value
encodeXmlCdashProductWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashProductPairs : XmlCdashProduct -> List EncodedField
encodeXmlCdashProductPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashProduct model.self
            ]
    in
    pairs


encodeXmlCdashProductClasses : XmlCdashProductClasses -> Json.Encode.Value
encodeXmlCdashProductClasses =
    encodeObject << encodeXmlCdashProductClassesPairs


encodeXmlCdashProductClassesWithTag : ( String, String ) -> XmlCdashProductClasses -> Json.Encode.Value
encodeXmlCdashProductClassesWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashProductClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashProductClassesPairs : XmlCdashProductClasses -> List EncodedField
encodeXmlCdashProductClassesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashProductClasses model.self
            ]
    in
    pairs


encodeXmlCdashProductDomains : XmlCdashProductDomains -> Json.Encode.Value
encodeXmlCdashProductDomains =
    encodeObject << encodeXmlCdashProductDomainsPairs


encodeXmlCdashProductDomainsWithTag : ( String, String ) -> XmlCdashProductDomains -> Json.Encode.Value
encodeXmlCdashProductDomainsWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashProductDomainsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashProductDomainsPairs : XmlCdashProductDomains -> List EncodedField
encodeXmlCdashProductDomainsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashProductDomains model.self
            ]
    in
    pairs


encodeXmlCdashigClass : XmlCdashigClass -> Json.Encode.Value
encodeXmlCdashigClass =
    encodeObject << encodeXmlCdashigClassPairs


encodeXmlCdashigClassWithTag : ( String, String ) -> XmlCdashigClass -> Json.Encode.Value
encodeXmlCdashigClassWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigClassPairs : XmlCdashigClass -> List EncodedField
encodeXmlCdashigClassPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigClass model.self
            ]
    in
    pairs


encodeXmlCdashigClassDomains : XmlCdashigClassDomains -> Json.Encode.Value
encodeXmlCdashigClassDomains =
    encodeObject << encodeXmlCdashigClassDomainsPairs


encodeXmlCdashigClassDomainsWithTag : ( String, String ) -> XmlCdashigClassDomains -> Json.Encode.Value
encodeXmlCdashigClassDomainsWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigClassDomainsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigClassDomainsPairs : XmlCdashigClassDomains -> List EncodedField
encodeXmlCdashigClassDomainsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigClassDomains model.self
            ]
    in
    pairs


encodeXmlCdashigClassScenarios : XmlCdashigClassScenarios -> Json.Encode.Value
encodeXmlCdashigClassScenarios =
    encodeObject << encodeXmlCdashigClassScenariosPairs


encodeXmlCdashigClassScenariosWithTag : ( String, String ) -> XmlCdashigClassScenarios -> Json.Encode.Value
encodeXmlCdashigClassScenariosWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigClassScenariosPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigClassScenariosPairs : XmlCdashigClassScenarios -> List EncodedField
encodeXmlCdashigClassScenariosPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigClassScenarios model.self
            ]
    in
    pairs


encodeXmlCdashigDomain : XmlCdashigDomain -> Json.Encode.Value
encodeXmlCdashigDomain =
    encodeObject << encodeXmlCdashigDomainPairs


encodeXmlCdashigDomainWithTag : ( String, String ) -> XmlCdashigDomain -> Json.Encode.Value
encodeXmlCdashigDomainWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigDomainPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigDomainPairs : XmlCdashigDomain -> List EncodedField
encodeXmlCdashigDomainPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigDomain model.self
            ]
    in
    pairs


encodeXmlCdashigDomainField : XmlCdashigDomainField -> Json.Encode.Value
encodeXmlCdashigDomainField =
    encodeObject << encodeXmlCdashigDomainFieldPairs


encodeXmlCdashigDomainFieldWithTag : ( String, String ) -> XmlCdashigDomainField -> Json.Encode.Value
encodeXmlCdashigDomainFieldWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigDomainFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigDomainFieldPairs : XmlCdashigDomainField -> List EncodedField
encodeXmlCdashigDomainFieldPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigDomainField model.self
            ]
    in
    pairs


encodeXmlCdashigDomainFields : XmlCdashigDomainFields -> Json.Encode.Value
encodeXmlCdashigDomainFields =
    encodeObject << encodeXmlCdashigDomainFieldsPairs


encodeXmlCdashigDomainFieldsWithTag : ( String, String ) -> XmlCdashigDomainFields -> Json.Encode.Value
encodeXmlCdashigDomainFieldsWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigDomainFieldsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigDomainFieldsPairs : XmlCdashigDomainFields -> List EncodedField
encodeXmlCdashigDomainFieldsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigDomainFields model.self
            ]
    in
    pairs


encodeXmlCdashigProduct : XmlCdashigProduct -> Json.Encode.Value
encodeXmlCdashigProduct =
    encodeObject << encodeXmlCdashigProductPairs


encodeXmlCdashigProductWithTag : ( String, String ) -> XmlCdashigProduct -> Json.Encode.Value
encodeXmlCdashigProductWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigProductPairs : XmlCdashigProduct -> List EncodedField
encodeXmlCdashigProductPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigProduct model.self
            ]
    in
    pairs


encodeXmlCdashigProductClasses : XmlCdashigProductClasses -> Json.Encode.Value
encodeXmlCdashigProductClasses =
    encodeObject << encodeXmlCdashigProductClassesPairs


encodeXmlCdashigProductClassesWithTag : ( String, String ) -> XmlCdashigProductClasses -> Json.Encode.Value
encodeXmlCdashigProductClassesWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigProductClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigProductClassesPairs : XmlCdashigProductClasses -> List EncodedField
encodeXmlCdashigProductClassesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigProductClasses model.self
            ]
    in
    pairs


encodeXmlCdashigProductDomains : XmlCdashigProductDomains -> Json.Encode.Value
encodeXmlCdashigProductDomains =
    encodeObject << encodeXmlCdashigProductDomainsPairs


encodeXmlCdashigProductDomainsWithTag : ( String, String ) -> XmlCdashigProductDomains -> Json.Encode.Value
encodeXmlCdashigProductDomainsWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigProductDomainsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigProductDomainsPairs : XmlCdashigProductDomains -> List EncodedField
encodeXmlCdashigProductDomainsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigProductDomains model.self
            ]
    in
    pairs


encodeXmlCdashigProductScenarios : XmlCdashigProductScenarios -> Json.Encode.Value
encodeXmlCdashigProductScenarios =
    encodeObject << encodeXmlCdashigProductScenariosPairs


encodeXmlCdashigProductScenariosWithTag : ( String, String ) -> XmlCdashigProductScenarios -> Json.Encode.Value
encodeXmlCdashigProductScenariosWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigProductScenariosPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigProductScenariosPairs : XmlCdashigProductScenarios -> List EncodedField
encodeXmlCdashigProductScenariosPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigProductScenarios model.self
            ]
    in
    pairs


encodeXmlCdashigScenario : XmlCdashigScenario -> Json.Encode.Value
encodeXmlCdashigScenario =
    encodeObject << encodeXmlCdashigScenarioPairs


encodeXmlCdashigScenarioWithTag : ( String, String ) -> XmlCdashigScenario -> Json.Encode.Value
encodeXmlCdashigScenarioWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigScenarioPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigScenarioPairs : XmlCdashigScenario -> List EncodedField
encodeXmlCdashigScenarioPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigScenario model.self
            ]
    in
    pairs


encodeXmlCdashigScenarioField : XmlCdashigScenarioField -> Json.Encode.Value
encodeXmlCdashigScenarioField =
    encodeObject << encodeXmlCdashigScenarioFieldPairs


encodeXmlCdashigScenarioFieldWithTag : ( String, String ) -> XmlCdashigScenarioField -> Json.Encode.Value
encodeXmlCdashigScenarioFieldWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigScenarioFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigScenarioFieldPairs : XmlCdashigScenarioField -> List EncodedField
encodeXmlCdashigScenarioFieldPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigScenarioField model.self
            ]
    in
    pairs


encodeXmlCdashigScenarioFields : XmlCdashigScenarioFields -> Json.Encode.Value
encodeXmlCdashigScenarioFields =
    encodeObject << encodeXmlCdashigScenarioFieldsPairs


encodeXmlCdashigScenarioFieldsWithTag : ( String, String ) -> XmlCdashigScenarioFields -> Json.Encode.Value
encodeXmlCdashigScenarioFieldsWithTag (tagField, tag) model =
    encodeObject (encodeXmlCdashigScenarioFieldsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCdashigScenarioFieldsPairs : XmlCdashigScenarioFields -> List EncodedField
encodeXmlCdashigScenarioFieldsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCdashigScenarioFields model.self
            ]
    in
    pairs


encodeXmlCtCodelist : XmlCtCodelist -> Json.Encode.Value
encodeXmlCtCodelist =
    encodeObject << encodeXmlCtCodelistPairs


encodeXmlCtCodelistWithTag : ( String, String ) -> XmlCtCodelist -> Json.Encode.Value
encodeXmlCtCodelistWithTag (tagField, tag) model =
    encodeObject (encodeXmlCtCodelistPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCtCodelistPairs : XmlCtCodelist -> List EncodedField
encodeXmlCtCodelistPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtCodelist model.self
            ]
    in
    pairs


encodeXmlCtCodelistTerms : XmlCtCodelistTerms -> Json.Encode.Value
encodeXmlCtCodelistTerms =
    encodeObject << encodeXmlCtCodelistTermsPairs


encodeXmlCtCodelistTermsWithTag : ( String, String ) -> XmlCtCodelistTerms -> Json.Encode.Value
encodeXmlCtCodelistTermsWithTag (tagField, tag) model =
    encodeObject (encodeXmlCtCodelistTermsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCtCodelistTermsPairs : XmlCtCodelistTerms -> List EncodedField
encodeXmlCtCodelistTermsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtCodelistTerms model.self
            ]
    in
    pairs


encodeXmlCtPackage : XmlCtPackage -> Json.Encode.Value
encodeXmlCtPackage =
    encodeObject << encodeXmlCtPackagePairs


encodeXmlCtPackageWithTag : ( String, String ) -> XmlCtPackage -> Json.Encode.Value
encodeXmlCtPackageWithTag (tagField, tag) model =
    encodeObject (encodeXmlCtPackagePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCtPackagePairs : XmlCtPackage -> List EncodedField
encodeXmlCtPackagePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtPackage model.self
            ]
    in
    pairs


encodeXmlCtPackageCodelists : XmlCtPackageCodelists -> Json.Encode.Value
encodeXmlCtPackageCodelists =
    encodeObject << encodeXmlCtPackageCodelistsPairs


encodeXmlCtPackageCodelistsWithTag : ( String, String ) -> XmlCtPackageCodelists -> Json.Encode.Value
encodeXmlCtPackageCodelistsWithTag (tagField, tag) model =
    encodeObject (encodeXmlCtPackageCodelistsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCtPackageCodelistsPairs : XmlCtPackageCodelists -> List EncodedField
encodeXmlCtPackageCodelistsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtPackageCodelists model.self
            ]
    in
    pairs


encodeXmlCtPackages : XmlCtPackages -> Json.Encode.Value
encodeXmlCtPackages =
    encodeObject << encodeXmlCtPackagesPairs


encodeXmlCtPackagesWithTag : ( String, String ) -> XmlCtPackages -> Json.Encode.Value
encodeXmlCtPackagesWithTag (tagField, tag) model =
    encodeObject (encodeXmlCtPackagesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCtPackagesPairs : XmlCtPackages -> List EncodedField
encodeXmlCtPackagesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtPackages model.self
            ]
    in
    pairs


encodeXmlCtTerm : XmlCtTerm -> Json.Encode.Value
encodeXmlCtTerm =
    encodeObject << encodeXmlCtTermPairs


encodeXmlCtTermWithTag : ( String, String ) -> XmlCtTerm -> Json.Encode.Value
encodeXmlCtTermWithTag (tagField, tag) model =
    encodeObject (encodeXmlCtTermPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlCtTermPairs : XmlCtTerm -> List EncodedField
encodeXmlCtTermPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeCtTerm model.self
            ]
    in
    pairs


encodeXmlLastupdated : XmlLastupdated -> Json.Encode.Value
encodeXmlLastupdated =
    encodeObject << encodeXmlLastupdatedPairs


encodeXmlLastupdatedWithTag : ( String, String ) -> XmlLastupdated -> Json.Encode.Value
encodeXmlLastupdatedWithTag (tagField, tag) model =
    encodeObject (encodeXmlLastupdatedPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlLastupdatedPairs : XmlLastupdated -> List EncodedField
encodeXmlLastupdatedPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeLastupdated model.self
            ]
    in
    pairs


encodeXmlProductgroupDataAnalysis : XmlProductgroupDataAnalysis -> Json.Encode.Value
encodeXmlProductgroupDataAnalysis =
    encodeObject << encodeXmlProductgroupDataAnalysisPairs


encodeXmlProductgroupDataAnalysisWithTag : ( String, String ) -> XmlProductgroupDataAnalysis -> Json.Encode.Value
encodeXmlProductgroupDataAnalysisWithTag (tagField, tag) model =
    encodeObject (encodeXmlProductgroupDataAnalysisPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlProductgroupDataAnalysisPairs : XmlProductgroupDataAnalysis -> List EncodedField
encodeXmlProductgroupDataAnalysisPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductgroupDataAnalysis model.self
            ]
    in
    pairs


encodeXmlProductgroupDataCollection : XmlProductgroupDataCollection -> Json.Encode.Value
encodeXmlProductgroupDataCollection =
    encodeObject << encodeXmlProductgroupDataCollectionPairs


encodeXmlProductgroupDataCollectionWithTag : ( String, String ) -> XmlProductgroupDataCollection -> Json.Encode.Value
encodeXmlProductgroupDataCollectionWithTag (tagField, tag) model =
    encodeObject (encodeXmlProductgroupDataCollectionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlProductgroupDataCollectionPairs : XmlProductgroupDataCollection -> List EncodedField
encodeXmlProductgroupDataCollectionPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductgroupDataCollection model.self
            ]
    in
    pairs


encodeXmlProductgroupDataTabulation : XmlProductgroupDataTabulation -> Json.Encode.Value
encodeXmlProductgroupDataTabulation =
    encodeObject << encodeXmlProductgroupDataTabulationPairs


encodeXmlProductgroupDataTabulationWithTag : ( String, String ) -> XmlProductgroupDataTabulation -> Json.Encode.Value
encodeXmlProductgroupDataTabulationWithTag (tagField, tag) model =
    encodeObject (encodeXmlProductgroupDataTabulationPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlProductgroupDataTabulationPairs : XmlProductgroupDataTabulation -> List EncodedField
encodeXmlProductgroupDataTabulationPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductgroupDataTabulation model.self
            ]
    in
    pairs


encodeXmlProductgroupTerminology : XmlProductgroupTerminology -> Json.Encode.Value
encodeXmlProductgroupTerminology =
    encodeObject << encodeXmlProductgroupTerminologyPairs


encodeXmlProductgroupTerminologyWithTag : ( String, String ) -> XmlProductgroupTerminology -> Json.Encode.Value
encodeXmlProductgroupTerminologyWithTag (tagField, tag) model =
    encodeObject (encodeXmlProductgroupTerminologyPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlProductgroupTerminologyPairs : XmlProductgroupTerminology -> List EncodedField
encodeXmlProductgroupTerminologyPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProductgroupTerminology model.self
            ]
    in
    pairs


encodeXmlProducts : XmlProducts -> Json.Encode.Value
encodeXmlProducts =
    encodeObject << encodeXmlProductsPairs


encodeXmlProductsWithTag : ( String, String ) -> XmlProducts -> Json.Encode.Value
encodeXmlProductsWithTag (tagField, tag) model =
    encodeObject (encodeXmlProductsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlProductsPairs : XmlProducts -> List EncodedField
encodeXmlProductsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeProducts model.self
            ]
    in
    pairs


encodeXmlQrsItem : XmlQrsItem -> Json.Encode.Value
encodeXmlQrsItem =
    encodeObject << encodeXmlQrsItemPairs


encodeXmlQrsItemWithTag : ( String, String ) -> XmlQrsItem -> Json.Encode.Value
encodeXmlQrsItemWithTag (tagField, tag) model =
    encodeObject (encodeXmlQrsItemPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlQrsItemPairs : XmlQrsItem -> List EncodedField
encodeXmlQrsItemPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeQrsItem model.self
            ]
    in
    pairs


encodeXmlQrsItems : XmlQrsItems -> Json.Encode.Value
encodeXmlQrsItems =
    encodeObject << encodeXmlQrsItemsPairs


encodeXmlQrsItemsWithTag : ( String, String ) -> XmlQrsItems -> Json.Encode.Value
encodeXmlQrsItemsWithTag (tagField, tag) model =
    encodeObject (encodeXmlQrsItemsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlQrsItemsPairs : XmlQrsItems -> List EncodedField
encodeXmlQrsItemsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeQrsItems model.self
            ]
    in
    pairs


encodeXmlQrsProduct : XmlQrsProduct -> Json.Encode.Value
encodeXmlQrsProduct =
    encodeObject << encodeXmlQrsProductPairs


encodeXmlQrsProductWithTag : ( String, String ) -> XmlQrsProduct -> Json.Encode.Value
encodeXmlQrsProductWithTag (tagField, tag) model =
    encodeObject (encodeXmlQrsProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlQrsProductPairs : XmlQrsProduct -> List EncodedField
encodeXmlQrsProductPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeQrsProduct model.self
            ]
    in
    pairs


encodeXmlQrsResponsegroup : XmlQrsResponsegroup -> Json.Encode.Value
encodeXmlQrsResponsegroup =
    encodeObject << encodeXmlQrsResponsegroupPairs


encodeXmlQrsResponsegroupWithTag : ( String, String ) -> XmlQrsResponsegroup -> Json.Encode.Value
encodeXmlQrsResponsegroupWithTag (tagField, tag) model =
    encodeObject (encodeXmlQrsResponsegroupPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlQrsResponsegroupPairs : XmlQrsResponsegroup -> List EncodedField
encodeXmlQrsResponsegroupPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeQrsResponsegroup model.self
            ]
    in
    pairs


encodeXmlQrsResponsegroups : XmlQrsResponsegroups -> Json.Encode.Value
encodeXmlQrsResponsegroups =
    encodeObject << encodeXmlQrsResponsegroupsPairs


encodeXmlQrsResponsegroupsWithTag : ( String, String ) -> XmlQrsResponsegroups -> Json.Encode.Value
encodeXmlQrsResponsegroupsWithTag (tagField, tag) model =
    encodeObject (encodeXmlQrsResponsegroupsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlQrsResponsegroupsPairs : XmlQrsResponsegroups -> List EncodedField
encodeXmlQrsResponsegroupsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeQrsResponsegroups model.self
            ]
    in
    pairs


encodeXmlRootCdashClassField : XmlRootCdashClassField -> Json.Encode.Value
encodeXmlRootCdashClassField =
    encodeObject << encodeXmlRootCdashClassFieldPairs


encodeXmlRootCdashClassFieldWithTag : ( String, String ) -> XmlRootCdashClassField -> Json.Encode.Value
encodeXmlRootCdashClassFieldWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootCdashClassFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootCdashClassFieldPairs : XmlRootCdashClassField -> List EncodedField
encodeXmlRootCdashClassFieldPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCdashClassField model.self
            ]
    in
    pairs


encodeXmlRootCdashDomainField : XmlRootCdashDomainField -> Json.Encode.Value
encodeXmlRootCdashDomainField =
    encodeObject << encodeXmlRootCdashDomainFieldPairs


encodeXmlRootCdashDomainFieldWithTag : ( String, String ) -> XmlRootCdashDomainField -> Json.Encode.Value
encodeXmlRootCdashDomainFieldWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootCdashDomainFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootCdashDomainFieldPairs : XmlRootCdashDomainField -> List EncodedField
encodeXmlRootCdashDomainFieldPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCdashDomainField model.self
            ]
    in
    pairs


encodeXmlRootCdashigDomainField : XmlRootCdashigDomainField -> Json.Encode.Value
encodeXmlRootCdashigDomainField =
    encodeObject << encodeXmlRootCdashigDomainFieldPairs


encodeXmlRootCdashigDomainFieldWithTag : ( String, String ) -> XmlRootCdashigDomainField -> Json.Encode.Value
encodeXmlRootCdashigDomainFieldWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootCdashigDomainFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootCdashigDomainFieldPairs : XmlRootCdashigDomainField -> List EncodedField
encodeXmlRootCdashigDomainFieldPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCdashigDomainField model.self
            ]
    in
    pairs


encodeXmlRootCdashigScenarioField : XmlRootCdashigScenarioField -> Json.Encode.Value
encodeXmlRootCdashigScenarioField =
    encodeObject << encodeXmlRootCdashigScenarioFieldPairs


encodeXmlRootCdashigScenarioFieldWithTag : ( String, String ) -> XmlRootCdashigScenarioField -> Json.Encode.Value
encodeXmlRootCdashigScenarioFieldWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootCdashigScenarioFieldPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootCdashigScenarioFieldPairs : XmlRootCdashigScenarioField -> List EncodedField
encodeXmlRootCdashigScenarioFieldPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCdashigScenarioField model.self
            ]
    in
    pairs


encodeXmlRootCtCodelist : XmlRootCtCodelist -> Json.Encode.Value
encodeXmlRootCtCodelist =
    encodeObject << encodeXmlRootCtCodelistPairs


encodeXmlRootCtCodelistWithTag : ( String, String ) -> XmlRootCtCodelist -> Json.Encode.Value
encodeXmlRootCtCodelistWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootCtCodelistPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootCtCodelistPairs : XmlRootCtCodelist -> List EncodedField
encodeXmlRootCtCodelistPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCtCodelist model.self
            ]
    in
    pairs


encodeXmlRootCtTerm : XmlRootCtTerm -> Json.Encode.Value
encodeXmlRootCtTerm =
    encodeObject << encodeXmlRootCtTermPairs


encodeXmlRootCtTermWithTag : ( String, String ) -> XmlRootCtTerm -> Json.Encode.Value
encodeXmlRootCtTermWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootCtTermPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootCtTermPairs : XmlRootCtTerm -> List EncodedField
encodeXmlRootCtTermPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootCtTerm model.self
            ]
    in
    pairs


encodeXmlRootSdtmClassVariable : XmlRootSdtmClassVariable -> Json.Encode.Value
encodeXmlRootSdtmClassVariable =
    encodeObject << encodeXmlRootSdtmClassVariablePairs


encodeXmlRootSdtmClassVariableWithTag : ( String, String ) -> XmlRootSdtmClassVariable -> Json.Encode.Value
encodeXmlRootSdtmClassVariableWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootSdtmClassVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootSdtmClassVariablePairs : XmlRootSdtmClassVariable -> List EncodedField
encodeXmlRootSdtmClassVariablePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootSdtmClassVariable model.self
            ]
    in
    pairs


encodeXmlRootSdtmDatasetVariable : XmlRootSdtmDatasetVariable -> Json.Encode.Value
encodeXmlRootSdtmDatasetVariable =
    encodeObject << encodeXmlRootSdtmDatasetVariablePairs


encodeXmlRootSdtmDatasetVariableWithTag : ( String, String ) -> XmlRootSdtmDatasetVariable -> Json.Encode.Value
encodeXmlRootSdtmDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootSdtmDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootSdtmDatasetVariablePairs : XmlRootSdtmDatasetVariable -> List EncodedField
encodeXmlRootSdtmDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootSdtmDatasetVariable model.self
            ]
    in
    pairs


encodeXmlRootSdtmigDatasetVariable : XmlRootSdtmigDatasetVariable -> Json.Encode.Value
encodeXmlRootSdtmigDatasetVariable =
    encodeObject << encodeXmlRootSdtmigDatasetVariablePairs


encodeXmlRootSdtmigDatasetVariableWithTag : ( String, String ) -> XmlRootSdtmigDatasetVariable -> Json.Encode.Value
encodeXmlRootSdtmigDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootSdtmigDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootSdtmigDatasetVariablePairs : XmlRootSdtmigDatasetVariable -> List EncodedField
encodeXmlRootSdtmigDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootSdtmigDatasetVariable model.self
            ]
    in
    pairs


encodeXmlRootSendigDatasetVariable : XmlRootSendigDatasetVariable -> Json.Encode.Value
encodeXmlRootSendigDatasetVariable =
    encodeObject << encodeXmlRootSendigDatasetVariablePairs


encodeXmlRootSendigDatasetVariableWithTag : ( String, String ) -> XmlRootSendigDatasetVariable -> Json.Encode.Value
encodeXmlRootSendigDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeXmlRootSendigDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlRootSendigDatasetVariablePairs : XmlRootSendigDatasetVariable -> List EncodedField
encodeXmlRootSendigDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeRootSendigDatasetVariable model.self
            ]
    in
    pairs


encodeXmlSdtmClass : XmlSdtmClass -> Json.Encode.Value
encodeXmlSdtmClass =
    encodeObject << encodeXmlSdtmClassPairs


encodeXmlSdtmClassWithTag : ( String, String ) -> XmlSdtmClass -> Json.Encode.Value
encodeXmlSdtmClassWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmClassPairs : XmlSdtmClass -> List EncodedField
encodeXmlSdtmClassPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClass model.self
            ]
    in
    pairs


encodeXmlSdtmClassDatasets : XmlSdtmClassDatasets -> Json.Encode.Value
encodeXmlSdtmClassDatasets =
    encodeObject << encodeXmlSdtmClassDatasetsPairs


encodeXmlSdtmClassDatasetsWithTag : ( String, String ) -> XmlSdtmClassDatasets -> Json.Encode.Value
encodeXmlSdtmClassDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmClassDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmClassDatasetsPairs : XmlSdtmClassDatasets -> List EncodedField
encodeXmlSdtmClassDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClassDatasets model.self
            ]
    in
    pairs


encodeXmlSdtmClassVariable : XmlSdtmClassVariable -> Json.Encode.Value
encodeXmlSdtmClassVariable =
    encodeObject << encodeXmlSdtmClassVariablePairs


encodeXmlSdtmClassVariableWithTag : ( String, String ) -> XmlSdtmClassVariable -> Json.Encode.Value
encodeXmlSdtmClassVariableWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmClassVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmClassVariablePairs : XmlSdtmClassVariable -> List EncodedField
encodeXmlSdtmClassVariablePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClassVariable model.self
            ]
    in
    pairs


encodeXmlSdtmClassVariables : XmlSdtmClassVariables -> Json.Encode.Value
encodeXmlSdtmClassVariables =
    encodeObject << encodeXmlSdtmClassVariablesPairs


encodeXmlSdtmClassVariablesWithTag : ( String, String ) -> XmlSdtmClassVariables -> Json.Encode.Value
encodeXmlSdtmClassVariablesWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmClassVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmClassVariablesPairs : XmlSdtmClassVariables -> List EncodedField
encodeXmlSdtmClassVariablesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClassVariables model.self
            ]
    in
    pairs


encodeXmlSdtmClasses : XmlSdtmClasses -> Json.Encode.Value
encodeXmlSdtmClasses =
    encodeObject << encodeXmlSdtmClassesPairs


encodeXmlSdtmClassesWithTag : ( String, String ) -> XmlSdtmClasses -> Json.Encode.Value
encodeXmlSdtmClassesWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmClassesPairs : XmlSdtmClasses -> List EncodedField
encodeXmlSdtmClassesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmClasses model.self
            ]
    in
    pairs


encodeXmlSdtmDataset : XmlSdtmDataset -> Json.Encode.Value
encodeXmlSdtmDataset =
    encodeObject << encodeXmlSdtmDatasetPairs


encodeXmlSdtmDatasetWithTag : ( String, String ) -> XmlSdtmDataset -> Json.Encode.Value
encodeXmlSdtmDatasetWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmDatasetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmDatasetPairs : XmlSdtmDataset -> List EncodedField
encodeXmlSdtmDatasetPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmDataset model.self
            ]
    in
    pairs


encodeXmlSdtmDatasetVariable : XmlSdtmDatasetVariable -> Json.Encode.Value
encodeXmlSdtmDatasetVariable =
    encodeObject << encodeXmlSdtmDatasetVariablePairs


encodeXmlSdtmDatasetVariableWithTag : ( String, String ) -> XmlSdtmDatasetVariable -> Json.Encode.Value
encodeXmlSdtmDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmDatasetVariablePairs : XmlSdtmDatasetVariable -> List EncodedField
encodeXmlSdtmDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmDatasetVariable model.self
            ]
    in
    pairs


encodeXmlSdtmDatasetVariables : XmlSdtmDatasetVariables -> Json.Encode.Value
encodeXmlSdtmDatasetVariables =
    encodeObject << encodeXmlSdtmDatasetVariablesPairs


encodeXmlSdtmDatasetVariablesWithTag : ( String, String ) -> XmlSdtmDatasetVariables -> Json.Encode.Value
encodeXmlSdtmDatasetVariablesWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmDatasetVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmDatasetVariablesPairs : XmlSdtmDatasetVariables -> List EncodedField
encodeXmlSdtmDatasetVariablesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmDatasetVariables model.self
            ]
    in
    pairs


encodeXmlSdtmDatasets : XmlSdtmDatasets -> Json.Encode.Value
encodeXmlSdtmDatasets =
    encodeObject << encodeXmlSdtmDatasetsPairs


encodeXmlSdtmDatasetsWithTag : ( String, String ) -> XmlSdtmDatasets -> Json.Encode.Value
encodeXmlSdtmDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmDatasetsPairs : XmlSdtmDatasets -> List EncodedField
encodeXmlSdtmDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmDatasets model.self
            ]
    in
    pairs


encodeXmlSdtmProduct : XmlSdtmProduct -> Json.Encode.Value
encodeXmlSdtmProduct =
    encodeObject << encodeXmlSdtmProductPairs


encodeXmlSdtmProductWithTag : ( String, String ) -> XmlSdtmProduct -> Json.Encode.Value
encodeXmlSdtmProductWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmProductPairs : XmlSdtmProduct -> List EncodedField
encodeXmlSdtmProductPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmProduct model.self
            ]
    in
    pairs


encodeXmlSdtmigClass : XmlSdtmigClass -> Json.Encode.Value
encodeXmlSdtmigClass =
    encodeObject << encodeXmlSdtmigClassPairs


encodeXmlSdtmigClassWithTag : ( String, String ) -> XmlSdtmigClass -> Json.Encode.Value
encodeXmlSdtmigClassWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmigClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmigClassPairs : XmlSdtmigClass -> List EncodedField
encodeXmlSdtmigClassPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigClass model.self
            ]
    in
    pairs


encodeXmlSdtmigClassDatasets : XmlSdtmigClassDatasets -> Json.Encode.Value
encodeXmlSdtmigClassDatasets =
    encodeObject << encodeXmlSdtmigClassDatasetsPairs


encodeXmlSdtmigClassDatasetsWithTag : ( String, String ) -> XmlSdtmigClassDatasets -> Json.Encode.Value
encodeXmlSdtmigClassDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmigClassDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmigClassDatasetsPairs : XmlSdtmigClassDatasets -> List EncodedField
encodeXmlSdtmigClassDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigClassDatasets model.self
            ]
    in
    pairs


encodeXmlSdtmigClasses : XmlSdtmigClasses -> Json.Encode.Value
encodeXmlSdtmigClasses =
    encodeObject << encodeXmlSdtmigClassesPairs


encodeXmlSdtmigClassesWithTag : ( String, String ) -> XmlSdtmigClasses -> Json.Encode.Value
encodeXmlSdtmigClassesWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmigClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmigClassesPairs : XmlSdtmigClasses -> List EncodedField
encodeXmlSdtmigClassesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigClasses model.self
            ]
    in
    pairs


encodeXmlSdtmigDataset : XmlSdtmigDataset -> Json.Encode.Value
encodeXmlSdtmigDataset =
    encodeObject << encodeXmlSdtmigDatasetPairs


encodeXmlSdtmigDatasetWithTag : ( String, String ) -> XmlSdtmigDataset -> Json.Encode.Value
encodeXmlSdtmigDatasetWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmigDatasetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmigDatasetPairs : XmlSdtmigDataset -> List EncodedField
encodeXmlSdtmigDatasetPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigDataset model.self
            ]
    in
    pairs


encodeXmlSdtmigDatasetVariable : XmlSdtmigDatasetVariable -> Json.Encode.Value
encodeXmlSdtmigDatasetVariable =
    encodeObject << encodeXmlSdtmigDatasetVariablePairs


encodeXmlSdtmigDatasetVariableWithTag : ( String, String ) -> XmlSdtmigDatasetVariable -> Json.Encode.Value
encodeXmlSdtmigDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmigDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmigDatasetVariablePairs : XmlSdtmigDatasetVariable -> List EncodedField
encodeXmlSdtmigDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigDatasetVariable model.self
            ]
    in
    pairs


encodeXmlSdtmigDatasetVariables : XmlSdtmigDatasetVariables -> Json.Encode.Value
encodeXmlSdtmigDatasetVariables =
    encodeObject << encodeXmlSdtmigDatasetVariablesPairs


encodeXmlSdtmigDatasetVariablesWithTag : ( String, String ) -> XmlSdtmigDatasetVariables -> Json.Encode.Value
encodeXmlSdtmigDatasetVariablesWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmigDatasetVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmigDatasetVariablesPairs : XmlSdtmigDatasetVariables -> List EncodedField
encodeXmlSdtmigDatasetVariablesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigDatasetVariables model.self
            ]
    in
    pairs


encodeXmlSdtmigDatasets : XmlSdtmigDatasets -> Json.Encode.Value
encodeXmlSdtmigDatasets =
    encodeObject << encodeXmlSdtmigDatasetsPairs


encodeXmlSdtmigDatasetsWithTag : ( String, String ) -> XmlSdtmigDatasets -> Json.Encode.Value
encodeXmlSdtmigDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmigDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmigDatasetsPairs : XmlSdtmigDatasets -> List EncodedField
encodeXmlSdtmigDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigDatasets model.self
            ]
    in
    pairs


encodeXmlSdtmigProduct : XmlSdtmigProduct -> Json.Encode.Value
encodeXmlSdtmigProduct =
    encodeObject << encodeXmlSdtmigProductPairs


encodeXmlSdtmigProductWithTag : ( String, String ) -> XmlSdtmigProduct -> Json.Encode.Value
encodeXmlSdtmigProductWithTag (tagField, tag) model =
    encodeObject (encodeXmlSdtmigProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSdtmigProductPairs : XmlSdtmigProduct -> List EncodedField
encodeXmlSdtmigProductPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSdtmigProduct model.self
            ]
    in
    pairs


encodeXmlSendigClass : XmlSendigClass -> Json.Encode.Value
encodeXmlSendigClass =
    encodeObject << encodeXmlSendigClassPairs


encodeXmlSendigClassWithTag : ( String, String ) -> XmlSendigClass -> Json.Encode.Value
encodeXmlSendigClassWithTag (tagField, tag) model =
    encodeObject (encodeXmlSendigClassPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSendigClassPairs : XmlSendigClass -> List EncodedField
encodeXmlSendigClassPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigClass model.self
            ]
    in
    pairs


encodeXmlSendigClassDatasets : XmlSendigClassDatasets -> Json.Encode.Value
encodeXmlSendigClassDatasets =
    encodeObject << encodeXmlSendigClassDatasetsPairs


encodeXmlSendigClassDatasetsWithTag : ( String, String ) -> XmlSendigClassDatasets -> Json.Encode.Value
encodeXmlSendigClassDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeXmlSendigClassDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSendigClassDatasetsPairs : XmlSendigClassDatasets -> List EncodedField
encodeXmlSendigClassDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigClassDatasets model.self
            ]
    in
    pairs


encodeXmlSendigClasses : XmlSendigClasses -> Json.Encode.Value
encodeXmlSendigClasses =
    encodeObject << encodeXmlSendigClassesPairs


encodeXmlSendigClassesWithTag : ( String, String ) -> XmlSendigClasses -> Json.Encode.Value
encodeXmlSendigClassesWithTag (tagField, tag) model =
    encodeObject (encodeXmlSendigClassesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSendigClassesPairs : XmlSendigClasses -> List EncodedField
encodeXmlSendigClassesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigClasses model.self
            ]
    in
    pairs


encodeXmlSendigDataset : XmlSendigDataset -> Json.Encode.Value
encodeXmlSendigDataset =
    encodeObject << encodeXmlSendigDatasetPairs


encodeXmlSendigDatasetWithTag : ( String, String ) -> XmlSendigDataset -> Json.Encode.Value
encodeXmlSendigDatasetWithTag (tagField, tag) model =
    encodeObject (encodeXmlSendigDatasetPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSendigDatasetPairs : XmlSendigDataset -> List EncodedField
encodeXmlSendigDatasetPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigDataset model.self
            ]
    in
    pairs


encodeXmlSendigDatasetVariable : XmlSendigDatasetVariable -> Json.Encode.Value
encodeXmlSendigDatasetVariable =
    encodeObject << encodeXmlSendigDatasetVariablePairs


encodeXmlSendigDatasetVariableWithTag : ( String, String ) -> XmlSendigDatasetVariable -> Json.Encode.Value
encodeXmlSendigDatasetVariableWithTag (tagField, tag) model =
    encodeObject (encodeXmlSendigDatasetVariablePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSendigDatasetVariablePairs : XmlSendigDatasetVariable -> List EncodedField
encodeXmlSendigDatasetVariablePairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigDatasetVariable model.self
            ]
    in
    pairs


encodeXmlSendigDatasetVariables : XmlSendigDatasetVariables -> Json.Encode.Value
encodeXmlSendigDatasetVariables =
    encodeObject << encodeXmlSendigDatasetVariablesPairs


encodeXmlSendigDatasetVariablesWithTag : ( String, String ) -> XmlSendigDatasetVariables -> Json.Encode.Value
encodeXmlSendigDatasetVariablesWithTag (tagField, tag) model =
    encodeObject (encodeXmlSendigDatasetVariablesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSendigDatasetVariablesPairs : XmlSendigDatasetVariables -> List EncodedField
encodeXmlSendigDatasetVariablesPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigDatasetVariables model.self
            ]
    in
    pairs


encodeXmlSendigDatasets : XmlSendigDatasets -> Json.Encode.Value
encodeXmlSendigDatasets =
    encodeObject << encodeXmlSendigDatasetsPairs


encodeXmlSendigDatasetsWithTag : ( String, String ) -> XmlSendigDatasets -> Json.Encode.Value
encodeXmlSendigDatasetsWithTag (tagField, tag) model =
    encodeObject (encodeXmlSendigDatasetsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSendigDatasetsPairs : XmlSendigDatasets -> List EncodedField
encodeXmlSendigDatasetsPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigDatasets model.self
            ]
    in
    pairs


encodeXmlSendigProduct : XmlSendigProduct -> Json.Encode.Value
encodeXmlSendigProduct =
    encodeObject << encodeXmlSendigProductPairs


encodeXmlSendigProductWithTag : ( String, String ) -> XmlSendigProduct -> Json.Encode.Value
encodeXmlSendigProductWithTag (tagField, tag) model =
    encodeObject (encodeXmlSendigProductPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeXmlSendigProductPairs : XmlSendigProduct -> List EncodedField
encodeXmlSendigProductPairs model =
    let
        pairs =
            [ maybeEncode "self" encodeSendigProduct model.self
            ]
    in
    pairs


-- DECODER


aboutDecoder : Json.Decode.Decoder About
aboutDecoder =
    Json.Decode.succeed About
        |> maybeDecode "_links" aboutLinksDecoder Nothing
        |> maybeDecode "release-notes" Json.Decode.string Nothing
        |> maybeDecode "api-documentation" Json.Decode.string Nothing


aboutLinksDecoder : Json.Decode.Decoder AboutLinks
aboutLinksDecoder =
    Json.Decode.succeed AboutLinks
        |> maybeDecode "self" aboutRefDecoder Nothing
        |> maybeDecode "lastupdated" lastupdatedRefDecoder Nothing


aboutRefDecoder : Json.Decode.Decoder AboutRef
aboutRefDecoder =
    Json.Decode.succeed AboutRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamDatastructureDecoder : Json.Decode.Decoder AdamDatastructure
adamDatastructureDecoder =
    Json.Decode.succeed AdamDatastructure
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "class" Json.Decode.string Nothing
        |> maybeDecode "_links" adamDatastructureLinksDecoder Nothing
        |> maybeDecode "analysisVariableSets" (Json.Decode.list adamVarsetDecoder) Nothing


adamDatastructureLinksDecoder : Json.Decode.Decoder AdamDatastructureLinks
adamDatastructureLinksDecoder =
    Json.Decode.succeed AdamDatastructureLinks
        |> maybeDecode "self" adamDatastructureRefDecoder Nothing
        |> maybeDecode "parentProduct" adamProductRefDecoder Nothing
        |> maybeDecode "priorVersion" adamDatastructureRefDecoder Nothing


adamDatastructureRefDecoder : Json.Decode.Decoder AdamDatastructureRef
adamDatastructureRefDecoder =
    Json.Decode.succeed AdamDatastructureRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamDatastructureRefElementDecoder : Json.Decode.Decoder AdamDatastructureRefElement
adamDatastructureRefElementDecoder =
    Json.Decode.succeed AdamDatastructureRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamDatastructureVariablesDecoder : Json.Decode.Decoder AdamDatastructureVariables
adamDatastructureVariablesDecoder =
    Json.Decode.succeed AdamDatastructureVariables
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "class" Json.Decode.string Nothing
        |> maybeDecode "_links" adamDatastructureVariablesLinksDecoder Nothing


adamDatastructureVariablesLinksDecoder : Json.Decode.Decoder AdamDatastructureVariablesLinks
adamDatastructureVariablesLinksDecoder =
    Json.Decode.succeed AdamDatastructureVariablesLinks
        |> maybeDecode "self" adamDatastructureVariablesRefDecoder Nothing
        |> maybeDecode "parentProduct" adamProductRefDecoder Nothing
        |> maybeDecode "priorVersion" adamDatastructureVariablesRefDecoder Nothing
        |> maybeDecode "analysisVariables" (Json.Decode.list adamVariableRefElementDecoder) Nothing


adamDatastructureVariablesRefDecoder : Json.Decode.Decoder AdamDatastructureVariablesRef
adamDatastructureVariablesRefDecoder =
    Json.Decode.succeed AdamDatastructureVariablesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamDatastructureVarsetsDecoder : Json.Decode.Decoder AdamDatastructureVarsets
adamDatastructureVarsetsDecoder =
    Json.Decode.succeed AdamDatastructureVarsets
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "class" Json.Decode.string Nothing
        |> maybeDecode "_links" adamDatastructureVarsetsLinksDecoder Nothing


adamDatastructureVarsetsLinksDecoder : Json.Decode.Decoder AdamDatastructureVarsetsLinks
adamDatastructureVarsetsLinksDecoder =
    Json.Decode.succeed AdamDatastructureVarsetsLinks
        |> maybeDecode "self" adamDatastructureVarsetsRefDecoder Nothing
        |> maybeDecode "parentProduct" adamProductRefDecoder Nothing
        |> maybeDecode "priorVersion" adamDatastructureVarsetsRefDecoder Nothing
        |> maybeDecode "analysisVariableSets" (Json.Decode.list adamVarsetRefElementDecoder) Nothing


adamDatastructureVarsetsRefDecoder : Json.Decode.Decoder AdamDatastructureVarsetsRef
adamDatastructureVarsetsRefDecoder =
    Json.Decode.succeed AdamDatastructureVarsetsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamProductDecoder : Json.Decode.Decoder AdamProduct
adamProductDecoder =
    Json.Decode.succeed AdamProduct
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" adamProductLinksDecoder Nothing
        |> maybeDecode "dataStructures" (Json.Decode.list adamDatastructureDecoder) Nothing


adamProductDatastructuresDecoder : Json.Decode.Decoder AdamProductDatastructures
adamProductDatastructuresDecoder =
    Json.Decode.succeed AdamProductDatastructures
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" adamProductDatastructuresLinksDecoder Nothing


adamProductDatastructuresLinksDecoder : Json.Decode.Decoder AdamProductDatastructuresLinks
adamProductDatastructuresLinksDecoder =
    Json.Decode.succeed AdamProductDatastructuresLinks
        |> maybeDecode "self" adamProductDatastructuresRefDecoder Nothing
        |> maybeDecode "priorVersion" adamProductDatastructuresRefDecoder Nothing
        |> maybeDecode "dataStructures" (Json.Decode.list adamDatastructureRefElementDecoder) Nothing


adamProductDatastructuresRefDecoder : Json.Decode.Decoder AdamProductDatastructuresRef
adamProductDatastructuresRefDecoder =
    Json.Decode.succeed AdamProductDatastructuresRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamProductLinksDecoder : Json.Decode.Decoder AdamProductLinks
adamProductLinksDecoder =
    Json.Decode.succeed AdamProductLinks
        |> maybeDecode "self" adamProductRefDecoder Nothing
        |> maybeDecode "model" adamProductRefDecoder Nothing
        |> maybeDecode "priorVersion" adamProductRefDecoder Nothing


adamProductRefDecoder : Json.Decode.Decoder AdamProductRef
adamProductRefDecoder =
    Json.Decode.succeed AdamProductRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamProductRefElementDecoder : Json.Decode.Decoder AdamProductRefElement
adamProductRefElementDecoder =
    Json.Decode.succeed AdamProductRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamVariableDecoder : Json.Decode.Decoder AdamVariable
adamVariableDecoder =
    Json.Decode.succeed AdamVariable
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "core" Json.Decode.string Nothing
        |> maybeDecode "simpleDatatype" Json.Decode.string Nothing
        |> maybeDecode "describedValueDomain" Json.Decode.string Nothing
        |> maybeDecode "valueList" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "_links" adamVariableLinksDecoder Nothing


adamVariableLinksDecoder : Json.Decode.Decoder AdamVariableLinks
adamVariableLinksDecoder =
    Json.Decode.succeed AdamVariableLinks
        |> maybeDecode "self" adamVariableRefDecoder Nothing
        |> maybeDecode "codelist" rootCtCodelistRefDecoder Nothing
        |> maybeDecode "parentProduct" adamProductRefDecoder Nothing
        |> maybeDecode "parentDatastructure" adamDatastructureRefDecoder Nothing
        |> maybeDecode "parentVariableSet" adamVarsetRefDecoder Nothing
        |> maybeDecode "priorVersion" adamVariableRefDecoder Nothing


adamVariableRefDecoder : Json.Decode.Decoder AdamVariableRef
adamVariableRefDecoder =
    Json.Decode.succeed AdamVariableRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamVariableRefElementDecoder : Json.Decode.Decoder AdamVariableRefElement
adamVariableRefElementDecoder =
    Json.Decode.succeed AdamVariableRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamVarsetDecoder : Json.Decode.Decoder AdamVarset
adamVarsetDecoder =
    Json.Decode.succeed AdamVarset
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" adamVarsetLinksDecoder Nothing
        |> maybeDecode "analysisVariables" (Json.Decode.list adamVariableDecoder) Nothing


adamVarsetLinksDecoder : Json.Decode.Decoder AdamVarsetLinks
adamVarsetLinksDecoder =
    Json.Decode.succeed AdamVarsetLinks
        |> maybeDecode "self" adamVarsetRefDecoder Nothing
        |> maybeDecode "parentProduct" adamProductRefDecoder Nothing
        |> maybeDecode "parentDatastructure" adamDatastructureRefDecoder Nothing
        |> maybeDecode "priorVersion" adamVarsetRefDecoder Nothing


adamVarsetRefDecoder : Json.Decode.Decoder AdamVarsetRef
adamVarsetRefDecoder =
    Json.Decode.succeed AdamVarsetRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


adamVarsetRefElementDecoder : Json.Decode.Decoder AdamVarsetRefElement
adamVarsetRefElementDecoder =
    Json.Decode.succeed AdamVarsetRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashClassDecoder : Json.Decode.Decoder CdashClass
cdashClassDecoder =
    Json.Decode.succeed CdashClass
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashClassLinksDecoder Nothing
        |> maybeDecode "cdashModelFields" (Json.Decode.list cdashClassFieldDecoder) Nothing


cdashClassDomainsDecoder : Json.Decode.Decoder CdashClassDomains
cdashClassDomainsDecoder =
    Json.Decode.succeed CdashClassDomains
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashClassDomainsLinksDecoder Nothing


cdashClassDomainsLinksDecoder : Json.Decode.Decoder CdashClassDomainsLinks
cdashClassDomainsLinksDecoder =
    Json.Decode.succeed CdashClassDomainsLinks
        |> maybeDecode "self" cdashClassDomainsRefDecoder Nothing
        |> maybeDecode "domains" (Json.Decode.list cdashDomainRefElementDecoder) Nothing


cdashClassDomainsRefDecoder : Json.Decode.Decoder CdashClassDomainsRef
cdashClassDomainsRefDecoder =
    Json.Decode.succeed CdashClassDomainsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashClassFieldDecoder : Json.Decode.Decoder CdashClassField
cdashClassFieldDecoder =
    Json.Decode.succeed CdashClassField
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "definition" Json.Decode.string Nothing
        |> maybeDecode "questionText" Json.Decode.string Nothing
        |> maybeDecode "prompt" Json.Decode.string Nothing
        |> maybeDecode "simpleDatatype" Json.Decode.string Nothing
        |> maybeDecode "implementationNotes" Json.Decode.string Nothing
        |> maybeDecode "mappingInstructions" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashClassFieldLinksDecoder Nothing


cdashClassFieldLinksDecoder : Json.Decode.Decoder CdashClassFieldLinks
cdashClassFieldLinksDecoder =
    Json.Decode.succeed CdashClassFieldLinks
        |> maybeDecode "self" cdashClassFieldRefDecoder Nothing
        |> maybeDecode "codelist" (Json.Decode.list rootCtCodelistRefElementDecoder) Nothing
        |> maybeDecode "parentProduct" cdashProductRefDecoder Nothing
        |> maybeDecode "parentClass" cdashClassRefDecoder Nothing
        |> maybeDecode "rootItem" rootCdashClassFieldRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashClassFieldRefDecoder Nothing
        |> maybeDecode "sdtmClassMappingTargets" (Json.Decode.list sdtmClassVariableRefTargetDecoder) Nothing
        |> maybeDecode "sdtmDatasetMappingTargets" (Json.Decode.list sdtmDatasetVariableRefTargetDecoder) Nothing


cdashClassFieldRefDecoder : Json.Decode.Decoder CdashClassFieldRef
cdashClassFieldRefDecoder =
    Json.Decode.succeed CdashClassFieldRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashClassFieldRefVersionDecoder : Json.Decode.Decoder CdashClassFieldRefVersion
cdashClassFieldRefVersionDecoder =
    Json.Decode.succeed CdashClassFieldRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashClassLinksDecoder : Json.Decode.Decoder CdashClassLinks
cdashClassLinksDecoder =
    Json.Decode.succeed CdashClassLinks
        |> maybeDecode "self" cdashClassRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashProductRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashClassRefDecoder Nothing


cdashClassRefDecoder : Json.Decode.Decoder CdashClassRef
cdashClassRefDecoder =
    Json.Decode.succeed CdashClassRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashClassRefElementDecoder : Json.Decode.Decoder CdashClassRefElement
cdashClassRefElementDecoder =
    Json.Decode.succeed CdashClassRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashDomainDecoder : Json.Decode.Decoder CdashDomain
cdashDomainDecoder =
    Json.Decode.succeed CdashDomain
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashDomainLinksDecoder Nothing
        |> maybeDecode "fields" (Json.Decode.list cdashDomainFieldDecoder) Nothing


cdashDomainFieldDecoder : Json.Decode.Decoder CdashDomainField
cdashDomainFieldDecoder =
    Json.Decode.succeed CdashDomainField
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "definition" Json.Decode.string Nothing
        |> maybeDecode "domainSpecific" Json.Decode.string Nothing
        |> maybeDecode "questionText" Json.Decode.string Nothing
        |> maybeDecode "prompt" Json.Decode.string Nothing
        |> maybeDecode "simpleDatatype" Json.Decode.string Nothing
        |> maybeDecode "implementationNotes" Json.Decode.string Nothing
        |> maybeDecode "mappingInstructions" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashDomainFieldLinksDecoder Nothing


cdashDomainFieldLinksDecoder : Json.Decode.Decoder CdashDomainFieldLinks
cdashDomainFieldLinksDecoder =
    Json.Decode.succeed CdashDomainFieldLinks
        |> maybeDecode "self" cdashDomainFieldRefDecoder Nothing
        |> maybeDecode "codelist" (Json.Decode.list rootCtCodelistRefElementDecoder) Nothing
        |> maybeDecode "parentProduct" cdashProductRefDecoder Nothing
        |> maybeDecode "parentClass" cdashClassRefDecoder Nothing
        |> maybeDecode "parentDomain" cdashDomainRefDecoder Nothing
        |> maybeDecode "rootItem" rootCdashDomainFieldRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashDomainFieldRefDecoder Nothing
        |> maybeDecode "sdtmDatasetMappingTargets" (Json.Decode.list sdtmDatasetVariableRefTargetDecoder) Nothing
        |> maybeDecode "sdtmigDatasetMappingTargets" (Json.Decode.list sdtmigDatasetVariableRefTargetDecoder) Nothing


cdashDomainFieldRefDecoder : Json.Decode.Decoder CdashDomainFieldRef
cdashDomainFieldRefDecoder =
    Json.Decode.succeed CdashDomainFieldRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashDomainFieldRefElementDecoder : Json.Decode.Decoder CdashDomainFieldRefElement
cdashDomainFieldRefElementDecoder =
    Json.Decode.succeed CdashDomainFieldRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashDomainFieldRefVersionDecoder : Json.Decode.Decoder CdashDomainFieldRefVersion
cdashDomainFieldRefVersionDecoder =
    Json.Decode.succeed CdashDomainFieldRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashDomainFieldsDecoder : Json.Decode.Decoder CdashDomainFields
cdashDomainFieldsDecoder =
    Json.Decode.succeed CdashDomainFields
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashDomainFieldsLinksDecoder Nothing


cdashDomainFieldsLinksDecoder : Json.Decode.Decoder CdashDomainFieldsLinks
cdashDomainFieldsLinksDecoder =
    Json.Decode.succeed CdashDomainFieldsLinks
        |> maybeDecode "self" cdashDomainFieldsRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashProductRefDecoder Nothing
        |> maybeDecode "parentClass" cdashClassRefDecoder Nothing
        |> maybeDecode "fields" (Json.Decode.list cdashDomainFieldRefElementDecoder) Nothing


cdashDomainFieldsRefDecoder : Json.Decode.Decoder CdashDomainFieldsRef
cdashDomainFieldsRefDecoder =
    Json.Decode.succeed CdashDomainFieldsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashDomainLinksDecoder : Json.Decode.Decoder CdashDomainLinks
cdashDomainLinksDecoder =
    Json.Decode.succeed CdashDomainLinks
        |> maybeDecode "self" cdashDomainRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashProductRefDecoder Nothing
        |> maybeDecode "parentClass" cdashClassRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashDomainRefDecoder Nothing


cdashDomainRefDecoder : Json.Decode.Decoder CdashDomainRef
cdashDomainRefDecoder =
    Json.Decode.succeed CdashDomainRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashDomainRefElementDecoder : Json.Decode.Decoder CdashDomainRefElement
cdashDomainRefElementDecoder =
    Json.Decode.succeed CdashDomainRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashProductDecoder : Json.Decode.Decoder CdashProduct
cdashProductDecoder =
    Json.Decode.succeed CdashProduct
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashProductLinksDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list cdashClassDecoder) Nothing
        |> maybeDecode "domains" (Json.Decode.list cdashDomainDecoder) Nothing


cdashProductClassesDecoder : Json.Decode.Decoder CdashProductClasses
cdashProductClassesDecoder =
    Json.Decode.succeed CdashProductClasses
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashProductClassesLinksDecoder Nothing


cdashProductClassesLinksDecoder : Json.Decode.Decoder CdashProductClassesLinks
cdashProductClassesLinksDecoder =
    Json.Decode.succeed CdashProductClassesLinks
        |> maybeDecode "self" cdashProductClassesRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashProductRefDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list cdashClassRefElementDecoder) Nothing


cdashProductClassesRefDecoder : Json.Decode.Decoder CdashProductClassesRef
cdashProductClassesRefDecoder =
    Json.Decode.succeed CdashProductClassesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashProductDomainsDecoder : Json.Decode.Decoder CdashProductDomains
cdashProductDomainsDecoder =
    Json.Decode.succeed CdashProductDomains
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashProductDomainsLinksDecoder Nothing


cdashProductDomainsLinksDecoder : Json.Decode.Decoder CdashProductDomainsLinks
cdashProductDomainsLinksDecoder =
    Json.Decode.succeed CdashProductDomainsLinks
        |> maybeDecode "self" cdashProductDomainsRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashProductRefDecoder Nothing
        |> maybeDecode "domains" (Json.Decode.list cdashDomainRefElementDecoder) Nothing


cdashProductDomainsRefDecoder : Json.Decode.Decoder CdashProductDomainsRef
cdashProductDomainsRefDecoder =
    Json.Decode.succeed CdashProductDomainsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashProductLinksDecoder : Json.Decode.Decoder CdashProductLinks
cdashProductLinksDecoder =
    Json.Decode.succeed CdashProductLinks
        |> maybeDecode "self" cdashProductRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashProductRefDecoder Nothing


cdashProductRefDecoder : Json.Decode.Decoder CdashProductRef
cdashProductRefDecoder =
    Json.Decode.succeed CdashProductRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashProductRefElementDecoder : Json.Decode.Decoder CdashProductRefElement
cdashProductRefElementDecoder =
    Json.Decode.succeed CdashProductRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigClassDecoder : Json.Decode.Decoder CdashigClass
cdashigClassDecoder =
    Json.Decode.succeed CdashigClass
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigClassLinksDecoder Nothing
        |> maybeDecode "domains" (Json.Decode.list cdashigDomainDecoder) Nothing
        |> maybeDecode "scenarios" (Json.Decode.list cdashigScenarioDecoder) Nothing


cdashigClassDomainsDecoder : Json.Decode.Decoder CdashigClassDomains
cdashigClassDomainsDecoder =
    Json.Decode.succeed CdashigClassDomains
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigClassDomainsLinksDecoder Nothing


cdashigClassDomainsLinksDecoder : Json.Decode.Decoder CdashigClassDomainsLinks
cdashigClassDomainsLinksDecoder =
    Json.Decode.succeed CdashigClassDomainsLinks
        |> maybeDecode "self" cdashigClassDomainsRefDecoder Nothing
        |> maybeDecode "domains" (Json.Decode.list cdashigDomainRefElementDecoder) Nothing


cdashigClassDomainsRefDecoder : Json.Decode.Decoder CdashigClassDomainsRef
cdashigClassDomainsRefDecoder =
    Json.Decode.succeed CdashigClassDomainsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigClassLinksDecoder : Json.Decode.Decoder CdashigClassLinks
cdashigClassLinksDecoder =
    Json.Decode.succeed CdashigClassLinks
        |> maybeDecode "self" cdashigClassRefDecoder Nothing
        |> maybeDecode "modelClass" cdashClassRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "parentClass" cdashigClassRefDecoder Nothing
        |> maybeDecode "subclasses" (Json.Decode.list cdashigClassRefSubclassDecoder) Nothing
        |> maybeDecode "priorVersion" cdashigClassRefDecoder Nothing


cdashigClassRefDecoder : Json.Decode.Decoder CdashigClassRef
cdashigClassRefDecoder =
    Json.Decode.succeed CdashigClassRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigClassRefElementDecoder : Json.Decode.Decoder CdashigClassRefElement
cdashigClassRefElementDecoder =
    Json.Decode.succeed CdashigClassRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigClassRefSubclassDecoder : Json.Decode.Decoder CdashigClassRefSubclass
cdashigClassRefSubclassDecoder =
    Json.Decode.succeed CdashigClassRefSubclass
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigClassScenariosDecoder : Json.Decode.Decoder CdashigClassScenarios
cdashigClassScenariosDecoder =
    Json.Decode.succeed CdashigClassScenarios
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigClassScenariosLinksDecoder Nothing


cdashigClassScenariosLinksDecoder : Json.Decode.Decoder CdashigClassScenariosLinks
cdashigClassScenariosLinksDecoder =
    Json.Decode.succeed CdashigClassScenariosLinks
        |> maybeDecode "self" cdashigClassScenariosRefDecoder Nothing
        |> maybeDecode "scenarios" (Json.Decode.list cdashigScenarioRefElementDecoder) Nothing


cdashigClassScenariosRefDecoder : Json.Decode.Decoder CdashigClassScenariosRef
cdashigClassScenariosRefDecoder =
    Json.Decode.succeed CdashigClassScenariosRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigDomainDecoder : Json.Decode.Decoder CdashigDomain
cdashigDomainDecoder =
    Json.Decode.succeed CdashigDomain
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigDomainLinksDecoder Nothing
        |> maybeDecode "fields" (Json.Decode.list cdashigDomainFieldDecoder) Nothing


cdashigDomainFieldDecoder : Json.Decode.Decoder CdashigDomainField
cdashigDomainFieldDecoder =
    Json.Decode.succeed CdashigDomainField
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "definition" Json.Decode.string Nothing
        |> maybeDecode "questionText" Json.Decode.string Nothing
        |> maybeDecode "prompt" Json.Decode.string Nothing
        |> maybeDecode "completionInstructions" Json.Decode.string Nothing
        |> maybeDecode "implementationNotes" Json.Decode.string Nothing
        |> maybeDecode "simpleDatatype" Json.Decode.string Nothing
        |> maybeDecode "mappingInstructions" Json.Decode.string Nothing
        |> maybeDecode "core" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigDomainFieldLinksDecoder Nothing


cdashigDomainFieldLinksDecoder : Json.Decode.Decoder CdashigDomainFieldLinks
cdashigDomainFieldLinksDecoder =
    Json.Decode.succeed CdashigDomainFieldLinks
        |> maybeDecode "self" cdashigDomainFieldRefDecoder Nothing
        |> maybeDecode "codelist" (Json.Decode.list rootCtCodelistRefElementDecoder) Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "parentDomain" cdashigDomainRefDecoder Nothing
        |> maybeDecode "rootItem" rootCdashigDomainFieldRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashigDomainFieldRefDecoder Nothing
        |> maybeDecode "sdtmClassMappingTargets" (Json.Decode.list sdtmClassVariableRefTargetDecoder) Nothing
        |> maybeDecode "sdtmigDatasetMappingTargets" (Json.Decode.list sdtmigDatasetVariableRefTargetDecoder) Nothing


cdashigDomainFieldRefDecoder : Json.Decode.Decoder CdashigDomainFieldRef
cdashigDomainFieldRefDecoder =
    Json.Decode.succeed CdashigDomainFieldRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigDomainFieldRefElementDecoder : Json.Decode.Decoder CdashigDomainFieldRefElement
cdashigDomainFieldRefElementDecoder =
    Json.Decode.succeed CdashigDomainFieldRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigDomainFieldRefVersionDecoder : Json.Decode.Decoder CdashigDomainFieldRefVersion
cdashigDomainFieldRefVersionDecoder =
    Json.Decode.succeed CdashigDomainFieldRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigDomainFieldsDecoder : Json.Decode.Decoder CdashigDomainFields
cdashigDomainFieldsDecoder =
    Json.Decode.succeed CdashigDomainFields
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigDomainFieldsLinksDecoder Nothing


cdashigDomainFieldsLinksDecoder : Json.Decode.Decoder CdashigDomainFieldsLinks
cdashigDomainFieldsLinksDecoder =
    Json.Decode.succeed CdashigDomainFieldsLinks
        |> maybeDecode "self" cdashigDomainFieldsRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "parentClass" cdashigClassRefDecoder Nothing
        |> maybeDecode "fields" (Json.Decode.list cdashigDomainFieldRefElementDecoder) Nothing


cdashigDomainFieldsRefDecoder : Json.Decode.Decoder CdashigDomainFieldsRef
cdashigDomainFieldsRefDecoder =
    Json.Decode.succeed CdashigDomainFieldsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigDomainLinksDecoder : Json.Decode.Decoder CdashigDomainLinks
cdashigDomainLinksDecoder =
    Json.Decode.succeed CdashigDomainLinks
        |> maybeDecode "self" cdashigDomainRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "parentClass" cdashigClassRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashigDomainRefDecoder Nothing
        |> maybeDecode "scenarios" (Json.Decode.list cdashigScenarioRefElementDecoder) Nothing


cdashigDomainRefDecoder : Json.Decode.Decoder CdashigDomainRef
cdashigDomainRefDecoder =
    Json.Decode.succeed CdashigDomainRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigDomainRefElementDecoder : Json.Decode.Decoder CdashigDomainRefElement
cdashigDomainRefElementDecoder =
    Json.Decode.succeed CdashigDomainRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigProductDecoder : Json.Decode.Decoder CdashigProduct
cdashigProductDecoder =
    Json.Decode.succeed CdashigProduct
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigProductLinksDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list cdashigClassDecoder) Nothing


cdashigProductClassesDecoder : Json.Decode.Decoder CdashigProductClasses
cdashigProductClassesDecoder =
    Json.Decode.succeed CdashigProductClasses
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigProductClassesLinksDecoder Nothing


cdashigProductClassesLinksDecoder : Json.Decode.Decoder CdashigProductClassesLinks
cdashigProductClassesLinksDecoder =
    Json.Decode.succeed CdashigProductClassesLinks
        |> maybeDecode "self" cdashigProductClassesRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list cdashigClassRefElementDecoder) Nothing


cdashigProductClassesRefDecoder : Json.Decode.Decoder CdashigProductClassesRef
cdashigProductClassesRefDecoder =
    Json.Decode.succeed CdashigProductClassesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigProductDomainsDecoder : Json.Decode.Decoder CdashigProductDomains
cdashigProductDomainsDecoder =
    Json.Decode.succeed CdashigProductDomains
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigProductDomainsLinksDecoder Nothing


cdashigProductDomainsLinksDecoder : Json.Decode.Decoder CdashigProductDomainsLinks
cdashigProductDomainsLinksDecoder =
    Json.Decode.succeed CdashigProductDomainsLinks
        |> maybeDecode "self" cdashigProductDomainsRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "domains" (Json.Decode.list cdashigDomainRefElementDecoder) Nothing


cdashigProductDomainsRefDecoder : Json.Decode.Decoder CdashigProductDomainsRef
cdashigProductDomainsRefDecoder =
    Json.Decode.succeed CdashigProductDomainsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigProductLinksDecoder : Json.Decode.Decoder CdashigProductLinks
cdashigProductLinksDecoder =
    Json.Decode.succeed CdashigProductLinks
        |> maybeDecode "self" cdashigProductRefDecoder Nothing
        |> maybeDecode "model" cdashProductRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashigProductRefDecoder Nothing


cdashigProductRefDecoder : Json.Decode.Decoder CdashigProductRef
cdashigProductRefDecoder =
    Json.Decode.succeed CdashigProductRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigProductRefElementDecoder : Json.Decode.Decoder CdashigProductRefElement
cdashigProductRefElementDecoder =
    Json.Decode.succeed CdashigProductRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigProductScenariosDecoder : Json.Decode.Decoder CdashigProductScenarios
cdashigProductScenariosDecoder =
    Json.Decode.succeed CdashigProductScenarios
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigProductScenariosLinksDecoder Nothing


cdashigProductScenariosLinksDecoder : Json.Decode.Decoder CdashigProductScenariosLinks
cdashigProductScenariosLinksDecoder =
    Json.Decode.succeed CdashigProductScenariosLinks
        |> maybeDecode "self" cdashigProductScenariosRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "scenarios" (Json.Decode.list cdashigScenarioRefElementDecoder) Nothing


cdashigProductScenariosRefDecoder : Json.Decode.Decoder CdashigProductScenariosRef
cdashigProductScenariosRefDecoder =
    Json.Decode.succeed CdashigProductScenariosRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigScenarioDecoder : Json.Decode.Decoder CdashigScenario
cdashigScenarioDecoder =
    Json.Decode.succeed CdashigScenario
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "domain" Json.Decode.string Nothing
        |> maybeDecode "scenario" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigScenarioLinksDecoder Nothing
        |> maybeDecode "fields" (Json.Decode.list cdashigScenarioFieldDecoder) Nothing


cdashigScenarioFieldDecoder : Json.Decode.Decoder CdashigScenarioField
cdashigScenarioFieldDecoder =
    Json.Decode.succeed CdashigScenarioField
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "definition" Json.Decode.string Nothing
        |> maybeDecode "questionText" Json.Decode.string Nothing
        |> maybeDecode "prompt" Json.Decode.string Nothing
        |> maybeDecode "completionInstructions" Json.Decode.string Nothing
        |> maybeDecode "implementationNotes" Json.Decode.string Nothing
        |> maybeDecode "simpleDatatype" Json.Decode.string Nothing
        |> maybeDecode "mappingInstructions" Json.Decode.string Nothing
        |> maybeDecode "core" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigScenarioFieldLinksDecoder Nothing


cdashigScenarioFieldLinksDecoder : Json.Decode.Decoder CdashigScenarioFieldLinks
cdashigScenarioFieldLinksDecoder =
    Json.Decode.succeed CdashigScenarioFieldLinks
        |> maybeDecode "self" cdashigScenarioFieldRefDecoder Nothing
        |> maybeDecode "codelist" (Json.Decode.list rootCtCodelistRefElementDecoder) Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "parentDomain" cdashigDomainRefDecoder Nothing
        |> maybeDecode "parentScenario" cdashigScenarioRefDecoder Nothing
        |> maybeDecode "rootItem" rootCdashigScenarioFieldRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashigScenarioFieldRefDecoder Nothing
        |> maybeDecode "sdtmigDatasetMappingTargets" (Json.Decode.list sdtmigDatasetVariableRefTargetDecoder) Nothing


cdashigScenarioFieldRefDecoder : Json.Decode.Decoder CdashigScenarioFieldRef
cdashigScenarioFieldRefDecoder =
    Json.Decode.succeed CdashigScenarioFieldRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigScenarioFieldRefElementDecoder : Json.Decode.Decoder CdashigScenarioFieldRefElement
cdashigScenarioFieldRefElementDecoder =
    Json.Decode.succeed CdashigScenarioFieldRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigScenarioFieldRefVersionDecoder : Json.Decode.Decoder CdashigScenarioFieldRefVersion
cdashigScenarioFieldRefVersionDecoder =
    Json.Decode.succeed CdashigScenarioFieldRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigScenarioFieldsDecoder : Json.Decode.Decoder CdashigScenarioFields
cdashigScenarioFieldsDecoder =
    Json.Decode.succeed CdashigScenarioFields
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "domain" Json.Decode.string Nothing
        |> maybeDecode "scenario" Json.Decode.string Nothing
        |> maybeDecode "_links" cdashigScenarioFieldsLinksDecoder Nothing


cdashigScenarioFieldsLinksDecoder : Json.Decode.Decoder CdashigScenarioFieldsLinks
cdashigScenarioFieldsLinksDecoder =
    Json.Decode.succeed CdashigScenarioFieldsLinks
        |> maybeDecode "self" cdashigScenarioFieldsRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "parentClass" cdashigClassRefDecoder Nothing
        |> maybeDecode "parentDomain" cdashigDomainRefDecoder Nothing
        |> maybeDecode "fields" (Json.Decode.list cdashigScenarioFieldRefElementDecoder) Nothing


cdashigScenarioFieldsRefDecoder : Json.Decode.Decoder CdashigScenarioFieldsRef
cdashigScenarioFieldsRefDecoder =
    Json.Decode.succeed CdashigScenarioFieldsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigScenarioLinksDecoder : Json.Decode.Decoder CdashigScenarioLinks
cdashigScenarioLinksDecoder =
    Json.Decode.succeed CdashigScenarioLinks
        |> maybeDecode "self" cdashigScenarioRefDecoder Nothing
        |> maybeDecode "parentProduct" cdashigProductRefDecoder Nothing
        |> maybeDecode "parentClass" cdashigClassRefDecoder Nothing
        |> maybeDecode "parentDomain" cdashigDomainRefDecoder Nothing
        |> maybeDecode "priorVersion" cdashigScenarioRefDecoder Nothing


cdashigScenarioRefDecoder : Json.Decode.Decoder CdashigScenarioRef
cdashigScenarioRefDecoder =
    Json.Decode.succeed CdashigScenarioRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


cdashigScenarioRefElementDecoder : Json.Decode.Decoder CdashigScenarioRefElement
cdashigScenarioRefElementDecoder =
    Json.Decode.succeed CdashigScenarioRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctCodelistDecoder : Json.Decode.Decoder CtCodelist
ctCodelistDecoder =
    Json.Decode.succeed CtCodelist
        |> maybeDecode "conceptId" Json.Decode.string Nothing
        |> maybeDecode "extensible" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "submissionValue" Json.Decode.string Nothing
        |> maybeDecode "definition" Json.Decode.string Nothing
        |> maybeDecode "preferredTerm" Json.Decode.string Nothing
        |> maybeDecode "synonyms" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "_links" ctCodelistLinksDecoder Nothing
        |> maybeDecode "terms" (Json.Decode.list ctPackageTermDecoder) Nothing


ctCodelistLinksDecoder : Json.Decode.Decoder CtCodelistLinks
ctCodelistLinksDecoder =
    Json.Decode.succeed CtCodelistLinks
        |> maybeDecode "self" ctCodelistRefDecoder Nothing
        |> maybeDecode "parentPackage" ctPackageRefDecoder Nothing
        |> maybeDecode "rootItem" rootCtCodelistRefDecoder Nothing
        |> maybeDecode "priorVersion" ctCodelistRefDecoder Nothing


ctCodelistRefDecoder : Json.Decode.Decoder CtCodelistRef
ctCodelistRefDecoder =
    Json.Decode.succeed CtCodelistRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctCodelistRefElementDecoder : Json.Decode.Decoder CtCodelistRefElement
ctCodelistRefElementDecoder =
    Json.Decode.succeed CtCodelistRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctCodelistRefVersionDecoder : Json.Decode.Decoder CtCodelistRefVersion
ctCodelistRefVersionDecoder =
    Json.Decode.succeed CtCodelistRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctCodelistTermsDecoder : Json.Decode.Decoder CtCodelistTerms
ctCodelistTermsDecoder =
    Json.Decode.succeed CtCodelistTerms
        |> maybeDecode "conceptId" Json.Decode.string Nothing
        |> maybeDecode "extensible" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "submissionValue" Json.Decode.string Nothing
        |> maybeDecode "definition" Json.Decode.string Nothing
        |> maybeDecode "preferredTerm" Json.Decode.string Nothing
        |> maybeDecode "synonyms" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "_links" ctCodelistTermsLinksDecoder Nothing


ctCodelistTermsLinksDecoder : Json.Decode.Decoder CtCodelistTermsLinks
ctCodelistTermsLinksDecoder =
    Json.Decode.succeed CtCodelistTermsLinks
        |> maybeDecode "self" ctCodelistTermsRefDecoder Nothing
        |> maybeDecode "parentPackage" ctPackageRefDecoder Nothing
        |> maybeDecode "rootItem" rootCtCodelistRefDecoder Nothing
        |> maybeDecode "priorVersion" ctCodelistTermsRefDecoder Nothing
        |> maybeDecode "terms" (Json.Decode.list ctTermRefElementDecoder) Nothing


ctCodelistTermsRefDecoder : Json.Decode.Decoder CtCodelistTermsRef
ctCodelistTermsRefDecoder =
    Json.Decode.succeed CtCodelistTermsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctPackageDecoder : Json.Decode.Decoder CtPackage
ctPackageDecoder =
    Json.Decode.succeed CtPackage
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" ctPackageLinksDecoder Nothing
        |> maybeDecode "codelists" (Json.Decode.list ctPackageCodelistsDecoder) Nothing


ctPackageCodelistsDecoder : Json.Decode.Decoder CtPackageCodelists
ctPackageCodelistsDecoder =
    Json.Decode.succeed CtPackageCodelists
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" ctPackageCodelistsLinksDecoder Nothing


ctPackageCodelistsLinksDecoder : Json.Decode.Decoder CtPackageCodelistsLinks
ctPackageCodelistsLinksDecoder =
    Json.Decode.succeed CtPackageCodelistsLinks
        |> maybeDecode "self" ctPackageCodelistsRefDecoder Nothing
        |> maybeDecode "priorVersion" ctPackageCodelistsRefDecoder Nothing
        |> maybeDecode "codelists" (Json.Decode.list ctCodelistRefElementDecoder) Nothing


ctPackageCodelistsRefDecoder : Json.Decode.Decoder CtPackageCodelistsRef
ctPackageCodelistsRefDecoder =
    Json.Decode.succeed CtPackageCodelistsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctPackageLinksDecoder : Json.Decode.Decoder CtPackageLinks
ctPackageLinksDecoder =
    Json.Decode.succeed CtPackageLinks
        |> maybeDecode "self" ctPackageRefDecoder Nothing
        |> maybeDecode "priorVersion" ctPackageRefDecoder Nothing


ctPackageRefDecoder : Json.Decode.Decoder CtPackageRef
ctPackageRefDecoder =
    Json.Decode.succeed CtPackageRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctPackageRefElementDecoder : Json.Decode.Decoder CtPackageRefElement
ctPackageRefElementDecoder =
    Json.Decode.succeed CtPackageRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctPackageTermDecoder : Json.Decode.Decoder CtPackageTerm
ctPackageTermDecoder =
    Json.Decode.succeed CtPackageTerm
        |> maybeDecode "conceptId" Json.Decode.string Nothing
        |> maybeDecode "submissionValue" Json.Decode.string Nothing
        |> maybeDecode "definition" Json.Decode.string Nothing
        |> maybeDecode "preferredTerm" Json.Decode.string Nothing
        |> maybeDecode "synonyms" (Json.Decode.list Json.Decode.string) Nothing


ctPackagesDecoder : Json.Decode.Decoder CtPackages
ctPackagesDecoder =
    Json.Decode.succeed CtPackages
        |> maybeDecode "_links" ctPackagesLinksDecoder Nothing


ctPackagesLinksDecoder : Json.Decode.Decoder CtPackagesLinks
ctPackagesLinksDecoder =
    Json.Decode.succeed CtPackagesLinks
        |> maybeDecode "self" ctPackagesRefDecoder Nothing
        |> maybeDecode "packages" (Json.Decode.list ctPackageRefElementDecoder) Nothing


ctPackagesRefDecoder : Json.Decode.Decoder CtPackagesRef
ctPackagesRefDecoder =
    Json.Decode.succeed CtPackagesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctTermDecoder : Json.Decode.Decoder CtTerm
ctTermDecoder =
    Json.Decode.succeed CtTerm
        |> maybeDecode "conceptId" Json.Decode.string Nothing
        |> maybeDecode "submissionValue" Json.Decode.string Nothing
        |> maybeDecode "definition" Json.Decode.string Nothing
        |> maybeDecode "preferredTerm" Json.Decode.string Nothing
        |> maybeDecode "synonyms" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "_links" ctTermLinksDecoder Nothing


ctTermLinksDecoder : Json.Decode.Decoder CtTermLinks
ctTermLinksDecoder =
    Json.Decode.succeed CtTermLinks
        |> maybeDecode "self" ctTermRefDecoder Nothing
        |> maybeDecode "parentPackage" ctPackageRefDecoder Nothing
        |> maybeDecode "parentCodelist" ctCodelistRefDecoder Nothing
        |> maybeDecode "rootItem" rootCtTermRefDecoder Nothing
        |> maybeDecode "priorVersion" ctTermRefDecoder Nothing


ctTermRefDecoder : Json.Decode.Decoder CtTermRef
ctTermRefDecoder =
    Json.Decode.succeed CtTermRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctTermRefElementDecoder : Json.Decode.Decoder CtTermRefElement
ctTermRefElementDecoder =
    Json.Decode.succeed CtTermRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


ctTermRefVersionDecoder : Json.Decode.Decoder CtTermRefVersion
ctTermRefVersionDecoder =
    Json.Decode.succeed CtTermRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


defaultErrorResponseDecoder : Json.Decode.Decoder DefaultErrorResponse
defaultErrorResponseDecoder =
    Json.Decode.succeed DefaultErrorResponse
        |> maybeDecode "statusCode" Json.Decode.string Nothing
        |> maybeDecode "reasonPhrase" Json.Decode.string Nothing
        |> maybeDecode "userMessage" Json.Decode.string Nothing
        |> maybeDecode "adminMessage" Json.Decode.string Nothing


defaultSearchResponseDecoder : Json.Decode.Decoder DefaultSearchResponse
defaultSearchResponseDecoder =
    Json.Decode.succeed DefaultSearchResponse
        |> maybeDecode "hits" (Json.Decode.list defaultSearchResponseHitsInnerDecoder) Nothing
        |> maybeDecode "totalHits" Json.Decode.float Nothing


defaultSearchResponseHitsInnerDecoder : Json.Decode.Decoder DefaultSearchResponseHitsInner
defaultSearchResponseHitsInnerDecoder =
    Json.Decode.succeed DefaultSearchResponseHitsInner
        |> decode "href" Json.Decode.string 
        |> decode "type" Json.Decode.string 


defaultSearchScopesDecoder : Json.Decode.Decoder DefaultSearchScopes
defaultSearchScopesDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "class" ->
                        Json.Decode.succeed DefaultSearchScopesClass

                    "codelist" ->
                        Json.Decode.succeed DefaultSearchScopesCodelist

                    "conceptId" ->
                        Json.Decode.succeed DefaultSearchScopesConceptId

                    "core" ->
                        Json.Decode.succeed DefaultSearchScopesCore

                    "dataStructure" ->
                        Json.Decode.succeed DefaultSearchScopesDataStructure

                    "datasetStructure" ->
                        Json.Decode.succeed DefaultSearchScopesDatasetStructure

                    "definition" ->
                        Json.Decode.succeed DefaultSearchScopesDefinition

                    "description" ->
                        Json.Decode.succeed DefaultSearchScopesDescription

                    "domain" ->
                        Json.Decode.succeed DefaultSearchScopesDomain

                    "effectiveDate" ->
                        Json.Decode.succeed DefaultSearchScopesEffectiveDate

                    "extensible" ->
                        Json.Decode.succeed DefaultSearchScopesExtensible

                    "href" ->
                        Json.Decode.succeed DefaultSearchScopesHref

                    "label" ->
                        Json.Decode.succeed DefaultSearchScopesLabel

                    "measureType" ->
                        Json.Decode.succeed DefaultSearchScopesMeasureType

                    "name" ->
                        Json.Decode.succeed DefaultSearchScopesName

                    "preferredTerm" ->
                        Json.Decode.succeed DefaultSearchScopesPreferredTerm

                    "product" ->
                        Json.Decode.succeed DefaultSearchScopesProduct

                    "productGroup" ->
                        Json.Decode.succeed DefaultSearchScopesProductGroup

                    "registrationStatus" ->
                        Json.Decode.succeed DefaultSearchScopesRegistrationStatus

                    "roleDescription" ->
                        Json.Decode.succeed DefaultSearchScopesRoleDescription

                    "sdtmTarget" ->
                        Json.Decode.succeed DefaultSearchScopesSdtmTarget

                    "simpleDatatype" ->
                        Json.Decode.succeed DefaultSearchScopesSimpleDatatype

                    "submissionValue" ->
                        Json.Decode.succeed DefaultSearchScopesSubmissionValue

                    "synonyms" ->
                        Json.Decode.succeed DefaultSearchScopesSynonyms

                    "type" ->
                        Json.Decode.succeed DefaultSearchScopesType

                    "uiHref" ->
                        Json.Decode.succeed DefaultSearchScopesUiHref

                    "valueDomain" ->
                        Json.Decode.succeed DefaultSearchScopesValueDomain

                    "variableSet" ->
                        Json.Decode.succeed DefaultSearchScopesVariableSet

                    "version" ->
                        Json.Decode.succeed DefaultSearchScopesVersion

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


exportAdamDatastructuresRowDecoder : Json.Decode.Decoder ExportAdamDatastructuresRow
exportAdamDatastructuresRowDecoder =
    Json.Decode.succeed ExportAdamDatastructuresRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Data Structure Name" Json.Decode.string Nothing
        |> maybeDecode "Dataset Name" Json.Decode.string Nothing
        |> maybeDecode "Dataset Label" Json.Decode.string Nothing
        |> maybeDecode "Dataset Description" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing


exportAdamDatastructuresTableDecoder : Json.Decode.Decoder ExportAdamDatastructuresTable
exportAdamDatastructuresTableDecoder =
    Json.Decode.succeed ExportAdamDatastructuresTable
        |> maybeDecode "datastructures" (Json.Decode.list exportAdamDatastructuresRowDecoder) Nothing


exportAdamVariablesRowDecoder : Json.Decode.Decoder ExportAdamVariablesRow
exportAdamVariablesRowDecoder =
    Json.Decode.succeed ExportAdamVariablesRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Data Structure Name" Json.Decode.string Nothing
        |> maybeDecode "Dataset Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Group" Json.Decode.string Nothing
        |> maybeDecode "Variable Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Label" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "Codelist/Controlled Terms" Json.Decode.string Nothing
        |> maybeDecode "Core" Json.Decode.string Nothing
        |> maybeDecode "CDISC Notes" Json.Decode.string Nothing


exportAdamVariablesTableDecoder : Json.Decode.Decoder ExportAdamVariablesTable
exportAdamVariablesTableDecoder =
    Json.Decode.succeed ExportAdamVariablesTable
        |> maybeDecode "variables" (Json.Decode.list exportAdamVariablesRowDecoder) Nothing


exportAdamWorkbookDecoder : Json.Decode.Decoder ExportAdamWorkbook
exportAdamWorkbookDecoder =
    Json.Decode.succeed ExportAdamWorkbook
        |> maybeDecode "variables" (Json.Decode.list exportAdamVariablesRowDecoder) Nothing
        |> maybeDecode "datastructures" (Json.Decode.list exportAdamDatastructuresRowDecoder) Nothing


exportCdashClassVariablesRowDecoder : Json.Decode.Decoder ExportCdashClassVariablesRow
exportCdashClassVariablesRowDecoder =
    Json.Decode.succeed ExportCdashClassVariablesRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Domain" Json.Decode.string Nothing
        |> maybeDecode "Variable Order" Json.Decode.string Nothing
        |> maybeDecode "CDASH Variable" Json.Decode.string Nothing
        |> maybeDecode "CDASH Variable Label" Json.Decode.string Nothing
        |> maybeDecode "DRAFT CDASH Definition" Json.Decode.string Nothing
        |> maybeDecode "Domain Specific" Json.Decode.string Nothing
        |> maybeDecode "Question Text" Json.Decode.string Nothing
        |> maybeDecode "Prompt" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "SDTM Target" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "Mapping Instructions" Json.Decode.string Nothing
        |> maybeDecode "Controlled Terminology Codelist Name" Json.Decode.string Nothing
        |> maybeDecode "Implementation Notes" Json.Decode.string Nothing


exportCdashDomainVariablesRowDecoder : Json.Decode.Decoder ExportCdashDomainVariablesRow
exportCdashDomainVariablesRowDecoder =
    Json.Decode.succeed ExportCdashDomainVariablesRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Domain" Json.Decode.string Nothing
        |> maybeDecode "Variable Order" Json.Decode.string Nothing
        |> maybeDecode "CDASH Variable" Json.Decode.string Nothing
        |> maybeDecode "CDASH Variable Label" Json.Decode.string Nothing
        |> maybeDecode "DRAFT CDASH Definition" Json.Decode.string Nothing
        |> maybeDecode "Domain Specific" Json.Decode.string Nothing
        |> maybeDecode "Question Text" Json.Decode.string Nothing
        |> maybeDecode "Prompt" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "SDTM Target" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "Mapping Instructions" Json.Decode.string Nothing
        |> maybeDecode "Controlled Terminology Codelist Name" Json.Decode.string Nothing
        |> maybeDecode "Implementation Notes" Json.Decode.string Nothing


exportCdashTableDecoder : Json.Decode.Decoder ExportCdashTable
exportCdashTableDecoder =
    Json.Decode.succeed ExportCdashTable
        |> maybeDecode "class-variables" (Json.Decode.list exportCdashClassVariablesRowDecoder) Nothing
        |> maybeDecode "domain-variables" (Json.Decode.list exportCdashDomainVariablesRowDecoder) Nothing


exportCdashigDomainVariablesRowDecoder : Json.Decode.Decoder ExportCdashigDomainVariablesRow
exportCdashigDomainVariablesRowDecoder =
    Json.Decode.succeed ExportCdashigDomainVariablesRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Domain" Json.Decode.string Nothing
        |> maybeDecode "Data Collection Scenario" Json.Decode.string Nothing
        |> maybeDecode "Variable Order" Json.Decode.string Nothing
        |> maybeDecode "CDASHIG Variable" Json.Decode.string Nothing
        |> maybeDecode "CDASHIG Variable Label" Json.Decode.string Nothing
        |> maybeDecode "DRAFT CDASHIG Definition" Json.Decode.string Nothing
        |> maybeDecode "Question Text" Json.Decode.string Nothing
        |> maybeDecode "Prompt" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "CDASHIG Core" Json.Decode.string Nothing
        |> maybeDecode "Case Report Form Completion Instructions" Json.Decode.string Nothing
        |> maybeDecode "SDTMIG Target" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "Mapping Instructions" Json.Decode.string Nothing
        |> maybeDecode "Controlled Terminology Codelist Name" Json.Decode.string Nothing
        |> maybeDecode "Implementation Notes" Json.Decode.string Nothing


exportCdashigScenarioVariablesRowDecoder : Json.Decode.Decoder ExportCdashigScenarioVariablesRow
exportCdashigScenarioVariablesRowDecoder =
    Json.Decode.succeed ExportCdashigScenarioVariablesRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Domain" Json.Decode.string Nothing
        |> maybeDecode "Data Collection Scenario" Json.Decode.string Nothing
        |> maybeDecode "Variable Order" Json.Decode.string Nothing
        |> maybeDecode "CDASHIG Variable" Json.Decode.string Nothing
        |> maybeDecode "CDASHIG Variable Label" Json.Decode.string Nothing
        |> maybeDecode "DRAFT CDASHIG Definition" Json.Decode.string Nothing
        |> maybeDecode "Question Text" Json.Decode.string Nothing
        |> maybeDecode "Prompt" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "CDASHIG Core" Json.Decode.string Nothing
        |> maybeDecode "Case Report Form Completion Instructions" Json.Decode.string Nothing
        |> maybeDecode "SDTMIG Target" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "Mapping Instructions" Json.Decode.string Nothing
        |> maybeDecode "Controlled Terminology Codelist Name" Json.Decode.string Nothing
        |> maybeDecode "Implementation Notes" Json.Decode.string Nothing


exportCdashigTableDecoder : Json.Decode.Decoder ExportCdashigTable
exportCdashigTableDecoder =
    Json.Decode.succeed ExportCdashigTable
        |> maybeDecode "domain-variables" (Json.Decode.list exportCdashigDomainVariablesRowDecoder) Nothing
        |> maybeDecode "scenario-variables" (Json.Decode.list exportCdashigScenarioVariablesRowDecoder) Nothing


exportCtCodelistDecoder : Json.Decode.Decoder ExportCtCodelist
exportCtCodelistDecoder =
    Json.Decode.succeed ExportCtCodelist
        |> maybeDecode "Code" Json.Decode.string Nothing
        |> maybeDecode "Codelist Code" Json.Decode.string Nothing
        |> maybeDecode "Codelist Extensible (Yes/No)" Json.Decode.string Nothing
        |> maybeDecode "Codelist Name" Json.Decode.string Nothing
        |> maybeDecode "CDISC Submission Value" Json.Decode.string Nothing
        |> maybeDecode "CDISC Synonym(s)" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "CDISC Definition" Json.Decode.string Nothing
        |> maybeDecode "NCI Preferred Term" Json.Decode.string Nothing
        |> maybeDecode "Standard and Date" Json.Decode.string Nothing
        |> maybeDecode "" (Json.Decode.list exportCtTermDecoder) Nothing


exportCtTableDecoder : Json.Decode.Decoder ExportCtTable
exportCtTableDecoder =
    Json.Decode.succeed ExportCtTable
        |> maybeDecode "ct" (Json.Decode.list exportCtCodelistDecoder) Nothing


exportCtTermDecoder : Json.Decode.Decoder ExportCtTerm
exportCtTermDecoder =
    Json.Decode.succeed ExportCtTerm
        |> maybeDecode "bundle-1" Json.Decode.string Nothing
        |> maybeDecode "CDISC Synonym(s)" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "bundle-2" Json.Decode.string Nothing


exportQrsCsvItemsRowDecoder : Json.Decode.Decoder ExportQrsCsvItemsRow
exportQrsCsvItemsRowDecoder =
    Json.Decode.succeed ExportQrsCsvItemsRow
        |> maybeDecode "QRS Measure Name" Json.Decode.string Nothing
        |> maybeDecode "QRS Measure Label" Json.Decode.string Nothing
        |> maybeDecode "QRS Measure Type" Json.Decode.string Nothing
        |> maybeDecode "Item Sequence" Json.Decode.string Nothing
        |> maybeDecode "Test Name" Json.Decode.string Nothing
        |> maybeDecode "Item Text" Json.Decode.string Nothing
        |> maybeDecode "Test&#39;s Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Test&#39;s Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Test Code&#39;s Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Test Code&#39;s Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Subcategory&#39;s Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Subcategory&#39;s Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Evaluator&#39;s Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Evaluator&#39;s Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Free-form Response&#39;s Datatype" Json.Decode.string Nothing
        |> maybeDecode "Response Group" Json.Decode.string Nothing


exportQrsGeneralDecoder : Json.Decode.Decoder ExportQrsGeneral
exportQrsGeneralDecoder =
    Json.Decode.succeed ExportQrsGeneral
        |> maybeDecode "Name" Json.Decode.string Nothing
        |> maybeDecode "Label" Json.Decode.string Nothing
        |> maybeDecode "Effective Date" Json.Decode.string Nothing
        |> maybeDecode "Description" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "Category&#39;s Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Category&#39;s Term C-Code" Json.Decode.string Nothing


exportQrsItemsTableDecoder : Json.Decode.Decoder ExportQrsItemsTable
exportQrsItemsTableDecoder =
    Json.Decode.succeed ExportQrsItemsTable
        |> maybeDecode "items" (Json.Decode.list exportQrsCsvItemsRowDecoder) Nothing


exportQrsResponsesDecoder : Json.Decode.Decoder ExportQrsResponses
exportQrsResponsesDecoder =
    Json.Decode.succeed ExportQrsResponses
        |> maybeDecode "Response Group" Json.Decode.string Nothing
        |> maybeDecode "Sequence" Json.Decode.string Nothing
        |> maybeDecode "Response&#39;s Original Result Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Response&#39;s Original Result Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Response&#39;s Original Result Unit Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Response&#39;s Original Result Unit Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Response&#39;s Standardized Result Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Response&#39;s Standardized Result Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Response&#39;s Standardized Result Unit Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Response&#39;s Standardized Result Unit Term C-Code" Json.Decode.string Nothing


exportQrsWorkbookDecoder : Json.Decode.Decoder ExportQrsWorkbook
exportQrsWorkbookDecoder =
    Json.Decode.succeed ExportQrsWorkbook
        |> maybeDecode "self" exportQrsGeneralDecoder Nothing
        |> maybeDecode "items" (Json.Decode.list exportQrsWorkbookItemsRowDecoder) Nothing
        |> maybeDecode "responses" (Json.Decode.list exportQrsResponsesDecoder) Nothing


exportQrsWorkbookItemsRowDecoder : Json.Decode.Decoder ExportQrsWorkbookItemsRow
exportQrsWorkbookItemsRowDecoder =
    Json.Decode.succeed ExportQrsWorkbookItemsRow
        |> maybeDecode "Item Sequence" Json.Decode.string Nothing
        |> maybeDecode "Test Name" Json.Decode.string Nothing
        |> maybeDecode "Item Text" Json.Decode.string Nothing
        |> maybeDecode "Test&#39;s Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Test&#39;s Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Test Code&#39;s Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Test Code&#39;s Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Subcategory&#39;s Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Subcategory&#39;s Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Evaluator&#39;s Codelist C-Code" Json.Decode.string Nothing
        |> maybeDecode "Evaluator&#39;s Term C-Code" Json.Decode.string Nothing
        |> maybeDecode "Free-form Response&#39;s Datatype" Json.Decode.string Nothing
        |> maybeDecode "Response Group" Json.Decode.string Nothing


exportSdtmClassVariablesRowDecoder : Json.Decode.Decoder ExportSdtmClassVariablesRow
exportSdtmClassVariablesRowDecoder =
    Json.Decode.succeed ExportSdtmClassVariablesRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Variable Order" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Dataset Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Label" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "Controlled Terms, Codelist or Format" Json.Decode.string Nothing
        |> maybeDecode "Role" Json.Decode.string Nothing
        |> maybeDecode "Role Description" Json.Decode.string Nothing
        |> maybeDecode "Description" Json.Decode.string Nothing


exportSdtmDatasetVariablesRowDecoder : Json.Decode.Decoder ExportSdtmDatasetVariablesRow
exportSdtmDatasetVariablesRowDecoder =
    Json.Decode.succeed ExportSdtmDatasetVariablesRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Variable Order" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Dataset Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Label" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "Controlled Terms, Codelist or Format" Json.Decode.string Nothing
        |> maybeDecode "Role" Json.Decode.string Nothing
        |> maybeDecode "Role Description" Json.Decode.string Nothing
        |> maybeDecode "Description" Json.Decode.string Nothing


exportSdtmDatasetsRowDecoder : Json.Decode.Decoder ExportSdtmDatasetsRow
exportSdtmDatasetsRowDecoder =
    Json.Decode.succeed ExportSdtmDatasetsRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Dataset Name" Json.Decode.string Nothing
        |> maybeDecode "Dataset Label" Json.Decode.string Nothing
        |> maybeDecode "Structure" Json.Decode.string Nothing


exportSdtmDatasetsTableDecoder : Json.Decode.Decoder ExportSdtmDatasetsTable
exportSdtmDatasetsTableDecoder =
    Json.Decode.succeed ExportSdtmDatasetsTable
        |> maybeDecode "datasets" (Json.Decode.list exportSdtmDatasetsRowDecoder) Nothing


exportSdtmVariablesTableDecoder : Json.Decode.Decoder ExportSdtmVariablesTable
exportSdtmVariablesTableDecoder =
    Json.Decode.succeed ExportSdtmVariablesTable
        |> maybeDecode "class-variables" (Json.Decode.list exportSdtmClassVariablesRowDecoder) Nothing
        |> maybeDecode "dataset-variables" (Json.Decode.list exportSdtmDatasetVariablesRowDecoder) Nothing


exportSdtmWorkbookDecoder : Json.Decode.Decoder ExportSdtmWorkbook
exportSdtmWorkbookDecoder =
    Json.Decode.succeed ExportSdtmWorkbook
        |> maybeDecode "class-variables" (Json.Decode.list exportSdtmClassVariablesRowDecoder) Nothing
        |> maybeDecode "dataset-variables" (Json.Decode.list exportSdtmDatasetVariablesRowDecoder) Nothing
        |> maybeDecode "datasets" (Json.Decode.list exportSdtmDatasetsRowDecoder) Nothing


exportSdtmigDatasetsRowDecoder : Json.Decode.Decoder ExportSdtmigDatasetsRow
exportSdtmigDatasetsRowDecoder =
    Json.Decode.succeed ExportSdtmigDatasetsRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Dataset Name" Json.Decode.string Nothing
        |> maybeDecode "Dataset Label" Json.Decode.string Nothing
        |> maybeDecode "Structure" Json.Decode.string Nothing


exportSdtmigDatasetsTableDecoder : Json.Decode.Decoder ExportSdtmigDatasetsTable
exportSdtmigDatasetsTableDecoder =
    Json.Decode.succeed ExportSdtmigDatasetsTable
        |> maybeDecode "datasets" (Json.Decode.list exportSdtmigDatasetsRowDecoder) Nothing


exportSdtmigVariablesRowDecoder : Json.Decode.Decoder ExportSdtmigVariablesRow
exportSdtmigVariablesRowDecoder =
    Json.Decode.succeed ExportSdtmigVariablesRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Variable Order" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Dataset Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Label" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "Controlled Terms, Codelist or Format" Json.Decode.string Nothing
        |> maybeDecode "Role" Json.Decode.string Nothing
        |> maybeDecode "CDISC Notes" Json.Decode.string Nothing
        |> maybeDecode "Core" Json.Decode.string Nothing


exportSdtmigVariablesTableDecoder : Json.Decode.Decoder ExportSdtmigVariablesTable
exportSdtmigVariablesTableDecoder =
    Json.Decode.succeed ExportSdtmigVariablesTable
        |> maybeDecode "variables" (Json.Decode.list exportSdtmigVariablesRowDecoder) Nothing


exportSdtmigWorkbookDecoder : Json.Decode.Decoder ExportSdtmigWorkbook
exportSdtmigWorkbookDecoder =
    Json.Decode.succeed ExportSdtmigWorkbook
        |> maybeDecode "variables" (Json.Decode.list exportSdtmigVariablesRowDecoder) Nothing
        |> maybeDecode "datasets" (Json.Decode.list exportSdtmigDatasetsRowDecoder) Nothing


exportSendigDatasetsRowDecoder : Json.Decode.Decoder ExportSendigDatasetsRow
exportSendigDatasetsRowDecoder =
    Json.Decode.succeed ExportSendigDatasetsRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Dataset Name" Json.Decode.string Nothing
        |> maybeDecode "Dataset Label" Json.Decode.string Nothing
        |> maybeDecode "Structure" Json.Decode.string Nothing


exportSendigDatasetsTableDecoder : Json.Decode.Decoder ExportSendigDatasetsTable
exportSendigDatasetsTableDecoder =
    Json.Decode.succeed ExportSendigDatasetsTable
        |> maybeDecode "datasets" (Json.Decode.list exportSendigDatasetsRowDecoder) Nothing


exportSendigVariablesRowDecoder : Json.Decode.Decoder ExportSendigVariablesRow
exportSendigVariablesRowDecoder =
    Json.Decode.succeed ExportSendigVariablesRow
        |> maybeDecode "Version" Json.Decode.string Nothing
        |> maybeDecode "Variable Order" Json.Decode.string Nothing
        |> maybeDecode "Class" Json.Decode.string Nothing
        |> maybeDecode "Dataset Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Name" Json.Decode.string Nothing
        |> maybeDecode "Variable Label" Json.Decode.string Nothing
        |> maybeDecode "Type" Json.Decode.string Nothing
        |> maybeDecode "Controlled Terms, Codelist or Format" Json.Decode.string Nothing
        |> maybeDecode "Role" Json.Decode.string Nothing
        |> maybeDecode "CDISC Notes" Json.Decode.string Nothing
        |> maybeDecode "Core" Json.Decode.string Nothing


exportSendigVariablesTableDecoder : Json.Decode.Decoder ExportSendigVariablesTable
exportSendigVariablesTableDecoder =
    Json.Decode.succeed ExportSendigVariablesTable
        |> maybeDecode "variables" (Json.Decode.list exportSendigVariablesRowDecoder) Nothing


exportSendigWorkbookDecoder : Json.Decode.Decoder ExportSendigWorkbook
exportSendigWorkbookDecoder =
    Json.Decode.succeed ExportSendigWorkbook
        |> maybeDecode "variables" (Json.Decode.list exportSendigVariablesRowDecoder) Nothing
        |> maybeDecode "datasets" (Json.Decode.list exportSendigDatasetsRowDecoder) Nothing


healthDecoder : Json.Decode.Decoder Health
healthDecoder =
    Json.Decode.succeed Health
        |> maybeDecode "healthy" Json.Decode.bool Nothing
        |> maybeDecode "ldapAuthenticationHealthy" Json.Decode.bool Nothing
        |> maybeDecode "ldapAuthorizationHealthy" Json.Decode.bool Nothing
        |> maybeDecode "databaseHealthy" Json.Decode.bool Nothing
        |> maybeDecode "esHealthy" Json.Decode.bool Nothing


lastupdatedDecoder : Json.Decode.Decoder Lastupdated
lastupdatedDecoder =
    Json.Decode.succeed Lastupdated
        |> maybeDecode "_links" lastupdatedLinksDecoder Nothing
        |> maybeDecode "overall" Json.Decode.string Nothing
        |> maybeDecode "data-analysis" Json.Decode.string Nothing
        |> maybeDecode "data-collection" Json.Decode.string Nothing
        |> maybeDecode "data-tabulation" Json.Decode.string Nothing
        |> maybeDecode "measure" Json.Decode.string Nothing
        |> maybeDecode "terminology" Json.Decode.string Nothing


lastupdatedLinksDecoder : Json.Decode.Decoder LastupdatedLinks
lastupdatedLinksDecoder =
    Json.Decode.succeed LastupdatedLinks
        |> maybeDecode "self" lastupdatedRefDecoder Nothing


lastupdatedRefDecoder : Json.Decode.Decoder LastupdatedRef
lastupdatedRefDecoder =
    Json.Decode.succeed LastupdatedRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


maintenanceBodyDecoder : Json.Decode.Decoder MaintenanceBody
maintenanceBodyDecoder =
    Json.Decode.succeed MaintenanceBody
        |> maybeDecode "maintenanceMode" Json.Decode.bool Nothing
        |> maybeDecode "maintenanceMessage" Json.Decode.string Nothing


mdrSearchScopesGet200ResponseDecoder : Json.Decode.Decoder MdrSearchScopesGet200Response
mdrSearchScopesGet200ResponseDecoder =
    Json.Decode.succeed MdrSearchScopesGet200Response
        |> maybeDecode "scopes" (Json.Decode.list defaultSearchScopesDecoder) Nothing


productgroupDataAnalysisDecoder : Json.Decode.Decoder ProductgroupDataAnalysis
productgroupDataAnalysisDecoder =
    Json.Decode.succeed ProductgroupDataAnalysis
        |> maybeDecode "_links" productgroupDataAnalysisLinksDecoder Nothing


productgroupDataAnalysisLinksDecoder : Json.Decode.Decoder ProductgroupDataAnalysisLinks
productgroupDataAnalysisLinksDecoder =
    Json.Decode.succeed ProductgroupDataAnalysisLinks
        |> maybeDecode "self" productgroupRefDecoder Nothing
        |> maybeDecode "adam" (Json.Decode.list adamProductRefElementDecoder) Nothing


productgroupDataCollectionDecoder : Json.Decode.Decoder ProductgroupDataCollection
productgroupDataCollectionDecoder =
    Json.Decode.succeed ProductgroupDataCollection
        |> maybeDecode "_links" productgroupDataCollectionLinksDecoder Nothing


productgroupDataCollectionLinksDecoder : Json.Decode.Decoder ProductgroupDataCollectionLinks
productgroupDataCollectionLinksDecoder =
    Json.Decode.succeed ProductgroupDataCollectionLinks
        |> maybeDecode "self" productgroupRefDecoder Nothing
        |> maybeDecode "cdash" (Json.Decode.list cdashProductRefElementDecoder) Nothing
        |> maybeDecode "cdashig" (Json.Decode.list cdashigProductRefElementDecoder) Nothing


productgroupDataTabulationDecoder : Json.Decode.Decoder ProductgroupDataTabulation
productgroupDataTabulationDecoder =
    Json.Decode.succeed ProductgroupDataTabulation
        |> maybeDecode "_links" productgroupDataTabulationLinksDecoder Nothing


productgroupDataTabulationLinksDecoder : Json.Decode.Decoder ProductgroupDataTabulationLinks
productgroupDataTabulationLinksDecoder =
    Json.Decode.succeed ProductgroupDataTabulationLinks
        |> maybeDecode "self" productgroupRefDecoder Nothing
        |> maybeDecode "sdtm" (Json.Decode.list sdtmProductRefElementDecoder) Nothing
        |> maybeDecode "sdtmig" (Json.Decode.list sdtmigProductRefElementDecoder) Nothing
        |> maybeDecode "sendig" (Json.Decode.list sendigProductRefElementDecoder) Nothing


productgroupQrsDecoder : Json.Decode.Decoder ProductgroupQrs
productgroupQrsDecoder =
    Json.Decode.succeed ProductgroupQrs
        |> maybeDecode "_links" productgroupQrsLinksDecoder Nothing


productgroupQrsLinksDecoder : Json.Decode.Decoder ProductgroupQrsLinks
productgroupQrsLinksDecoder =
    Json.Decode.succeed ProductgroupQrsLinks
        |> maybeDecode "self" productgroupRefDecoder Nothing
        |> maybeDecode "qrs" (Json.Decode.list qrsRefElementDecoder) Nothing


productgroupRefDecoder : Json.Decode.Decoder ProductgroupRef
productgroupRefDecoder =
    Json.Decode.succeed ProductgroupRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


productgroupTerminologyDecoder : Json.Decode.Decoder ProductgroupTerminology
productgroupTerminologyDecoder =
    Json.Decode.succeed ProductgroupTerminology
        |> maybeDecode "_links" productgroupTerminologyLinksDecoder Nothing


productgroupTerminologyLinksDecoder : Json.Decode.Decoder ProductgroupTerminologyLinks
productgroupTerminologyLinksDecoder =
    Json.Decode.succeed ProductgroupTerminologyLinks
        |> maybeDecode "self" productgroupRefDecoder Nothing
        |> maybeDecode "packages" (Json.Decode.list ctPackageRefElementDecoder) Nothing


productsDecoder : Json.Decode.Decoder Products
productsDecoder =
    Json.Decode.succeed Products
        |> maybeDecode "_links" productsLinksDecoder Nothing


productsLinksDecoder : Json.Decode.Decoder ProductsLinks
productsLinksDecoder =
    Json.Decode.succeed ProductsLinks
        |> maybeDecode "self" productsRefDecoder Nothing
        |> maybeDecode "data-collection" productgroupDataCollectionDecoder Nothing
        |> maybeDecode "data-tabulation" productgroupDataTabulationDecoder Nothing
        |> maybeDecode "data-analysis" productgroupDataAnalysisDecoder Nothing
        |> maybeDecode "terminology" productgroupTerminologyDecoder Nothing
        |> maybeDecode "measure" productgroupQrsDecoder Nothing


productsRefDecoder : Json.Decode.Decoder ProductsRef
productsRefDecoder =
    Json.Decode.succeed ProductsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


qrsItemDecoder : Json.Decode.Decoder QrsItem
qrsItemDecoder =
    Json.Decode.succeed QrsItem
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "questionText" Json.Decode.string Nothing
        |> maybeDecode "_links" qrsItemLinksDecoder Nothing


qrsItemLinksDecoder : Json.Decode.Decoder QrsItemLinks
qrsItemLinksDecoder =
    Json.Decode.succeed QrsItemLinks
        |> maybeDecode "qrsItemTEST" rootCtTermRefDecoder Nothing
        |> maybeDecode "qrsItemTESTCD" rootCtTermRefDecoder Nothing
        |> maybeDecode "qrsItemEVAL" rootCtTermRefDecoder Nothing
        |> maybeDecode "qrsItemSCAT" rootCtTermRefDecoder Nothing
        |> maybeDecode "responsegroup" qrsResponsegroupDecoder Nothing


qrsItemRefElementDecoder : Json.Decode.Decoder QrsItemRefElement
qrsItemRefElementDecoder =
    Json.Decode.succeed QrsItemRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


qrsItemsDecoder : Json.Decode.Decoder QrsItems
qrsItemsDecoder =
    Json.Decode.succeed QrsItems
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "untilDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "qrsType" Json.Decode.string Nothing
        |> maybeDecode "_links" qrsItemsLinksDecoder Nothing


qrsItemsLinksDecoder : Json.Decode.Decoder QrsItemsLinks
qrsItemsLinksDecoder =
    Json.Decode.succeed QrsItemsLinks
        |> maybeDecode "self" qrsItemsRefDecoder Nothing
        |> maybeDecode "parentProduct" qrsProductRefDecoder Nothing
        |> maybeDecode "items" (Json.Decode.list qrsItemRefElementDecoder) Nothing


qrsItemsRefDecoder : Json.Decode.Decoder QrsItemsRef
qrsItemsRefDecoder =
    Json.Decode.succeed QrsItemsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


qrsProductDecoder : Json.Decode.Decoder QrsProduct
qrsProductDecoder =
    Json.Decode.succeed QrsProduct
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "untilDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "qrsType" Json.Decode.string Nothing
        |> maybeDecode "_links" qrsProductLinksDecoder Nothing
        |> maybeDecode "items" (Json.Decode.list qrsItemDecoder) Nothing


qrsProductLinksDecoder : Json.Decode.Decoder QrsProductLinks
qrsProductLinksDecoder =
    Json.Decode.succeed QrsProductLinks
        |> maybeDecode "self" qrsProductRefDecoder Nothing
        |> maybeDecode "priorVersion" qrsProductRefDecoder Nothing
        |> maybeDecode "qrsTermCAT" rootCtTermRefDecoder Nothing
        |> maybeDecode "qrsItems" qrsItemsRefDecoder Nothing


qrsProductRefDecoder : Json.Decode.Decoder QrsProductRef
qrsProductRefDecoder =
    Json.Decode.succeed QrsProductRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


qrsRefElementDecoder : Json.Decode.Decoder QrsRefElement
qrsRefElementDecoder =
    Json.Decode.succeed QrsRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


qrsResponseLinksDecoder : Json.Decode.Decoder QrsResponseLinks
qrsResponseLinksDecoder =
    Json.Decode.succeed QrsResponseLinks
        |> maybeDecode "qrsResponseORRES" rootCtTermRefDecoder Nothing
        |> maybeDecode "qrsResponseORRESU" rootCtTermRefDecoder Nothing
        |> maybeDecode "qrsResponseSTRESC" rootCtTermRefDecoder Nothing
        |> maybeDecode "qrsResponseSTRESCU" rootCtTermRefDecoder Nothing


qrsResponsegroupDecoder : Json.Decode.Decoder QrsResponsegroup
qrsResponsegroupDecoder =
    Json.Decode.succeed QrsResponsegroup
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "_links" qrsResponsegroupLinksDecoder Nothing


qrsResponsegroupLinksDecoder : Json.Decode.Decoder QrsResponsegroupLinks
qrsResponsegroupLinksDecoder =
    Json.Decode.succeed QrsResponsegroupLinks
        |> maybeDecode "self" qrsResponsegroupRefDecoder Nothing
        |> maybeDecode "responses" (Json.Decode.list qrsResponsesDecoder) Nothing


qrsResponsegroupRefDecoder : Json.Decode.Decoder QrsResponsegroupRef
qrsResponsegroupRefDecoder =
    Json.Decode.succeed QrsResponsegroupRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


qrsResponsegroupRefElementDecoder : Json.Decode.Decoder QrsResponsegroupRefElement
qrsResponsegroupRefElementDecoder =
    Json.Decode.succeed QrsResponsegroupRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


qrsResponsegroupsDecoder : Json.Decode.Decoder QrsResponsegroups
qrsResponsegroupsDecoder =
    Json.Decode.succeed QrsResponsegroups
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "untilDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "qrsType" Json.Decode.string Nothing
        |> maybeDecode "_links" qrsResponsegroupsLinksDecoder Nothing


qrsResponsegroupsLinksDecoder : Json.Decode.Decoder QrsResponsegroupsLinks
qrsResponsegroupsLinksDecoder =
    Json.Decode.succeed QrsResponsegroupsLinks
        |> maybeDecode "self" qrsResponsegroupsRefDecoder Nothing
        |> maybeDecode "responsegroups" (Json.Decode.list qrsResponsegroupRefElementDecoder) Nothing


qrsResponsegroupsRefDecoder : Json.Decode.Decoder QrsResponsegroupsRef
qrsResponsegroupsRefDecoder =
    Json.Decode.succeed QrsResponsegroupsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


qrsResponsesDecoder : Json.Decode.Decoder QrsResponses
qrsResponsesDecoder =
    Json.Decode.succeed QrsResponses
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "_links" qrsResponseLinksDecoder Nothing


rootCdashClassFieldDecoder : Json.Decode.Decoder RootCdashClassField
rootCdashClassFieldDecoder =
    Json.Decode.succeed RootCdashClassField
        |> maybeDecode "_links" rootCdashClassFieldLinksDecoder Nothing


rootCdashClassFieldLinksDecoder : Json.Decode.Decoder RootCdashClassFieldLinks
rootCdashClassFieldLinksDecoder =
    Json.Decode.succeed RootCdashClassFieldLinks
        |> maybeDecode "self" rootCdashClassFieldRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list cdashClassFieldRefVersionDecoder) Nothing


rootCdashClassFieldRefDecoder : Json.Decode.Decoder RootCdashClassFieldRef
rootCdashClassFieldRefDecoder =
    Json.Decode.succeed RootCdashClassFieldRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootCdashDomainFieldDecoder : Json.Decode.Decoder RootCdashDomainField
rootCdashDomainFieldDecoder =
    Json.Decode.succeed RootCdashDomainField
        |> maybeDecode "_links" rootCdashDomainFieldLinksDecoder Nothing


rootCdashDomainFieldLinksDecoder : Json.Decode.Decoder RootCdashDomainFieldLinks
rootCdashDomainFieldLinksDecoder =
    Json.Decode.succeed RootCdashDomainFieldLinks
        |> maybeDecode "self" rootCdashDomainFieldRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list cdashDomainFieldRefVersionDecoder) Nothing


rootCdashDomainFieldRefDecoder : Json.Decode.Decoder RootCdashDomainFieldRef
rootCdashDomainFieldRefDecoder =
    Json.Decode.succeed RootCdashDomainFieldRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootCdashigDomainFieldDecoder : Json.Decode.Decoder RootCdashigDomainField
rootCdashigDomainFieldDecoder =
    Json.Decode.succeed RootCdashigDomainField
        |> maybeDecode "_links" rootCdashigDomainFieldLinksDecoder Nothing


rootCdashigDomainFieldLinksDecoder : Json.Decode.Decoder RootCdashigDomainFieldLinks
rootCdashigDomainFieldLinksDecoder =
    Json.Decode.succeed RootCdashigDomainFieldLinks
        |> maybeDecode "self" rootCdashigDomainFieldRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list cdashigDomainFieldRefVersionDecoder) Nothing


rootCdashigDomainFieldRefDecoder : Json.Decode.Decoder RootCdashigDomainFieldRef
rootCdashigDomainFieldRefDecoder =
    Json.Decode.succeed RootCdashigDomainFieldRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootCdashigScenarioFieldDecoder : Json.Decode.Decoder RootCdashigScenarioField
rootCdashigScenarioFieldDecoder =
    Json.Decode.succeed RootCdashigScenarioField
        |> maybeDecode "_links" rootCdashigScenarioFieldLinksDecoder Nothing


rootCdashigScenarioFieldLinksDecoder : Json.Decode.Decoder RootCdashigScenarioFieldLinks
rootCdashigScenarioFieldLinksDecoder =
    Json.Decode.succeed RootCdashigScenarioFieldLinks
        |> maybeDecode "self" rootCdashigScenarioFieldRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list cdashigScenarioFieldRefVersionDecoder) Nothing


rootCdashigScenarioFieldRefDecoder : Json.Decode.Decoder RootCdashigScenarioFieldRef
rootCdashigScenarioFieldRefDecoder =
    Json.Decode.succeed RootCdashigScenarioFieldRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootCtCodelistDecoder : Json.Decode.Decoder RootCtCodelist
rootCtCodelistDecoder =
    Json.Decode.succeed RootCtCodelist
        |> maybeDecode "_links" rootCtCodelistLinksDecoder Nothing


rootCtCodelistLinksDecoder : Json.Decode.Decoder RootCtCodelistLinks
rootCtCodelistLinksDecoder =
    Json.Decode.succeed RootCtCodelistLinks
        |> maybeDecode "self" rootCtCodelistRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list ctCodelistRefVersionDecoder) Nothing


rootCtCodelistRefDecoder : Json.Decode.Decoder RootCtCodelistRef
rootCtCodelistRefDecoder =
    Json.Decode.succeed RootCtCodelistRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootCtCodelistRefElementDecoder : Json.Decode.Decoder RootCtCodelistRefElement
rootCtCodelistRefElementDecoder =
    Json.Decode.succeed RootCtCodelistRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootCtTermDecoder : Json.Decode.Decoder RootCtTerm
rootCtTermDecoder =
    Json.Decode.succeed RootCtTerm
        |> maybeDecode "_links" rootCtTermLinksDecoder Nothing


rootCtTermLinksDecoder : Json.Decode.Decoder RootCtTermLinks
rootCtTermLinksDecoder =
    Json.Decode.succeed RootCtTermLinks
        |> maybeDecode "self" rootCtTermRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list ctTermRefVersionDecoder) Nothing


rootCtTermRefDecoder : Json.Decode.Decoder RootCtTermRef
rootCtTermRefDecoder =
    Json.Decode.succeed RootCtTermRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootSdtmClassVariableDecoder : Json.Decode.Decoder RootSdtmClassVariable
rootSdtmClassVariableDecoder =
    Json.Decode.succeed RootSdtmClassVariable
        |> maybeDecode "_links" rootSdtmClassVariableLinksDecoder Nothing


rootSdtmClassVariableLinksDecoder : Json.Decode.Decoder RootSdtmClassVariableLinks
rootSdtmClassVariableLinksDecoder =
    Json.Decode.succeed RootSdtmClassVariableLinks
        |> maybeDecode "self" rootSdtmClassVariableRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list sdtmClassVariableRefVersionDecoder) Nothing


rootSdtmClassVariableRefDecoder : Json.Decode.Decoder RootSdtmClassVariableRef
rootSdtmClassVariableRefDecoder =
    Json.Decode.succeed RootSdtmClassVariableRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootSdtmDatasetVariableDecoder : Json.Decode.Decoder RootSdtmDatasetVariable
rootSdtmDatasetVariableDecoder =
    Json.Decode.succeed RootSdtmDatasetVariable
        |> maybeDecode "_links" rootSdtmDatasetVariableLinksDecoder Nothing


rootSdtmDatasetVariableLinksDecoder : Json.Decode.Decoder RootSdtmDatasetVariableLinks
rootSdtmDatasetVariableLinksDecoder =
    Json.Decode.succeed RootSdtmDatasetVariableLinks
        |> maybeDecode "self" rootSdtmDatasetVariableRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list sdtmDatasetVariableRefVersionDecoder) Nothing


rootSdtmDatasetVariableRefDecoder : Json.Decode.Decoder RootSdtmDatasetVariableRef
rootSdtmDatasetVariableRefDecoder =
    Json.Decode.succeed RootSdtmDatasetVariableRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootSdtmigDatasetVariableDecoder : Json.Decode.Decoder RootSdtmigDatasetVariable
rootSdtmigDatasetVariableDecoder =
    Json.Decode.succeed RootSdtmigDatasetVariable
        |> maybeDecode "_links" rootSdtmigDatasetVariableLinksDecoder Nothing


rootSdtmigDatasetVariableLinksDecoder : Json.Decode.Decoder RootSdtmigDatasetVariableLinks
rootSdtmigDatasetVariableLinksDecoder =
    Json.Decode.succeed RootSdtmigDatasetVariableLinks
        |> maybeDecode "self" rootSdtmigDatasetVariableRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list sdtmigDatasetVariableRefVersionDecoder) Nothing


rootSdtmigDatasetVariableRefDecoder : Json.Decode.Decoder RootSdtmigDatasetVariableRef
rootSdtmigDatasetVariableRefDecoder =
    Json.Decode.succeed RootSdtmigDatasetVariableRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


rootSendigDatasetVariableDecoder : Json.Decode.Decoder RootSendigDatasetVariable
rootSendigDatasetVariableDecoder =
    Json.Decode.succeed RootSendigDatasetVariable
        |> maybeDecode "_links" rootSendigDatasetVariableLinksDecoder Nothing


rootSendigDatasetVariableLinksDecoder : Json.Decode.Decoder RootSendigDatasetVariableLinks
rootSendigDatasetVariableLinksDecoder =
    Json.Decode.succeed RootSendigDatasetVariableLinks
        |> maybeDecode "self" rootSendigDatasetVariableRefDecoder Nothing
        |> maybeDecode "versions" (Json.Decode.list sendigDatasetVariableRefVersionDecoder) Nothing


rootSendigDatasetVariableRefDecoder : Json.Decode.Decoder RootSendigDatasetVariableRef
rootSendigDatasetVariableRefDecoder =
    Json.Decode.succeed RootSendigDatasetVariableRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


scopeValuesDecoder : Json.Decode.Decoder ScopeValues
scopeValuesDecoder =
    Json.Decode.succeed ScopeValues
        |> maybeDecode "total" Json.Decode.float Nothing
        |> maybeDecode "hasMore" Json.Decode.bool Nothing
        |> maybeDecode "values" (Json.Decode.list Json.Decode.string) Nothing


sdtmClassDecoder : Json.Decode.Decoder SdtmClass
sdtmClassDecoder =
    Json.Decode.succeed SdtmClass
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmClassLinksDecoder Nothing
        |> maybeDecode "classVariables" (Json.Decode.list sdtmClassVariableDecoder) Nothing
        |> maybeDecode "datasets" (Json.Decode.list sdtmDatasetDecoder) Nothing


sdtmClassDatasetsDecoder : Json.Decode.Decoder SdtmClassDatasets
sdtmClassDatasetsDecoder =
    Json.Decode.succeed SdtmClassDatasets
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmClassDatasetsLinksDecoder Nothing


sdtmClassDatasetsLinksDecoder : Json.Decode.Decoder SdtmClassDatasetsLinks
sdtmClassDatasetsLinksDecoder =
    Json.Decode.succeed SdtmClassDatasetsLinks
        |> maybeDecode "self" sdtmClassDatasetsRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmProductRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmClassDatasetsRefDecoder Nothing
        |> maybeDecode "datasets" (Json.Decode.list sdtmDatasetRefElementDecoder) Nothing


sdtmClassDatasetsRefDecoder : Json.Decode.Decoder SdtmClassDatasetsRef
sdtmClassDatasetsRefDecoder =
    Json.Decode.succeed SdtmClassDatasetsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassLinksDecoder : Json.Decode.Decoder SdtmClassLinks
sdtmClassLinksDecoder =
    Json.Decode.succeed SdtmClassLinks
        |> maybeDecode "self" sdtmClassRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmProductRefDecoder Nothing
        |> maybeDecode "parentClass" sdtmClassRefDecoder Nothing
        |> maybeDecode "subclasses" (Json.Decode.list sdtmClassRefSubclassDecoder) Nothing
        |> maybeDecode "priorVersion" sdtmClassRefDecoder Nothing


sdtmClassRefDecoder : Json.Decode.Decoder SdtmClassRef
sdtmClassRefDecoder =
    Json.Decode.succeed SdtmClassRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassRefElementDecoder : Json.Decode.Decoder SdtmClassRefElement
sdtmClassRefElementDecoder =
    Json.Decode.succeed SdtmClassRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassRefSubclassDecoder : Json.Decode.Decoder SdtmClassRefSubclass
sdtmClassRefSubclassDecoder =
    Json.Decode.succeed SdtmClassRefSubclass
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassVariableDecoder : Json.Decode.Decoder SdtmClassVariable
sdtmClassVariableDecoder =
    Json.Decode.succeed SdtmClassVariable
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "role" Json.Decode.string Nothing
        |> maybeDecode "roleDescription" Json.Decode.string Nothing
        |> maybeDecode "simpleDatatype" Json.Decode.string Nothing
        |> maybeDecode "describedValueDomain" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmClassVariableLinksDecoder Nothing


sdtmClassVariableLinksDecoder : Json.Decode.Decoder SdtmClassVariableLinks
sdtmClassVariableLinksDecoder =
    Json.Decode.succeed SdtmClassVariableLinks
        |> maybeDecode "self" sdtmClassVariableRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmProductRefDecoder Nothing
        |> maybeDecode "parentClass" sdtmClassRefDecoder Nothing
        |> maybeDecode "qualifiesVariables" (Json.Decode.list sdtmClassVariableRefQualifiesDecoder) Nothing
        |> maybeDecode "rootItem" rootSdtmClassVariableRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmClassVariableRefDecoder Nothing


sdtmClassVariableRefDecoder : Json.Decode.Decoder SdtmClassVariableRef
sdtmClassVariableRefDecoder =
    Json.Decode.succeed SdtmClassVariableRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassVariableRefElementDecoder : Json.Decode.Decoder SdtmClassVariableRefElement
sdtmClassVariableRefElementDecoder =
    Json.Decode.succeed SdtmClassVariableRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassVariableRefQualifiesDecoder : Json.Decode.Decoder SdtmClassVariableRefQualifies
sdtmClassVariableRefQualifiesDecoder =
    Json.Decode.succeed SdtmClassVariableRefQualifies
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassVariableRefTargetDecoder : Json.Decode.Decoder SdtmClassVariableRefTarget
sdtmClassVariableRefTargetDecoder =
    Json.Decode.succeed SdtmClassVariableRefTarget
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassVariableRefVersionDecoder : Json.Decode.Decoder SdtmClassVariableRefVersion
sdtmClassVariableRefVersionDecoder =
    Json.Decode.succeed SdtmClassVariableRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassVariablesDecoder : Json.Decode.Decoder SdtmClassVariables
sdtmClassVariablesDecoder =
    Json.Decode.succeed SdtmClassVariables
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmClassVariablesLinksDecoder Nothing


sdtmClassVariablesLinksDecoder : Json.Decode.Decoder SdtmClassVariablesLinks
sdtmClassVariablesLinksDecoder =
    Json.Decode.succeed SdtmClassVariablesLinks
        |> maybeDecode "self" sdtmClassVariablesRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmProductRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmClassVariablesRefDecoder Nothing
        |> maybeDecode "classVariables" (Json.Decode.list sdtmClassVariableRefElementDecoder) Nothing


sdtmClassVariablesRefDecoder : Json.Decode.Decoder SdtmClassVariablesRef
sdtmClassVariablesRefDecoder =
    Json.Decode.succeed SdtmClassVariablesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmClassesDecoder : Json.Decode.Decoder SdtmClasses
sdtmClassesDecoder =
    Json.Decode.succeed SdtmClasses
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmClassesLinksDecoder Nothing


sdtmClassesLinksDecoder : Json.Decode.Decoder SdtmClassesLinks
sdtmClassesLinksDecoder =
    Json.Decode.succeed SdtmClassesLinks
        |> maybeDecode "self" sdtmClassesRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmClassesRefDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list sdtmClassRefElementDecoder) Nothing


sdtmClassesRefDecoder : Json.Decode.Decoder SdtmClassesRef
sdtmClassesRefDecoder =
    Json.Decode.succeed SdtmClassesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmDatasetDecoder : Json.Decode.Decoder SdtmDataset
sdtmDatasetDecoder =
    Json.Decode.succeed SdtmDataset
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "datasetStructure" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmDatasetLinksDecoder Nothing
        |> maybeDecode "datasetVariables" (Json.Decode.list sdtmDatasetVariableDecoder) Nothing


sdtmDatasetLinksDecoder : Json.Decode.Decoder SdtmDatasetLinks
sdtmDatasetLinksDecoder =
    Json.Decode.succeed SdtmDatasetLinks
        |> maybeDecode "self" sdtmDatasetRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmProductRefDecoder Nothing
        |> maybeDecode "parentClass" sdtmClassRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmDatasetRefDecoder Nothing


sdtmDatasetRefDecoder : Json.Decode.Decoder SdtmDatasetRef
sdtmDatasetRefDecoder =
    Json.Decode.succeed SdtmDatasetRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmDatasetRefElementDecoder : Json.Decode.Decoder SdtmDatasetRefElement
sdtmDatasetRefElementDecoder =
    Json.Decode.succeed SdtmDatasetRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmDatasetVariableDecoder : Json.Decode.Decoder SdtmDatasetVariable
sdtmDatasetVariableDecoder =
    Json.Decode.succeed SdtmDatasetVariable
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "role" Json.Decode.string Nothing
        |> maybeDecode "roleDescription" Json.Decode.string Nothing
        |> maybeDecode "simpleDatatype" Json.Decode.string Nothing
        |> maybeDecode "describedValueDomain" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmDatasetVariableLinksDecoder Nothing


sdtmDatasetVariableLinksDecoder : Json.Decode.Decoder SdtmDatasetVariableLinks
sdtmDatasetVariableLinksDecoder =
    Json.Decode.succeed SdtmDatasetVariableLinks
        |> maybeDecode "self" sdtmDatasetVariableRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmProductRefDecoder Nothing
        |> maybeDecode "parentDataset" sdtmDatasetRefDecoder Nothing
        |> maybeDecode "rootItem" rootSdtmDatasetVariableRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmDatasetVariableRefDecoder Nothing


sdtmDatasetVariableRefDecoder : Json.Decode.Decoder SdtmDatasetVariableRef
sdtmDatasetVariableRefDecoder =
    Json.Decode.succeed SdtmDatasetVariableRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmDatasetVariableRefElementDecoder : Json.Decode.Decoder SdtmDatasetVariableRefElement
sdtmDatasetVariableRefElementDecoder =
    Json.Decode.succeed SdtmDatasetVariableRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmDatasetVariableRefTargetDecoder : Json.Decode.Decoder SdtmDatasetVariableRefTarget
sdtmDatasetVariableRefTargetDecoder =
    Json.Decode.succeed SdtmDatasetVariableRefTarget
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmDatasetVariableRefVersionDecoder : Json.Decode.Decoder SdtmDatasetVariableRefVersion
sdtmDatasetVariableRefVersionDecoder =
    Json.Decode.succeed SdtmDatasetVariableRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmDatasetVariablesDecoder : Json.Decode.Decoder SdtmDatasetVariables
sdtmDatasetVariablesDecoder =
    Json.Decode.succeed SdtmDatasetVariables
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "datasetStructure" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmDatasetVariablesLinksDecoder Nothing


sdtmDatasetVariablesLinksDecoder : Json.Decode.Decoder SdtmDatasetVariablesLinks
sdtmDatasetVariablesLinksDecoder =
    Json.Decode.succeed SdtmDatasetVariablesLinks
        |> maybeDecode "self" sdtmDatasetVariablesRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmProductRefDecoder Nothing
        |> maybeDecode "parentClass" sdtmClassRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmDatasetVariablesRefDecoder Nothing
        |> maybeDecode "datasetVariables" (Json.Decode.list sdtmDatasetVariableRefElementDecoder) Nothing


sdtmDatasetVariablesRefDecoder : Json.Decode.Decoder SdtmDatasetVariablesRef
sdtmDatasetVariablesRefDecoder =
    Json.Decode.succeed SdtmDatasetVariablesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmDatasetsDecoder : Json.Decode.Decoder SdtmDatasets
sdtmDatasetsDecoder =
    Json.Decode.succeed SdtmDatasets
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmDatasetsLinksDecoder Nothing


sdtmDatasetsLinksDecoder : Json.Decode.Decoder SdtmDatasetsLinks
sdtmDatasetsLinksDecoder =
    Json.Decode.succeed SdtmDatasetsLinks
        |> maybeDecode "self" sdtmDatasetsRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmProductRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmDatasetsRefDecoder Nothing
        |> maybeDecode "datasets" (Json.Decode.list sdtmDatasetRefElementDecoder) Nothing


sdtmDatasetsRefDecoder : Json.Decode.Decoder SdtmDatasetsRef
sdtmDatasetsRefDecoder =
    Json.Decode.succeed SdtmDatasetsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmProductDecoder : Json.Decode.Decoder SdtmProduct
sdtmProductDecoder =
    Json.Decode.succeed SdtmProduct
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmProductLinksDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list sdtmClassDecoder) Nothing
        |> maybeDecode "datasets" (Json.Decode.list sdtmDatasetDecoder) Nothing


sdtmProductLinksDecoder : Json.Decode.Decoder SdtmProductLinks
sdtmProductLinksDecoder =
    Json.Decode.succeed SdtmProductLinks
        |> maybeDecode "self" sdtmProductRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmProductRefDecoder Nothing


sdtmProductRefDecoder : Json.Decode.Decoder SdtmProductRef
sdtmProductRefDecoder =
    Json.Decode.succeed SdtmProductRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmProductRefElementDecoder : Json.Decode.Decoder SdtmProductRefElement
sdtmProductRefElementDecoder =
    Json.Decode.succeed SdtmProductRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigClassDecoder : Json.Decode.Decoder SdtmigClass
sdtmigClassDecoder =
    Json.Decode.succeed SdtmigClass
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmigClassLinksDecoder Nothing
        |> maybeDecode "datasets" (Json.Decode.list sdtmigDatasetDecoder) Nothing


sdtmigClassDatasetsDecoder : Json.Decode.Decoder SdtmigClassDatasets
sdtmigClassDatasetsDecoder =
    Json.Decode.succeed SdtmigClassDatasets
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmigClassDatasetsLinksDecoder Nothing


sdtmigClassDatasetsLinksDecoder : Json.Decode.Decoder SdtmigClassDatasetsLinks
sdtmigClassDatasetsLinksDecoder =
    Json.Decode.succeed SdtmigClassDatasetsLinks
        |> maybeDecode "self" sdtmigClassDatasetsRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmigProductRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmigClassDatasetsRefDecoder Nothing
        |> maybeDecode "datasets" (Json.Decode.list sdtmigDatasetRefElementDecoder) Nothing


sdtmigClassDatasetsRefDecoder : Json.Decode.Decoder SdtmigClassDatasetsRef
sdtmigClassDatasetsRefDecoder =
    Json.Decode.succeed SdtmigClassDatasetsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigClassLinksDecoder : Json.Decode.Decoder SdtmigClassLinks
sdtmigClassLinksDecoder =
    Json.Decode.succeed SdtmigClassLinks
        |> maybeDecode "self" sdtmigClassRefDecoder Nothing
        |> maybeDecode "modelClass" sdtmClassRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmigProductRefDecoder Nothing
        |> maybeDecode "parentClass" sdtmigClassRefDecoder Nothing
        |> maybeDecode "subclasses" (Json.Decode.list sdtmigClassRefSubclassDecoder) Nothing
        |> maybeDecode "priorVersion" sdtmigClassRefDecoder Nothing


sdtmigClassRefDecoder : Json.Decode.Decoder SdtmigClassRef
sdtmigClassRefDecoder =
    Json.Decode.succeed SdtmigClassRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigClassRefElementDecoder : Json.Decode.Decoder SdtmigClassRefElement
sdtmigClassRefElementDecoder =
    Json.Decode.succeed SdtmigClassRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigClassRefSubclassDecoder : Json.Decode.Decoder SdtmigClassRefSubclass
sdtmigClassRefSubclassDecoder =
    Json.Decode.succeed SdtmigClassRefSubclass
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigClassesDecoder : Json.Decode.Decoder SdtmigClasses
sdtmigClassesDecoder =
    Json.Decode.succeed SdtmigClasses
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmigClassesLinksDecoder Nothing


sdtmigClassesLinksDecoder : Json.Decode.Decoder SdtmigClassesLinks
sdtmigClassesLinksDecoder =
    Json.Decode.succeed SdtmigClassesLinks
        |> maybeDecode "self" sdtmigClassesRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmigClassesRefDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list sdtmigClassRefElementDecoder) Nothing


sdtmigClassesRefDecoder : Json.Decode.Decoder SdtmigClassesRef
sdtmigClassesRefDecoder =
    Json.Decode.succeed SdtmigClassesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigDatasetDecoder : Json.Decode.Decoder SdtmigDataset
sdtmigDatasetDecoder =
    Json.Decode.succeed SdtmigDataset
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "datasetStructure" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmigDatasetLinksDecoder Nothing
        |> maybeDecode "datasetVariables" (Json.Decode.list sdtmigDatasetVariableDecoder) Nothing


sdtmigDatasetLinksDecoder : Json.Decode.Decoder SdtmigDatasetLinks
sdtmigDatasetLinksDecoder =
    Json.Decode.succeed SdtmigDatasetLinks
        |> maybeDecode "self" sdtmigDatasetRefDecoder Nothing
        |> maybeDecode "modelDataset" sdtmDatasetRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmigProductRefDecoder Nothing
        |> maybeDecode "parentClass" sdtmigClassRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmigDatasetRefDecoder Nothing


sdtmigDatasetRefDecoder : Json.Decode.Decoder SdtmigDatasetRef
sdtmigDatasetRefDecoder =
    Json.Decode.succeed SdtmigDatasetRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigDatasetRefElementDecoder : Json.Decode.Decoder SdtmigDatasetRefElement
sdtmigDatasetRefElementDecoder =
    Json.Decode.succeed SdtmigDatasetRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigDatasetVariableDecoder : Json.Decode.Decoder SdtmigDatasetVariable
sdtmigDatasetVariableDecoder =
    Json.Decode.succeed SdtmigDatasetVariable
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "role" Json.Decode.string Nothing
        |> maybeDecode "simpleDatatype" Json.Decode.string Nothing
        |> maybeDecode "core" Json.Decode.string Nothing
        |> maybeDecode "describedValueDomain" Json.Decode.string Nothing
        |> maybeDecode "valueList" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "_links" sdtmigDatasetVariableLinksDecoder Nothing


sdtmigDatasetVariableLinksDecoder : Json.Decode.Decoder SdtmigDatasetVariableLinks
sdtmigDatasetVariableLinksDecoder =
    Json.Decode.succeed SdtmigDatasetVariableLinks
        |> maybeDecode "self" sdtmigDatasetVariableRefDecoder Nothing
        |> maybeDecode "codelist" (Json.Decode.list rootCtCodelistRefElementDecoder) Nothing
        |> maybeDecode "modelClassVariable" sdtmClassVariableRefDecoder Nothing
        |> maybeDecode "modelDatasetVariable" sdtmDatasetVariableRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmigProductRefDecoder Nothing
        |> maybeDecode "parentDataset" sdtmigDatasetRefDecoder Nothing
        |> maybeDecode "rootItem" rootSdtmigDatasetVariableRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmigDatasetVariableRefDecoder Nothing


sdtmigDatasetVariableRefDecoder : Json.Decode.Decoder SdtmigDatasetVariableRef
sdtmigDatasetVariableRefDecoder =
    Json.Decode.succeed SdtmigDatasetVariableRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigDatasetVariableRefElementDecoder : Json.Decode.Decoder SdtmigDatasetVariableRefElement
sdtmigDatasetVariableRefElementDecoder =
    Json.Decode.succeed SdtmigDatasetVariableRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigDatasetVariableRefTargetDecoder : Json.Decode.Decoder SdtmigDatasetVariableRefTarget
sdtmigDatasetVariableRefTargetDecoder =
    Json.Decode.succeed SdtmigDatasetVariableRefTarget
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigDatasetVariableRefVersionDecoder : Json.Decode.Decoder SdtmigDatasetVariableRefVersion
sdtmigDatasetVariableRefVersionDecoder =
    Json.Decode.succeed SdtmigDatasetVariableRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigDatasetVariablesDecoder : Json.Decode.Decoder SdtmigDatasetVariables
sdtmigDatasetVariablesDecoder =
    Json.Decode.succeed SdtmigDatasetVariables
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "datasetStructure" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmigDatasetVariablesLinksDecoder Nothing


sdtmigDatasetVariablesLinksDecoder : Json.Decode.Decoder SdtmigDatasetVariablesLinks
sdtmigDatasetVariablesLinksDecoder =
    Json.Decode.succeed SdtmigDatasetVariablesLinks
        |> maybeDecode "self" sdtmigDatasetVariablesRefDecoder Nothing
        |> maybeDecode "modelDataset" sdtmDatasetRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmigProductRefDecoder Nothing
        |> maybeDecode "parentClass" sdtmigClassRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmigDatasetVariablesRefDecoder Nothing
        |> maybeDecode "datasetVariables" (Json.Decode.list sdtmigDatasetVariableRefElementDecoder) Nothing


sdtmigDatasetVariablesRefDecoder : Json.Decode.Decoder SdtmigDatasetVariablesRef
sdtmigDatasetVariablesRefDecoder =
    Json.Decode.succeed SdtmigDatasetVariablesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigDatasetsDecoder : Json.Decode.Decoder SdtmigDatasets
sdtmigDatasetsDecoder =
    Json.Decode.succeed SdtmigDatasets
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmigDatasetsLinksDecoder Nothing


sdtmigDatasetsLinksDecoder : Json.Decode.Decoder SdtmigDatasetsLinks
sdtmigDatasetsLinksDecoder =
    Json.Decode.succeed SdtmigDatasetsLinks
        |> maybeDecode "self" sdtmigDatasetsRefDecoder Nothing
        |> maybeDecode "parentProduct" sdtmigProductRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmigDatasetsRefDecoder Nothing
        |> maybeDecode "datasets" (Json.Decode.list sdtmigDatasetRefElementDecoder) Nothing


sdtmigDatasetsRefDecoder : Json.Decode.Decoder SdtmigDatasetsRef
sdtmigDatasetsRefDecoder =
    Json.Decode.succeed SdtmigDatasetsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigProductDecoder : Json.Decode.Decoder SdtmigProduct
sdtmigProductDecoder =
    Json.Decode.succeed SdtmigProduct
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" sdtmigProductLinksDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list sdtmigClassDecoder) Nothing


sdtmigProductLinksDecoder : Json.Decode.Decoder SdtmigProductLinks
sdtmigProductLinksDecoder =
    Json.Decode.succeed SdtmigProductLinks
        |> maybeDecode "self" sdtmigProductRefDecoder Nothing
        |> maybeDecode "model" sdtmProductRefDecoder Nothing
        |> maybeDecode "priorVersion" sdtmigProductRefDecoder Nothing


sdtmigProductRefDecoder : Json.Decode.Decoder SdtmigProductRef
sdtmigProductRefDecoder =
    Json.Decode.succeed SdtmigProductRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sdtmigProductRefElementDecoder : Json.Decode.Decoder SdtmigProductRefElement
sdtmigProductRefElementDecoder =
    Json.Decode.succeed SdtmigProductRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigClassDecoder : Json.Decode.Decoder SendigClass
sendigClassDecoder =
    Json.Decode.succeed SendigClass
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" sendigClassLinksDecoder Nothing
        |> maybeDecode "datasets" (Json.Decode.list sendigDatasetDecoder) Nothing


sendigClassDatasetsDecoder : Json.Decode.Decoder SendigClassDatasets
sendigClassDatasetsDecoder =
    Json.Decode.succeed SendigClassDatasets
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "_links" sendigClassDatasetsLinksDecoder Nothing


sendigClassDatasetsLinksDecoder : Json.Decode.Decoder SendigClassDatasetsLinks
sendigClassDatasetsLinksDecoder =
    Json.Decode.succeed SendigClassDatasetsLinks
        |> maybeDecode "self" sendigClassDatasetsRefDecoder Nothing
        |> maybeDecode "parentProduct" sendigProductRefDecoder Nothing
        |> maybeDecode "datasets" (Json.Decode.list sendigDatasetRefElementDecoder) Nothing


sendigClassDatasetsRefDecoder : Json.Decode.Decoder SendigClassDatasetsRef
sendigClassDatasetsRefDecoder =
    Json.Decode.succeed SendigClassDatasetsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigClassLinksDecoder : Json.Decode.Decoder SendigClassLinks
sendigClassLinksDecoder =
    Json.Decode.succeed SendigClassLinks
        |> maybeDecode "self" sendigClassRefDecoder Nothing
        |> maybeDecode "modelClass" sdtmClassRefDecoder Nothing
        |> maybeDecode "parentProduct" sendigProductRefDecoder Nothing
        |> maybeDecode "parentClass" sendigClassRefDecoder Nothing
        |> maybeDecode "subclasses" (Json.Decode.list sendigClassRefSubclassDecoder) Nothing
        |> maybeDecode "priorVersion" sendigClassRefDecoder Nothing


sendigClassRefDecoder : Json.Decode.Decoder SendigClassRef
sendigClassRefDecoder =
    Json.Decode.succeed SendigClassRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigClassRefElementDecoder : Json.Decode.Decoder SendigClassRefElement
sendigClassRefElementDecoder =
    Json.Decode.succeed SendigClassRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigClassRefSubclassDecoder : Json.Decode.Decoder SendigClassRefSubclass
sendigClassRefSubclassDecoder =
    Json.Decode.succeed SendigClassRefSubclass
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigClassesDecoder : Json.Decode.Decoder SendigClasses
sendigClassesDecoder =
    Json.Decode.succeed SendigClasses
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" sendigClassesLinksDecoder Nothing


sendigClassesLinksDecoder : Json.Decode.Decoder SendigClassesLinks
sendigClassesLinksDecoder =
    Json.Decode.succeed SendigClassesLinks
        |> maybeDecode "self" sendigClassesRefDecoder Nothing
        |> maybeDecode "priorVersion" sendigClassesRefDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list sendigClassRefElementDecoder) Nothing


sendigClassesRefDecoder : Json.Decode.Decoder SendigClassesRef
sendigClassesRefDecoder =
    Json.Decode.succeed SendigClassesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigDatasetDecoder : Json.Decode.Decoder SendigDataset
sendigDatasetDecoder =
    Json.Decode.succeed SendigDataset
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "datasetStructure" Json.Decode.string Nothing
        |> maybeDecode "_links" sendigDatasetLinksDecoder Nothing
        |> maybeDecode "datasetVariables" (Json.Decode.list sendigDatasetVariableDecoder) Nothing


sendigDatasetLinksDecoder : Json.Decode.Decoder SendigDatasetLinks
sendigDatasetLinksDecoder =
    Json.Decode.succeed SendigDatasetLinks
        |> maybeDecode "self" sendigDatasetRefDecoder Nothing
        |> maybeDecode "modelDataset" sdtmDatasetRefDecoder Nothing
        |> maybeDecode "parentProduct" sendigProductRefDecoder Nothing
        |> maybeDecode "parentClass" sendigClassRefDecoder Nothing
        |> maybeDecode "priorVersion" sendigDatasetRefDecoder Nothing


sendigDatasetRefDecoder : Json.Decode.Decoder SendigDatasetRef
sendigDatasetRefDecoder =
    Json.Decode.succeed SendigDatasetRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigDatasetRefElementDecoder : Json.Decode.Decoder SendigDatasetRefElement
sendigDatasetRefElementDecoder =
    Json.Decode.succeed SendigDatasetRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigDatasetVariableDecoder : Json.Decode.Decoder SendigDatasetVariable
sendigDatasetVariableDecoder =
    Json.Decode.succeed SendigDatasetVariable
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "role" Json.Decode.string Nothing
        |> maybeDecode "simpleDatatype" Json.Decode.string Nothing
        |> maybeDecode "core" Json.Decode.string Nothing
        |> maybeDecode "describedValueDomain" Json.Decode.string Nothing
        |> maybeDecode "valueList" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "_links" sendigDatasetVariableLinksDecoder Nothing


sendigDatasetVariableLinksDecoder : Json.Decode.Decoder SendigDatasetVariableLinks
sendigDatasetVariableLinksDecoder =
    Json.Decode.succeed SendigDatasetVariableLinks
        |> maybeDecode "self" sendigDatasetVariableRefDecoder Nothing
        |> maybeDecode "codelist" (Json.Decode.list rootCtCodelistRefElementDecoder) Nothing
        |> maybeDecode "modelClassVariable" sdtmClassVariableRefDecoder Nothing
        |> maybeDecode "modelDatasetVariable" sdtmDatasetVariableRefDecoder Nothing
        |> maybeDecode "parentProduct" sendigProductRefDecoder Nothing
        |> maybeDecode "parentDataset" sendigDatasetRefDecoder Nothing
        |> maybeDecode "rootItem" rootSendigDatasetVariableRefDecoder Nothing
        |> maybeDecode "priorVersion" sendigDatasetVariableRefDecoder Nothing


sendigDatasetVariableRefDecoder : Json.Decode.Decoder SendigDatasetVariableRef
sendigDatasetVariableRefDecoder =
    Json.Decode.succeed SendigDatasetVariableRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigDatasetVariableRefElementDecoder : Json.Decode.Decoder SendigDatasetVariableRefElement
sendigDatasetVariableRefElementDecoder =
    Json.Decode.succeed SendigDatasetVariableRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigDatasetVariableRefVersionDecoder : Json.Decode.Decoder SendigDatasetVariableRefVersion
sendigDatasetVariableRefVersionDecoder =
    Json.Decode.succeed SendigDatasetVariableRefVersion
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigDatasetVariablesDecoder : Json.Decode.Decoder SendigDatasetVariables
sendigDatasetVariablesDecoder =
    Json.Decode.succeed SendigDatasetVariables
        |> maybeDecode "ordinal" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "datasetStructure" Json.Decode.string Nothing
        |> maybeDecode "_links" sendigDatasetVariablesLinksDecoder Nothing


sendigDatasetVariablesLinksDecoder : Json.Decode.Decoder SendigDatasetVariablesLinks
sendigDatasetVariablesLinksDecoder =
    Json.Decode.succeed SendigDatasetVariablesLinks
        |> maybeDecode "self" sendigDatasetVariablesRefDecoder Nothing
        |> maybeDecode "modelDataset" sdtmDatasetRefDecoder Nothing
        |> maybeDecode "parentProduct" sendigProductRefDecoder Nothing
        |> maybeDecode "parentClass" sendigClassRefDecoder Nothing
        |> maybeDecode "priorVersion" sendigDatasetVariablesRefDecoder Nothing
        |> maybeDecode "datasetVariables" (Json.Decode.list sendigDatasetVariableRefElementDecoder) Nothing


sendigDatasetVariablesRefDecoder : Json.Decode.Decoder SendigDatasetVariablesRef
sendigDatasetVariablesRefDecoder =
    Json.Decode.succeed SendigDatasetVariablesRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigDatasetsDecoder : Json.Decode.Decoder SendigDatasets
sendigDatasetsDecoder =
    Json.Decode.succeed SendigDatasets
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" sendigDatasetsLinksDecoder Nothing


sendigDatasetsLinksDecoder : Json.Decode.Decoder SendigDatasetsLinks
sendigDatasetsLinksDecoder =
    Json.Decode.succeed SendigDatasetsLinks
        |> maybeDecode "self" sendigDatasetsRefDecoder Nothing
        |> maybeDecode "parentProduct" sendigProductRefDecoder Nothing
        |> maybeDecode "datasets" (Json.Decode.list sendigDatasetRefElementDecoder) Nothing


sendigDatasetsRefDecoder : Json.Decode.Decoder SendigDatasetsRef
sendigDatasetsRefDecoder =
    Json.Decode.succeed SendigDatasetsRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigProductDecoder : Json.Decode.Decoder SendigProduct
sendigProductDecoder =
    Json.Decode.succeed SendigProduct
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "label" Json.Decode.string Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "effectiveDate" Json.Decode.string Nothing
        |> maybeDecode "registrationStatus" Json.Decode.string Nothing
        |> maybeDecode "version" Json.Decode.string Nothing
        |> maybeDecode "_links" sendigProductLinksDecoder Nothing
        |> maybeDecode "classes" (Json.Decode.list sendigClassDecoder) Nothing


sendigProductLinksDecoder : Json.Decode.Decoder SendigProductLinks
sendigProductLinksDecoder =
    Json.Decode.succeed SendigProductLinks
        |> maybeDecode "self" sendigProductRefDecoder Nothing
        |> maybeDecode "model" sdtmProductRefDecoder Nothing
        |> maybeDecode "priorVersion" sendigProductRefDecoder Nothing


sendigProductRefDecoder : Json.Decode.Decoder SendigProductRef
sendigProductRefDecoder =
    Json.Decode.succeed SendigProductRef
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


sendigProductRefElementDecoder : Json.Decode.Decoder SendigProductRefElement
sendigProductRefElementDecoder =
    Json.Decode.succeed SendigProductRefElement
        |> maybeDecode "href" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "type" Json.Decode.string Nothing


xmlAboutDecoder : Json.Decode.Decoder XmlAbout
xmlAboutDecoder =
    Json.Decode.succeed XmlAbout
        |> maybeDecode "self" aboutDecoder Nothing


xmlAdamDatastructureDecoder : Json.Decode.Decoder XmlAdamDatastructure
xmlAdamDatastructureDecoder =
    Json.Decode.succeed XmlAdamDatastructure
        |> maybeDecode "self" adamDatastructureDecoder Nothing


xmlAdamDatastructureVariablesDecoder : Json.Decode.Decoder XmlAdamDatastructureVariables
xmlAdamDatastructureVariablesDecoder =
    Json.Decode.succeed XmlAdamDatastructureVariables
        |> maybeDecode "self" adamDatastructureVariablesDecoder Nothing


xmlAdamDatastructureVarsetsDecoder : Json.Decode.Decoder XmlAdamDatastructureVarsets
xmlAdamDatastructureVarsetsDecoder =
    Json.Decode.succeed XmlAdamDatastructureVarsets
        |> maybeDecode "self" adamDatastructureVarsetsDecoder Nothing


xmlAdamProductDecoder : Json.Decode.Decoder XmlAdamProduct
xmlAdamProductDecoder =
    Json.Decode.succeed XmlAdamProduct
        |> maybeDecode "self" adamProductDecoder Nothing


xmlAdamProductDatastructuresDecoder : Json.Decode.Decoder XmlAdamProductDatastructures
xmlAdamProductDatastructuresDecoder =
    Json.Decode.succeed XmlAdamProductDatastructures
        |> maybeDecode "self" adamProductDatastructuresDecoder Nothing


xmlAdamVariableDecoder : Json.Decode.Decoder XmlAdamVariable
xmlAdamVariableDecoder =
    Json.Decode.succeed XmlAdamVariable
        |> maybeDecode "self" adamVariableDecoder Nothing


xmlAdamVarsetDecoder : Json.Decode.Decoder XmlAdamVarset
xmlAdamVarsetDecoder =
    Json.Decode.succeed XmlAdamVarset
        |> maybeDecode "self" adamVarsetDecoder Nothing


xmlCdashClassDecoder : Json.Decode.Decoder XmlCdashClass
xmlCdashClassDecoder =
    Json.Decode.succeed XmlCdashClass
        |> maybeDecode "self" cdashClassDecoder Nothing


xmlCdashClassDomainsDecoder : Json.Decode.Decoder XmlCdashClassDomains
xmlCdashClassDomainsDecoder =
    Json.Decode.succeed XmlCdashClassDomains
        |> maybeDecode "self" cdashClassDomainsDecoder Nothing


xmlCdashClassFieldDecoder : Json.Decode.Decoder XmlCdashClassField
xmlCdashClassFieldDecoder =
    Json.Decode.succeed XmlCdashClassField
        |> maybeDecode "self" cdashClassFieldDecoder Nothing


xmlCdashDomainDecoder : Json.Decode.Decoder XmlCdashDomain
xmlCdashDomainDecoder =
    Json.Decode.succeed XmlCdashDomain
        |> maybeDecode "self" cdashDomainDecoder Nothing


xmlCdashDomainFieldDecoder : Json.Decode.Decoder XmlCdashDomainField
xmlCdashDomainFieldDecoder =
    Json.Decode.succeed XmlCdashDomainField
        |> maybeDecode "self" cdashDomainFieldDecoder Nothing


xmlCdashDomainFieldsDecoder : Json.Decode.Decoder XmlCdashDomainFields
xmlCdashDomainFieldsDecoder =
    Json.Decode.succeed XmlCdashDomainFields
        |> maybeDecode "self" cdashDomainFieldsDecoder Nothing


xmlCdashProductDecoder : Json.Decode.Decoder XmlCdashProduct
xmlCdashProductDecoder =
    Json.Decode.succeed XmlCdashProduct
        |> maybeDecode "self" cdashProductDecoder Nothing


xmlCdashProductClassesDecoder : Json.Decode.Decoder XmlCdashProductClasses
xmlCdashProductClassesDecoder =
    Json.Decode.succeed XmlCdashProductClasses
        |> maybeDecode "self" cdashProductClassesDecoder Nothing


xmlCdashProductDomainsDecoder : Json.Decode.Decoder XmlCdashProductDomains
xmlCdashProductDomainsDecoder =
    Json.Decode.succeed XmlCdashProductDomains
        |> maybeDecode "self" cdashProductDomainsDecoder Nothing


xmlCdashigClassDecoder : Json.Decode.Decoder XmlCdashigClass
xmlCdashigClassDecoder =
    Json.Decode.succeed XmlCdashigClass
        |> maybeDecode "self" cdashigClassDecoder Nothing


xmlCdashigClassDomainsDecoder : Json.Decode.Decoder XmlCdashigClassDomains
xmlCdashigClassDomainsDecoder =
    Json.Decode.succeed XmlCdashigClassDomains
        |> maybeDecode "self" cdashigClassDomainsDecoder Nothing


xmlCdashigClassScenariosDecoder : Json.Decode.Decoder XmlCdashigClassScenarios
xmlCdashigClassScenariosDecoder =
    Json.Decode.succeed XmlCdashigClassScenarios
        |> maybeDecode "self" cdashigClassScenariosDecoder Nothing


xmlCdashigDomainDecoder : Json.Decode.Decoder XmlCdashigDomain
xmlCdashigDomainDecoder =
    Json.Decode.succeed XmlCdashigDomain
        |> maybeDecode "self" cdashigDomainDecoder Nothing


xmlCdashigDomainFieldDecoder : Json.Decode.Decoder XmlCdashigDomainField
xmlCdashigDomainFieldDecoder =
    Json.Decode.succeed XmlCdashigDomainField
        |> maybeDecode "self" cdashigDomainFieldDecoder Nothing


xmlCdashigDomainFieldsDecoder : Json.Decode.Decoder XmlCdashigDomainFields
xmlCdashigDomainFieldsDecoder =
    Json.Decode.succeed XmlCdashigDomainFields
        |> maybeDecode "self" cdashigDomainFieldsDecoder Nothing


xmlCdashigProductDecoder : Json.Decode.Decoder XmlCdashigProduct
xmlCdashigProductDecoder =
    Json.Decode.succeed XmlCdashigProduct
        |> maybeDecode "self" cdashigProductDecoder Nothing


xmlCdashigProductClassesDecoder : Json.Decode.Decoder XmlCdashigProductClasses
xmlCdashigProductClassesDecoder =
    Json.Decode.succeed XmlCdashigProductClasses
        |> maybeDecode "self" cdashigProductClassesDecoder Nothing


xmlCdashigProductDomainsDecoder : Json.Decode.Decoder XmlCdashigProductDomains
xmlCdashigProductDomainsDecoder =
    Json.Decode.succeed XmlCdashigProductDomains
        |> maybeDecode "self" cdashigProductDomainsDecoder Nothing


xmlCdashigProductScenariosDecoder : Json.Decode.Decoder XmlCdashigProductScenarios
xmlCdashigProductScenariosDecoder =
    Json.Decode.succeed XmlCdashigProductScenarios
        |> maybeDecode "self" cdashigProductScenariosDecoder Nothing


xmlCdashigScenarioDecoder : Json.Decode.Decoder XmlCdashigScenario
xmlCdashigScenarioDecoder =
    Json.Decode.succeed XmlCdashigScenario
        |> maybeDecode "self" cdashigScenarioDecoder Nothing


xmlCdashigScenarioFieldDecoder : Json.Decode.Decoder XmlCdashigScenarioField
xmlCdashigScenarioFieldDecoder =
    Json.Decode.succeed XmlCdashigScenarioField
        |> maybeDecode "self" cdashigScenarioFieldDecoder Nothing


xmlCdashigScenarioFieldsDecoder : Json.Decode.Decoder XmlCdashigScenarioFields
xmlCdashigScenarioFieldsDecoder =
    Json.Decode.succeed XmlCdashigScenarioFields
        |> maybeDecode "self" cdashigScenarioFieldsDecoder Nothing


xmlCtCodelistDecoder : Json.Decode.Decoder XmlCtCodelist
xmlCtCodelistDecoder =
    Json.Decode.succeed XmlCtCodelist
        |> maybeDecode "self" ctCodelistDecoder Nothing


xmlCtCodelistTermsDecoder : Json.Decode.Decoder XmlCtCodelistTerms
xmlCtCodelistTermsDecoder =
    Json.Decode.succeed XmlCtCodelistTerms
        |> maybeDecode "self" ctCodelistTermsDecoder Nothing


xmlCtPackageDecoder : Json.Decode.Decoder XmlCtPackage
xmlCtPackageDecoder =
    Json.Decode.succeed XmlCtPackage
        |> maybeDecode "self" ctPackageDecoder Nothing


xmlCtPackageCodelistsDecoder : Json.Decode.Decoder XmlCtPackageCodelists
xmlCtPackageCodelistsDecoder =
    Json.Decode.succeed XmlCtPackageCodelists
        |> maybeDecode "self" ctPackageCodelistsDecoder Nothing


xmlCtPackagesDecoder : Json.Decode.Decoder XmlCtPackages
xmlCtPackagesDecoder =
    Json.Decode.succeed XmlCtPackages
        |> maybeDecode "self" ctPackagesDecoder Nothing


xmlCtTermDecoder : Json.Decode.Decoder XmlCtTerm
xmlCtTermDecoder =
    Json.Decode.succeed XmlCtTerm
        |> maybeDecode "self" ctTermDecoder Nothing


xmlLastupdatedDecoder : Json.Decode.Decoder XmlLastupdated
xmlLastupdatedDecoder =
    Json.Decode.succeed XmlLastupdated
        |> maybeDecode "self" lastupdatedDecoder Nothing


xmlProductgroupDataAnalysisDecoder : Json.Decode.Decoder XmlProductgroupDataAnalysis
xmlProductgroupDataAnalysisDecoder =
    Json.Decode.succeed XmlProductgroupDataAnalysis
        |> maybeDecode "self" productgroupDataAnalysisDecoder Nothing


xmlProductgroupDataCollectionDecoder : Json.Decode.Decoder XmlProductgroupDataCollection
xmlProductgroupDataCollectionDecoder =
    Json.Decode.succeed XmlProductgroupDataCollection
        |> maybeDecode "self" productgroupDataCollectionDecoder Nothing


xmlProductgroupDataTabulationDecoder : Json.Decode.Decoder XmlProductgroupDataTabulation
xmlProductgroupDataTabulationDecoder =
    Json.Decode.succeed XmlProductgroupDataTabulation
        |> maybeDecode "self" productgroupDataTabulationDecoder Nothing


xmlProductgroupTerminologyDecoder : Json.Decode.Decoder XmlProductgroupTerminology
xmlProductgroupTerminologyDecoder =
    Json.Decode.succeed XmlProductgroupTerminology
        |> maybeDecode "self" productgroupTerminologyDecoder Nothing


xmlProductsDecoder : Json.Decode.Decoder XmlProducts
xmlProductsDecoder =
    Json.Decode.succeed XmlProducts
        |> maybeDecode "self" productsDecoder Nothing


xmlQrsItemDecoder : Json.Decode.Decoder XmlQrsItem
xmlQrsItemDecoder =
    Json.Decode.succeed XmlQrsItem
        |> maybeDecode "self" qrsItemDecoder Nothing


xmlQrsItemsDecoder : Json.Decode.Decoder XmlQrsItems
xmlQrsItemsDecoder =
    Json.Decode.succeed XmlQrsItems
        |> maybeDecode "self" qrsItemsDecoder Nothing


xmlQrsProductDecoder : Json.Decode.Decoder XmlQrsProduct
xmlQrsProductDecoder =
    Json.Decode.succeed XmlQrsProduct
        |> maybeDecode "self" qrsProductDecoder Nothing


xmlQrsResponsegroupDecoder : Json.Decode.Decoder XmlQrsResponsegroup
xmlQrsResponsegroupDecoder =
    Json.Decode.succeed XmlQrsResponsegroup
        |> maybeDecode "self" qrsResponsegroupDecoder Nothing


xmlQrsResponsegroupsDecoder : Json.Decode.Decoder XmlQrsResponsegroups
xmlQrsResponsegroupsDecoder =
    Json.Decode.succeed XmlQrsResponsegroups
        |> maybeDecode "self" qrsResponsegroupsDecoder Nothing


xmlRootCdashClassFieldDecoder : Json.Decode.Decoder XmlRootCdashClassField
xmlRootCdashClassFieldDecoder =
    Json.Decode.succeed XmlRootCdashClassField
        |> maybeDecode "self" rootCdashClassFieldDecoder Nothing


xmlRootCdashDomainFieldDecoder : Json.Decode.Decoder XmlRootCdashDomainField
xmlRootCdashDomainFieldDecoder =
    Json.Decode.succeed XmlRootCdashDomainField
        |> maybeDecode "self" rootCdashDomainFieldDecoder Nothing


xmlRootCdashigDomainFieldDecoder : Json.Decode.Decoder XmlRootCdashigDomainField
xmlRootCdashigDomainFieldDecoder =
    Json.Decode.succeed XmlRootCdashigDomainField
        |> maybeDecode "self" rootCdashigDomainFieldDecoder Nothing


xmlRootCdashigScenarioFieldDecoder : Json.Decode.Decoder XmlRootCdashigScenarioField
xmlRootCdashigScenarioFieldDecoder =
    Json.Decode.succeed XmlRootCdashigScenarioField
        |> maybeDecode "self" rootCdashigScenarioFieldDecoder Nothing


xmlRootCtCodelistDecoder : Json.Decode.Decoder XmlRootCtCodelist
xmlRootCtCodelistDecoder =
    Json.Decode.succeed XmlRootCtCodelist
        |> maybeDecode "self" rootCtCodelistDecoder Nothing


xmlRootCtTermDecoder : Json.Decode.Decoder XmlRootCtTerm
xmlRootCtTermDecoder =
    Json.Decode.succeed XmlRootCtTerm
        |> maybeDecode "self" rootCtTermDecoder Nothing


xmlRootSdtmClassVariableDecoder : Json.Decode.Decoder XmlRootSdtmClassVariable
xmlRootSdtmClassVariableDecoder =
    Json.Decode.succeed XmlRootSdtmClassVariable
        |> maybeDecode "self" rootSdtmClassVariableDecoder Nothing


xmlRootSdtmDatasetVariableDecoder : Json.Decode.Decoder XmlRootSdtmDatasetVariable
xmlRootSdtmDatasetVariableDecoder =
    Json.Decode.succeed XmlRootSdtmDatasetVariable
        |> maybeDecode "self" rootSdtmDatasetVariableDecoder Nothing


xmlRootSdtmigDatasetVariableDecoder : Json.Decode.Decoder XmlRootSdtmigDatasetVariable
xmlRootSdtmigDatasetVariableDecoder =
    Json.Decode.succeed XmlRootSdtmigDatasetVariable
        |> maybeDecode "self" rootSdtmigDatasetVariableDecoder Nothing


xmlRootSendigDatasetVariableDecoder : Json.Decode.Decoder XmlRootSendigDatasetVariable
xmlRootSendigDatasetVariableDecoder =
    Json.Decode.succeed XmlRootSendigDatasetVariable
        |> maybeDecode "self" rootSendigDatasetVariableDecoder Nothing


xmlSdtmClassDecoder : Json.Decode.Decoder XmlSdtmClass
xmlSdtmClassDecoder =
    Json.Decode.succeed XmlSdtmClass
        |> maybeDecode "self" sdtmClassDecoder Nothing


xmlSdtmClassDatasetsDecoder : Json.Decode.Decoder XmlSdtmClassDatasets
xmlSdtmClassDatasetsDecoder =
    Json.Decode.succeed XmlSdtmClassDatasets
        |> maybeDecode "self" sdtmClassDatasetsDecoder Nothing


xmlSdtmClassVariableDecoder : Json.Decode.Decoder XmlSdtmClassVariable
xmlSdtmClassVariableDecoder =
    Json.Decode.succeed XmlSdtmClassVariable
        |> maybeDecode "self" sdtmClassVariableDecoder Nothing


xmlSdtmClassVariablesDecoder : Json.Decode.Decoder XmlSdtmClassVariables
xmlSdtmClassVariablesDecoder =
    Json.Decode.succeed XmlSdtmClassVariables
        |> maybeDecode "self" sdtmClassVariablesDecoder Nothing


xmlSdtmClassesDecoder : Json.Decode.Decoder XmlSdtmClasses
xmlSdtmClassesDecoder =
    Json.Decode.succeed XmlSdtmClasses
        |> maybeDecode "self" sdtmClassesDecoder Nothing


xmlSdtmDatasetDecoder : Json.Decode.Decoder XmlSdtmDataset
xmlSdtmDatasetDecoder =
    Json.Decode.succeed XmlSdtmDataset
        |> maybeDecode "self" sdtmDatasetDecoder Nothing


xmlSdtmDatasetVariableDecoder : Json.Decode.Decoder XmlSdtmDatasetVariable
xmlSdtmDatasetVariableDecoder =
    Json.Decode.succeed XmlSdtmDatasetVariable
        |> maybeDecode "self" sdtmDatasetVariableDecoder Nothing


xmlSdtmDatasetVariablesDecoder : Json.Decode.Decoder XmlSdtmDatasetVariables
xmlSdtmDatasetVariablesDecoder =
    Json.Decode.succeed XmlSdtmDatasetVariables
        |> maybeDecode "self" sdtmDatasetVariablesDecoder Nothing


xmlSdtmDatasetsDecoder : Json.Decode.Decoder XmlSdtmDatasets
xmlSdtmDatasetsDecoder =
    Json.Decode.succeed XmlSdtmDatasets
        |> maybeDecode "self" sdtmDatasetsDecoder Nothing


xmlSdtmProductDecoder : Json.Decode.Decoder XmlSdtmProduct
xmlSdtmProductDecoder =
    Json.Decode.succeed XmlSdtmProduct
        |> maybeDecode "self" sdtmProductDecoder Nothing


xmlSdtmigClassDecoder : Json.Decode.Decoder XmlSdtmigClass
xmlSdtmigClassDecoder =
    Json.Decode.succeed XmlSdtmigClass
        |> maybeDecode "self" sdtmigClassDecoder Nothing


xmlSdtmigClassDatasetsDecoder : Json.Decode.Decoder XmlSdtmigClassDatasets
xmlSdtmigClassDatasetsDecoder =
    Json.Decode.succeed XmlSdtmigClassDatasets
        |> maybeDecode "self" sdtmigClassDatasetsDecoder Nothing


xmlSdtmigClassesDecoder : Json.Decode.Decoder XmlSdtmigClasses
xmlSdtmigClassesDecoder =
    Json.Decode.succeed XmlSdtmigClasses
        |> maybeDecode "self" sdtmigClassesDecoder Nothing


xmlSdtmigDatasetDecoder : Json.Decode.Decoder XmlSdtmigDataset
xmlSdtmigDatasetDecoder =
    Json.Decode.succeed XmlSdtmigDataset
        |> maybeDecode "self" sdtmigDatasetDecoder Nothing


xmlSdtmigDatasetVariableDecoder : Json.Decode.Decoder XmlSdtmigDatasetVariable
xmlSdtmigDatasetVariableDecoder =
    Json.Decode.succeed XmlSdtmigDatasetVariable
        |> maybeDecode "self" sdtmigDatasetVariableDecoder Nothing


xmlSdtmigDatasetVariablesDecoder : Json.Decode.Decoder XmlSdtmigDatasetVariables
xmlSdtmigDatasetVariablesDecoder =
    Json.Decode.succeed XmlSdtmigDatasetVariables
        |> maybeDecode "self" sdtmigDatasetVariablesDecoder Nothing


xmlSdtmigDatasetsDecoder : Json.Decode.Decoder XmlSdtmigDatasets
xmlSdtmigDatasetsDecoder =
    Json.Decode.succeed XmlSdtmigDatasets
        |> maybeDecode "self" sdtmigDatasetsDecoder Nothing


xmlSdtmigProductDecoder : Json.Decode.Decoder XmlSdtmigProduct
xmlSdtmigProductDecoder =
    Json.Decode.succeed XmlSdtmigProduct
        |> maybeDecode "self" sdtmigProductDecoder Nothing


xmlSendigClassDecoder : Json.Decode.Decoder XmlSendigClass
xmlSendigClassDecoder =
    Json.Decode.succeed XmlSendigClass
        |> maybeDecode "self" sendigClassDecoder Nothing


xmlSendigClassDatasetsDecoder : Json.Decode.Decoder XmlSendigClassDatasets
xmlSendigClassDatasetsDecoder =
    Json.Decode.succeed XmlSendigClassDatasets
        |> maybeDecode "self" sendigClassDatasetsDecoder Nothing


xmlSendigClassesDecoder : Json.Decode.Decoder XmlSendigClasses
xmlSendigClassesDecoder =
    Json.Decode.succeed XmlSendigClasses
        |> maybeDecode "self" sendigClassesDecoder Nothing


xmlSendigDatasetDecoder : Json.Decode.Decoder XmlSendigDataset
xmlSendigDatasetDecoder =
    Json.Decode.succeed XmlSendigDataset
        |> maybeDecode "self" sendigDatasetDecoder Nothing


xmlSendigDatasetVariableDecoder : Json.Decode.Decoder XmlSendigDatasetVariable
xmlSendigDatasetVariableDecoder =
    Json.Decode.succeed XmlSendigDatasetVariable
        |> maybeDecode "self" sendigDatasetVariableDecoder Nothing


xmlSendigDatasetVariablesDecoder : Json.Decode.Decoder XmlSendigDatasetVariables
xmlSendigDatasetVariablesDecoder =
    Json.Decode.succeed XmlSendigDatasetVariables
        |> maybeDecode "self" sendigDatasetVariablesDecoder Nothing


xmlSendigDatasetsDecoder : Json.Decode.Decoder XmlSendigDatasets
xmlSendigDatasetsDecoder =
    Json.Decode.succeed XmlSendigDatasets
        |> maybeDecode "self" sendigDatasetsDecoder Nothing


xmlSendigProductDecoder : Json.Decode.Decoder XmlSendigProduct
xmlSendigProductDecoder =
    Json.Decode.succeed XmlSendigProduct
        |> maybeDecode "self" sendigProductDecoder Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f