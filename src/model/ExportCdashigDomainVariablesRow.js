/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportCdashigDomainVariablesRow model module.
 * @module model/ExportCdashigDomainVariablesRow
 * @version 1.1.0
 */
class ExportCdashigDomainVariablesRow {
    /**
     * Constructs a new <code>ExportCdashigDomainVariablesRow</code>.
     * @alias module:model/ExportCdashigDomainVariablesRow
     */
    constructor() { 
        
        ExportCdashigDomainVariablesRow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportCdashigDomainVariablesRow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportCdashigDomainVariablesRow} obj Optional instance to populate.
     * @return {module:model/ExportCdashigDomainVariablesRow} The populated <code>ExportCdashigDomainVariablesRow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportCdashigDomainVariablesRow();

            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
            if (data.hasOwnProperty('Class')) {
                obj['Class'] = ApiClient.convertToType(data['Class'], 'String');
            }
            if (data.hasOwnProperty('Domain')) {
                obj['Domain'] = ApiClient.convertToType(data['Domain'], 'String');
            }
            if (data.hasOwnProperty('Data Collection Scenario')) {
                obj['Data Collection Scenario'] = ApiClient.convertToType(data['Data Collection Scenario'], 'String');
            }
            if (data.hasOwnProperty('Variable Order')) {
                obj['Variable Order'] = ApiClient.convertToType(data['Variable Order'], 'String');
            }
            if (data.hasOwnProperty('CDASHIG Variable')) {
                obj['CDASHIG Variable'] = ApiClient.convertToType(data['CDASHIG Variable'], 'String');
            }
            if (data.hasOwnProperty('CDASHIG Variable Label')) {
                obj['CDASHIG Variable Label'] = ApiClient.convertToType(data['CDASHIG Variable Label'], 'String');
            }
            if (data.hasOwnProperty('DRAFT CDASHIG Definition')) {
                obj['DRAFT CDASHIG Definition'] = ApiClient.convertToType(data['DRAFT CDASHIG Definition'], 'String');
            }
            if (data.hasOwnProperty('Question Text')) {
                obj['Question Text'] = ApiClient.convertToType(data['Question Text'], 'String');
            }
            if (data.hasOwnProperty('Prompt')) {
                obj['Prompt'] = ApiClient.convertToType(data['Prompt'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
            if (data.hasOwnProperty('CDASHIG Core')) {
                obj['CDASHIG Core'] = ApiClient.convertToType(data['CDASHIG Core'], 'String');
            }
            if (data.hasOwnProperty('Case Report Form Completion Instructions')) {
                obj['Case Report Form Completion Instructions'] = ApiClient.convertToType(data['Case Report Form Completion Instructions'], 'String');
            }
            if (data.hasOwnProperty('SDTMIG Target')) {
                obj['SDTMIG Target'] = ApiClient.convertToType(data['SDTMIG Target'], ['String']);
            }
            if (data.hasOwnProperty('Mapping Instructions')) {
                obj['Mapping Instructions'] = ApiClient.convertToType(data['Mapping Instructions'], 'String');
            }
            if (data.hasOwnProperty('Controlled Terminology Codelist Name')) {
                obj['Controlled Terminology Codelist Name'] = ApiClient.convertToType(data['Controlled Terminology Codelist Name'], 'String');
            }
            if (data.hasOwnProperty('Implementation Notes')) {
                obj['Implementation Notes'] = ApiClient.convertToType(data['Implementation Notes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportCdashigDomainVariablesRow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportCdashigDomainVariablesRow</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Version'] && !(typeof data['Version'] === 'string' || data['Version'] instanceof String)) {
            throw new Error("Expected the field `Version` to be a primitive type in the JSON string but got " + data['Version']);
        }
        // ensure the json data is a string
        if (data['Class'] && !(typeof data['Class'] === 'string' || data['Class'] instanceof String)) {
            throw new Error("Expected the field `Class` to be a primitive type in the JSON string but got " + data['Class']);
        }
        // ensure the json data is a string
        if (data['Domain'] && !(typeof data['Domain'] === 'string' || data['Domain'] instanceof String)) {
            throw new Error("Expected the field `Domain` to be a primitive type in the JSON string but got " + data['Domain']);
        }
        // ensure the json data is a string
        if (data['Data Collection Scenario'] && !(typeof data['Data Collection Scenario'] === 'string' || data['Data Collection Scenario'] instanceof String)) {
            throw new Error("Expected the field `Data Collection Scenario` to be a primitive type in the JSON string but got " + data['Data Collection Scenario']);
        }
        // ensure the json data is a string
        if (data['Variable Order'] && !(typeof data['Variable Order'] === 'string' || data['Variable Order'] instanceof String)) {
            throw new Error("Expected the field `Variable Order` to be a primitive type in the JSON string but got " + data['Variable Order']);
        }
        // ensure the json data is a string
        if (data['CDASHIG Variable'] && !(typeof data['CDASHIG Variable'] === 'string' || data['CDASHIG Variable'] instanceof String)) {
            throw new Error("Expected the field `CDASHIG Variable` to be a primitive type in the JSON string but got " + data['CDASHIG Variable']);
        }
        // ensure the json data is a string
        if (data['CDASHIG Variable Label'] && !(typeof data['CDASHIG Variable Label'] === 'string' || data['CDASHIG Variable Label'] instanceof String)) {
            throw new Error("Expected the field `CDASHIG Variable Label` to be a primitive type in the JSON string but got " + data['CDASHIG Variable Label']);
        }
        // ensure the json data is a string
        if (data['DRAFT CDASHIG Definition'] && !(typeof data['DRAFT CDASHIG Definition'] === 'string' || data['DRAFT CDASHIG Definition'] instanceof String)) {
            throw new Error("Expected the field `DRAFT CDASHIG Definition` to be a primitive type in the JSON string but got " + data['DRAFT CDASHIG Definition']);
        }
        // ensure the json data is a string
        if (data['Question Text'] && !(typeof data['Question Text'] === 'string' || data['Question Text'] instanceof String)) {
            throw new Error("Expected the field `Question Text` to be a primitive type in the JSON string but got " + data['Question Text']);
        }
        // ensure the json data is a string
        if (data['Prompt'] && !(typeof data['Prompt'] === 'string' || data['Prompt'] instanceof String)) {
            throw new Error("Expected the field `Prompt` to be a primitive type in the JSON string but got " + data['Prompt']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }
        // ensure the json data is a string
        if (data['CDASHIG Core'] && !(typeof data['CDASHIG Core'] === 'string' || data['CDASHIG Core'] instanceof String)) {
            throw new Error("Expected the field `CDASHIG Core` to be a primitive type in the JSON string but got " + data['CDASHIG Core']);
        }
        // ensure the json data is a string
        if (data['Case Report Form Completion Instructions'] && !(typeof data['Case Report Form Completion Instructions'] === 'string' || data['Case Report Form Completion Instructions'] instanceof String)) {
            throw new Error("Expected the field `Case Report Form Completion Instructions` to be a primitive type in the JSON string but got " + data['Case Report Form Completion Instructions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['SDTMIG Target'])) {
            throw new Error("Expected the field `SDTMIG Target` to be an array in the JSON data but got " + data['SDTMIG Target']);
        }
        // ensure the json data is a string
        if (data['Mapping Instructions'] && !(typeof data['Mapping Instructions'] === 'string' || data['Mapping Instructions'] instanceof String)) {
            throw new Error("Expected the field `Mapping Instructions` to be a primitive type in the JSON string but got " + data['Mapping Instructions']);
        }
        // ensure the json data is a string
        if (data['Controlled Terminology Codelist Name'] && !(typeof data['Controlled Terminology Codelist Name'] === 'string' || data['Controlled Terminology Codelist Name'] instanceof String)) {
            throw new Error("Expected the field `Controlled Terminology Codelist Name` to be a primitive type in the JSON string but got " + data['Controlled Terminology Codelist Name']);
        }
        // ensure the json data is a string
        if (data['Implementation Notes'] && !(typeof data['Implementation Notes'] === 'string' || data['Implementation Notes'] instanceof String)) {
            throw new Error("Expected the field `Implementation Notes` to be a primitive type in the JSON string but got " + data['Implementation Notes']);
        }

        return true;
    }


}



/**
 * @member {String} Version
 */
ExportCdashigDomainVariablesRow.prototype['Version'] = undefined;

/**
 * @member {String} Class
 */
ExportCdashigDomainVariablesRow.prototype['Class'] = undefined;

/**
 * @member {String} Domain
 */
ExportCdashigDomainVariablesRow.prototype['Domain'] = undefined;

/**
 * @member {String} Data Collection Scenario
 */
ExportCdashigDomainVariablesRow.prototype['Data Collection Scenario'] = undefined;

/**
 * @member {String} Variable Order
 */
ExportCdashigDomainVariablesRow.prototype['Variable Order'] = undefined;

/**
 * @member {String} CDASHIG Variable
 */
ExportCdashigDomainVariablesRow.prototype['CDASHIG Variable'] = undefined;

/**
 * @member {String} CDASHIG Variable Label
 */
ExportCdashigDomainVariablesRow.prototype['CDASHIG Variable Label'] = undefined;

/**
 * @member {String} DRAFT CDASHIG Definition
 */
ExportCdashigDomainVariablesRow.prototype['DRAFT CDASHIG Definition'] = undefined;

/**
 * @member {String} Question Text
 */
ExportCdashigDomainVariablesRow.prototype['Question Text'] = undefined;

/**
 * @member {String} Prompt
 */
ExportCdashigDomainVariablesRow.prototype['Prompt'] = undefined;

/**
 * @member {String} Type
 */
ExportCdashigDomainVariablesRow.prototype['Type'] = undefined;

/**
 * @member {String} CDASHIG Core
 */
ExportCdashigDomainVariablesRow.prototype['CDASHIG Core'] = undefined;

/**
 * @member {String} Case Report Form Completion Instructions
 */
ExportCdashigDomainVariablesRow.prototype['Case Report Form Completion Instructions'] = undefined;

/**
 * @member {Array.<String>} SDTMIG Target
 */
ExportCdashigDomainVariablesRow.prototype['SDTMIG Target'] = undefined;

/**
 * @member {String} Mapping Instructions
 */
ExportCdashigDomainVariablesRow.prototype['Mapping Instructions'] = undefined;

/**
 * @member {String} Controlled Terminology Codelist Name
 */
ExportCdashigDomainVariablesRow.prototype['Controlled Terminology Codelist Name'] = undefined;

/**
 * @member {String} Implementation Notes
 */
ExportCdashigDomainVariablesRow.prototype['Implementation Notes'] = undefined;






export default ExportCdashigDomainVariablesRow;

