/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CdashigDomainFieldLinks from './CdashigDomainFieldLinks';

/**
 * The CdashigDomainField model module.
 * @module model/CdashigDomainField
 * @version 1.1.0
 */
class CdashigDomainField {
    /**
     * Constructs a new <code>CdashigDomainField</code>.
     * @alias module:model/CdashigDomainField
     */
    constructor() { 
        
        CdashigDomainField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CdashigDomainField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CdashigDomainField} obj Optional instance to populate.
     * @return {module:model/CdashigDomainField} The populated <code>CdashigDomainField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CdashigDomainField();

            if (data.hasOwnProperty('ordinal')) {
                obj['ordinal'] = ApiClient.convertToType(data['ordinal'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('definition')) {
                obj['definition'] = ApiClient.convertToType(data['definition'], 'String');
            }
            if (data.hasOwnProperty('questionText')) {
                obj['questionText'] = ApiClient.convertToType(data['questionText'], 'String');
            }
            if (data.hasOwnProperty('prompt')) {
                obj['prompt'] = ApiClient.convertToType(data['prompt'], 'String');
            }
            if (data.hasOwnProperty('completionInstructions')) {
                obj['completionInstructions'] = ApiClient.convertToType(data['completionInstructions'], 'String');
            }
            if (data.hasOwnProperty('implementationNotes')) {
                obj['implementationNotes'] = ApiClient.convertToType(data['implementationNotes'], 'String');
            }
            if (data.hasOwnProperty('simpleDatatype')) {
                obj['simpleDatatype'] = ApiClient.convertToType(data['simpleDatatype'], 'String');
            }
            if (data.hasOwnProperty('mappingInstructions')) {
                obj['mappingInstructions'] = ApiClient.convertToType(data['mappingInstructions'], 'String');
            }
            if (data.hasOwnProperty('core')) {
                obj['core'] = ApiClient.convertToType(data['core'], 'String');
            }
            if (data.hasOwnProperty('_links')) {
                obj['_links'] = CdashigDomainFieldLinks.constructFromObject(data['_links']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CdashigDomainField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CdashigDomainField</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ordinal'] && !(typeof data['ordinal'] === 'string' || data['ordinal'] instanceof String)) {
            throw new Error("Expected the field `ordinal` to be a primitive type in the JSON string but got " + data['ordinal']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['definition'] && !(typeof data['definition'] === 'string' || data['definition'] instanceof String)) {
            throw new Error("Expected the field `definition` to be a primitive type in the JSON string but got " + data['definition']);
        }
        // ensure the json data is a string
        if (data['questionText'] && !(typeof data['questionText'] === 'string' || data['questionText'] instanceof String)) {
            throw new Error("Expected the field `questionText` to be a primitive type in the JSON string but got " + data['questionText']);
        }
        // ensure the json data is a string
        if (data['prompt'] && !(typeof data['prompt'] === 'string' || data['prompt'] instanceof String)) {
            throw new Error("Expected the field `prompt` to be a primitive type in the JSON string but got " + data['prompt']);
        }
        // ensure the json data is a string
        if (data['completionInstructions'] && !(typeof data['completionInstructions'] === 'string' || data['completionInstructions'] instanceof String)) {
            throw new Error("Expected the field `completionInstructions` to be a primitive type in the JSON string but got " + data['completionInstructions']);
        }
        // ensure the json data is a string
        if (data['implementationNotes'] && !(typeof data['implementationNotes'] === 'string' || data['implementationNotes'] instanceof String)) {
            throw new Error("Expected the field `implementationNotes` to be a primitive type in the JSON string but got " + data['implementationNotes']);
        }
        // ensure the json data is a string
        if (data['simpleDatatype'] && !(typeof data['simpleDatatype'] === 'string' || data['simpleDatatype'] instanceof String)) {
            throw new Error("Expected the field `simpleDatatype` to be a primitive type in the JSON string but got " + data['simpleDatatype']);
        }
        // ensure the json data is a string
        if (data['mappingInstructions'] && !(typeof data['mappingInstructions'] === 'string' || data['mappingInstructions'] instanceof String)) {
            throw new Error("Expected the field `mappingInstructions` to be a primitive type in the JSON string but got " + data['mappingInstructions']);
        }
        // ensure the json data is a string
        if (data['core'] && !(typeof data['core'] === 'string' || data['core'] instanceof String)) {
            throw new Error("Expected the field `core` to be a primitive type in the JSON string but got " + data['core']);
        }
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          CdashigDomainFieldLinks.validateJSON(data['_links']);
        }

        return true;
    }


}



/**
 * @member {String} ordinal
 */
CdashigDomainField.prototype['ordinal'] = undefined;

/**
 * @member {String} name
 */
CdashigDomainField.prototype['name'] = undefined;

/**
 * @member {String} label
 */
CdashigDomainField.prototype['label'] = undefined;

/**
 * @member {String} definition
 */
CdashigDomainField.prototype['definition'] = undefined;

/**
 * @member {String} questionText
 */
CdashigDomainField.prototype['questionText'] = undefined;

/**
 * @member {String} prompt
 */
CdashigDomainField.prototype['prompt'] = undefined;

/**
 * @member {String} completionInstructions
 */
CdashigDomainField.prototype['completionInstructions'] = undefined;

/**
 * @member {String} implementationNotes
 */
CdashigDomainField.prototype['implementationNotes'] = undefined;

/**
 * @member {String} simpleDatatype
 */
CdashigDomainField.prototype['simpleDatatype'] = undefined;

/**
 * @member {String} mappingInstructions
 */
CdashigDomainField.prototype['mappingInstructions'] = undefined;

/**
 * @member {String} core
 */
CdashigDomainField.prototype['core'] = undefined;

/**
 * @member {module:model/CdashigDomainFieldLinks} _links
 */
CdashigDomainField.prototype['_links'] = undefined;






export default CdashigDomainField;

