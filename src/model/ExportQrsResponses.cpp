/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "CppRestOpenAPIClient/model/ExportQrsResponses.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ExportQrsResponses::ExportQrsResponses()
{
    m_Response_Group = utility::conversions::to_string_t("");
    m_Response_GroupIsSet = false;
    m_Sequence = utility::conversions::to_string_t("");
    m_SequenceIsSet = false;
    m_Responses_Original_Result_Codelist_C_Code = utility::conversions::to_string_t("");
    m_Responses_Original_Result_Codelist_C_CodeIsSet = false;
    m_Responses_Original_Result_Term_C_Code = utility::conversions::to_string_t("");
    m_Responses_Original_Result_Term_C_CodeIsSet = false;
    m_Responses_Original_Result_Unit_Codelist_C_Code = utility::conversions::to_string_t("");
    m_Responses_Original_Result_Unit_Codelist_C_CodeIsSet = false;
    m_Responses_Original_Result_Unit_Term_C_Code = utility::conversions::to_string_t("");
    m_Responses_Original_Result_Unit_Term_C_CodeIsSet = false;
    m_Responses_Standardized_Result_Codelist_C_Code = utility::conversions::to_string_t("");
    m_Responses_Standardized_Result_Codelist_C_CodeIsSet = false;
    m_Responses_Standardized_Result_Term_C_Code = utility::conversions::to_string_t("");
    m_Responses_Standardized_Result_Term_C_CodeIsSet = false;
    m_Responses_Standardized_Result_Unit_Codelist_C_Code = utility::conversions::to_string_t("");
    m_Responses_Standardized_Result_Unit_Codelist_C_CodeIsSet = false;
    m_Responses_Standardized_Result_Unit_Term_C_Code = utility::conversions::to_string_t("");
    m_Responses_Standardized_Result_Unit_Term_C_CodeIsSet = false;
}

ExportQrsResponses::~ExportQrsResponses()
{
}

void ExportQrsResponses::validate()
{
    // TODO: implement validation
}

web::json::value ExportQrsResponses::toJson() const
{
    web::json::value val = web::json::value::object();
    if(m_Response_GroupIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Response Group"))] = ModelBase::toJson(m_Response_Group);
    }
    if(m_SequenceIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Sequence"))] = ModelBase::toJson(m_Sequence);
    }
    if(m_Responses_Original_Result_Codelist_C_CodeIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Codelist C-Code"))] = ModelBase::toJson(m_Responses_Original_Result_Codelist_C_Code);
    }
    if(m_Responses_Original_Result_Term_C_CodeIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Term C-Code"))] = ModelBase::toJson(m_Responses_Original_Result_Term_C_Code);
    }
    if(m_Responses_Original_Result_Unit_Codelist_C_CodeIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Codelist C-Code"))] = ModelBase::toJson(m_Responses_Original_Result_Unit_Codelist_C_Code);
    }
    if(m_Responses_Original_Result_Unit_Term_C_CodeIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Term C-Code"))] = ModelBase::toJson(m_Responses_Original_Result_Unit_Term_C_Code);
    }
    if(m_Responses_Standardized_Result_Codelist_C_CodeIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Codelist C-Code"))] = ModelBase::toJson(m_Responses_Standardized_Result_Codelist_C_Code);
    }
    if(m_Responses_Standardized_Result_Term_C_CodeIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Term C-Code"))] = ModelBase::toJson(m_Responses_Standardized_Result_Term_C_Code);
    }
    if(m_Responses_Standardized_Result_Unit_Codelist_C_CodeIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Codelist C-Code"))] = ModelBase::toJson(m_Responses_Standardized_Result_Unit_Codelist_C_Code);
    }
    if(m_Responses_Standardized_Result_Unit_Term_C_CodeIsSet)
    {   
        
        val[utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Term C-Code"))] = ModelBase::toJson(m_Responses_Standardized_Result_Unit_Term_C_Code);
    }

    return val;
}

bool ExportQrsResponses::fromJson(const web::json::value& val)
{
    bool ok = true;
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Response Group"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Response Group")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setResponseGroup;
            ok &= ModelBase::fromJson(fieldValue, refVal_setResponseGroup);
            setResponseGroup(refVal_setResponseGroup);
            
        }
    }
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Sequence"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Sequence")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSequence;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSequence);
            setSequence(refVal_setSequence);
            
        }
    }
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Codelist C-Code"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Codelist C-Code")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setResponsesOriginalResultCodelistCCode;
            ok &= ModelBase::fromJson(fieldValue, refVal_setResponsesOriginalResultCodelistCCode);
            setResponsesOriginalResultCodelistCCode(refVal_setResponsesOriginalResultCodelistCCode);
            
        }
    }
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Term C-Code"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Term C-Code")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setResponsesOriginalResultTermCCode;
            ok &= ModelBase::fromJson(fieldValue, refVal_setResponsesOriginalResultTermCCode);
            setResponsesOriginalResultTermCCode(refVal_setResponsesOriginalResultTermCCode);
            
        }
    }
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Codelist C-Code"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Codelist C-Code")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setResponsesOriginalResultUnitCodelistCCode;
            ok &= ModelBase::fromJson(fieldValue, refVal_setResponsesOriginalResultUnitCodelistCCode);
            setResponsesOriginalResultUnitCodelistCCode(refVal_setResponsesOriginalResultUnitCodelistCCode);
            
        }
    }
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Term C-Code"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Term C-Code")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setResponsesOriginalResultUnitTermCCode;
            ok &= ModelBase::fromJson(fieldValue, refVal_setResponsesOriginalResultUnitTermCCode);
            setResponsesOriginalResultUnitTermCCode(refVal_setResponsesOriginalResultUnitTermCCode);
            
        }
    }
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Codelist C-Code"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Codelist C-Code")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setResponsesStandardizedResultCodelistCCode;
            ok &= ModelBase::fromJson(fieldValue, refVal_setResponsesStandardizedResultCodelistCCode);
            setResponsesStandardizedResultCodelistCCode(refVal_setResponsesStandardizedResultCodelistCCode);
            
        }
    }
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Term C-Code"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Term C-Code")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setResponsesStandardizedResultTermCCode;
            ok &= ModelBase::fromJson(fieldValue, refVal_setResponsesStandardizedResultTermCCode);
            setResponsesStandardizedResultTermCCode(refVal_setResponsesStandardizedResultTermCCode);
            
        }
    }
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Codelist C-Code"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Codelist C-Code")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setResponsesStandardizedResultUnitCodelistCCode;
            ok &= ModelBase::fromJson(fieldValue, refVal_setResponsesStandardizedResultUnitCodelistCCode);
            setResponsesStandardizedResultUnitCodelistCCode(refVal_setResponsesStandardizedResultUnitCodelistCCode);
            
        }
    }
    if(val.has_field(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Term C-Code"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Term C-Code")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setResponsesStandardizedResultUnitTermCCode;
            ok &= ModelBase::fromJson(fieldValue, refVal_setResponsesStandardizedResultUnitTermCCode);
            setResponsesStandardizedResultUnitTermCCode(refVal_setResponsesStandardizedResultUnitTermCCode);
            
        }
    }
    return ok;
}

void ExportQrsResponses::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(_XPLATSTR(".")))
    {
        namePrefix += utility::conversions::to_string_t(_XPLATSTR("."));
    }
    if(m_Response_GroupIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Response Group")), m_Response_Group));
    }
    if(m_SequenceIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Sequence")), m_Sequence));
    }
    if(m_Responses_Original_Result_Codelist_C_CodeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Codelist C-Code")), m_Responses_Original_Result_Codelist_C_Code));
    }
    if(m_Responses_Original_Result_Term_C_CodeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Term C-Code")), m_Responses_Original_Result_Term_C_Code));
    }
    if(m_Responses_Original_Result_Unit_Codelist_C_CodeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Codelist C-Code")), m_Responses_Original_Result_Unit_Codelist_C_Code));
    }
    if(m_Responses_Original_Result_Unit_Term_C_CodeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Term C-Code")), m_Responses_Original_Result_Unit_Term_C_Code));
    }
    if(m_Responses_Standardized_Result_Codelist_C_CodeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Codelist C-Code")), m_Responses_Standardized_Result_Codelist_C_Code));
    }
    if(m_Responses_Standardized_Result_Term_C_CodeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Term C-Code")), m_Responses_Standardized_Result_Term_C_Code));
    }
    if(m_Responses_Standardized_Result_Unit_Codelist_C_CodeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Codelist C-Code")), m_Responses_Standardized_Result_Unit_Codelist_C_Code));
    }
    if(m_Responses_Standardized_Result_Unit_Term_C_CodeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Term C-Code")), m_Responses_Standardized_Result_Unit_Term_C_Code));
    }
}

bool ExportQrsResponses::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(_XPLATSTR(".")))
    {
        namePrefix += utility::conversions::to_string_t(_XPLATSTR("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Response Group"))))
    {
        utility::string_t refVal_setResponseGroup;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Response Group"))), refVal_setResponseGroup );
        setResponseGroup(refVal_setResponseGroup);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Sequence"))))
    {
        utility::string_t refVal_setSequence;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Sequence"))), refVal_setSequence );
        setSequence(refVal_setSequence);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Codelist C-Code"))))
    {
        utility::string_t refVal_setResponsesOriginalResultCodelistCCode;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Codelist C-Code"))), refVal_setResponsesOriginalResultCodelistCCode );
        setResponsesOriginalResultCodelistCCode(refVal_setResponsesOriginalResultCodelistCCode);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Term C-Code"))))
    {
        utility::string_t refVal_setResponsesOriginalResultTermCCode;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Term C-Code"))), refVal_setResponsesOriginalResultTermCCode );
        setResponsesOriginalResultTermCCode(refVal_setResponsesOriginalResultTermCCode);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Codelist C-Code"))))
    {
        utility::string_t refVal_setResponsesOriginalResultUnitCodelistCCode;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Codelist C-Code"))), refVal_setResponsesOriginalResultUnitCodelistCCode );
        setResponsesOriginalResultUnitCodelistCCode(refVal_setResponsesOriginalResultUnitCodelistCCode);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Term C-Code"))))
    {
        utility::string_t refVal_setResponsesOriginalResultUnitTermCCode;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Original Result Unit Term C-Code"))), refVal_setResponsesOriginalResultUnitTermCCode );
        setResponsesOriginalResultUnitTermCCode(refVal_setResponsesOriginalResultUnitTermCCode);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Codelist C-Code"))))
    {
        utility::string_t refVal_setResponsesStandardizedResultCodelistCCode;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Codelist C-Code"))), refVal_setResponsesStandardizedResultCodelistCCode );
        setResponsesStandardizedResultCodelistCCode(refVal_setResponsesStandardizedResultCodelistCCode);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Term C-Code"))))
    {
        utility::string_t refVal_setResponsesStandardizedResultTermCCode;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Term C-Code"))), refVal_setResponsesStandardizedResultTermCCode );
        setResponsesStandardizedResultTermCCode(refVal_setResponsesStandardizedResultTermCCode);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Codelist C-Code"))))
    {
        utility::string_t refVal_setResponsesStandardizedResultUnitCodelistCCode;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Codelist C-Code"))), refVal_setResponsesStandardizedResultUnitCodelistCCode );
        setResponsesStandardizedResultUnitCodelistCCode(refVal_setResponsesStandardizedResultUnitCodelistCCode);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Term C-Code"))))
    {
        utility::string_t refVal_setResponsesStandardizedResultUnitTermCCode;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(_XPLATSTR("Response&#39;s Standardized Result Unit Term C-Code"))), refVal_setResponsesStandardizedResultUnitTermCCode );
        setResponsesStandardizedResultUnitTermCCode(refVal_setResponsesStandardizedResultUnitTermCCode);
    }
    return ok;
}


utility::string_t ExportQrsResponses::getResponseGroup() const
{
    return m_Response_Group;
}


void ExportQrsResponses::setResponseGroup(const utility::string_t& value)
{
    m_Response_Group = value;
    m_Response_GroupIsSet = true;
}

bool ExportQrsResponses::responseGroupIsSet() const
{
    return m_Response_GroupIsSet;
}

void ExportQrsResponses::unsetResponse_Group()
{
    m_Response_GroupIsSet = false;
}
utility::string_t ExportQrsResponses::getSequence() const
{
    return m_Sequence;
}


void ExportQrsResponses::setSequence(const utility::string_t& value)
{
    m_Sequence = value;
    m_SequenceIsSet = true;
}

bool ExportQrsResponses::sequenceIsSet() const
{
    return m_SequenceIsSet;
}

void ExportQrsResponses::unsetSequence()
{
    m_SequenceIsSet = false;
}
utility::string_t ExportQrsResponses::getResponsesOriginalResultCodelistCCode() const
{
    return m_Responses_Original_Result_Codelist_C_Code;
}


void ExportQrsResponses::setResponsesOriginalResultCodelistCCode(const utility::string_t& value)
{
    m_Responses_Original_Result_Codelist_C_Code = value;
    m_Responses_Original_Result_Codelist_C_CodeIsSet = true;
}

bool ExportQrsResponses::responsesOriginalResultCodelistCCodeIsSet() const
{
    return m_Responses_Original_Result_Codelist_C_CodeIsSet;
}

void ExportQrsResponses::unsetResponses_Original_Result_Codelist_C_Code()
{
    m_Responses_Original_Result_Codelist_C_CodeIsSet = false;
}
utility::string_t ExportQrsResponses::getResponsesOriginalResultTermCCode() const
{
    return m_Responses_Original_Result_Term_C_Code;
}


void ExportQrsResponses::setResponsesOriginalResultTermCCode(const utility::string_t& value)
{
    m_Responses_Original_Result_Term_C_Code = value;
    m_Responses_Original_Result_Term_C_CodeIsSet = true;
}

bool ExportQrsResponses::responsesOriginalResultTermCCodeIsSet() const
{
    return m_Responses_Original_Result_Term_C_CodeIsSet;
}

void ExportQrsResponses::unsetResponses_Original_Result_Term_C_Code()
{
    m_Responses_Original_Result_Term_C_CodeIsSet = false;
}
utility::string_t ExportQrsResponses::getResponsesOriginalResultUnitCodelistCCode() const
{
    return m_Responses_Original_Result_Unit_Codelist_C_Code;
}


void ExportQrsResponses::setResponsesOriginalResultUnitCodelistCCode(const utility::string_t& value)
{
    m_Responses_Original_Result_Unit_Codelist_C_Code = value;
    m_Responses_Original_Result_Unit_Codelist_C_CodeIsSet = true;
}

bool ExportQrsResponses::responsesOriginalResultUnitCodelistCCodeIsSet() const
{
    return m_Responses_Original_Result_Unit_Codelist_C_CodeIsSet;
}

void ExportQrsResponses::unsetResponses_Original_Result_Unit_Codelist_C_Code()
{
    m_Responses_Original_Result_Unit_Codelist_C_CodeIsSet = false;
}
utility::string_t ExportQrsResponses::getResponsesOriginalResultUnitTermCCode() const
{
    return m_Responses_Original_Result_Unit_Term_C_Code;
}


void ExportQrsResponses::setResponsesOriginalResultUnitTermCCode(const utility::string_t& value)
{
    m_Responses_Original_Result_Unit_Term_C_Code = value;
    m_Responses_Original_Result_Unit_Term_C_CodeIsSet = true;
}

bool ExportQrsResponses::responsesOriginalResultUnitTermCCodeIsSet() const
{
    return m_Responses_Original_Result_Unit_Term_C_CodeIsSet;
}

void ExportQrsResponses::unsetResponses_Original_Result_Unit_Term_C_Code()
{
    m_Responses_Original_Result_Unit_Term_C_CodeIsSet = false;
}
utility::string_t ExportQrsResponses::getResponsesStandardizedResultCodelistCCode() const
{
    return m_Responses_Standardized_Result_Codelist_C_Code;
}


void ExportQrsResponses::setResponsesStandardizedResultCodelistCCode(const utility::string_t& value)
{
    m_Responses_Standardized_Result_Codelist_C_Code = value;
    m_Responses_Standardized_Result_Codelist_C_CodeIsSet = true;
}

bool ExportQrsResponses::responsesStandardizedResultCodelistCCodeIsSet() const
{
    return m_Responses_Standardized_Result_Codelist_C_CodeIsSet;
}

void ExportQrsResponses::unsetResponses_Standardized_Result_Codelist_C_Code()
{
    m_Responses_Standardized_Result_Codelist_C_CodeIsSet = false;
}
utility::string_t ExportQrsResponses::getResponsesStandardizedResultTermCCode() const
{
    return m_Responses_Standardized_Result_Term_C_Code;
}


void ExportQrsResponses::setResponsesStandardizedResultTermCCode(const utility::string_t& value)
{
    m_Responses_Standardized_Result_Term_C_Code = value;
    m_Responses_Standardized_Result_Term_C_CodeIsSet = true;
}

bool ExportQrsResponses::responsesStandardizedResultTermCCodeIsSet() const
{
    return m_Responses_Standardized_Result_Term_C_CodeIsSet;
}

void ExportQrsResponses::unsetResponses_Standardized_Result_Term_C_Code()
{
    m_Responses_Standardized_Result_Term_C_CodeIsSet = false;
}
utility::string_t ExportQrsResponses::getResponsesStandardizedResultUnitCodelistCCode() const
{
    return m_Responses_Standardized_Result_Unit_Codelist_C_Code;
}


void ExportQrsResponses::setResponsesStandardizedResultUnitCodelistCCode(const utility::string_t& value)
{
    m_Responses_Standardized_Result_Unit_Codelist_C_Code = value;
    m_Responses_Standardized_Result_Unit_Codelist_C_CodeIsSet = true;
}

bool ExportQrsResponses::responsesStandardizedResultUnitCodelistCCodeIsSet() const
{
    return m_Responses_Standardized_Result_Unit_Codelist_C_CodeIsSet;
}

void ExportQrsResponses::unsetResponses_Standardized_Result_Unit_Codelist_C_Code()
{
    m_Responses_Standardized_Result_Unit_Codelist_C_CodeIsSet = false;
}
utility::string_t ExportQrsResponses::getResponsesStandardizedResultUnitTermCCode() const
{
    return m_Responses_Standardized_Result_Unit_Term_C_Code;
}


void ExportQrsResponses::setResponsesStandardizedResultUnitTermCCode(const utility::string_t& value)
{
    m_Responses_Standardized_Result_Unit_Term_C_Code = value;
    m_Responses_Standardized_Result_Unit_Term_C_CodeIsSet = true;
}

bool ExportQrsResponses::responsesStandardizedResultUnitTermCCodeIsSet() const
{
    return m_Responses_Standardized_Result_Unit_Term_C_CodeIsSet;
}

void ExportQrsResponses::unsetResponses_Standardized_Result_Unit_Term_C_Code()
{
    m_Responses_Standardized_Result_Unit_Term_C_CodeIsSet = false;
}

}
}
}
}


