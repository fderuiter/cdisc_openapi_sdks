/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.DefaultErrorResponse;
import org.openapitools.model.ExportQrsItemsTable;
import org.openapitools.model.ExportQrsWorkbook;
import org.openapitools.model.QrsItem;
import org.openapitools.model.QrsItems;
import org.openapitools.model.QrsProduct;
import org.openapitools.model.QrsResponsegroup;
import org.openapitools.model.QrsResponsegroups;
import org.openapitools.model.XmlQrsItem;
import org.openapitools.model.XmlQrsItems;
import org.openapitools.model.XmlQrsProduct;
import org.openapitools.model.XmlQrsResponsegroup;
import org.openapitools.model.XmlQrsResponsegroups;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.validation.Valid;
import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * CDISC Library API
 *
 * <p>REST API Documentation for CDISC Library in production server
 *
 * API tests for MeasuresApi
 */
public class MeasuresApiTest {


    private MeasuresApi api;

    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);

        api = JAXRSClientFactory.create("https://library.cdisc.org/api", MeasuresApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionGetTest() {
        String measure = null;
        String version = null;
        //QrsProduct response = api.mdrQrsMeasureVersionGet(measure, version);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionItemsGetTest() {
        String measure = null;
        String version = null;
        //QrsItems response = api.mdrQrsMeasureVersionItemsGet(measure, version);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionItemsItemGetTest() {
        String measure = null;
        String version = null;
        String item = null;
        //QrsItem response = api.mdrQrsMeasureVersionItemsItemGet(measure, version, item);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionResponsegroupsGetTest() {
        String measure = null;
        String version = null;
        //QrsResponsegroups response = api.mdrQrsMeasureVersionResponsegroupsGet(measure, version);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void mdrQrsMeasureVersionResponsegroupsResponsegroupGetTest() {
        String measure = null;
        String version = null;
        String responsegroup = null;
        //QrsResponsegroup response = api.mdrQrsMeasureVersionResponsegroupsResponsegroupGet(measure, version, responsegroup);
        //assertNotNull(response);
        // TODO: test validations


    }
    
}
