/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.SDTMImplementationGuideSDTMIGApi
import org.openapitools.client.models.DefaultErrorResponse
import org.openapitools.client.models.ExportSdtmigDatasetsTable
import org.openapitools.client.models.ExportSdtmigVariablesTable
import org.openapitools.client.models.ExportSdtmigWorkbook
import org.openapitools.client.models.RootSdtmigDatasetVariable
import org.openapitools.client.models.SdtmigClass
import org.openapitools.client.models.SdtmigClassDatasets
import org.openapitools.client.models.SdtmigClasses
import org.openapitools.client.models.SdtmigDataset
import org.openapitools.client.models.SdtmigDatasetVariable
import org.openapitools.client.models.SdtmigDatasetVariables
import org.openapitools.client.models.SdtmigDatasets
import org.openapitools.client.models.SdtmigProduct
import org.openapitools.client.models.XmlRootSdtmigDatasetVariable
import org.openapitools.client.models.XmlSdtmigClass
import org.openapitools.client.models.XmlSdtmigClassDatasets
import org.openapitools.client.models.XmlSdtmigClasses
import org.openapitools.client.models.XmlSdtmigDataset
import org.openapitools.client.models.XmlSdtmigDatasetVariable
import org.openapitools.client.models.XmlSdtmigDatasetVariables
import org.openapitools.client.models.XmlSdtmigDatasets
import org.openapitools.client.models.XmlSdtmigProduct

class SDTMImplementationGuideSDTMIGApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SDTMImplementationGuideSDTMIGApi
        //val apiInstance = SDTMImplementationGuideSDTMIGApi()

        // to test mdrRootSdtmigDatasetsDatasetVariablesVarGet
        should("test mdrRootSdtmigDatasetsDatasetVariablesVarGet") {
            // uncomment below to test mdrRootSdtmigDatasetsDatasetVariablesVarGet
            //val dataset : kotlin.String = DM // kotlin.String | SDTMIG Dataset Identifier
            //val `var` : kotlin.String = SUBJID // kotlin.String | SDTMIG Variable Identifier
            //val result : RootSdtmigDatasetVariable = apiInstance.mdrRootSdtmigDatasetsDatasetVariablesVarGet(dataset, `var`)
            //result shouldBe ("TODO")
        }

        // to test mdrSdtmigVersionClassesClassDatasetsGet
        should("test mdrSdtmigVersionClassesClassDatasetsGet") {
            // uncomment below to test mdrSdtmigVersionClassesClassDatasetsGet
            //val version : kotlin.String = 3-3 // kotlin.String | CDISC Library Product Version
            //val propertyClass : kotlin.String = Findings // kotlin.String | SDTMIG Class Identifier
            //val result : SdtmigClassDatasets = apiInstance.mdrSdtmigVersionClassesClassDatasetsGet(version, propertyClass)
            //result shouldBe ("TODO")
        }

        // to test mdrSdtmigVersionClassesClassGet
        should("test mdrSdtmigVersionClassesClassGet") {
            // uncomment below to test mdrSdtmigVersionClassesClassGet
            //val version : kotlin.String = 3-3 // kotlin.String | CDISC Library Product Version
            //val propertyClass : kotlin.String = Findings // kotlin.String | SDTMIG Class Identifier
            //val result : SdtmigClass = apiInstance.mdrSdtmigVersionClassesClassGet(version, propertyClass)
            //result shouldBe ("TODO")
        }

        // to test mdrSdtmigVersionClassesGet
        should("test mdrSdtmigVersionClassesGet") {
            // uncomment below to test mdrSdtmigVersionClassesGet
            //val version : kotlin.String = 3-3 // kotlin.String | CDISC Library Product Version
            //val result : SdtmigClasses = apiInstance.mdrSdtmigVersionClassesGet(version)
            //result shouldBe ("TODO")
        }

        // to test mdrSdtmigVersionDatasetsDatasetGet
        should("test mdrSdtmigVersionDatasetsDatasetGet") {
            // uncomment below to test mdrSdtmigVersionDatasetsDatasetGet
            //val version : kotlin.String = 3-3 // kotlin.String | CDISC Library Product Version
            //val dataset : kotlin.String = LB // kotlin.String | SDTMIG Dataset Identifier
            //val result : SdtmigDataset = apiInstance.mdrSdtmigVersionDatasetsDatasetGet(version, dataset)
            //result shouldBe ("TODO")
        }

        // to test mdrSdtmigVersionDatasetsDatasetVariablesGet
        should("test mdrSdtmigVersionDatasetsDatasetVariablesGet") {
            // uncomment below to test mdrSdtmigVersionDatasetsDatasetVariablesGet
            //val version : kotlin.String = 3-3 // kotlin.String | CDISC Library Product Version
            //val dataset : kotlin.String = LB // kotlin.String | SDTMIG Dataset Identifier
            //val result : SdtmigDatasetVariables = apiInstance.mdrSdtmigVersionDatasetsDatasetVariablesGet(version, dataset)
            //result shouldBe ("TODO")
        }

        // to test mdrSdtmigVersionDatasetsDatasetVariablesVarGet
        should("test mdrSdtmigVersionDatasetsDatasetVariablesVarGet") {
            // uncomment below to test mdrSdtmigVersionDatasetsDatasetVariablesVarGet
            //val version : kotlin.String = 3-3 // kotlin.String | CDISC Library Product Version
            //val dataset : kotlin.String = LB // kotlin.String | SDTMIG Dataset Identifier
            //val `var` : kotlin.String = LBDTC // kotlin.String | SDTMIG Variable Identifier
            //val result : SdtmigDatasetVariable = apiInstance.mdrSdtmigVersionDatasetsDatasetVariablesVarGet(version, dataset, `var`)
            //result shouldBe ("TODO")
        }

        // to test mdrSdtmigVersionDatasetsGet
        should("test mdrSdtmigVersionDatasetsGet") {
            // uncomment below to test mdrSdtmigVersionDatasetsGet
            //val version : kotlin.String = 3-3 // kotlin.String | CDISC Library Product Version
            //val result : SdtmigDatasets = apiInstance.mdrSdtmigVersionDatasetsGet(version)
            //result shouldBe ("TODO")
        }

        // to test mdrSdtmigVersionGet
        should("test mdrSdtmigVersionGet") {
            // uncomment below to test mdrSdtmigVersionGet
            //val version : kotlin.String = 3-3 // kotlin.String | CDISC Library Product Version
            //val result : SdtmigProduct = apiInstance.mdrSdtmigVersionGet(version)
            //result shouldBe ("TODO")
        }

    }
}
