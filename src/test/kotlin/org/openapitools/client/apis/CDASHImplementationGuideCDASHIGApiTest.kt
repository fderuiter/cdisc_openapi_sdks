/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.CDASHImplementationGuideCDASHIGApi
import org.openapitools.client.models.CdashigClass
import org.openapitools.client.models.CdashigClassDomains
import org.openapitools.client.models.CdashigClassScenarios
import org.openapitools.client.models.CdashigDomain
import org.openapitools.client.models.CdashigDomainField
import org.openapitools.client.models.CdashigDomainFields
import org.openapitools.client.models.CdashigProduct
import org.openapitools.client.models.CdashigProductClasses
import org.openapitools.client.models.CdashigProductDomains
import org.openapitools.client.models.CdashigProductScenarios
import org.openapitools.client.models.CdashigScenario
import org.openapitools.client.models.CdashigScenarioField
import org.openapitools.client.models.CdashigScenarioFields
import org.openapitools.client.models.DefaultErrorResponse
import org.openapitools.client.models.ExportCdashigTable
import org.openapitools.client.models.RootCdashigDomainField
import org.openapitools.client.models.RootCdashigScenarioField
import org.openapitools.client.models.XmlCdashigClass
import org.openapitools.client.models.XmlCdashigClassDomains
import org.openapitools.client.models.XmlCdashigClassScenarios
import org.openapitools.client.models.XmlCdashigDomain
import org.openapitools.client.models.XmlCdashigDomainField
import org.openapitools.client.models.XmlCdashigDomainFields
import org.openapitools.client.models.XmlCdashigProduct
import org.openapitools.client.models.XmlCdashigProductClasses
import org.openapitools.client.models.XmlCdashigProductDomains
import org.openapitools.client.models.XmlCdashigProductScenarios
import org.openapitools.client.models.XmlCdashigScenario
import org.openapitools.client.models.XmlCdashigScenarioField
import org.openapitools.client.models.XmlCdashigScenarioFields
import org.openapitools.client.models.XmlRootCdashigDomainField
import org.openapitools.client.models.XmlRootCdashigScenarioField

class CDASHImplementationGuideCDASHIGApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CDASHImplementationGuideCDASHIGApi
        //val apiInstance = CDASHImplementationGuideCDASHIGApi()

        // to test mdrCdashigVersionClassesClassDomainsGet
        should("test mdrCdashigVersionClassesClassDomainsGet") {
            // uncomment below to test mdrCdashigVersionClassesClassDomainsGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val propertyClass : kotlin.String = Findings // kotlin.String | CDASHIG Class Identifier
            //val result : CdashigClassDomains = apiInstance.mdrCdashigVersionClassesClassDomainsGet(version, propertyClass)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionClassesClassGet
        should("test mdrCdashigVersionClassesClassGet") {
            // uncomment below to test mdrCdashigVersionClassesClassGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val propertyClass : kotlin.String = Findings // kotlin.String | CDASHIG Class Identifier
            //val result : CdashigClass = apiInstance.mdrCdashigVersionClassesClassGet(version, propertyClass)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionClassesClassScenariosGet
        should("test mdrCdashigVersionClassesClassScenariosGet") {
            // uncomment below to test mdrCdashigVersionClassesClassScenariosGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val propertyClass : kotlin.String = Findings // kotlin.String | CDASHIG Class Identifier
            //val result : CdashigClassScenarios = apiInstance.mdrCdashigVersionClassesClassScenariosGet(version, propertyClass)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionClassesGet
        should("test mdrCdashigVersionClassesGet") {
            // uncomment below to test mdrCdashigVersionClassesGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val result : CdashigProductClasses = apiInstance.mdrCdashigVersionClassesGet(version)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionDomainsDomainFieldsFieldGet
        should("test mdrCdashigVersionDomainsDomainFieldsFieldGet") {
            // uncomment below to test mdrCdashigVersionDomainsDomainFieldsFieldGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val domain : kotlin.String = VS // kotlin.String | CDASHIG Domain Identifier
            //val `field` : kotlin.String = VSDAT // kotlin.String | CDASHIG Field Identifier
            //val result : CdashigDomainField = apiInstance.mdrCdashigVersionDomainsDomainFieldsFieldGet(version, domain, `field`)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionDomainsDomainFieldsGet
        should("test mdrCdashigVersionDomainsDomainFieldsGet") {
            // uncomment below to test mdrCdashigVersionDomainsDomainFieldsGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val domain : kotlin.String = VS // kotlin.String | CDASHIG Domain Identifier
            //val result : CdashigDomainFields = apiInstance.mdrCdashigVersionDomainsDomainFieldsGet(version, domain)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionDomainsDomainGet
        should("test mdrCdashigVersionDomainsDomainGet") {
            // uncomment below to test mdrCdashigVersionDomainsDomainGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val domain : kotlin.String = VS // kotlin.String | CDASHIG Domain Identifier
            //val result : CdashigDomain = apiInstance.mdrCdashigVersionDomainsDomainGet(version, domain)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionDomainsGet
        should("test mdrCdashigVersionDomainsGet") {
            // uncomment below to test mdrCdashigVersionDomainsGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val result : CdashigProductDomains = apiInstance.mdrCdashigVersionDomainsGet(version)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionGet
        should("test mdrCdashigVersionGet") {
            // uncomment below to test mdrCdashigVersionGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val result : CdashigProduct = apiInstance.mdrCdashigVersionGet(version)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet
        should("test mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet") {
            // uncomment below to test mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val domain : kotlin.String = VS // kotlin.String | CDASHIG Domain Identifier
            //val scenario : kotlin.String = Generic // kotlin.String | CDASHIG Scenario Identifier
            //val `field` : kotlin.String = VSDAT // kotlin.String | CDASHIG Field Identifier
            //val result : CdashigScenarioField = apiInstance.mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet(version, domain, scenario, `field`)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionScenariosDomainScenarioFieldsGet
        should("test mdrCdashigVersionScenariosDomainScenarioFieldsGet") {
            // uncomment below to test mdrCdashigVersionScenariosDomainScenarioFieldsGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val domain : kotlin.String = VS // kotlin.String | CDASHIG Domain Identifier
            //val scenario : kotlin.String = HorizontalGeneric // kotlin.String | CDASHIG Scenario Identifier
            //val result : CdashigScenarioFields = apiInstance.mdrCdashigVersionScenariosDomainScenarioFieldsGet(version, domain, scenario)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionScenariosDomainScenarioGet
        should("test mdrCdashigVersionScenariosDomainScenarioGet") {
            // uncomment below to test mdrCdashigVersionScenariosDomainScenarioGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val domain : kotlin.String = VS // kotlin.String | CDASHIG Domain Identifier
            //val scenario : kotlin.String = HorizontalGeneric // kotlin.String | CDASHIG Scenario Identifier
            //val result : CdashigScenario = apiInstance.mdrCdashigVersionScenariosDomainScenarioGet(version, domain, scenario)
            //result shouldBe ("TODO")
        }

        // to test mdrCdashigVersionScenariosGet
        should("test mdrCdashigVersionScenariosGet") {
            // uncomment below to test mdrCdashigVersionScenariosGet
            //val version : kotlin.String = 2-1 // kotlin.String | CDISC Library Product Version
            //val result : CdashigProductScenarios = apiInstance.mdrCdashigVersionScenariosGet(version)
            //result shouldBe ("TODO")
        }

        // to test mdrRootCdashigDomainsDomainFieldsFieldGet
        should("test mdrRootCdashigDomainsDomainFieldsFieldGet") {
            // uncomment below to test mdrRootCdashigDomainsDomainFieldsFieldGet
            //val domain : kotlin.String = VS // kotlin.String | CDASHIG Domain Identifier
            //val `field` : kotlin.String = VSDAT // kotlin.String | CDASHIG Field Identifier
            //val result : RootCdashigDomainField = apiInstance.mdrRootCdashigDomainsDomainFieldsFieldGet(domain, `field`)
            //result shouldBe ("TODO")
        }

        // to test mdrRootCdashigScenariosDomainScenarioFieldsFieldGet
        should("test mdrRootCdashigScenariosDomainScenarioFieldsFieldGet") {
            // uncomment below to test mdrRootCdashigScenariosDomainScenarioFieldsFieldGet
            //val domain : kotlin.String = VS // kotlin.String | CDASHIG Domain Identifier
            //val scenario : kotlin.String = Generic // kotlin.String | CDASHIG Scenario Identifier
            //val `field` : kotlin.String = VSDAT // kotlin.String | CDASHIG Field Identifier
            //val result : RootCdashigScenarioField = apiInstance.mdrRootCdashigScenariosDomainScenarioFieldsFieldGet(domain, scenario, `field`)
            //result shouldBe ("TODO")
        }

    }
}
