note
 description:"[
		CDISC Library API
 		REST API Documentation for CDISC Library in production server
  		The version of the OpenAPI document: 1.1.0
 	    Contact: cdisc_library_support@cdisc.org

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CDASH_CLASS_FIELD_LINKS




feature --Access

    self: detachable CDASH_CLASS_FIELD_REF
      
    codelist: detachable LIST [ROOT_CT_CODELIST_REF_ELEMENT]
      
    parent_product: detachable CDASH_PRODUCT_REF
      
    parent_class: detachable CDASH_CLASS_REF
      
    root_item: detachable ROOT_CDASH_CLASS_FIELD_REF
      
    prior_version: detachable CDASH_CLASS_FIELD_REF
      
    sdtm_class_mapping_targets: detachable LIST [SDTM_CLASS_VARIABLE_REF_TARGET]
      
    sdtm_dataset_mapping_targets: detachable LIST [SDTM_DATASET_VARIABLE_REF_TARGET]
      

feature -- Change Element

    set_self (a_name: like self)
        -- Set 'self' with 'a_name'.
      do
        self := a_name
      ensure
        self_set: self = a_name
      end

    set_codelist (a_name: like codelist)
        -- Set 'codelist' with 'a_name'.
      do
        codelist := a_name
      ensure
        codelist_set: codelist = a_name
      end

    set_parent_product (a_name: like parent_product)
        -- Set 'parent_product' with 'a_name'.
      do
        parent_product := a_name
      ensure
        parent_product_set: parent_product = a_name
      end

    set_parent_class (a_name: like parent_class)
        -- Set 'parent_class' with 'a_name'.
      do
        parent_class := a_name
      ensure
        parent_class_set: parent_class = a_name
      end

    set_root_item (a_name: like root_item)
        -- Set 'root_item' with 'a_name'.
      do
        root_item := a_name
      ensure
        root_item_set: root_item = a_name
      end

    set_prior_version (a_name: like prior_version)
        -- Set 'prior_version' with 'a_name'.
      do
        prior_version := a_name
      ensure
        prior_version_set: prior_version = a_name
      end

    set_sdtm_class_mapping_targets (a_name: like sdtm_class_mapping_targets)
        -- Set 'sdtm_class_mapping_targets' with 'a_name'.
      do
        sdtm_class_mapping_targets := a_name
      ensure
        sdtm_class_mapping_targets_set: sdtm_class_mapping_targets = a_name
      end

    set_sdtm_dataset_mapping_targets (a_name: like sdtm_dataset_mapping_targets)
        -- Set 'sdtm_dataset_mapping_targets' with 'a_name'.
      do
        sdtm_dataset_mapping_targets := a_name
      ensure
        sdtm_dataset_mapping_targets_set: sdtm_dataset_mapping_targets = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CDASH_CLASS_FIELD_LINKS%N")
        if attached self as l_self then
          Result.append ("%Nself:")
          Result.append (l_self.out)
          Result.append ("%N")
        end
        if attached codelist as l_codelist then
          across l_codelist as ic loop
            Result.append ("%N codelist:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached parent_product as l_parent_product then
          Result.append ("%Nparent_product:")
          Result.append (l_parent_product.out)
          Result.append ("%N")
        end
        if attached parent_class as l_parent_class then
          Result.append ("%Nparent_class:")
          Result.append (l_parent_class.out)
          Result.append ("%N")
        end
        if attached root_item as l_root_item then
          Result.append ("%Nroot_item:")
          Result.append (l_root_item.out)
          Result.append ("%N")
        end
        if attached prior_version as l_prior_version then
          Result.append ("%Nprior_version:")
          Result.append (l_prior_version.out)
          Result.append ("%N")
        end
        if attached sdtm_class_mapping_targets as l_sdtm_class_mapping_targets then
          across l_sdtm_class_mapping_targets as ic loop
            Result.append ("%N sdtm_class_mapping_targets:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached sdtm_dataset_mapping_targets as l_sdtm_dataset_mapping_targets then
          across l_sdtm_dataset_mapping_targets as ic loop
            Result.append ("%N sdtm_dataset_mapping_targets:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

