note
 description:"[
		CDISC Library API
 		REST API Documentation for CDISC Library in production server
  		The version of the OpenAPI document: 1.1.0
 	    Contact: cdisc_library_support@cdisc.org

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class EXPORT_QRS_WORKBOOK_ITEMS_ROW




feature --Access

    item__sequence: detachable STRING_32
      
    test__name: detachable STRING_32
      
    item__text: detachable STRING_32
      
    tests__codelist__c__code: detachable STRING_32
      
    tests__term__c__code: detachable STRING_32
      
    test__codes__codelist__c__code: detachable STRING_32
      
    test__codes__term__c__code: detachable STRING_32
      
    subcategorys__codelist__c__code: detachable STRING_32
      
    subcategorys__term__c__code: detachable STRING_32
      
    evaluators__codelist__c__code: detachable STRING_32
      
    evaluators__term__c__code: detachable STRING_32
      
    free_form__responses__datatype: detachable STRING_32
      
    response__group: detachable STRING_32
      

feature -- Change Element

    set_item__sequence (a_name: like item__sequence)
        -- Set 'item__sequence' with 'a_name'.
      do
        item__sequence := a_name
      ensure
        item__sequence_set: item__sequence = a_name
      end

    set_test__name (a_name: like test__name)
        -- Set 'test__name' with 'a_name'.
      do
        test__name := a_name
      ensure
        test__name_set: test__name = a_name
      end

    set_item__text (a_name: like item__text)
        -- Set 'item__text' with 'a_name'.
      do
        item__text := a_name
      ensure
        item__text_set: item__text = a_name
      end

    set_tests__codelist__c__code (a_name: like tests__codelist__c__code)
        -- Set 'tests__codelist__c__code' with 'a_name'.
      do
        tests__codelist__c__code := a_name
      ensure
        tests__codelist__c__code_set: tests__codelist__c__code = a_name
      end

    set_tests__term__c__code (a_name: like tests__term__c__code)
        -- Set 'tests__term__c__code' with 'a_name'.
      do
        tests__term__c__code := a_name
      ensure
        tests__term__c__code_set: tests__term__c__code = a_name
      end

    set_test__codes__codelist__c__code (a_name: like test__codes__codelist__c__code)
        -- Set 'test__codes__codelist__c__code' with 'a_name'.
      do
        test__codes__codelist__c__code := a_name
      ensure
        test__codes__codelist__c__code_set: test__codes__codelist__c__code = a_name
      end

    set_test__codes__term__c__code (a_name: like test__codes__term__c__code)
        -- Set 'test__codes__term__c__code' with 'a_name'.
      do
        test__codes__term__c__code := a_name
      ensure
        test__codes__term__c__code_set: test__codes__term__c__code = a_name
      end

    set_subcategorys__codelist__c__code (a_name: like subcategorys__codelist__c__code)
        -- Set 'subcategorys__codelist__c__code' with 'a_name'.
      do
        subcategorys__codelist__c__code := a_name
      ensure
        subcategorys__codelist__c__code_set: subcategorys__codelist__c__code = a_name
      end

    set_subcategorys__term__c__code (a_name: like subcategorys__term__c__code)
        -- Set 'subcategorys__term__c__code' with 'a_name'.
      do
        subcategorys__term__c__code := a_name
      ensure
        subcategorys__term__c__code_set: subcategorys__term__c__code = a_name
      end

    set_evaluators__codelist__c__code (a_name: like evaluators__codelist__c__code)
        -- Set 'evaluators__codelist__c__code' with 'a_name'.
      do
        evaluators__codelist__c__code := a_name
      ensure
        evaluators__codelist__c__code_set: evaluators__codelist__c__code = a_name
      end

    set_evaluators__term__c__code (a_name: like evaluators__term__c__code)
        -- Set 'evaluators__term__c__code' with 'a_name'.
      do
        evaluators__term__c__code := a_name
      ensure
        evaluators__term__c__code_set: evaluators__term__c__code = a_name
      end

    set_free_form__responses__datatype (a_name: like free_form__responses__datatype)
        -- Set 'free_form__responses__datatype' with 'a_name'.
      do
        free_form__responses__datatype := a_name
      ensure
        free_form__responses__datatype_set: free_form__responses__datatype = a_name
      end

    set_response__group (a_name: like response__group)
        -- Set 'response__group' with 'a_name'.
      do
        response__group := a_name
      ensure
        response__group_set: response__group = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass EXPORT_QRS_WORKBOOK_ITEMS_ROW%N")
        if attached item__sequence as l_item__sequence then
          Result.append ("%Nitem__sequence:")
          Result.append (l_item__sequence.out)
          Result.append ("%N")
        end
        if attached test__name as l_test__name then
          Result.append ("%Ntest__name:")
          Result.append (l_test__name.out)
          Result.append ("%N")
        end
        if attached item__text as l_item__text then
          Result.append ("%Nitem__text:")
          Result.append (l_item__text.out)
          Result.append ("%N")
        end
        if attached tests__codelist__c__code as l_tests__codelist__c__code then
          Result.append ("%Ntests__codelist__c__code:")
          Result.append (l_tests__codelist__c__code.out)
          Result.append ("%N")
        end
        if attached tests__term__c__code as l_tests__term__c__code then
          Result.append ("%Ntests__term__c__code:")
          Result.append (l_tests__term__c__code.out)
          Result.append ("%N")
        end
        if attached test__codes__codelist__c__code as l_test__codes__codelist__c__code then
          Result.append ("%Ntest__codes__codelist__c__code:")
          Result.append (l_test__codes__codelist__c__code.out)
          Result.append ("%N")
        end
        if attached test__codes__term__c__code as l_test__codes__term__c__code then
          Result.append ("%Ntest__codes__term__c__code:")
          Result.append (l_test__codes__term__c__code.out)
          Result.append ("%N")
        end
        if attached subcategorys__codelist__c__code as l_subcategorys__codelist__c__code then
          Result.append ("%Nsubcategorys__codelist__c__code:")
          Result.append (l_subcategorys__codelist__c__code.out)
          Result.append ("%N")
        end
        if attached subcategorys__term__c__code as l_subcategorys__term__c__code then
          Result.append ("%Nsubcategorys__term__c__code:")
          Result.append (l_subcategorys__term__c__code.out)
          Result.append ("%N")
        end
        if attached evaluators__codelist__c__code as l_evaluators__codelist__c__code then
          Result.append ("%Nevaluators__codelist__c__code:")
          Result.append (l_evaluators__codelist__c__code.out)
          Result.append ("%N")
        end
        if attached evaluators__term__c__code as l_evaluators__term__c__code then
          Result.append ("%Nevaluators__term__c__code:")
          Result.append (l_evaluators__term__c__code.out)
          Result.append ("%N")
        end
        if attached free_form__responses__datatype as l_free_form__responses__datatype then
          Result.append ("%Nfree_form__responses__datatype:")
          Result.append (l_free_form__responses__datatype.out)
          Result.append ("%N")
        end
        if attached response__group as l_response__group then
          Result.append ("%Nresponse__group:")
          Result.append (l_response__group.out)
          Result.append ("%N")
        end
      end
end

