note
 description:"[
		CDISC Library API
 		REST API Documentation for CDISC Library in production server
  		The version of the OpenAPI document: 1.1.0
 	    Contact: cdisc_library_support@cdisc.org

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class PRODUCTGROUP_DATA_TABULATION_LINKS




feature --Access

    self: detachable PRODUCTGROUP_REF
      
    sdtm: detachable LIST [SDTM_PRODUCT_REF_ELEMENT]
      
    sdtmig: detachable LIST [SDTMIG_PRODUCT_REF_ELEMENT]
      
    sendig: detachable LIST [SENDIG_PRODUCT_REF_ELEMENT]
      

feature -- Change Element

    set_self (a_name: like self)
        -- Set 'self' with 'a_name'.
      do
        self := a_name
      ensure
        self_set: self = a_name
      end

    set_sdtm (a_name: like sdtm)
        -- Set 'sdtm' with 'a_name'.
      do
        sdtm := a_name
      ensure
        sdtm_set: sdtm = a_name
      end

    set_sdtmig (a_name: like sdtmig)
        -- Set 'sdtmig' with 'a_name'.
      do
        sdtmig := a_name
      ensure
        sdtmig_set: sdtmig = a_name
      end

    set_sendig (a_name: like sendig)
        -- Set 'sendig' with 'a_name'.
      do
        sendig := a_name
      ensure
        sendig_set: sendig = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass PRODUCTGROUP_DATA_TABULATION_LINKS%N")
        if attached self as l_self then
          Result.append ("%Nself:")
          Result.append (l_self.out)
          Result.append ("%N")
        end
        if attached sdtm as l_sdtm then
          across l_sdtm as ic loop
            Result.append ("%N sdtm:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached sdtmig as l_sdtmig then
          across l_sdtmig as ic loop
            Result.append ("%N sdtmig:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached sendig as l_sendig then
          across l_sendig as ic loop
            Result.append ("%N sendig:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

