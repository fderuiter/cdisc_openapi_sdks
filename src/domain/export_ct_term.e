note
 description:"[
		CDISC Library API
 		REST API Documentation for CDISC Library in production server
  		The version of the OpenAPI document: 1.1.0
 	    Contact: cdisc_library_support@cdisc.org

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class EXPORT_CT_TERM




feature --Access

    bundle_1: detachable STRING_32
      
    c_di_sc__synonym_s: detachable LIST [STRING_32]
      
    bundle_2: detachable STRING_32
      

feature -- Change Element

    set_bundle_1 (a_name: like bundle_1)
        -- Set 'bundle_1' with 'a_name'.
      do
        bundle_1 := a_name
      ensure
        bundle_1_set: bundle_1 = a_name
      end

    set_c_di_sc__synonym_s (a_name: like c_di_sc__synonym_s)
        -- Set 'c_di_sc__synonym_s' with 'a_name'.
      do
        c_di_sc__synonym_s := a_name
      ensure
        c_di_sc__synonym_s_set: c_di_sc__synonym_s = a_name
      end

    set_bundle_2 (a_name: like bundle_2)
        -- Set 'bundle_2' with 'a_name'.
      do
        bundle_2 := a_name
      ensure
        bundle_2_set: bundle_2 = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass EXPORT_CT_TERM%N")
        if attached bundle_1 as l_bundle_1 then
          Result.append ("%Nbundle_1:")
          Result.append (l_bundle_1.out)
          Result.append ("%N")
        end
        if attached c_di_sc__synonym_s as l_c_di_sc__synonym_s then
          across l_c_di_sc__synonym_s as ic loop
            Result.append ("%N c_di_sc__synonym_s:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached bundle_2 as l_bundle_2 then
          Result.append ("%Nbundle_2:")
          Result.append (l_bundle_2.out)
          Result.append ("%N")
        end
      end
end

