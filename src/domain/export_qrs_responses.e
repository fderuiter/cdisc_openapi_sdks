note
 description:"[
		CDISC Library API
 		REST API Documentation for CDISC Library in production server
  		The version of the OpenAPI document: 1.1.0
 	    Contact: cdisc_library_support@cdisc.org

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class EXPORT_QRS_RESPONSES




feature --Access

    response__group: detachable STRING_32
      
    sequence: detachable STRING_32
      
    responses__original__result__codelist__c__code: detachable STRING_32
      
    responses__original__result__term__c__code: detachable STRING_32
      
    responses__original__result__unit__codelist__c__code: detachable STRING_32
      
    responses__original__result__unit__term__c__code: detachable STRING_32
      
    responses__standardized__result__codelist__c__code: detachable STRING_32
      
    responses__standardized__result__term__c__code: detachable STRING_32
      
    responses__standardized__result__unit__codelist__c__code: detachable STRING_32
      
    responses__standardized__result__unit__term__c__code: detachable STRING_32
      

feature -- Change Element

    set_response__group (a_name: like response__group)
        -- Set 'response__group' with 'a_name'.
      do
        response__group := a_name
      ensure
        response__group_set: response__group = a_name
      end

    set_sequence (a_name: like sequence)
        -- Set 'sequence' with 'a_name'.
      do
        sequence := a_name
      ensure
        sequence_set: sequence = a_name
      end

    set_responses__original__result__codelist__c__code (a_name: like responses__original__result__codelist__c__code)
        -- Set 'responses__original__result__codelist__c__code' with 'a_name'.
      do
        responses__original__result__codelist__c__code := a_name
      ensure
        responses__original__result__codelist__c__code_set: responses__original__result__codelist__c__code = a_name
      end

    set_responses__original__result__term__c__code (a_name: like responses__original__result__term__c__code)
        -- Set 'responses__original__result__term__c__code' with 'a_name'.
      do
        responses__original__result__term__c__code := a_name
      ensure
        responses__original__result__term__c__code_set: responses__original__result__term__c__code = a_name
      end

    set_responses__original__result__unit__codelist__c__code (a_name: like responses__original__result__unit__codelist__c__code)
        -- Set 'responses__original__result__unit__codelist__c__code' with 'a_name'.
      do
        responses__original__result__unit__codelist__c__code := a_name
      ensure
        responses__original__result__unit__codelist__c__code_set: responses__original__result__unit__codelist__c__code = a_name
      end

    set_responses__original__result__unit__term__c__code (a_name: like responses__original__result__unit__term__c__code)
        -- Set 'responses__original__result__unit__term__c__code' with 'a_name'.
      do
        responses__original__result__unit__term__c__code := a_name
      ensure
        responses__original__result__unit__term__c__code_set: responses__original__result__unit__term__c__code = a_name
      end

    set_responses__standardized__result__codelist__c__code (a_name: like responses__standardized__result__codelist__c__code)
        -- Set 'responses__standardized__result__codelist__c__code' with 'a_name'.
      do
        responses__standardized__result__codelist__c__code := a_name
      ensure
        responses__standardized__result__codelist__c__code_set: responses__standardized__result__codelist__c__code = a_name
      end

    set_responses__standardized__result__term__c__code (a_name: like responses__standardized__result__term__c__code)
        -- Set 'responses__standardized__result__term__c__code' with 'a_name'.
      do
        responses__standardized__result__term__c__code := a_name
      ensure
        responses__standardized__result__term__c__code_set: responses__standardized__result__term__c__code = a_name
      end

    set_responses__standardized__result__unit__codelist__c__code (a_name: like responses__standardized__result__unit__codelist__c__code)
        -- Set 'responses__standardized__result__unit__codelist__c__code' with 'a_name'.
      do
        responses__standardized__result__unit__codelist__c__code := a_name
      ensure
        responses__standardized__result__unit__codelist__c__code_set: responses__standardized__result__unit__codelist__c__code = a_name
      end

    set_responses__standardized__result__unit__term__c__code (a_name: like responses__standardized__result__unit__term__c__code)
        -- Set 'responses__standardized__result__unit__term__c__code' with 'a_name'.
      do
        responses__standardized__result__unit__term__c__code := a_name
      ensure
        responses__standardized__result__unit__term__c__code_set: responses__standardized__result__unit__term__c__code = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass EXPORT_QRS_RESPONSES%N")
        if attached response__group as l_response__group then
          Result.append ("%Nresponse__group:")
          Result.append (l_response__group.out)
          Result.append ("%N")
        end
        if attached sequence as l_sequence then
          Result.append ("%Nsequence:")
          Result.append (l_sequence.out)
          Result.append ("%N")
        end
        if attached responses__original__result__codelist__c__code as l_responses__original__result__codelist__c__code then
          Result.append ("%Nresponses__original__result__codelist__c__code:")
          Result.append (l_responses__original__result__codelist__c__code.out)
          Result.append ("%N")
        end
        if attached responses__original__result__term__c__code as l_responses__original__result__term__c__code then
          Result.append ("%Nresponses__original__result__term__c__code:")
          Result.append (l_responses__original__result__term__c__code.out)
          Result.append ("%N")
        end
        if attached responses__original__result__unit__codelist__c__code as l_responses__original__result__unit__codelist__c__code then
          Result.append ("%Nresponses__original__result__unit__codelist__c__code:")
          Result.append (l_responses__original__result__unit__codelist__c__code.out)
          Result.append ("%N")
        end
        if attached responses__original__result__unit__term__c__code as l_responses__original__result__unit__term__c__code then
          Result.append ("%Nresponses__original__result__unit__term__c__code:")
          Result.append (l_responses__original__result__unit__term__c__code.out)
          Result.append ("%N")
        end
        if attached responses__standardized__result__codelist__c__code as l_responses__standardized__result__codelist__c__code then
          Result.append ("%Nresponses__standardized__result__codelist__c__code:")
          Result.append (l_responses__standardized__result__codelist__c__code.out)
          Result.append ("%N")
        end
        if attached responses__standardized__result__term__c__code as l_responses__standardized__result__term__c__code then
          Result.append ("%Nresponses__standardized__result__term__c__code:")
          Result.append (l_responses__standardized__result__term__c__code.out)
          Result.append ("%N")
        end
        if attached responses__standardized__result__unit__codelist__c__code as l_responses__standardized__result__unit__codelist__c__code then
          Result.append ("%Nresponses__standardized__result__unit__codelist__c__code:")
          Result.append (l_responses__standardized__result__unit__codelist__c__code.out)
          Result.append ("%N")
        end
        if attached responses__standardized__result__unit__term__c__code as l_responses__standardized__result__unit__term__c__code then
          Result.append ("%Nresponses__standardized__result__unit__term__c__code:")
          Result.append (l_responses__standardized__result__unit__term__c__code.out)
          Result.append ("%N")
        end
      end
end

