/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultErrorResponse from '../model/DefaultErrorResponse';
import ExportQrsItemsTable from '../model/ExportQrsItemsTable';
import ExportQrsWorkbook from '../model/ExportQrsWorkbook';
import QrsItem from '../model/QrsItem';
import QrsItems from '../model/QrsItems';
import QrsProduct from '../model/QrsProduct';
import QrsResponsegroup from '../model/QrsResponsegroup';
import QrsResponsegroups from '../model/QrsResponsegroups';
import XmlQrsItem from '../model/XmlQrsItem';
import XmlQrsItems from '../model/XmlQrsItems';
import XmlQrsProduct from '../model/XmlQrsProduct';
import XmlQrsResponsegroup from '../model/XmlQrsResponsegroup';
import XmlQrsResponsegroups from '../model/XmlQrsResponsegroups';

/**
* Measures service.
* @module api/MeasuresApi
* @version 1.1.0
*/
export default class MeasuresApi {

    /**
    * Constructs a new MeasuresApi. 
    * @alias module:api/MeasuresApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mdrQrsMeasureVersionGet operation.
     * @callback module:api/MeasuresApi~mdrQrsMeasureVersionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QrsProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get QRS Product
     * @param {String} measure QRS Measure Identifier
     * @param {String} version CDISC Library Product Version
     * @param {module:api/MeasuresApi~mdrQrsMeasureVersionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QrsProduct}
     */
    mdrQrsMeasureVersionGet(measure, version, callback) {
      let postBody = null;
      // verify the required parameter 'measure' is set
      if (measure === undefined || measure === null) {
        throw new Error("Missing the required parameter 'measure' when calling mdrQrsMeasureVersionGet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrQrsMeasureVersionGet");
      }

      let pathParams = {
        'measure': measure,
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel'];
      let returnType = QrsProduct;
      return this.apiClient.callApi(
        '/mdr/qrs/{measure}/{version}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrQrsMeasureVersionItemsGet operation.
     * @callback module:api/MeasuresApi~mdrQrsMeasureVersionItemsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QrsItems} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get QRS Item List
     * @param {String} measure QRS Measure Identifier
     * @param {String} version CDISC Library Product Version
     * @param {module:api/MeasuresApi~mdrQrsMeasureVersionItemsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QrsItems}
     */
    mdrQrsMeasureVersionItemsGet(measure, version, callback) {
      let postBody = null;
      // verify the required parameter 'measure' is set
      if (measure === undefined || measure === null) {
        throw new Error("Missing the required parameter 'measure' when calling mdrQrsMeasureVersionItemsGet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrQrsMeasureVersionItemsGet");
      }

      let pathParams = {
        'measure': measure,
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = QrsItems;
      return this.apiClient.callApi(
        '/mdr/qrs/{measure}/{version}/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrQrsMeasureVersionItemsItemGet operation.
     * @callback module:api/MeasuresApi~mdrQrsMeasureVersionItemsItemGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QrsItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get QRS Item
     * @param {String} measure QRS Measure Identifier
     * @param {String} version CDISC Library Product Version
     * @param {String} item QRS Measure Item Identifier
     * @param {module:api/MeasuresApi~mdrQrsMeasureVersionItemsItemGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QrsItem}
     */
    mdrQrsMeasureVersionItemsItemGet(measure, version, item, callback) {
      let postBody = null;
      // verify the required parameter 'measure' is set
      if (measure === undefined || measure === null) {
        throw new Error("Missing the required parameter 'measure' when calling mdrQrsMeasureVersionItemsItemGet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrQrsMeasureVersionItemsItemGet");
      }
      // verify the required parameter 'item' is set
      if (item === undefined || item === null) {
        throw new Error("Missing the required parameter 'item' when calling mdrQrsMeasureVersionItemsItemGet");
      }

      let pathParams = {
        'measure': measure,
        'version': version,
        'item': item
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = QrsItem;
      return this.apiClient.callApi(
        '/mdr/qrs/{measure}/{version}/items/{item}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrQrsMeasureVersionResponsegroupsGet operation.
     * @callback module:api/MeasuresApi~mdrQrsMeasureVersionResponsegroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QrsResponsegroups} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get QRS Response Group List
     * @param {String} measure QRS Measure Identifier
     * @param {String} version CDISC Library Product Version
     * @param {module:api/MeasuresApi~mdrQrsMeasureVersionResponsegroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QrsResponsegroups}
     */
    mdrQrsMeasureVersionResponsegroupsGet(measure, version, callback) {
      let postBody = null;
      // verify the required parameter 'measure' is set
      if (measure === undefined || measure === null) {
        throw new Error("Missing the required parameter 'measure' when calling mdrQrsMeasureVersionResponsegroupsGet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrQrsMeasureVersionResponsegroupsGet");
      }

      let pathParams = {
        'measure': measure,
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = QrsResponsegroups;
      return this.apiClient.callApi(
        '/mdr/qrs/{measure}/{version}/responsegroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrQrsMeasureVersionResponsegroupsResponsegroupGet operation.
     * @callback module:api/MeasuresApi~mdrQrsMeasureVersionResponsegroupsResponsegroupGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QrsResponsegroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get QRS Response Group
     * @param {String} measure QRS Measure Identifier
     * @param {String} version CDISC Library Product Version
     * @param {String} responsegroup QRS Measure's Response Group Identifier
     * @param {module:api/MeasuresApi~mdrQrsMeasureVersionResponsegroupsResponsegroupGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QrsResponsegroup}
     */
    mdrQrsMeasureVersionResponsegroupsResponsegroupGet(measure, version, responsegroup, callback) {
      let postBody = null;
      // verify the required parameter 'measure' is set
      if (measure === undefined || measure === null) {
        throw new Error("Missing the required parameter 'measure' when calling mdrQrsMeasureVersionResponsegroupsResponsegroupGet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrQrsMeasureVersionResponsegroupsResponsegroupGet");
      }
      // verify the required parameter 'responsegroup' is set
      if (responsegroup === undefined || responsegroup === null) {
        throw new Error("Missing the required parameter 'responsegroup' when calling mdrQrsMeasureVersionResponsegroupsResponsegroupGet");
      }

      let pathParams = {
        'measure': measure,
        'version': version,
        'responsegroup': responsegroup
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = QrsResponsegroup;
      return this.apiClient.callApi(
        '/mdr/qrs/{measure}/{version}/responsegroups/{responsegroup}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
