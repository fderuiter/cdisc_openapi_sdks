/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CdashigClass from '../model/CdashigClass';
import CdashigClassDomains from '../model/CdashigClassDomains';
import CdashigClassScenarios from '../model/CdashigClassScenarios';
import CdashigDomain from '../model/CdashigDomain';
import CdashigDomainField from '../model/CdashigDomainField';
import CdashigDomainFields from '../model/CdashigDomainFields';
import CdashigProduct from '../model/CdashigProduct';
import CdashigProductClasses from '../model/CdashigProductClasses';
import CdashigProductDomains from '../model/CdashigProductDomains';
import CdashigProductScenarios from '../model/CdashigProductScenarios';
import CdashigScenario from '../model/CdashigScenario';
import CdashigScenarioField from '../model/CdashigScenarioField';
import CdashigScenarioFields from '../model/CdashigScenarioFields';
import DefaultErrorResponse from '../model/DefaultErrorResponse';
import ExportCdashigTable from '../model/ExportCdashigTable';
import RootCdashigDomainField from '../model/RootCdashigDomainField';
import RootCdashigScenarioField from '../model/RootCdashigScenarioField';
import XmlCdashigClass from '../model/XmlCdashigClass';
import XmlCdashigClassDomains from '../model/XmlCdashigClassDomains';
import XmlCdashigClassScenarios from '../model/XmlCdashigClassScenarios';
import XmlCdashigDomain from '../model/XmlCdashigDomain';
import XmlCdashigDomainField from '../model/XmlCdashigDomainField';
import XmlCdashigDomainFields from '../model/XmlCdashigDomainFields';
import XmlCdashigProduct from '../model/XmlCdashigProduct';
import XmlCdashigProductClasses from '../model/XmlCdashigProductClasses';
import XmlCdashigProductDomains from '../model/XmlCdashigProductDomains';
import XmlCdashigProductScenarios from '../model/XmlCdashigProductScenarios';
import XmlCdashigScenario from '../model/XmlCdashigScenario';
import XmlCdashigScenarioField from '../model/XmlCdashigScenarioField';
import XmlCdashigScenarioFields from '../model/XmlCdashigScenarioFields';
import XmlRootCdashigDomainField from '../model/XmlRootCdashigDomainField';
import XmlRootCdashigScenarioField from '../model/XmlRootCdashigScenarioField';

/**
* CDASHImplementationGuideCDASHIG service.
* @module api/CDASHImplementationGuideCDASHIGApi
* @version 1.1.0
*/
export default class CDASHImplementationGuideCDASHIGApi {

    /**
    * Constructs a new CDASHImplementationGuideCDASHIGApi. 
    * @alias module:api/CDASHImplementationGuideCDASHIGApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mdrCdashigVersionClassesClassDomainsGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionClassesClassDomainsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigClassDomains} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Class Domain List
     * @param {String} version CDISC Library Product Version
     * @param {String} _class CDASHIG Class Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionClassesClassDomainsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigClassDomains}
     */
    mdrCdashigVersionClassesClassDomainsGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionClassesClassDomainsGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrCdashigVersionClassesClassDomainsGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigClassDomains;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/classes/{class}/domains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionClassesClassGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionClassesClassGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigClass} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Class
     * @param {String} version CDISC Library Product Version
     * @param {String} _class CDASHIG Class Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionClassesClassGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigClass}
     */
    mdrCdashigVersionClassesClassGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionClassesClassGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrCdashigVersionClassesClassGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigClass;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/classes/{class}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionClassesClassScenariosGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionClassesClassScenariosGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigClassScenarios} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Class Scenario List
     * @param {String} version CDISC Library Product Version
     * @param {String} _class CDASHIG Class Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionClassesClassScenariosGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigClassScenarios}
     */
    mdrCdashigVersionClassesClassScenariosGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionClassesClassScenariosGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrCdashigVersionClassesClassScenariosGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigClassScenarios;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/classes/{class}/scenarios', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionClassesGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionClassesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigProductClasses} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Class List
     * @param {String} version CDISC Library Product Version
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionClassesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigProductClasses}
     */
    mdrCdashigVersionClassesGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionClassesGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigProductClasses;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/classes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionDomainsDomainFieldsFieldGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionDomainsDomainFieldsFieldGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigDomainField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Domain Field
     * @param {String} version CDISC Library Product Version
     * @param {String} domain CDASHIG Domain Identifier
     * @param {String} field CDASHIG Field Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionDomainsDomainFieldsFieldGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigDomainField}
     */
    mdrCdashigVersionDomainsDomainFieldsFieldGet(version, domain, field, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionDomainsDomainFieldsFieldGet");
      }
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling mdrCdashigVersionDomainsDomainFieldsFieldGet");
      }
      // verify the required parameter 'field' is set
      if (field === undefined || field === null) {
        throw new Error("Missing the required parameter 'field' when calling mdrCdashigVersionDomainsDomainFieldsFieldGet");
      }

      let pathParams = {
        'version': version,
        'domain': domain,
        'field': field
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigDomainField;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/domains/{domain}/fields/{field}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionDomainsDomainFieldsGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionDomainsDomainFieldsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigDomainFields} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Domain Field List
     * @param {String} version CDISC Library Product Version
     * @param {String} domain CDASHIG Domain Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionDomainsDomainFieldsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigDomainFields}
     */
    mdrCdashigVersionDomainsDomainFieldsGet(version, domain, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionDomainsDomainFieldsGet");
      }
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling mdrCdashigVersionDomainsDomainFieldsGet");
      }

      let pathParams = {
        'version': version,
        'domain': domain
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigDomainFields;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/domains/{domain}/fields', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionDomainsDomainGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionDomainsDomainGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigDomain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Domain
     * @param {String} version CDISC Library Product Version
     * @param {String} domain CDASHIG Domain Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionDomainsDomainGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigDomain}
     */
    mdrCdashigVersionDomainsDomainGet(version, domain, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionDomainsDomainGet");
      }
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling mdrCdashigVersionDomainsDomainGet");
      }

      let pathParams = {
        'version': version,
        'domain': domain
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigDomain;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/domains/{domain}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionDomainsGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionDomainsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigProductDomains} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Domain List
     * @param {String} version CDISC Library Product Version
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionDomainsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigProductDomains}
     */
    mdrCdashigVersionDomainsGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionDomainsGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigProductDomains;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/domains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Product
     * @param {String} version CDISC Library Product Version
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigProduct}
     */
    mdrCdashigVersionGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = CdashigProduct;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionScenariosDomainScenarioFieldsFieldGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigScenarioField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Scenario Field
     * @param {String} version CDISC Library Product Version
     * @param {String} domain CDASHIG Domain Identifier
     * @param {String} scenario CDASHIG Scenario Identifier
     * @param {String} field CDASHIG Field Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionScenariosDomainScenarioFieldsFieldGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigScenarioField}
     */
    mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet(version, domain, scenario, field, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet");
      }
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet");
      }
      // verify the required parameter 'scenario' is set
      if (scenario === undefined || scenario === null) {
        throw new Error("Missing the required parameter 'scenario' when calling mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet");
      }
      // verify the required parameter 'field' is set
      if (field === undefined || field === null) {
        throw new Error("Missing the required parameter 'field' when calling mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet");
      }

      let pathParams = {
        'version': version,
        'domain': domain,
        'scenario': scenario,
        'field': field
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigScenarioField;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/scenarios/{domain}.{scenario}/fields/{field}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionScenariosDomainScenarioFieldsGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionScenariosDomainScenarioFieldsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigScenarioFields} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Scenario Field List
     * @param {String} version CDISC Library Product Version
     * @param {String} domain CDASHIG Domain Identifier
     * @param {String} scenario CDASHIG Scenario Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionScenariosDomainScenarioFieldsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigScenarioFields}
     */
    mdrCdashigVersionScenariosDomainScenarioFieldsGet(version, domain, scenario, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionScenariosDomainScenarioFieldsGet");
      }
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling mdrCdashigVersionScenariosDomainScenarioFieldsGet");
      }
      // verify the required parameter 'scenario' is set
      if (scenario === undefined || scenario === null) {
        throw new Error("Missing the required parameter 'scenario' when calling mdrCdashigVersionScenariosDomainScenarioFieldsGet");
      }

      let pathParams = {
        'version': version,
        'domain': domain,
        'scenario': scenario
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigScenarioFields;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/scenarios/{domain}.{scenario}/fields', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionScenariosDomainScenarioGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionScenariosDomainScenarioGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigScenario} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Scenario
     * @param {String} version CDISC Library Product Version
     * @param {String} domain CDASHIG Domain Identifier
     * @param {String} scenario CDASHIG Scenario Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionScenariosDomainScenarioGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigScenario}
     */
    mdrCdashigVersionScenariosDomainScenarioGet(version, domain, scenario, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionScenariosDomainScenarioGet");
      }
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling mdrCdashigVersionScenariosDomainScenarioGet");
      }
      // verify the required parameter 'scenario' is set
      if (scenario === undefined || scenario === null) {
        throw new Error("Missing the required parameter 'scenario' when calling mdrCdashigVersionScenariosDomainScenarioGet");
      }

      let pathParams = {
        'version': version,
        'domain': domain,
        'scenario': scenario
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigScenario;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/scenarios/{domain}.{scenario}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrCdashigVersionScenariosGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionScenariosGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CdashigProductScenarios} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CDASHIG Scenario List
     * @param {String} version CDISC Library Product Version
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrCdashigVersionScenariosGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CdashigProductScenarios}
     */
    mdrCdashigVersionScenariosGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrCdashigVersionScenariosGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CdashigProductScenarios;
      return this.apiClient.callApi(
        '/mdr/cdashig/{version}/scenarios', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrRootCdashigDomainsDomainFieldsFieldGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrRootCdashigDomainsDomainFieldsFieldGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RootCdashigDomainField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Root CDASHIG Domain Field
     * @param {String} domain CDASHIG Domain Identifier
     * @param {String} field CDASHIG Field Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrRootCdashigDomainsDomainFieldsFieldGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RootCdashigDomainField}
     */
    mdrRootCdashigDomainsDomainFieldsFieldGet(domain, field, callback) {
      let postBody = null;
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling mdrRootCdashigDomainsDomainFieldsFieldGet");
      }
      // verify the required parameter 'field' is set
      if (field === undefined || field === null) {
        throw new Error("Missing the required parameter 'field' when calling mdrRootCdashigDomainsDomainFieldsFieldGet");
      }

      let pathParams = {
        'domain': domain,
        'field': field
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RootCdashigDomainField;
      return this.apiClient.callApi(
        '/mdr/root/cdashig/domains/{domain}/fields/{field}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrRootCdashigScenariosDomainScenarioFieldsFieldGet operation.
     * @callback module:api/CDASHImplementationGuideCDASHIGApi~mdrRootCdashigScenariosDomainScenarioFieldsFieldGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RootCdashigScenarioField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Root CDASHIG Scenario Field
     * @param {String} domain CDASHIG Domain Identifier
     * @param {String} scenario CDASHIG Scenario Identifier
     * @param {String} field CDASHIG Field Identifier
     * @param {module:api/CDASHImplementationGuideCDASHIGApi~mdrRootCdashigScenariosDomainScenarioFieldsFieldGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RootCdashigScenarioField}
     */
    mdrRootCdashigScenariosDomainScenarioFieldsFieldGet(domain, scenario, field, callback) {
      let postBody = null;
      // verify the required parameter 'domain' is set
      if (domain === undefined || domain === null) {
        throw new Error("Missing the required parameter 'domain' when calling mdrRootCdashigScenariosDomainScenarioFieldsFieldGet");
      }
      // verify the required parameter 'scenario' is set
      if (scenario === undefined || scenario === null) {
        throw new Error("Missing the required parameter 'scenario' when calling mdrRootCdashigScenariosDomainScenarioFieldsFieldGet");
      }
      // verify the required parameter 'field' is set
      if (field === undefined || field === null) {
        throw new Error("Missing the required parameter 'field' when calling mdrRootCdashigScenariosDomainScenarioFieldsFieldGet");
      }

      let pathParams = {
        'domain': domain,
        'scenario': scenario,
        'field': field
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RootCdashigScenarioField;
      return this.apiClient.callApi(
        '/mdr/root/cdashig/scenarios/{domain}.{scenario}/fields/{field}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
