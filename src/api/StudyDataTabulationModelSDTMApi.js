/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultErrorResponse from '../model/DefaultErrorResponse';
import ExportSdtmDatasetsTable from '../model/ExportSdtmDatasetsTable';
import ExportSdtmVariablesTable from '../model/ExportSdtmVariablesTable';
import ExportSdtmWorkbook from '../model/ExportSdtmWorkbook';
import RootSdtmClassVariable from '../model/RootSdtmClassVariable';
import RootSdtmDatasetVariable from '../model/RootSdtmDatasetVariable';
import SdtmClass from '../model/SdtmClass';
import SdtmClassDatasets from '../model/SdtmClassDatasets';
import SdtmClassVariable from '../model/SdtmClassVariable';
import SdtmClassVariables from '../model/SdtmClassVariables';
import SdtmClasses from '../model/SdtmClasses';
import SdtmDataset from '../model/SdtmDataset';
import SdtmDatasetVariable from '../model/SdtmDatasetVariable';
import SdtmDatasetVariables from '../model/SdtmDatasetVariables';
import SdtmDatasets from '../model/SdtmDatasets';
import SdtmProduct from '../model/SdtmProduct';
import XmlRootSdtmClassVariable from '../model/XmlRootSdtmClassVariable';
import XmlRootSdtmDatasetVariable from '../model/XmlRootSdtmDatasetVariable';
import XmlSdtmClass from '../model/XmlSdtmClass';
import XmlSdtmClassDatasets from '../model/XmlSdtmClassDatasets';
import XmlSdtmClassVariable from '../model/XmlSdtmClassVariable';
import XmlSdtmClassVariables from '../model/XmlSdtmClassVariables';
import XmlSdtmClasses from '../model/XmlSdtmClasses';
import XmlSdtmDataset from '../model/XmlSdtmDataset';
import XmlSdtmDatasetVariable from '../model/XmlSdtmDatasetVariable';
import XmlSdtmDatasetVariables from '../model/XmlSdtmDatasetVariables';
import XmlSdtmDatasets from '../model/XmlSdtmDatasets';
import XmlSdtmProduct from '../model/XmlSdtmProduct';

/**
* StudyDataTabulationModelSDTM service.
* @module api/StudyDataTabulationModelSDTMApi
* @version 1.1.0
*/
export default class StudyDataTabulationModelSDTMApi {

    /**
    * Constructs a new StudyDataTabulationModelSDTMApi. 
    * @alias module:api/StudyDataTabulationModelSDTMApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mdrRootSdtmClassesClassVariablesVarGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrRootSdtmClassesClassVariablesVarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RootSdtmClassVariable} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Root of SDTM Class Variable
     * @param {String} _class SDTM Class Identifier
     * @param {String} _var SDTM Variable Identifier
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrRootSdtmClassesClassVariablesVarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RootSdtmClassVariable}
     */
    mdrRootSdtmClassesClassVariablesVarGet(_class, _var, callback) {
      let postBody = null;
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrRootSdtmClassesClassVariablesVarGet");
      }
      // verify the required parameter '_var' is set
      if (_var === undefined || _var === null) {
        throw new Error("Missing the required parameter '_var' when calling mdrRootSdtmClassesClassVariablesVarGet");
      }

      let pathParams = {
        'class': _class,
        'var': _var
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RootSdtmClassVariable;
      return this.apiClient.callApi(
        '/mdr/root/sdtm/classes/{class}/variables/{var}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrRootSdtmDatasetsDatasetVariablesVarGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrRootSdtmDatasetsDatasetVariablesVarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RootSdtmDatasetVariable} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Root SDTM Dataset Variable
     * @param {String} dataset SDTM Dataset Identifier
     * @param {String} _var SDTM Variable Identifier
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrRootSdtmDatasetsDatasetVariablesVarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RootSdtmDatasetVariable}
     */
    mdrRootSdtmDatasetsDatasetVariablesVarGet(dataset, _var, callback) {
      let postBody = null;
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrRootSdtmDatasetsDatasetVariablesVarGet");
      }
      // verify the required parameter '_var' is set
      if (_var === undefined || _var === null) {
        throw new Error("Missing the required parameter '_var' when calling mdrRootSdtmDatasetsDatasetVariablesVarGet");
      }

      let pathParams = {
        'dataset': dataset,
        'var': _var
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RootSdtmDatasetVariable;
      return this.apiClient.callApi(
        '/mdr/root/sdtm/datasets/{dataset}/variables/{var}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionClassesClassDatasetsGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesClassDatasetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmClassDatasets} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM Class Dataset List
     * @param {String} version CDISC Library Product Version
     * @param {String} _class SDTM Class Identifier
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesClassDatasetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmClassDatasets}
     */
    mdrSdtmVersionClassesClassDatasetsGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionClassesClassDatasetsGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrSdtmVersionClassesClassDatasetsGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmClassDatasets;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}/classes/{class}/datasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionClassesClassGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesClassGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmClass} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM Class
     * @param {String} version CDISC Library Product Version
     * @param {String} _class SDTM Class Identifier
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesClassGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmClass}
     */
    mdrSdtmVersionClassesClassGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionClassesClassGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrSdtmVersionClassesClassGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmClass;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}/classes/{class}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionClassesClassVariablesGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesClassVariablesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmClassVariables} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM Class Variable List
     * @param {String} version CDISC Library Product Version
     * @param {String} _class SDTM Class Identifier
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesClassVariablesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmClassVariables}
     */
    mdrSdtmVersionClassesClassVariablesGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionClassesClassVariablesGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrSdtmVersionClassesClassVariablesGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmClassVariables;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}/classes/{class}/variables', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionClassesClassVariablesVarGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesClassVariablesVarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmClassVariable} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM Class Variable
     * @param {String} version CDISC Library Product Version
     * @param {String} _class SDTM Class Identifier
     * @param {String} _var SDTM Variable Identifier
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesClassVariablesVarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmClassVariable}
     */
    mdrSdtmVersionClassesClassVariablesVarGet(version, _class, _var, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionClassesClassVariablesVarGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrSdtmVersionClassesClassVariablesVarGet");
      }
      // verify the required parameter '_var' is set
      if (_var === undefined || _var === null) {
        throw new Error("Missing the required parameter '_var' when calling mdrSdtmVersionClassesClassVariablesVarGet");
      }

      let pathParams = {
        'version': version,
        'class': _class,
        'var': _var
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmClassVariable;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}/classes/{class}/variables/{var}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionClassesGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmClasses} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM Class List
     * @param {String} version CDISC Library Product Version
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionClassesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmClasses}
     */
    mdrSdtmVersionClassesGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionClassesGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmClasses;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}/classes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionDatasetsDatasetGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionDatasetsDatasetGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmDataset} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM Dataset
     * @param {String} version CDISC Library Product Version
     * @param {String} dataset SDTM Dataset Identifier
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionDatasetsDatasetGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmDataset}
     */
    mdrSdtmVersionDatasetsDatasetGet(version, dataset, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionDatasetsDatasetGet");
      }
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrSdtmVersionDatasetsDatasetGet");
      }

      let pathParams = {
        'version': version,
        'dataset': dataset
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmDataset;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}/datasets/{dataset}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionDatasetsDatasetVariablesGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionDatasetsDatasetVariablesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmDatasetVariables} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM Dataset Variable List
     * @param {String} version CDISC Library Product Version
     * @param {String} dataset SDTM Dataset Identifier
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionDatasetsDatasetVariablesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmDatasetVariables}
     */
    mdrSdtmVersionDatasetsDatasetVariablesGet(version, dataset, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionDatasetsDatasetVariablesGet");
      }
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrSdtmVersionDatasetsDatasetVariablesGet");
      }

      let pathParams = {
        'version': version,
        'dataset': dataset
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmDatasetVariables;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}/datasets/{dataset}/variables', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionDatasetsDatasetVariablesVarGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionDatasetsDatasetVariablesVarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmDatasetVariable} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM Dataset Variable
     * @param {String} version CDISC Library Product Version
     * @param {String} dataset SDTM Dataset Identifier
     * @param {String} _var SDTM Variable Identifier
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionDatasetsDatasetVariablesVarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmDatasetVariable}
     */
    mdrSdtmVersionDatasetsDatasetVariablesVarGet(version, dataset, _var, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionDatasetsDatasetVariablesVarGet");
      }
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrSdtmVersionDatasetsDatasetVariablesVarGet");
      }
      // verify the required parameter '_var' is set
      if (_var === undefined || _var === null) {
        throw new Error("Missing the required parameter '_var' when calling mdrSdtmVersionDatasetsDatasetVariablesVarGet");
      }

      let pathParams = {
        'version': version,
        'dataset': dataset,
        'var': _var
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmDatasetVariable;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}/datasets/{dataset}/variables/{var}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionDatasetsGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionDatasetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmDatasets} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM Dataset List
     * @param {String} version CDISC Library Product Version
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionDatasetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmDatasets}
     */
    mdrSdtmVersionDatasetsGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionDatasetsGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv'];
      let returnType = SdtmDatasets;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}/datasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmVersionGet operation.
     * @callback module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTM product
     * @param {String} version CDISC Library Product Version
     * @param {module:api/StudyDataTabulationModelSDTMApi~mdrSdtmVersionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmProduct}
     */
    mdrSdtmVersionGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmVersionGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = SdtmProduct;
      return this.apiClient.callApi(
        '/mdr/sdtm/{version}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
