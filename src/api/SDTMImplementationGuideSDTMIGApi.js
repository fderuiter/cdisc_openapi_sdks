/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultErrorResponse from '../model/DefaultErrorResponse';
import ExportSdtmigDatasetsTable from '../model/ExportSdtmigDatasetsTable';
import ExportSdtmigVariablesTable from '../model/ExportSdtmigVariablesTable';
import ExportSdtmigWorkbook from '../model/ExportSdtmigWorkbook';
import RootSdtmigDatasetVariable from '../model/RootSdtmigDatasetVariable';
import SdtmigClass from '../model/SdtmigClass';
import SdtmigClassDatasets from '../model/SdtmigClassDatasets';
import SdtmigClasses from '../model/SdtmigClasses';
import SdtmigDataset from '../model/SdtmigDataset';
import SdtmigDatasetVariable from '../model/SdtmigDatasetVariable';
import SdtmigDatasetVariables from '../model/SdtmigDatasetVariables';
import SdtmigDatasets from '../model/SdtmigDatasets';
import SdtmigProduct from '../model/SdtmigProduct';
import XmlRootSdtmigDatasetVariable from '../model/XmlRootSdtmigDatasetVariable';
import XmlSdtmigClass from '../model/XmlSdtmigClass';
import XmlSdtmigClassDatasets from '../model/XmlSdtmigClassDatasets';
import XmlSdtmigClasses from '../model/XmlSdtmigClasses';
import XmlSdtmigDataset from '../model/XmlSdtmigDataset';
import XmlSdtmigDatasetVariable from '../model/XmlSdtmigDatasetVariable';
import XmlSdtmigDatasetVariables from '../model/XmlSdtmigDatasetVariables';
import XmlSdtmigDatasets from '../model/XmlSdtmigDatasets';
import XmlSdtmigProduct from '../model/XmlSdtmigProduct';

/**
* SDTMImplementationGuideSDTMIG service.
* @module api/SDTMImplementationGuideSDTMIGApi
* @version 1.1.0
*/
export default class SDTMImplementationGuideSDTMIGApi {

    /**
    * Constructs a new SDTMImplementationGuideSDTMIGApi. 
    * @alias module:api/SDTMImplementationGuideSDTMIGApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mdrRootSdtmigDatasetsDatasetVariablesVarGet operation.
     * @callback module:api/SDTMImplementationGuideSDTMIGApi~mdrRootSdtmigDatasetsDatasetVariablesVarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RootSdtmigDatasetVariable} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Root SDTMIG Dataset Variable
     * @param {String} dataset SDTMIG Dataset Identifier
     * @param {String} _var SDTMIG Variable Identifier
     * @param {module:api/SDTMImplementationGuideSDTMIGApi~mdrRootSdtmigDatasetsDatasetVariablesVarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RootSdtmigDatasetVariable}
     */
    mdrRootSdtmigDatasetsDatasetVariablesVarGet(dataset, _var, callback) {
      let postBody = null;
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrRootSdtmigDatasetsDatasetVariablesVarGet");
      }
      // verify the required parameter '_var' is set
      if (_var === undefined || _var === null) {
        throw new Error("Missing the required parameter '_var' when calling mdrRootSdtmigDatasetsDatasetVariablesVarGet");
      }

      let pathParams = {
        'dataset': dataset,
        'var': _var
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RootSdtmigDatasetVariable;
      return this.apiClient.callApi(
        '/mdr/root/sdtmig/datasets/{dataset}/variables/{var}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmigVersionClassesClassDatasetsGet operation.
     * @callback module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionClassesClassDatasetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmigClassDatasets} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTMIG Class Dataset List
     * @param {String} version CDISC Library Product Version
     * @param {String} _class SDTMIG Class Identifier
     * @param {module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionClassesClassDatasetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmigClassDatasets}
     */
    mdrSdtmigVersionClassesClassDatasetsGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmigVersionClassesClassDatasetsGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrSdtmigVersionClassesClassDatasetsGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmigClassDatasets;
      return this.apiClient.callApi(
        '/mdr/sdtmig/{version}/classes/{class}/datasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmigVersionClassesClassGet operation.
     * @callback module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionClassesClassGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmigClass} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTMIG Class
     * @param {String} version CDISC Library Product Version
     * @param {String} _class SDTMIG Class Identifier
     * @param {module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionClassesClassGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmigClass}
     */
    mdrSdtmigVersionClassesClassGet(version, _class, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmigVersionClassesClassGet");
      }
      // verify the required parameter '_class' is set
      if (_class === undefined || _class === null) {
        throw new Error("Missing the required parameter '_class' when calling mdrSdtmigVersionClassesClassGet");
      }

      let pathParams = {
        'version': version,
        'class': _class
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmigClass;
      return this.apiClient.callApi(
        '/mdr/sdtmig/{version}/classes/{class}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmigVersionClassesGet operation.
     * @callback module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionClassesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmigClasses} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTMIG Class List
     * @param {String} version CDISC Library Product Version
     * @param {module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionClassesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmigClasses}
     */
    mdrSdtmigVersionClassesGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmigVersionClassesGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmigClasses;
      return this.apiClient.callApi(
        '/mdr/sdtmig/{version}/classes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmigVersionDatasetsDatasetGet operation.
     * @callback module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionDatasetsDatasetGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmigDataset} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTMIG Dataset
     * @param {String} version CDISC Library Product Version
     * @param {String} dataset SDTMIG Dataset Identifier
     * @param {module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionDatasetsDatasetGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmigDataset}
     */
    mdrSdtmigVersionDatasetsDatasetGet(version, dataset, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmigVersionDatasetsDatasetGet");
      }
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrSdtmigVersionDatasetsDatasetGet");
      }

      let pathParams = {
        'version': version,
        'dataset': dataset
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmigDataset;
      return this.apiClient.callApi(
        '/mdr/sdtmig/{version}/datasets/{dataset}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmigVersionDatasetsDatasetVariablesGet operation.
     * @callback module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionDatasetsDatasetVariablesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmigDatasetVariables} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTMIG Dataset Variable List
     * @param {String} version CDISC Library Product Version
     * @param {String} dataset SDTMIG Dataset Identifier
     * @param {module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionDatasetsDatasetVariablesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmigDatasetVariables}
     */
    mdrSdtmigVersionDatasetsDatasetVariablesGet(version, dataset, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmigVersionDatasetsDatasetVariablesGet");
      }
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrSdtmigVersionDatasetsDatasetVariablesGet");
      }

      let pathParams = {
        'version': version,
        'dataset': dataset
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmigDatasetVariables;
      return this.apiClient.callApi(
        '/mdr/sdtmig/{version}/datasets/{dataset}/variables', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmigVersionDatasetsDatasetVariablesVarGet operation.
     * @callback module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionDatasetsDatasetVariablesVarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmigDatasetVariable} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTMIG Dataset Variable
     * @param {String} version CDISC Library Product Version
     * @param {String} dataset SDTMIG Dataset Identifier
     * @param {String} _var SDTMIG Variable Identifier
     * @param {module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionDatasetsDatasetVariablesVarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmigDatasetVariable}
     */
    mdrSdtmigVersionDatasetsDatasetVariablesVarGet(version, dataset, _var, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmigVersionDatasetsDatasetVariablesVarGet");
      }
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling mdrSdtmigVersionDatasetsDatasetVariablesVarGet");
      }
      // verify the required parameter '_var' is set
      if (_var === undefined || _var === null) {
        throw new Error("Missing the required parameter '_var' when calling mdrSdtmigVersionDatasetsDatasetVariablesVarGet");
      }

      let pathParams = {
        'version': version,
        'dataset': dataset,
        'var': _var
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SdtmigDatasetVariable;
      return this.apiClient.callApi(
        '/mdr/sdtmig/{version}/datasets/{dataset}/variables/{var}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmigVersionDatasetsGet operation.
     * @callback module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionDatasetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmigDatasets} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTMIG Dataset List
     * @param {String} version CDISC Library Product Version
     * @param {module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionDatasetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmigDatasets}
     */
    mdrSdtmigVersionDatasetsGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmigVersionDatasetsGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv'];
      let returnType = SdtmigDatasets;
      return this.apiClient.callApi(
        '/mdr/sdtmig/{version}/datasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mdrSdtmigVersionGet operation.
     * @callback module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SdtmigProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SDTMIG product
     * @param {String} version CDISC Library Product Version
     * @param {module:api/SDTMImplementationGuideSDTMIGApi~mdrSdtmigVersionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SdtmigProduct}
     */
    mdrSdtmigVersionGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling mdrSdtmigVersionGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = SdtmigProduct;
      return this.apiClient.callApi(
        '/mdr/sdtmig/{version}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
