(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let mdr_qrs_measure_version_get ~measure ~version =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/qrs/{measure}/{version}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "measure" (fun x -> x) measure in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Qrs_product.of_yojson) resp body

let mdr_qrs_measure_version_items_get ~measure ~version =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/qrs/{measure}/{version}/items" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "measure" (fun x -> x) measure in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Qrs_items.of_yojson) resp body

let mdr_qrs_measure_version_items_item_get ~measure ~version ~item =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/qrs/{measure}/{version}/items/{item}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "measure" (fun x -> x) measure in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Qrs_item.of_yojson) resp body

let mdr_qrs_measure_version_responsegroups_get ~measure ~version =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/qrs/{measure}/{version}/responsegroups" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "measure" (fun x -> x) measure in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Qrs_responsegroups.of_yojson) resp body

let mdr_qrs_measure_version_responsegroups_responsegroup_get ~measure ~version ~responsegroup =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/qrs/{measure}/{version}/responsegroups/{responsegroup}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "measure" (fun x -> x) measure in
    let uri = Request.replace_path_param uri "version" (fun x -> x) version in
    let uri = Request.replace_path_param uri "responsegroup" (fun x -> x) responsegroup in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Qrs_responsegroup.of_yojson) resp body

