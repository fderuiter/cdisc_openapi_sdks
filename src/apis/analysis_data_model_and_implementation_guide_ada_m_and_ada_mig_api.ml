(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let mdr_adam_product_datastructures_get ~product =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/adam/{product}/datastructures" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "product" (fun x -> x) product in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Adam_product_datastructures.of_yojson) resp body

let mdr_adam_product_datastructures_structure_get ~product ~structure =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/adam/{product}/datastructures/{structure}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "product" (fun x -> x) product in
    let uri = Request.replace_path_param uri "structure" (fun x -> x) structure in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Adam_datastructure.of_yojson) resp body

let mdr_adam_product_datastructures_structure_variables_get ~product ~structure =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/adam/{product}/datastructures/{structure}/variables" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "product" (fun x -> x) product in
    let uri = Request.replace_path_param uri "structure" (fun x -> x) structure in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Adam_datastructure_variables.of_yojson) resp body

let mdr_adam_product_datastructures_structure_variables_var_get ~product ~structure ~var =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/adam/{product}/datastructures/{structure}/variables/{var}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "product" (fun x -> x) product in
    let uri = Request.replace_path_param uri "structure" (fun x -> x) structure in
    let uri = Request.replace_path_param uri "var" (fun x -> x) var in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Adam_variable.of_yojson) resp body

let mdr_adam_product_datastructures_structure_varsets_get ~product ~structure =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/adam/{product}/datastructures/{structure}/varsets" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "product" (fun x -> x) product in
    let uri = Request.replace_path_param uri "structure" (fun x -> x) structure in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Adam_datastructure_varsets.of_yojson) resp body

let mdr_adam_product_datastructures_structure_varsets_varset_get ~product ~structure ~varset =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/adam/{product}/datastructures/{structure}/varsets/{varset}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "product" (fun x -> x) product in
    let uri = Request.replace_path_param uri "structure" (fun x -> x) structure in
    let uri = Request.replace_path_param uri "varset" (fun x -> x) varset in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Adam_varset.of_yojson) resp body

let mdr_adam_product_get ~product =
    let open Lwt.Infix in
    let uri = Request.build_uri "/mdr/adam/{product}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "product" (fun x -> x) product in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Adam_product.of_yojson) resp body

