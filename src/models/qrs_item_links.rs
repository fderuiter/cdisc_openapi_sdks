/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QrsItemLinks {
    #[serde(rename = "qrsItemTEST", skip_serializing_if = "Option::is_none")]
    pub qrs_item_test: Option<Box<models::RootCtTermRef>>,
    #[serde(rename = "qrsItemTESTCD", skip_serializing_if = "Option::is_none")]
    pub qrs_item_testcd: Option<Box<models::RootCtTermRef>>,
    #[serde(rename = "qrsItemEVAL", skip_serializing_if = "Option::is_none")]
    pub qrs_item_eval: Option<Box<models::RootCtTermRef>>,
    #[serde(rename = "qrsItemSCAT", skip_serializing_if = "Option::is_none")]
    pub qrs_item_scat: Option<Box<models::RootCtTermRef>>,
    #[serde(rename = "responsegroup", skip_serializing_if = "Option::is_none")]
    pub responsegroup: Option<Box<models::QrsResponsegroup>>,
}

impl QrsItemLinks {
    pub fn new() -> QrsItemLinks {
        QrsItemLinks {
            qrs_item_test: None,
            qrs_item_testcd: None,
            qrs_item_eval: None,
            qrs_item_scat: None,
            responsegroup: None,
        }
    }
}

