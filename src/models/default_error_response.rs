/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DefaultErrorResponse {
    /// HTTP Status Code
    #[serde(rename = "statusCode", skip_serializing_if = "Option::is_none")]
    pub status_code: Option<String>,
    /// HTTP Reason Phrase
    #[serde(rename = "reasonPhrase", skip_serializing_if = "Option::is_none")]
    pub reason_phrase: Option<String>,
    /// User Error Message
    #[serde(rename = "userMessage", skip_serializing_if = "Option::is_none")]
    pub user_message: Option<String>,
    /// Admin Error Message
    #[serde(rename = "adminMessage", skip_serializing_if = "Option::is_none")]
    pub admin_message: Option<String>,
}

impl DefaultErrorResponse {
    pub fn new() -> DefaultErrorResponse {
        DefaultErrorResponse {
            status_code: None,
            reason_phrase: None,
            user_message: None,
            admin_message: None,
        }
    }
}

