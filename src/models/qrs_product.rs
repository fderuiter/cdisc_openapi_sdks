/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QrsProduct {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "effectiveDate", skip_serializing_if = "Option::is_none")]
    pub effective_date: Option<String>,
    #[serde(rename = "untilDate", skip_serializing_if = "Option::is_none")]
    pub until_date: Option<String>,
    #[serde(rename = "registrationStatus", skip_serializing_if = "Option::is_none")]
    pub registration_status: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "qrsType", skip_serializing_if = "Option::is_none")]
    pub qrs_type: Option<String>,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::QrsProductLinks>>,
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::QrsItem>>,
}

impl QrsProduct {
    pub fn new() -> QrsProduct {
        QrsProduct {
            name: None,
            label: None,
            description: None,
            effective_date: None,
            until_date: None,
            registration_status: None,
            version: None,
            qrs_type: None,
            _links: None,
            items: None,
        }
    }
}

