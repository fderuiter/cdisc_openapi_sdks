/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SdtmDatasetVariableLinks {
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub param_self: Option<Box<models::SdtmDatasetVariableRef>>,
    #[serde(rename = "parentProduct", skip_serializing_if = "Option::is_none")]
    pub parent_product: Option<Box<models::SdtmProductRef>>,
    #[serde(rename = "parentDataset", skip_serializing_if = "Option::is_none")]
    pub parent_dataset: Option<Box<models::SdtmDatasetRef>>,
    #[serde(rename = "rootItem", skip_serializing_if = "Option::is_none")]
    pub root_item: Option<Box<models::RootSdtmDatasetVariableRef>>,
    #[serde(rename = "priorVersion", skip_serializing_if = "Option::is_none")]
    pub prior_version: Option<Box<models::SdtmDatasetVariableRef>>,
}

impl SdtmDatasetVariableLinks {
    pub fn new() -> SdtmDatasetVariableLinks {
        SdtmDatasetVariableLinks {
            param_self: None,
            parent_product: None,
            parent_dataset: None,
            root_item: None,
            prior_version: None,
        }
    }
}

