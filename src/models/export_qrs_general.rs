/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportQrsGeneral {
    #[serde(rename = "Name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "Label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "Effective Date", skip_serializing_if = "Option::is_none")]
    pub effective_date: Option<String>,
    #[serde(rename = "Description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "Type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "Category's Codelist C-Code", skip_serializing_if = "Option::is_none")]
    pub category_quote_s_codelist_c_code: Option<String>,
    #[serde(rename = "Category's Term C-Code", skip_serializing_if = "Option::is_none")]
    pub category_quote_s_term_c_code: Option<String>,
}

impl ExportQrsGeneral {
    pub fn new() -> ExportQrsGeneral {
        ExportQrsGeneral {
            name: None,
            label: None,
            effective_date: None,
            description: None,
            r#type: None,
            category_quote_s_codelist_c_code: None,
            category_quote_s_term_c_code: None,
        }
    }
}

