// tslint:disable
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ExportCtTerm,
    ExportCtTermFromJSON,
    ExportCtTermToJSON,
} from './';

/**
 * 
 * @export
 * @interface ExportCtCodelist
 */
export interface ExportCtCodelist  {
    /**
     * 
     * @type {string}
     * @memberof ExportCtCodelist
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportCtCodelist
     */
    codelistCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportCtCodelist
     */
    codelistExtensibleYesNo?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportCtCodelist
     */
    codelistName?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportCtCodelist
     */
    cDISCSubmissionValue?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ExportCtCodelist
     */
    cDISCSynonymS?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ExportCtCodelist
     */
    cDISCDefinition?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportCtCodelist
     */
    nCIPreferredTerm?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportCtCodelist
     */
    standardAndDate?: string;
    /**
     * 
     * @type {Array<ExportCtTerm>}
     * @memberof ExportCtCodelist
     */
    ?: Array<ExportCtTerm>;
}

export function ExportCtCodelistFromJSON(json: any): ExportCtCodelist {
    return {
        'code': !exists(json, 'Code') ? undefined : json['Code'],
        'codelistCode': !exists(json, 'Codelist Code') ? undefined : json['Codelist Code'],
        'codelistExtensibleYesNo': !exists(json, 'Codelist Extensible (Yes/No)') ? undefined : json['Codelist Extensible (Yes/No)'],
        'codelistName': !exists(json, 'Codelist Name') ? undefined : json['Codelist Name'],
        'cDISCSubmissionValue': !exists(json, 'CDISC Submission Value') ? undefined : json['CDISC Submission Value'],
        'cDISCSynonymS': !exists(json, 'CDISC Synonym(s)') ? undefined : json['CDISC Synonym(s)'],
        'cDISCDefinition': !exists(json, 'CDISC Definition') ? undefined : json['CDISC Definition'],
        'nCIPreferredTerm': !exists(json, 'NCI Preferred Term') ? undefined : json['NCI Preferred Term'],
        'standardAndDate': !exists(json, 'Standard and Date') ? undefined : json['Standard and Date'],
        '': !exists(json, '') ? undefined : (json[''] as Array<any>).map(ExportCtTermFromJSON),
    };
}

export function ExportCtCodelistToJSON(value?: ExportCtCodelist): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'Code': value.code,
        'Codelist Code': value.codelistCode,
        'Codelist Extensible (Yes/No)': value.codelistExtensibleYesNo,
        'Codelist Name': value.codelistName,
        'CDISC Submission Value': value.cDISCSubmissionValue,
        'CDISC Synonym(s)': value.cDISCSynonymS,
        'CDISC Definition': value.cDISCDefinition,
        'NCI Preferred Term': value.nCIPreferredTerm,
        'Standard and Date': value.standardAndDate,
        '': value. === undefined ? undefined : (value. as Array<any>).map(ExportCtTermToJSON),
    };
}


