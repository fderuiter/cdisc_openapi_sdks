// tslint:disable
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AdamDatastructureRefElement,
    AdamDatastructureRefElementFromJSON,
    AdamDatastructureRefElementToJSON,
    AdamProductDatastructuresRef,
    AdamProductDatastructuresRefFromJSON,
    AdamProductDatastructuresRefToJSON,
} from './';

/**
 * 
 * @export
 * @interface AdamProductDatastructuresLinks
 */
export interface AdamProductDatastructuresLinks  {
    /**
     * 
     * @type {AdamProductDatastructuresRef}
     * @memberof AdamProductDatastructuresLinks
     */
    self?: AdamProductDatastructuresRef;
    /**
     * 
     * @type {AdamProductDatastructuresRef}
     * @memberof AdamProductDatastructuresLinks
     */
    priorVersion?: AdamProductDatastructuresRef;
    /**
     * 
     * @type {Array<AdamDatastructureRefElement>}
     * @memberof AdamProductDatastructuresLinks
     */
    dataStructures?: Array<AdamDatastructureRefElement>;
}

export function AdamProductDatastructuresLinksFromJSON(json: any): AdamProductDatastructuresLinks {
    return {
        'self': !exists(json, 'self') ? undefined : AdamProductDatastructuresRefFromJSON(json['self']),
        'priorVersion': !exists(json, 'priorVersion') ? undefined : AdamProductDatastructuresRefFromJSON(json['priorVersion']),
        'dataStructures': !exists(json, 'dataStructures') ? undefined : (json['dataStructures'] as Array<any>).map(AdamDatastructureRefElementFromJSON),
    };
}

export function AdamProductDatastructuresLinksToJSON(value?: AdamProductDatastructuresLinks): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'self': AdamProductDatastructuresRefToJSON(value.self),
        'priorVersion': AdamProductDatastructuresRefToJSON(value.priorVersion),
        'dataStructures': value.dataStructures === undefined ? undefined : (value.dataStructures as Array<any>).map(AdamDatastructureRefElementToJSON),
    };
}


