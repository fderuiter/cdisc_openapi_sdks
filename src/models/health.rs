/*
 * CDISC Library API
 *
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Health {
    #[serde(rename = "healthy", skip_serializing_if = "Option::is_none")]
    pub healthy: Option<bool>,
    #[serde(rename = "ldapAuthenticationHealthy", skip_serializing_if = "Option::is_none")]
    pub ldap_authentication_healthy: Option<bool>,
    #[serde(rename = "ldapAuthorizationHealthy", skip_serializing_if = "Option::is_none")]
    pub ldap_authorization_healthy: Option<bool>,
    #[serde(rename = "databaseHealthy", skip_serializing_if = "Option::is_none")]
    pub database_healthy: Option<bool>,
    #[serde(rename = "esHealthy", skip_serializing_if = "Option::is_none")]
    pub es_healthy: Option<bool>,
}

impl Health {
    pub fn new() -> Health {
        Health {
            healthy: None,
            ldap_authentication_healthy: None,
            ldap_authorization_healthy: None,
            database_healthy: None,
            es_healthy: None,
        }
    }
}

