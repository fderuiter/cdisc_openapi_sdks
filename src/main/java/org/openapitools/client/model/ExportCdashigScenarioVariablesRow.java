/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ExportCdashigScenarioVariablesRow {
  
  @SerializedName("Version")
  private String version = null;
  @SerializedName("Class")
  private String _class = null;
  @SerializedName("Domain")
  private String domain = null;
  @SerializedName("Data Collection Scenario")
  private String dataCollectionScenario = null;
  @SerializedName("Variable Order")
  private String variableOrder = null;
  @SerializedName("CDASHIG Variable")
  private String cDASHIGVariable = null;
  @SerializedName("CDASHIG Variable Label")
  private String cDASHIGVariableLabel = null;
  @SerializedName("DRAFT CDASHIG Definition")
  private String dRAFTCDASHIGDefinition = null;
  @SerializedName("Question Text")
  private String questionText = null;
  @SerializedName("Prompt")
  private String prompt = null;
  @SerializedName("Type")
  private String type = null;
  @SerializedName("CDASHIG Core")
  private String cDASHIGCore = null;
  @SerializedName("Case Report Form Completion Instructions")
  private String caseReportFormCompletionInstructions = null;
  @SerializedName("SDTMIG Target")
  private List<String> sDTMIGTarget = null;
  @SerializedName("Mapping Instructions")
  private String mappingInstructions = null;
  @SerializedName("Controlled Terminology Codelist Name")
  private String controlledTerminologyCodelistName = null;
  @SerializedName("Implementation Notes")
  private String implementationNotes = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }
  public void setVersion(String version) {
    this.version = version;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getClass() {
    return _class;
  }
  public void setClass(String _class) {
    this._class = _class;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDomain() {
    return domain;
  }
  public void setDomain(String domain) {
    this.domain = domain;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDataCollectionScenario() {
    return dataCollectionScenario;
  }
  public void setDataCollectionScenario(String dataCollectionScenario) {
    this.dataCollectionScenario = dataCollectionScenario;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getVariableOrder() {
    return variableOrder;
  }
  public void setVariableOrder(String variableOrder) {
    this.variableOrder = variableOrder;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCDASHIGVariable() {
    return cDASHIGVariable;
  }
  public void setCDASHIGVariable(String cDASHIGVariable) {
    this.cDASHIGVariable = cDASHIGVariable;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCDASHIGVariableLabel() {
    return cDASHIGVariableLabel;
  }
  public void setCDASHIGVariableLabel(String cDASHIGVariableLabel) {
    this.cDASHIGVariableLabel = cDASHIGVariableLabel;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDRAFTCDASHIGDefinition() {
    return dRAFTCDASHIGDefinition;
  }
  public void setDRAFTCDASHIGDefinition(String dRAFTCDASHIGDefinition) {
    this.dRAFTCDASHIGDefinition = dRAFTCDASHIGDefinition;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getQuestionText() {
    return questionText;
  }
  public void setQuestionText(String questionText) {
    this.questionText = questionText;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPrompt() {
    return prompt;
  }
  public void setPrompt(String prompt) {
    this.prompt = prompt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCDASHIGCore() {
    return cDASHIGCore;
  }
  public void setCDASHIGCore(String cDASHIGCore) {
    this.cDASHIGCore = cDASHIGCore;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCaseReportFormCompletionInstructions() {
    return caseReportFormCompletionInstructions;
  }
  public void setCaseReportFormCompletionInstructions(String caseReportFormCompletionInstructions) {
    this.caseReportFormCompletionInstructions = caseReportFormCompletionInstructions;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getSDTMIGTarget() {
    return sDTMIGTarget;
  }
  public void setSDTMIGTarget(List<String> sDTMIGTarget) {
    this.sDTMIGTarget = sDTMIGTarget;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMappingInstructions() {
    return mappingInstructions;
  }
  public void setMappingInstructions(String mappingInstructions) {
    this.mappingInstructions = mappingInstructions;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getControlledTerminologyCodelistName() {
    return controlledTerminologyCodelistName;
  }
  public void setControlledTerminologyCodelistName(String controlledTerminologyCodelistName) {
    this.controlledTerminologyCodelistName = controlledTerminologyCodelistName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getImplementationNotes() {
    return implementationNotes;
  }
  public void setImplementationNotes(String implementationNotes) {
    this.implementationNotes = implementationNotes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportCdashigScenarioVariablesRow exportCdashigScenarioVariablesRow = (ExportCdashigScenarioVariablesRow) o;
    return (this.version == null ? exportCdashigScenarioVariablesRow.version == null : this.version.equals(exportCdashigScenarioVariablesRow.version)) &&
        (this._class == null ? exportCdashigScenarioVariablesRow._class == null : this._class.equals(exportCdashigScenarioVariablesRow._class)) &&
        (this.domain == null ? exportCdashigScenarioVariablesRow.domain == null : this.domain.equals(exportCdashigScenarioVariablesRow.domain)) &&
        (this.dataCollectionScenario == null ? exportCdashigScenarioVariablesRow.dataCollectionScenario == null : this.dataCollectionScenario.equals(exportCdashigScenarioVariablesRow.dataCollectionScenario)) &&
        (this.variableOrder == null ? exportCdashigScenarioVariablesRow.variableOrder == null : this.variableOrder.equals(exportCdashigScenarioVariablesRow.variableOrder)) &&
        (this.cDASHIGVariable == null ? exportCdashigScenarioVariablesRow.cDASHIGVariable == null : this.cDASHIGVariable.equals(exportCdashigScenarioVariablesRow.cDASHIGVariable)) &&
        (this.cDASHIGVariableLabel == null ? exportCdashigScenarioVariablesRow.cDASHIGVariableLabel == null : this.cDASHIGVariableLabel.equals(exportCdashigScenarioVariablesRow.cDASHIGVariableLabel)) &&
        (this.dRAFTCDASHIGDefinition == null ? exportCdashigScenarioVariablesRow.dRAFTCDASHIGDefinition == null : this.dRAFTCDASHIGDefinition.equals(exportCdashigScenarioVariablesRow.dRAFTCDASHIGDefinition)) &&
        (this.questionText == null ? exportCdashigScenarioVariablesRow.questionText == null : this.questionText.equals(exportCdashigScenarioVariablesRow.questionText)) &&
        (this.prompt == null ? exportCdashigScenarioVariablesRow.prompt == null : this.prompt.equals(exportCdashigScenarioVariablesRow.prompt)) &&
        (this.type == null ? exportCdashigScenarioVariablesRow.type == null : this.type.equals(exportCdashigScenarioVariablesRow.type)) &&
        (this.cDASHIGCore == null ? exportCdashigScenarioVariablesRow.cDASHIGCore == null : this.cDASHIGCore.equals(exportCdashigScenarioVariablesRow.cDASHIGCore)) &&
        (this.caseReportFormCompletionInstructions == null ? exportCdashigScenarioVariablesRow.caseReportFormCompletionInstructions == null : this.caseReportFormCompletionInstructions.equals(exportCdashigScenarioVariablesRow.caseReportFormCompletionInstructions)) &&
        (this.sDTMIGTarget == null ? exportCdashigScenarioVariablesRow.sDTMIGTarget == null : this.sDTMIGTarget.equals(exportCdashigScenarioVariablesRow.sDTMIGTarget)) &&
        (this.mappingInstructions == null ? exportCdashigScenarioVariablesRow.mappingInstructions == null : this.mappingInstructions.equals(exportCdashigScenarioVariablesRow.mappingInstructions)) &&
        (this.controlledTerminologyCodelistName == null ? exportCdashigScenarioVariablesRow.controlledTerminologyCodelistName == null : this.controlledTerminologyCodelistName.equals(exportCdashigScenarioVariablesRow.controlledTerminologyCodelistName)) &&
        (this.implementationNotes == null ? exportCdashigScenarioVariablesRow.implementationNotes == null : this.implementationNotes.equals(exportCdashigScenarioVariablesRow.implementationNotes));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.version == null ? 0: this.version.hashCode());
    result = 31 * result + (this._class == null ? 0: this._class.hashCode());
    result = 31 * result + (this.domain == null ? 0: this.domain.hashCode());
    result = 31 * result + (this.dataCollectionScenario == null ? 0: this.dataCollectionScenario.hashCode());
    result = 31 * result + (this.variableOrder == null ? 0: this.variableOrder.hashCode());
    result = 31 * result + (this.cDASHIGVariable == null ? 0: this.cDASHIGVariable.hashCode());
    result = 31 * result + (this.cDASHIGVariableLabel == null ? 0: this.cDASHIGVariableLabel.hashCode());
    result = 31 * result + (this.dRAFTCDASHIGDefinition == null ? 0: this.dRAFTCDASHIGDefinition.hashCode());
    result = 31 * result + (this.questionText == null ? 0: this.questionText.hashCode());
    result = 31 * result + (this.prompt == null ? 0: this.prompt.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.cDASHIGCore == null ? 0: this.cDASHIGCore.hashCode());
    result = 31 * result + (this.caseReportFormCompletionInstructions == null ? 0: this.caseReportFormCompletionInstructions.hashCode());
    result = 31 * result + (this.sDTMIGTarget == null ? 0: this.sDTMIGTarget.hashCode());
    result = 31 * result + (this.mappingInstructions == null ? 0: this.mappingInstructions.hashCode());
    result = 31 * result + (this.controlledTerminologyCodelistName == null ? 0: this.controlledTerminologyCodelistName.hashCode());
    result = 31 * result + (this.implementationNotes == null ? 0: this.implementationNotes.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportCdashigScenarioVariablesRow {\n");
    
    sb.append("  version: ").append(version).append("\n");
    sb.append("  _class: ").append(_class).append("\n");
    sb.append("  domain: ").append(domain).append("\n");
    sb.append("  dataCollectionScenario: ").append(dataCollectionScenario).append("\n");
    sb.append("  variableOrder: ").append(variableOrder).append("\n");
    sb.append("  cDASHIGVariable: ").append(cDASHIGVariable).append("\n");
    sb.append("  cDASHIGVariableLabel: ").append(cDASHIGVariableLabel).append("\n");
    sb.append("  dRAFTCDASHIGDefinition: ").append(dRAFTCDASHIGDefinition).append("\n");
    sb.append("  questionText: ").append(questionText).append("\n");
    sb.append("  prompt: ").append(prompt).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  cDASHIGCore: ").append(cDASHIGCore).append("\n");
    sb.append("  caseReportFormCompletionInstructions: ").append(caseReportFormCompletionInstructions).append("\n");
    sb.append("  sDTMIGTarget: ").append(sDTMIGTarget).append("\n");
    sb.append("  mappingInstructions: ").append(mappingInstructions).append("\n");
    sb.append("  controlledTerminologyCodelistName: ").append(controlledTerminologyCodelistName).append("\n");
    sb.append("  implementationNotes: ").append(implementationNotes).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
