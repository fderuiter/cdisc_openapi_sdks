/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets DefaultSearchScopes
 */
@JsonAdapter(DefaultSearchScopes.Adapter.class)
public enum DefaultSearchScopes {
  
  propertyClass("class"),
  
  CODELIST("codelist"),
  
  CONCEPT_ID("conceptId"),
  
  CORE("core"),
  
  DATA_STRUCTURE("dataStructure"),
  
  DATASET_STRUCTURE("datasetStructure"),
  
  DEFINITION("definition"),
  
  DESCRIPTION("description"),
  
  DOMAIN("domain"),
  
  EFFECTIVE_DATE("effectiveDate"),
  
  EXTENSIBLE("extensible"),
  
  HREF("href"),
  
  LABEL("label"),
  
  MEASURE_TYPE("measureType"),
  
  NAME("name"),
  
  PREFERRED_TERM("preferredTerm"),
  
  PRODUCT("product"),
  
  PRODUCT_GROUP("productGroup"),
  
  REGISTRATION_STATUS("registrationStatus"),
  
  ROLE_DESCRIPTION("roleDescription"),
  
  SDTM_TARGET("sdtmTarget"),
  
  SIMPLE_DATATYPE("simpleDatatype"),
  
  SUBMISSION_VALUE("submissionValue"),
  
  SYNONYMS("synonyms"),
  
  TYPE("type"),
  
  UI_HREF("uiHref"),
  
  VALUE_DOMAIN("valueDomain"),
  
  VARIABLE_SET("variableSet"),
  
  VERSION("version");

  private String value;

  DefaultSearchScopes(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DefaultSearchScopes fromValue(String value) {
    for (DefaultSearchScopes b : DefaultSearchScopes.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DefaultSearchScopes> {
    @Override
    public void write(final JsonWriter jsonWriter, final DefaultSearchScopes enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DefaultSearchScopes read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DefaultSearchScopes.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    DefaultSearchScopes.fromValue(value);
  }
}

