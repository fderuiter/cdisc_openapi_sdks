/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RootCtCodelistRefElement;
import org.openapitools.client.model.RootSdtmigDatasetVariableRef;
import org.openapitools.client.model.SdtmClassVariableRef;
import org.openapitools.client.model.SdtmDatasetVariableRef;
import org.openapitools.client.model.SdtmigDatasetRef;
import org.openapitools.client.model.SdtmigDatasetVariableRef;
import org.openapitools.client.model.SdtmigProductRef;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SdtmigDatasetVariableLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-22T20:17:16.173989497Z[Etc/UTC]", comments = "Generator version: 7.16.0-SNAPSHOT")
public class SdtmigDatasetVariableLinks {
  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  @javax.annotation.Nullable
  private SdtmigDatasetVariableRef self;

  public static final String SERIALIZED_NAME_CODELIST = "codelist";
  @SerializedName(SERIALIZED_NAME_CODELIST)
  @javax.annotation.Nullable
  private List<RootCtCodelistRefElement> codelist = new ArrayList<>();

  public static final String SERIALIZED_NAME_MODEL_CLASS_VARIABLE = "modelClassVariable";
  @SerializedName(SERIALIZED_NAME_MODEL_CLASS_VARIABLE)
  @javax.annotation.Nullable
  private SdtmClassVariableRef modelClassVariable;

  public static final String SERIALIZED_NAME_MODEL_DATASET_VARIABLE = "modelDatasetVariable";
  @SerializedName(SERIALIZED_NAME_MODEL_DATASET_VARIABLE)
  @javax.annotation.Nullable
  private SdtmDatasetVariableRef modelDatasetVariable;

  public static final String SERIALIZED_NAME_PARENT_PRODUCT = "parentProduct";
  @SerializedName(SERIALIZED_NAME_PARENT_PRODUCT)
  @javax.annotation.Nullable
  private SdtmigProductRef parentProduct;

  public static final String SERIALIZED_NAME_PARENT_DATASET = "parentDataset";
  @SerializedName(SERIALIZED_NAME_PARENT_DATASET)
  @javax.annotation.Nullable
  private SdtmigDatasetRef parentDataset;

  public static final String SERIALIZED_NAME_ROOT_ITEM = "rootItem";
  @SerializedName(SERIALIZED_NAME_ROOT_ITEM)
  @javax.annotation.Nullable
  private RootSdtmigDatasetVariableRef rootItem;

  public static final String SERIALIZED_NAME_PRIOR_VERSION = "priorVersion";
  @SerializedName(SERIALIZED_NAME_PRIOR_VERSION)
  @javax.annotation.Nullable
  private SdtmigDatasetVariableRef priorVersion;

  public SdtmigDatasetVariableLinks() {
  }

  public SdtmigDatasetVariableLinks self(@javax.annotation.Nullable SdtmigDatasetVariableRef self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nullable
  public SdtmigDatasetVariableRef getSelf() {
    return self;
  }

  public void setSelf(@javax.annotation.Nullable SdtmigDatasetVariableRef self) {
    this.self = self;
  }


  public SdtmigDatasetVariableLinks codelist(@javax.annotation.Nullable List<RootCtCodelistRefElement> codelist) {
    this.codelist = codelist;
    return this;
  }

  public SdtmigDatasetVariableLinks addCodelistItem(RootCtCodelistRefElement codelistItem) {
    if (this.codelist == null) {
      this.codelist = new ArrayList<>();
    }
    this.codelist.add(codelistItem);
    return this;
  }

  /**
   * Get codelist
   * @return codelist
   */
  @javax.annotation.Nullable
  public List<RootCtCodelistRefElement> getCodelist() {
    return codelist;
  }

  public void setCodelist(@javax.annotation.Nullable List<RootCtCodelistRefElement> codelist) {
    this.codelist = codelist;
  }


  public SdtmigDatasetVariableLinks modelClassVariable(@javax.annotation.Nullable SdtmClassVariableRef modelClassVariable) {
    this.modelClassVariable = modelClassVariable;
    return this;
  }

  /**
   * Get modelClassVariable
   * @return modelClassVariable
   */
  @javax.annotation.Nullable
  public SdtmClassVariableRef getModelClassVariable() {
    return modelClassVariable;
  }

  public void setModelClassVariable(@javax.annotation.Nullable SdtmClassVariableRef modelClassVariable) {
    this.modelClassVariable = modelClassVariable;
  }


  public SdtmigDatasetVariableLinks modelDatasetVariable(@javax.annotation.Nullable SdtmDatasetVariableRef modelDatasetVariable) {
    this.modelDatasetVariable = modelDatasetVariable;
    return this;
  }

  /**
   * Get modelDatasetVariable
   * @return modelDatasetVariable
   */
  @javax.annotation.Nullable
  public SdtmDatasetVariableRef getModelDatasetVariable() {
    return modelDatasetVariable;
  }

  public void setModelDatasetVariable(@javax.annotation.Nullable SdtmDatasetVariableRef modelDatasetVariable) {
    this.modelDatasetVariable = modelDatasetVariable;
  }


  public SdtmigDatasetVariableLinks parentProduct(@javax.annotation.Nullable SdtmigProductRef parentProduct) {
    this.parentProduct = parentProduct;
    return this;
  }

  /**
   * Get parentProduct
   * @return parentProduct
   */
  @javax.annotation.Nullable
  public SdtmigProductRef getParentProduct() {
    return parentProduct;
  }

  public void setParentProduct(@javax.annotation.Nullable SdtmigProductRef parentProduct) {
    this.parentProduct = parentProduct;
  }


  public SdtmigDatasetVariableLinks parentDataset(@javax.annotation.Nullable SdtmigDatasetRef parentDataset) {
    this.parentDataset = parentDataset;
    return this;
  }

  /**
   * Get parentDataset
   * @return parentDataset
   */
  @javax.annotation.Nullable
  public SdtmigDatasetRef getParentDataset() {
    return parentDataset;
  }

  public void setParentDataset(@javax.annotation.Nullable SdtmigDatasetRef parentDataset) {
    this.parentDataset = parentDataset;
  }


  public SdtmigDatasetVariableLinks rootItem(@javax.annotation.Nullable RootSdtmigDatasetVariableRef rootItem) {
    this.rootItem = rootItem;
    return this;
  }

  /**
   * Get rootItem
   * @return rootItem
   */
  @javax.annotation.Nullable
  public RootSdtmigDatasetVariableRef getRootItem() {
    return rootItem;
  }

  public void setRootItem(@javax.annotation.Nullable RootSdtmigDatasetVariableRef rootItem) {
    this.rootItem = rootItem;
  }


  public SdtmigDatasetVariableLinks priorVersion(@javax.annotation.Nullable SdtmigDatasetVariableRef priorVersion) {
    this.priorVersion = priorVersion;
    return this;
  }

  /**
   * Get priorVersion
   * @return priorVersion
   */
  @javax.annotation.Nullable
  public SdtmigDatasetVariableRef getPriorVersion() {
    return priorVersion;
  }

  public void setPriorVersion(@javax.annotation.Nullable SdtmigDatasetVariableRef priorVersion) {
    this.priorVersion = priorVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SdtmigDatasetVariableLinks sdtmigDatasetVariableLinks = (SdtmigDatasetVariableLinks) o;
    return Objects.equals(this.self, sdtmigDatasetVariableLinks.self) &&
        Objects.equals(this.codelist, sdtmigDatasetVariableLinks.codelist) &&
        Objects.equals(this.modelClassVariable, sdtmigDatasetVariableLinks.modelClassVariable) &&
        Objects.equals(this.modelDatasetVariable, sdtmigDatasetVariableLinks.modelDatasetVariable) &&
        Objects.equals(this.parentProduct, sdtmigDatasetVariableLinks.parentProduct) &&
        Objects.equals(this.parentDataset, sdtmigDatasetVariableLinks.parentDataset) &&
        Objects.equals(this.rootItem, sdtmigDatasetVariableLinks.rootItem) &&
        Objects.equals(this.priorVersion, sdtmigDatasetVariableLinks.priorVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, codelist, modelClassVariable, modelDatasetVariable, parentProduct, parentDataset, rootItem, priorVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SdtmigDatasetVariableLinks {\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    codelist: ").append(toIndentedString(codelist)).append("\n");
    sb.append("    modelClassVariable: ").append(toIndentedString(modelClassVariable)).append("\n");
    sb.append("    modelDatasetVariable: ").append(toIndentedString(modelDatasetVariable)).append("\n");
    sb.append("    parentProduct: ").append(toIndentedString(parentProduct)).append("\n");
    sb.append("    parentDataset: ").append(toIndentedString(parentDataset)).append("\n");
    sb.append("    rootItem: ").append(toIndentedString(rootItem)).append("\n");
    sb.append("    priorVersion: ").append(toIndentedString(priorVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("self", "codelist", "modelClassVariable", "modelDatasetVariable", "parentProduct", "parentDataset", "rootItem", "priorVersion"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SdtmigDatasetVariableLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SdtmigDatasetVariableLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SdtmigDatasetVariableLinks is not found in the empty JSON string", SdtmigDatasetVariableLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SdtmigDatasetVariableLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SdtmigDatasetVariableLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `self`
      if (jsonObj.get("self") != null && !jsonObj.get("self").isJsonNull()) {
        SdtmigDatasetVariableRef.validateJsonElement(jsonObj.get("self"));
      }
      if (jsonObj.get("codelist") != null && !jsonObj.get("codelist").isJsonNull()) {
        JsonArray jsonArraycodelist = jsonObj.getAsJsonArray("codelist");
        if (jsonArraycodelist != null) {
          // ensure the json data is an array
          if (!jsonObj.get("codelist").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `codelist` to be an array in the JSON string but got `%s`", jsonObj.get("codelist").toString()));
          }

          // validate the optional field `codelist` (array)
          for (int i = 0; i < jsonArraycodelist.size(); i++) {
            RootCtCodelistRefElement.validateJsonElement(jsonArraycodelist.get(i));
          };
        }
      }
      // validate the optional field `modelClassVariable`
      if (jsonObj.get("modelClassVariable") != null && !jsonObj.get("modelClassVariable").isJsonNull()) {
        SdtmClassVariableRef.validateJsonElement(jsonObj.get("modelClassVariable"));
      }
      // validate the optional field `modelDatasetVariable`
      if (jsonObj.get("modelDatasetVariable") != null && !jsonObj.get("modelDatasetVariable").isJsonNull()) {
        SdtmDatasetVariableRef.validateJsonElement(jsonObj.get("modelDatasetVariable"));
      }
      // validate the optional field `parentProduct`
      if (jsonObj.get("parentProduct") != null && !jsonObj.get("parentProduct").isJsonNull()) {
        SdtmigProductRef.validateJsonElement(jsonObj.get("parentProduct"));
      }
      // validate the optional field `parentDataset`
      if (jsonObj.get("parentDataset") != null && !jsonObj.get("parentDataset").isJsonNull()) {
        SdtmigDatasetRef.validateJsonElement(jsonObj.get("parentDataset"));
      }
      // validate the optional field `rootItem`
      if (jsonObj.get("rootItem") != null && !jsonObj.get("rootItem").isJsonNull()) {
        RootSdtmigDatasetVariableRef.validateJsonElement(jsonObj.get("rootItem"));
      }
      // validate the optional field `priorVersion`
      if (jsonObj.get("priorVersion") != null && !jsonObj.get("priorVersion").isJsonNull()) {
        SdtmigDatasetVariableRef.validateJsonElement(jsonObj.get("priorVersion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SdtmigDatasetVariableLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SdtmigDatasetVariableLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SdtmigDatasetVariableLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SdtmigDatasetVariableLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<SdtmigDatasetVariableLinks>() {
           @Override
           public void write(JsonWriter out, SdtmigDatasetVariableLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SdtmigDatasetVariableLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SdtmigDatasetVariableLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SdtmigDatasetVariableLinks
   * @throws IOException if the JSON string is invalid with respect to SdtmigDatasetVariableLinks
   */
  public static SdtmigDatasetVariableLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SdtmigDatasetVariableLinks.class);
  }

  /**
   * Convert an instance of SdtmigDatasetVariableLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

