/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ExportCdashDomainVariablesRow {
  
  @SerializedName("Version")
  private String version = null;
  @SerializedName("Class")
  private String _class = null;
  @SerializedName("Domain")
  private String domain = null;
  @SerializedName("Variable Order")
  private String variableOrder = null;
  @SerializedName("CDASH Variable")
  private String cDASHVariable = null;
  @SerializedName("CDASH Variable Label")
  private String cDASHVariableLabel = null;
  @SerializedName("DRAFT CDASH Definition")
  private String dRAFTCDASHDefinition = null;
  @SerializedName("Domain Specific")
  private String domainSpecific = null;
  @SerializedName("Question Text")
  private String questionText = null;
  @SerializedName("Prompt")
  private String prompt = null;
  @SerializedName("Type")
  private String type = null;
  @SerializedName("SDTM Target")
  private List<String> sDTMTarget = null;
  @SerializedName("Mapping Instructions")
  private String mappingInstructions = null;
  @SerializedName("Controlled Terminology Codelist Name")
  private String controlledTerminologyCodelistName = null;
  @SerializedName("Implementation Notes")
  private String implementationNotes = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }
  public void setVersion(String version) {
    this.version = version;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getClass() {
    return _class;
  }
  public void setClass(String _class) {
    this._class = _class;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDomain() {
    return domain;
  }
  public void setDomain(String domain) {
    this.domain = domain;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getVariableOrder() {
    return variableOrder;
  }
  public void setVariableOrder(String variableOrder) {
    this.variableOrder = variableOrder;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCDASHVariable() {
    return cDASHVariable;
  }
  public void setCDASHVariable(String cDASHVariable) {
    this.cDASHVariable = cDASHVariable;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCDASHVariableLabel() {
    return cDASHVariableLabel;
  }
  public void setCDASHVariableLabel(String cDASHVariableLabel) {
    this.cDASHVariableLabel = cDASHVariableLabel;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDRAFTCDASHDefinition() {
    return dRAFTCDASHDefinition;
  }
  public void setDRAFTCDASHDefinition(String dRAFTCDASHDefinition) {
    this.dRAFTCDASHDefinition = dRAFTCDASHDefinition;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDomainSpecific() {
    return domainSpecific;
  }
  public void setDomainSpecific(String domainSpecific) {
    this.domainSpecific = domainSpecific;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getQuestionText() {
    return questionText;
  }
  public void setQuestionText(String questionText) {
    this.questionText = questionText;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPrompt() {
    return prompt;
  }
  public void setPrompt(String prompt) {
    this.prompt = prompt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getSDTMTarget() {
    return sDTMTarget;
  }
  public void setSDTMTarget(List<String> sDTMTarget) {
    this.sDTMTarget = sDTMTarget;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMappingInstructions() {
    return mappingInstructions;
  }
  public void setMappingInstructions(String mappingInstructions) {
    this.mappingInstructions = mappingInstructions;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getControlledTerminologyCodelistName() {
    return controlledTerminologyCodelistName;
  }
  public void setControlledTerminologyCodelistName(String controlledTerminologyCodelistName) {
    this.controlledTerminologyCodelistName = controlledTerminologyCodelistName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getImplementationNotes() {
    return implementationNotes;
  }
  public void setImplementationNotes(String implementationNotes) {
    this.implementationNotes = implementationNotes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportCdashDomainVariablesRow exportCdashDomainVariablesRow = (ExportCdashDomainVariablesRow) o;
    return (this.version == null ? exportCdashDomainVariablesRow.version == null : this.version.equals(exportCdashDomainVariablesRow.version)) &&
        (this._class == null ? exportCdashDomainVariablesRow._class == null : this._class.equals(exportCdashDomainVariablesRow._class)) &&
        (this.domain == null ? exportCdashDomainVariablesRow.domain == null : this.domain.equals(exportCdashDomainVariablesRow.domain)) &&
        (this.variableOrder == null ? exportCdashDomainVariablesRow.variableOrder == null : this.variableOrder.equals(exportCdashDomainVariablesRow.variableOrder)) &&
        (this.cDASHVariable == null ? exportCdashDomainVariablesRow.cDASHVariable == null : this.cDASHVariable.equals(exportCdashDomainVariablesRow.cDASHVariable)) &&
        (this.cDASHVariableLabel == null ? exportCdashDomainVariablesRow.cDASHVariableLabel == null : this.cDASHVariableLabel.equals(exportCdashDomainVariablesRow.cDASHVariableLabel)) &&
        (this.dRAFTCDASHDefinition == null ? exportCdashDomainVariablesRow.dRAFTCDASHDefinition == null : this.dRAFTCDASHDefinition.equals(exportCdashDomainVariablesRow.dRAFTCDASHDefinition)) &&
        (this.domainSpecific == null ? exportCdashDomainVariablesRow.domainSpecific == null : this.domainSpecific.equals(exportCdashDomainVariablesRow.domainSpecific)) &&
        (this.questionText == null ? exportCdashDomainVariablesRow.questionText == null : this.questionText.equals(exportCdashDomainVariablesRow.questionText)) &&
        (this.prompt == null ? exportCdashDomainVariablesRow.prompt == null : this.prompt.equals(exportCdashDomainVariablesRow.prompt)) &&
        (this.type == null ? exportCdashDomainVariablesRow.type == null : this.type.equals(exportCdashDomainVariablesRow.type)) &&
        (this.sDTMTarget == null ? exportCdashDomainVariablesRow.sDTMTarget == null : this.sDTMTarget.equals(exportCdashDomainVariablesRow.sDTMTarget)) &&
        (this.mappingInstructions == null ? exportCdashDomainVariablesRow.mappingInstructions == null : this.mappingInstructions.equals(exportCdashDomainVariablesRow.mappingInstructions)) &&
        (this.controlledTerminologyCodelistName == null ? exportCdashDomainVariablesRow.controlledTerminologyCodelistName == null : this.controlledTerminologyCodelistName.equals(exportCdashDomainVariablesRow.controlledTerminologyCodelistName)) &&
        (this.implementationNotes == null ? exportCdashDomainVariablesRow.implementationNotes == null : this.implementationNotes.equals(exportCdashDomainVariablesRow.implementationNotes));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.version == null ? 0: this.version.hashCode());
    result = 31 * result + (this._class == null ? 0: this._class.hashCode());
    result = 31 * result + (this.domain == null ? 0: this.domain.hashCode());
    result = 31 * result + (this.variableOrder == null ? 0: this.variableOrder.hashCode());
    result = 31 * result + (this.cDASHVariable == null ? 0: this.cDASHVariable.hashCode());
    result = 31 * result + (this.cDASHVariableLabel == null ? 0: this.cDASHVariableLabel.hashCode());
    result = 31 * result + (this.dRAFTCDASHDefinition == null ? 0: this.dRAFTCDASHDefinition.hashCode());
    result = 31 * result + (this.domainSpecific == null ? 0: this.domainSpecific.hashCode());
    result = 31 * result + (this.questionText == null ? 0: this.questionText.hashCode());
    result = 31 * result + (this.prompt == null ? 0: this.prompt.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.sDTMTarget == null ? 0: this.sDTMTarget.hashCode());
    result = 31 * result + (this.mappingInstructions == null ? 0: this.mappingInstructions.hashCode());
    result = 31 * result + (this.controlledTerminologyCodelistName == null ? 0: this.controlledTerminologyCodelistName.hashCode());
    result = 31 * result + (this.implementationNotes == null ? 0: this.implementationNotes.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportCdashDomainVariablesRow {\n");
    
    sb.append("  version: ").append(version).append("\n");
    sb.append("  _class: ").append(_class).append("\n");
    sb.append("  domain: ").append(domain).append("\n");
    sb.append("  variableOrder: ").append(variableOrder).append("\n");
    sb.append("  cDASHVariable: ").append(cDASHVariable).append("\n");
    sb.append("  cDASHVariableLabel: ").append(cDASHVariableLabel).append("\n");
    sb.append("  dRAFTCDASHDefinition: ").append(dRAFTCDASHDefinition).append("\n");
    sb.append("  domainSpecific: ").append(domainSpecific).append("\n");
    sb.append("  questionText: ").append(questionText).append("\n");
    sb.append("  prompt: ").append(prompt).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  sDTMTarget: ").append(sDTMTarget).append("\n");
    sb.append("  mappingInstructions: ").append(mappingInstructions).append("\n");
    sb.append("  controlledTerminologyCodelistName: ").append(controlledTerminologyCodelistName).append("\n");
    sb.append("  implementationNotes: ").append(implementationNotes).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
