/*
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ExportQrsCsvItemsRow
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-22T20:17:16.173989497Z[Etc/UTC]", comments = "Generator version: 7.16.0-SNAPSHOT")
public class ExportQrsCsvItemsRow {
  public static final String SERIALIZED_NAME_QR_S_MEASURE_NAME = "QRS Measure Name";
  @SerializedName(SERIALIZED_NAME_QR_S_MEASURE_NAME)
  @javax.annotation.Nullable
  private String qrSMeasureName;

  public static final String SERIALIZED_NAME_QR_S_MEASURE_LABEL = "QRS Measure Label";
  @SerializedName(SERIALIZED_NAME_QR_S_MEASURE_LABEL)
  @javax.annotation.Nullable
  private String qrSMeasureLabel;

  public static final String SERIALIZED_NAME_QR_S_MEASURE_TYPE = "QRS Measure Type";
  @SerializedName(SERIALIZED_NAME_QR_S_MEASURE_TYPE)
  @javax.annotation.Nullable
  private String qrSMeasureType;

  public static final String SERIALIZED_NAME_ITEM_SEQUENCE = "Item Sequence";
  @SerializedName(SERIALIZED_NAME_ITEM_SEQUENCE)
  @javax.annotation.Nullable
  private String itemSequence;

  public static final String SERIALIZED_NAME_TEST_NAME = "Test Name";
  @SerializedName(SERIALIZED_NAME_TEST_NAME)
  @javax.annotation.Nullable
  private String testName;

  public static final String SERIALIZED_NAME_ITEM_TEXT = "Item Text";
  @SerializedName(SERIALIZED_NAME_ITEM_TEXT)
  @javax.annotation.Nullable
  private String itemText;

  public static final String SERIALIZED_NAME_TEST_QUOTE_S_CODELIST_C_CODE = "Test&#39;s Codelist C-Code";
  @SerializedName(SERIALIZED_NAME_TEST_QUOTE_S_CODELIST_C_CODE)
  @javax.annotation.Nullable
  private String testQuoteSCodelistCCode;

  public static final String SERIALIZED_NAME_TEST_QUOTE_S_TERM_C_CODE = "Test&#39;s Term C-Code";
  @SerializedName(SERIALIZED_NAME_TEST_QUOTE_S_TERM_C_CODE)
  @javax.annotation.Nullable
  private String testQuoteSTermCCode;

  public static final String SERIALIZED_NAME_TEST_CODE_QUOTE_S_CODELIST_C_CODE = "Test Code&#39;s Codelist C-Code";
  @SerializedName(SERIALIZED_NAME_TEST_CODE_QUOTE_S_CODELIST_C_CODE)
  @javax.annotation.Nullable
  private String testCodeQuoteSCodelistCCode;

  public static final String SERIALIZED_NAME_TEST_CODE_QUOTE_S_TERM_C_CODE = "Test Code&#39;s Term C-Code";
  @SerializedName(SERIALIZED_NAME_TEST_CODE_QUOTE_S_TERM_C_CODE)
  @javax.annotation.Nullable
  private String testCodeQuoteSTermCCode;

  public static final String SERIALIZED_NAME_SUBCATEGORY_QUOTE_S_CODELIST_C_CODE = "Subcategory&#39;s Codelist C-Code";
  @SerializedName(SERIALIZED_NAME_SUBCATEGORY_QUOTE_S_CODELIST_C_CODE)
  @javax.annotation.Nullable
  private String subcategoryQuoteSCodelistCCode;

  public static final String SERIALIZED_NAME_SUBCATEGORY_QUOTE_S_TERM_C_CODE = "Subcategory&#39;s Term C-Code";
  @SerializedName(SERIALIZED_NAME_SUBCATEGORY_QUOTE_S_TERM_C_CODE)
  @javax.annotation.Nullable
  private String subcategoryQuoteSTermCCode;

  public static final String SERIALIZED_NAME_EVALUATOR_QUOTE_S_CODELIST_C_CODE = "Evaluator&#39;s Codelist C-Code";
  @SerializedName(SERIALIZED_NAME_EVALUATOR_QUOTE_S_CODELIST_C_CODE)
  @javax.annotation.Nullable
  private String evaluatorQuoteSCodelistCCode;

  public static final String SERIALIZED_NAME_EVALUATOR_QUOTE_S_TERM_C_CODE = "Evaluator&#39;s Term C-Code";
  @SerializedName(SERIALIZED_NAME_EVALUATOR_QUOTE_S_TERM_C_CODE)
  @javax.annotation.Nullable
  private String evaluatorQuoteSTermCCode;

  public static final String SERIALIZED_NAME_FREE_FORM_RESPONSE_QUOTE_S_DATATYPE = "Free-form Response&#39;s Datatype";
  @SerializedName(SERIALIZED_NAME_FREE_FORM_RESPONSE_QUOTE_S_DATATYPE)
  @javax.annotation.Nullable
  private String freeFormResponseQuoteSDatatype;

  public static final String SERIALIZED_NAME_RESPONSE_GROUP = "Response Group";
  @SerializedName(SERIALIZED_NAME_RESPONSE_GROUP)
  @javax.annotation.Nullable
  private String responseGroup;

  public ExportQrsCsvItemsRow() {
  }

  public ExportQrsCsvItemsRow qrSMeasureName(@javax.annotation.Nullable String qrSMeasureName) {
    this.qrSMeasureName = qrSMeasureName;
    return this;
  }

  /**
   * Get qrSMeasureName
   * @return qrSMeasureName
   */
  @javax.annotation.Nullable
  public String getQrSMeasureName() {
    return qrSMeasureName;
  }

  public void setQrSMeasureName(@javax.annotation.Nullable String qrSMeasureName) {
    this.qrSMeasureName = qrSMeasureName;
  }


  public ExportQrsCsvItemsRow qrSMeasureLabel(@javax.annotation.Nullable String qrSMeasureLabel) {
    this.qrSMeasureLabel = qrSMeasureLabel;
    return this;
  }

  /**
   * Get qrSMeasureLabel
   * @return qrSMeasureLabel
   */
  @javax.annotation.Nullable
  public String getQrSMeasureLabel() {
    return qrSMeasureLabel;
  }

  public void setQrSMeasureLabel(@javax.annotation.Nullable String qrSMeasureLabel) {
    this.qrSMeasureLabel = qrSMeasureLabel;
  }


  public ExportQrsCsvItemsRow qrSMeasureType(@javax.annotation.Nullable String qrSMeasureType) {
    this.qrSMeasureType = qrSMeasureType;
    return this;
  }

  /**
   * Get qrSMeasureType
   * @return qrSMeasureType
   */
  @javax.annotation.Nullable
  public String getQrSMeasureType() {
    return qrSMeasureType;
  }

  public void setQrSMeasureType(@javax.annotation.Nullable String qrSMeasureType) {
    this.qrSMeasureType = qrSMeasureType;
  }


  public ExportQrsCsvItemsRow itemSequence(@javax.annotation.Nullable String itemSequence) {
    this.itemSequence = itemSequence;
    return this;
  }

  /**
   * Get itemSequence
   * @return itemSequence
   */
  @javax.annotation.Nullable
  public String getItemSequence() {
    return itemSequence;
  }

  public void setItemSequence(@javax.annotation.Nullable String itemSequence) {
    this.itemSequence = itemSequence;
  }


  public ExportQrsCsvItemsRow testName(@javax.annotation.Nullable String testName) {
    this.testName = testName;
    return this;
  }

  /**
   * Get testName
   * @return testName
   */
  @javax.annotation.Nullable
  public String getTestName() {
    return testName;
  }

  public void setTestName(@javax.annotation.Nullable String testName) {
    this.testName = testName;
  }


  public ExportQrsCsvItemsRow itemText(@javax.annotation.Nullable String itemText) {
    this.itemText = itemText;
    return this;
  }

  /**
   * Get itemText
   * @return itemText
   */
  @javax.annotation.Nullable
  public String getItemText() {
    return itemText;
  }

  public void setItemText(@javax.annotation.Nullable String itemText) {
    this.itemText = itemText;
  }


  public ExportQrsCsvItemsRow testQuoteSCodelistCCode(@javax.annotation.Nullable String testQuoteSCodelistCCode) {
    this.testQuoteSCodelistCCode = testQuoteSCodelistCCode;
    return this;
  }

  /**
   * Get testQuoteSCodelistCCode
   * @return testQuoteSCodelistCCode
   */
  @javax.annotation.Nullable
  public String getTestQuoteSCodelistCCode() {
    return testQuoteSCodelistCCode;
  }

  public void setTestQuoteSCodelistCCode(@javax.annotation.Nullable String testQuoteSCodelistCCode) {
    this.testQuoteSCodelistCCode = testQuoteSCodelistCCode;
  }


  public ExportQrsCsvItemsRow testQuoteSTermCCode(@javax.annotation.Nullable String testQuoteSTermCCode) {
    this.testQuoteSTermCCode = testQuoteSTermCCode;
    return this;
  }

  /**
   * Get testQuoteSTermCCode
   * @return testQuoteSTermCCode
   */
  @javax.annotation.Nullable
  public String getTestQuoteSTermCCode() {
    return testQuoteSTermCCode;
  }

  public void setTestQuoteSTermCCode(@javax.annotation.Nullable String testQuoteSTermCCode) {
    this.testQuoteSTermCCode = testQuoteSTermCCode;
  }


  public ExportQrsCsvItemsRow testCodeQuoteSCodelistCCode(@javax.annotation.Nullable String testCodeQuoteSCodelistCCode) {
    this.testCodeQuoteSCodelistCCode = testCodeQuoteSCodelistCCode;
    return this;
  }

  /**
   * Get testCodeQuoteSCodelistCCode
   * @return testCodeQuoteSCodelistCCode
   */
  @javax.annotation.Nullable
  public String getTestCodeQuoteSCodelistCCode() {
    return testCodeQuoteSCodelistCCode;
  }

  public void setTestCodeQuoteSCodelistCCode(@javax.annotation.Nullable String testCodeQuoteSCodelistCCode) {
    this.testCodeQuoteSCodelistCCode = testCodeQuoteSCodelistCCode;
  }


  public ExportQrsCsvItemsRow testCodeQuoteSTermCCode(@javax.annotation.Nullable String testCodeQuoteSTermCCode) {
    this.testCodeQuoteSTermCCode = testCodeQuoteSTermCCode;
    return this;
  }

  /**
   * Get testCodeQuoteSTermCCode
   * @return testCodeQuoteSTermCCode
   */
  @javax.annotation.Nullable
  public String getTestCodeQuoteSTermCCode() {
    return testCodeQuoteSTermCCode;
  }

  public void setTestCodeQuoteSTermCCode(@javax.annotation.Nullable String testCodeQuoteSTermCCode) {
    this.testCodeQuoteSTermCCode = testCodeQuoteSTermCCode;
  }


  public ExportQrsCsvItemsRow subcategoryQuoteSCodelistCCode(@javax.annotation.Nullable String subcategoryQuoteSCodelistCCode) {
    this.subcategoryQuoteSCodelistCCode = subcategoryQuoteSCodelistCCode;
    return this;
  }

  /**
   * Get subcategoryQuoteSCodelistCCode
   * @return subcategoryQuoteSCodelistCCode
   */
  @javax.annotation.Nullable
  public String getSubcategoryQuoteSCodelistCCode() {
    return subcategoryQuoteSCodelistCCode;
  }

  public void setSubcategoryQuoteSCodelistCCode(@javax.annotation.Nullable String subcategoryQuoteSCodelistCCode) {
    this.subcategoryQuoteSCodelistCCode = subcategoryQuoteSCodelistCCode;
  }


  public ExportQrsCsvItemsRow subcategoryQuoteSTermCCode(@javax.annotation.Nullable String subcategoryQuoteSTermCCode) {
    this.subcategoryQuoteSTermCCode = subcategoryQuoteSTermCCode;
    return this;
  }

  /**
   * Get subcategoryQuoteSTermCCode
   * @return subcategoryQuoteSTermCCode
   */
  @javax.annotation.Nullable
  public String getSubcategoryQuoteSTermCCode() {
    return subcategoryQuoteSTermCCode;
  }

  public void setSubcategoryQuoteSTermCCode(@javax.annotation.Nullable String subcategoryQuoteSTermCCode) {
    this.subcategoryQuoteSTermCCode = subcategoryQuoteSTermCCode;
  }


  public ExportQrsCsvItemsRow evaluatorQuoteSCodelistCCode(@javax.annotation.Nullable String evaluatorQuoteSCodelistCCode) {
    this.evaluatorQuoteSCodelistCCode = evaluatorQuoteSCodelistCCode;
    return this;
  }

  /**
   * Get evaluatorQuoteSCodelistCCode
   * @return evaluatorQuoteSCodelistCCode
   */
  @javax.annotation.Nullable
  public String getEvaluatorQuoteSCodelistCCode() {
    return evaluatorQuoteSCodelistCCode;
  }

  public void setEvaluatorQuoteSCodelistCCode(@javax.annotation.Nullable String evaluatorQuoteSCodelistCCode) {
    this.evaluatorQuoteSCodelistCCode = evaluatorQuoteSCodelistCCode;
  }


  public ExportQrsCsvItemsRow evaluatorQuoteSTermCCode(@javax.annotation.Nullable String evaluatorQuoteSTermCCode) {
    this.evaluatorQuoteSTermCCode = evaluatorQuoteSTermCCode;
    return this;
  }

  /**
   * Get evaluatorQuoteSTermCCode
   * @return evaluatorQuoteSTermCCode
   */
  @javax.annotation.Nullable
  public String getEvaluatorQuoteSTermCCode() {
    return evaluatorQuoteSTermCCode;
  }

  public void setEvaluatorQuoteSTermCCode(@javax.annotation.Nullable String evaluatorQuoteSTermCCode) {
    this.evaluatorQuoteSTermCCode = evaluatorQuoteSTermCCode;
  }


  public ExportQrsCsvItemsRow freeFormResponseQuoteSDatatype(@javax.annotation.Nullable String freeFormResponseQuoteSDatatype) {
    this.freeFormResponseQuoteSDatatype = freeFormResponseQuoteSDatatype;
    return this;
  }

  /**
   * Get freeFormResponseQuoteSDatatype
   * @return freeFormResponseQuoteSDatatype
   */
  @javax.annotation.Nullable
  public String getFreeFormResponseQuoteSDatatype() {
    return freeFormResponseQuoteSDatatype;
  }

  public void setFreeFormResponseQuoteSDatatype(@javax.annotation.Nullable String freeFormResponseQuoteSDatatype) {
    this.freeFormResponseQuoteSDatatype = freeFormResponseQuoteSDatatype;
  }


  public ExportQrsCsvItemsRow responseGroup(@javax.annotation.Nullable String responseGroup) {
    this.responseGroup = responseGroup;
    return this;
  }

  /**
   * Get responseGroup
   * @return responseGroup
   */
  @javax.annotation.Nullable
  public String getResponseGroup() {
    return responseGroup;
  }

  public void setResponseGroup(@javax.annotation.Nullable String responseGroup) {
    this.responseGroup = responseGroup;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportQrsCsvItemsRow exportQrsCsvItemsRow = (ExportQrsCsvItemsRow) o;
    return Objects.equals(this.qrSMeasureName, exportQrsCsvItemsRow.qrSMeasureName) &&
        Objects.equals(this.qrSMeasureLabel, exportQrsCsvItemsRow.qrSMeasureLabel) &&
        Objects.equals(this.qrSMeasureType, exportQrsCsvItemsRow.qrSMeasureType) &&
        Objects.equals(this.itemSequence, exportQrsCsvItemsRow.itemSequence) &&
        Objects.equals(this.testName, exportQrsCsvItemsRow.testName) &&
        Objects.equals(this.itemText, exportQrsCsvItemsRow.itemText) &&
        Objects.equals(this.testQuoteSCodelistCCode, exportQrsCsvItemsRow.testQuoteSCodelistCCode) &&
        Objects.equals(this.testQuoteSTermCCode, exportQrsCsvItemsRow.testQuoteSTermCCode) &&
        Objects.equals(this.testCodeQuoteSCodelistCCode, exportQrsCsvItemsRow.testCodeQuoteSCodelistCCode) &&
        Objects.equals(this.testCodeQuoteSTermCCode, exportQrsCsvItemsRow.testCodeQuoteSTermCCode) &&
        Objects.equals(this.subcategoryQuoteSCodelistCCode, exportQrsCsvItemsRow.subcategoryQuoteSCodelistCCode) &&
        Objects.equals(this.subcategoryQuoteSTermCCode, exportQrsCsvItemsRow.subcategoryQuoteSTermCCode) &&
        Objects.equals(this.evaluatorQuoteSCodelistCCode, exportQrsCsvItemsRow.evaluatorQuoteSCodelistCCode) &&
        Objects.equals(this.evaluatorQuoteSTermCCode, exportQrsCsvItemsRow.evaluatorQuoteSTermCCode) &&
        Objects.equals(this.freeFormResponseQuoteSDatatype, exportQrsCsvItemsRow.freeFormResponseQuoteSDatatype) &&
        Objects.equals(this.responseGroup, exportQrsCsvItemsRow.responseGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(qrSMeasureName, qrSMeasureLabel, qrSMeasureType, itemSequence, testName, itemText, testQuoteSCodelistCCode, testQuoteSTermCCode, testCodeQuoteSCodelistCCode, testCodeQuoteSTermCCode, subcategoryQuoteSCodelistCCode, subcategoryQuoteSTermCCode, evaluatorQuoteSCodelistCCode, evaluatorQuoteSTermCCode, freeFormResponseQuoteSDatatype, responseGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportQrsCsvItemsRow {\n");
    sb.append("    qrSMeasureName: ").append(toIndentedString(qrSMeasureName)).append("\n");
    sb.append("    qrSMeasureLabel: ").append(toIndentedString(qrSMeasureLabel)).append("\n");
    sb.append("    qrSMeasureType: ").append(toIndentedString(qrSMeasureType)).append("\n");
    sb.append("    itemSequence: ").append(toIndentedString(itemSequence)).append("\n");
    sb.append("    testName: ").append(toIndentedString(testName)).append("\n");
    sb.append("    itemText: ").append(toIndentedString(itemText)).append("\n");
    sb.append("    testQuoteSCodelistCCode: ").append(toIndentedString(testQuoteSCodelistCCode)).append("\n");
    sb.append("    testQuoteSTermCCode: ").append(toIndentedString(testQuoteSTermCCode)).append("\n");
    sb.append("    testCodeQuoteSCodelistCCode: ").append(toIndentedString(testCodeQuoteSCodelistCCode)).append("\n");
    sb.append("    testCodeQuoteSTermCCode: ").append(toIndentedString(testCodeQuoteSTermCCode)).append("\n");
    sb.append("    subcategoryQuoteSCodelistCCode: ").append(toIndentedString(subcategoryQuoteSCodelistCCode)).append("\n");
    sb.append("    subcategoryQuoteSTermCCode: ").append(toIndentedString(subcategoryQuoteSTermCCode)).append("\n");
    sb.append("    evaluatorQuoteSCodelistCCode: ").append(toIndentedString(evaluatorQuoteSCodelistCCode)).append("\n");
    sb.append("    evaluatorQuoteSTermCCode: ").append(toIndentedString(evaluatorQuoteSTermCCode)).append("\n");
    sb.append("    freeFormResponseQuoteSDatatype: ").append(toIndentedString(freeFormResponseQuoteSDatatype)).append("\n");
    sb.append("    responseGroup: ").append(toIndentedString(responseGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("QRS Measure Name", "QRS Measure Label", "QRS Measure Type", "Item Sequence", "Test Name", "Item Text", "Test&#39;s Codelist C-Code", "Test&#39;s Term C-Code", "Test Code&#39;s Codelist C-Code", "Test Code&#39;s Term C-Code", "Subcategory&#39;s Codelist C-Code", "Subcategory&#39;s Term C-Code", "Evaluator&#39;s Codelist C-Code", "Evaluator&#39;s Term C-Code", "Free-form Response&#39;s Datatype", "Response Group"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExportQrsCsvItemsRow
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExportQrsCsvItemsRow.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExportQrsCsvItemsRow is not found in the empty JSON string", ExportQrsCsvItemsRow.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExportQrsCsvItemsRow.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExportQrsCsvItemsRow` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("QRS Measure Name") != null && !jsonObj.get("QRS Measure Name").isJsonNull()) && !jsonObj.get("QRS Measure Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `QRS Measure Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("QRS Measure Name").toString()));
      }
      if ((jsonObj.get("QRS Measure Label") != null && !jsonObj.get("QRS Measure Label").isJsonNull()) && !jsonObj.get("QRS Measure Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `QRS Measure Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("QRS Measure Label").toString()));
      }
      if ((jsonObj.get("QRS Measure Type") != null && !jsonObj.get("QRS Measure Type").isJsonNull()) && !jsonObj.get("QRS Measure Type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `QRS Measure Type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("QRS Measure Type").toString()));
      }
      if ((jsonObj.get("Item Sequence") != null && !jsonObj.get("Item Sequence").isJsonNull()) && !jsonObj.get("Item Sequence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Item Sequence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Item Sequence").toString()));
      }
      if ((jsonObj.get("Test Name") != null && !jsonObj.get("Test Name").isJsonNull()) && !jsonObj.get("Test Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Test Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Test Name").toString()));
      }
      if ((jsonObj.get("Item Text") != null && !jsonObj.get("Item Text").isJsonNull()) && !jsonObj.get("Item Text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Item Text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Item Text").toString()));
      }
      if ((jsonObj.get("Test's Codelist C-Code") != null && !jsonObj.get("Test's Codelist C-Code").isJsonNull()) && !jsonObj.get("Test's Codelist C-Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Test's Codelist C-Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Test's Codelist C-Code").toString()));
      }
      if ((jsonObj.get("Test's Term C-Code") != null && !jsonObj.get("Test's Term C-Code").isJsonNull()) && !jsonObj.get("Test's Term C-Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Test's Term C-Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Test's Term C-Code").toString()));
      }
      if ((jsonObj.get("Test Code's Codelist C-Code") != null && !jsonObj.get("Test Code's Codelist C-Code").isJsonNull()) && !jsonObj.get("Test Code's Codelist C-Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Test Code's Codelist C-Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Test Code's Codelist C-Code").toString()));
      }
      if ((jsonObj.get("Test Code's Term C-Code") != null && !jsonObj.get("Test Code's Term C-Code").isJsonNull()) && !jsonObj.get("Test Code's Term C-Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Test Code's Term C-Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Test Code's Term C-Code").toString()));
      }
      if ((jsonObj.get("Subcategory's Codelist C-Code") != null && !jsonObj.get("Subcategory's Codelist C-Code").isJsonNull()) && !jsonObj.get("Subcategory's Codelist C-Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Subcategory's Codelist C-Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Subcategory's Codelist C-Code").toString()));
      }
      if ((jsonObj.get("Subcategory's Term C-Code") != null && !jsonObj.get("Subcategory's Term C-Code").isJsonNull()) && !jsonObj.get("Subcategory's Term C-Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Subcategory's Term C-Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Subcategory's Term C-Code").toString()));
      }
      if ((jsonObj.get("Evaluator's Codelist C-Code") != null && !jsonObj.get("Evaluator's Codelist C-Code").isJsonNull()) && !jsonObj.get("Evaluator's Codelist C-Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Evaluator's Codelist C-Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Evaluator's Codelist C-Code").toString()));
      }
      if ((jsonObj.get("Evaluator's Term C-Code") != null && !jsonObj.get("Evaluator's Term C-Code").isJsonNull()) && !jsonObj.get("Evaluator's Term C-Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Evaluator's Term C-Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Evaluator's Term C-Code").toString()));
      }
      if ((jsonObj.get("Free-form Response's Datatype") != null && !jsonObj.get("Free-form Response's Datatype").isJsonNull()) && !jsonObj.get("Free-form Response's Datatype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Free-form Response's Datatype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Free-form Response's Datatype").toString()));
      }
      if ((jsonObj.get("Response Group") != null && !jsonObj.get("Response Group").isJsonNull()) && !jsonObj.get("Response Group").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Response Group` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Response Group").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExportQrsCsvItemsRow.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExportQrsCsvItemsRow' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExportQrsCsvItemsRow> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExportQrsCsvItemsRow.class));

       return (TypeAdapter<T>) new TypeAdapter<ExportQrsCsvItemsRow>() {
           @Override
           public void write(JsonWriter out, ExportQrsCsvItemsRow value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExportQrsCsvItemsRow read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExportQrsCsvItemsRow given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExportQrsCsvItemsRow
   * @throws IOException if the JSON string is invalid with respect to ExportQrsCsvItemsRow
   */
  public static ExportQrsCsvItemsRow fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExportQrsCsvItemsRow.class);
  }

  /**
   * Convert an instance of ExportQrsCsvItemsRow to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

