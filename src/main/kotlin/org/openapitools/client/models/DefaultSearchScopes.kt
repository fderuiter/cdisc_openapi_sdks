/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * Values: `class`,codelist,conceptId,core,dataStructure,datasetStructure,definition,description,domain,effectiveDate,extensible,href,label,measureType,name,preferredTerm,product,productGroup,registrationStatus,roleDescription,sdtmTarget,simpleDatatype,submissionValue,synonyms,type,uiHref,valueDomain,variableSet,version
 */

@JsonClass(generateAdapter = false)
enum class DefaultSearchScopes(val value: kotlin.String) {

    @Json(name = "class")
    `class`("class"),

    @Json(name = "codelist")
    codelist("codelist"),

    @Json(name = "conceptId")
    conceptId("conceptId"),

    @Json(name = "core")
    core("core"),

    @Json(name = "dataStructure")
    dataStructure("dataStructure"),

    @Json(name = "datasetStructure")
    datasetStructure("datasetStructure"),

    @Json(name = "definition")
    definition("definition"),

    @Json(name = "description")
    description("description"),

    @Json(name = "domain")
    domain("domain"),

    @Json(name = "effectiveDate")
    effectiveDate("effectiveDate"),

    @Json(name = "extensible")
    extensible("extensible"),

    @Json(name = "href")
    href("href"),

    @Json(name = "label")
    label("label"),

    @Json(name = "measureType")
    measureType("measureType"),

    @Json(name = "name")
    name("name"),

    @Json(name = "preferredTerm")
    preferredTerm("preferredTerm"),

    @Json(name = "product")
    product("product"),

    @Json(name = "productGroup")
    productGroup("productGroup"),

    @Json(name = "registrationStatus")
    registrationStatus("registrationStatus"),

    @Json(name = "roleDescription")
    roleDescription("roleDescription"),

    @Json(name = "sdtmTarget")
    sdtmTarget("sdtmTarget"),

    @Json(name = "simpleDatatype")
    simpleDatatype("simpleDatatype"),

    @Json(name = "submissionValue")
    submissionValue("submissionValue"),

    @Json(name = "synonyms")
    synonyms("synonyms"),

    @Json(name = "type")
    type("type"),

    @Json(name = "uiHref")
    uiHref("uiHref"),

    @Json(name = "valueDomain")
    valueDomain("valueDomain"),

    @Json(name = "variableSet")
    variableSet("variableSet"),

    @Json(name = "version")
    version("version");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is DefaultSearchScopes) "$data" else null

        /**
         * Returns a valid [DefaultSearchScopes] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): DefaultSearchScopes? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

