/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param qrsItemTEST 
  * @param qrsItemTESTCD 
  * @param qrsItemEVAL 
  * @param qrsItemSCAT 
  * @param responsegroup 
  */
case class QrsItemLinks(
    qrsItemTEST: Option[RootCtTermRef] = None,
    qrsItemTESTCD: Option[RootCtTermRef] = None,
    qrsItemEVAL: Option[RootCtTermRef] = None,
    qrsItemSCAT: Option[RootCtTermRef] = None,
    responsegroup: Option[QrsResponsegroup] = None
)
  
object QrsItemLinks {
  given encoderQrsItemLinks: Encoder[QrsItemLinks] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.qrsItemTEST.map(v => "qrsItemTEST" -> v.asJson),
        t.qrsItemTESTCD.map(v => "qrsItemTESTCD" -> v.asJson),
        t.qrsItemEVAL.map(v => "qrsItemEVAL" -> v.asJson),
        t.qrsItemSCAT.map(v => "qrsItemSCAT" -> v.asJson),
        t.responsegroup.map(v => "responsegroup" -> v.asJson)
      ).flatten
    }
  }
  given decoderQrsItemLinks: Decoder[QrsItemLinks] = Decoder.instance { c =>
    for {
      qrsItemTEST <- c.downField("qrsItemTEST").as[Option[RootCtTermRef]]
      qrsItemTESTCD <- c.downField("qrsItemTESTCD").as[Option[RootCtTermRef]]
      qrsItemEVAL <- c.downField("qrsItemEVAL").as[Option[RootCtTermRef]]
      qrsItemSCAT <- c.downField("qrsItemSCAT").as[Option[RootCtTermRef]]
      responsegroup <- c.downField("responsegroup").as[Option[QrsResponsegroup]]
    } yield QrsItemLinks(
      qrsItemTEST = qrsItemTEST,
      qrsItemTESTCD = qrsItemTESTCD,
      qrsItemEVAL = qrsItemEVAL,
      qrsItemSCAT = qrsItemSCAT,
      responsegroup = responsegroup
    )
  }
}

