/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param domainVariables 
  * @param scenarioVariables 
  */
case class ExportCdashigTable(
    domainVariables: Option[Seq[ExportCdashigDomainVariablesRow]] = None,
    scenarioVariables: Option[Seq[ExportCdashigScenarioVariablesRow]] = None
)
  
object ExportCdashigTable {
  given encoderExportCdashigTable: Encoder[ExportCdashigTable] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.domainVariables.map(v => "domain-variables" -> v.asJson),
        t.scenarioVariables.map(v => "scenario-variables" -> v.asJson)
      ).flatten
    }
  }
  given decoderExportCdashigTable: Decoder[ExportCdashigTable] = Decoder.instance { c =>
    for {
      domainVariables <- c.downField("domain-variables").as[Option[Seq[ExportCdashigDomainVariablesRow]]]
      scenarioVariables <- c.downField("scenario-variables").as[Option[Seq[ExportCdashigScenarioVariablesRow]]]
    } yield ExportCdashigTable(
      domainVariables = domainVariables,
      scenarioVariables = scenarioVariables
    )
  }
}

