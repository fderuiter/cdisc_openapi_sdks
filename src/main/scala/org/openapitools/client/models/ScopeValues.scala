/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param total 
  * @param hasMore 
  * @param values 
  */
case class ScopeValues(
    total: Option[BigDecimal] = None,
    hasMore: Option[Boolean] = None,
    values: Option[Seq[String]] = None
)
  
object ScopeValues {
  given encoderScopeValues: Encoder[ScopeValues] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.total.map(v => "total" -> v.asJson),
        t.hasMore.map(v => "hasMore" -> v.asJson),
        t.values.map(v => "values" -> v.asJson)
      ).flatten
    }
  }
  given decoderScopeValues: Decoder[ScopeValues] = Decoder.instance { c =>
    for {
      total <- c.downField("total").as[Option[BigDecimal]]
      hasMore <- c.downField("hasMore").as[Option[Boolean]]
      values <- c.downField("values").as[Option[Seq[String]]]
    } yield ScopeValues(
      total = total,
      hasMore = hasMore,
      values = values
    )
  }
}

