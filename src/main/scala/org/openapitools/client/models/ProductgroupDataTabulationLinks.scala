/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param self 
  * @param sdtm 
  * @param sdtmig 
  * @param sendig 
  */
case class ProductgroupDataTabulationLinks(
    self: Option[ProductgroupRef] = None,
    sdtm: Option[Seq[SdtmProductRefElement]] = None,
    sdtmig: Option[Seq[SdtmigProductRefElement]] = None,
    sendig: Option[Seq[SendigProductRefElement]] = None
)
  
object ProductgroupDataTabulationLinks {
  given encoderProductgroupDataTabulationLinks: Encoder[ProductgroupDataTabulationLinks] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.self.map(v => "self" -> v.asJson),
        t.sdtm.map(v => "sdtm" -> v.asJson),
        t.sdtmig.map(v => "sdtmig" -> v.asJson),
        t.sendig.map(v => "sendig" -> v.asJson)
      ).flatten
    }
  }
  given decoderProductgroupDataTabulationLinks: Decoder[ProductgroupDataTabulationLinks] = Decoder.instance { c =>
    for {
      self <- c.downField("self").as[Option[ProductgroupRef]]
      sdtm <- c.downField("sdtm").as[Option[Seq[SdtmProductRefElement]]]
      sdtmig <- c.downField("sdtmig").as[Option[Seq[SdtmigProductRefElement]]]
      sendig <- c.downField("sendig").as[Option[Seq[SendigProductRefElement]]]
    } yield ProductgroupDataTabulationLinks(
      self = self,
      sdtm = sdtm,
      sdtmig = sdtmig,
      sendig = sendig
    )
  }
}

