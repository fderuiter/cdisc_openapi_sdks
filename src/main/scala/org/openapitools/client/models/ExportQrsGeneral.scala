/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param name 
  * @param label 
  * @param effectiveDate 
  * @param description 
  * @param `type` 
  * @param categorysCodelistCCode 
  * @param categorysTermCCode 
  */
case class ExportQrsGeneral(
    name: Option[String] = None,
    label: Option[String] = None,
    effectiveDate: Option[String] = None,
    description: Option[String] = None,
    `type`: Option[String] = None,
    categorysCodelistCCode: Option[String] = None,
    categorysTermCCode: Option[String] = None
)
  
object ExportQrsGeneral {
  given encoderExportQrsGeneral: Encoder[ExportQrsGeneral] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.name.map(v => "Name" -> v.asJson),
        t.label.map(v => "Label" -> v.asJson),
        t.effectiveDate.map(v => "Effective Date" -> v.asJson),
        t.description.map(v => "Description" -> v.asJson),
        t.`type`.map(v => "Type" -> v.asJson),
        t.categorysCodelistCCode.map(v => "Category&#39;s Codelist C-Code" -> v.asJson),
        t.categorysTermCCode.map(v => "Category&#39;s Term C-Code" -> v.asJson)
      ).flatten
    }
  }
  given decoderExportQrsGeneral: Decoder[ExportQrsGeneral] = Decoder.instance { c =>
    for {
      name <- c.downField("Name").as[Option[String]]
      label <- c.downField("Label").as[Option[String]]
      effectiveDate <- c.downField("Effective Date").as[Option[String]]
      description <- c.downField("Description").as[Option[String]]
      `type` <- c.downField("Type").as[Option[String]]
      categorysCodelistCCode <- c.downField("Category&#39;s Codelist C-Code").as[Option[String]]
      categorysTermCCode <- c.downField("Category&#39;s Term C-Code").as[Option[String]]
    } yield ExportQrsGeneral(
      name = name,
      label = label,
      effectiveDate = effectiveDate,
      description = description,
      `type` = `type`,
      categorysCodelistCCode = categorysCodelistCCode,
      categorysTermCCode = categorysTermCCode
    )
  }
}

