/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param self 
  * @param parentProduct 
  * @param domains 
  */
case class CdashProductDomainsLinks(
    self: Option[CdashProductDomainsRef] = None,
    parentProduct: Option[CdashProductRef] = None,
    domains: Option[Seq[CdashDomainRefElement]] = None
)
  
object CdashProductDomainsLinks {
  given encoderCdashProductDomainsLinks: Encoder[CdashProductDomainsLinks] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.self.map(v => "self" -> v.asJson),
        t.parentProduct.map(v => "parentProduct" -> v.asJson),
        t.domains.map(v => "domains" -> v.asJson)
      ).flatten
    }
  }
  given decoderCdashProductDomainsLinks: Decoder[CdashProductDomainsLinks] = Decoder.instance { c =>
    for {
      self <- c.downField("self").as[Option[CdashProductDomainsRef]]
      parentProduct <- c.downField("parentProduct").as[Option[CdashProductRef]]
      domains <- c.downField("domains").as[Option[Seq[CdashDomainRefElement]]]
    } yield CdashProductDomainsLinks(
      self = self,
      parentProduct = parentProduct,
      domains = domains
    )
  }
}

