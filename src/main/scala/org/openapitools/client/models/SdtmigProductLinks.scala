/** CDISC Library API
  * REST API Documentation for CDISC Library in production server
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: cdisc_library_support@cdisc.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param self 
  * @param model 
  * @param priorVersion 
  */
case class SdtmigProductLinks(
    self: Option[SdtmigProductRef] = None,
    model: Option[SdtmProductRef] = None,
    priorVersion: Option[SdtmigProductRef] = None
)
  
object SdtmigProductLinks {
  given encoderSdtmigProductLinks: Encoder[SdtmigProductLinks] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.self.map(v => "self" -> v.asJson),
        t.model.map(v => "model" -> v.asJson),
        t.priorVersion.map(v => "priorVersion" -> v.asJson)
      ).flatten
    }
  }
  given decoderSdtmigProductLinks: Decoder[SdtmigProductLinks] = Decoder.instance { c =>
    for {
      self <- c.downField("self").as[Option[SdtmigProductRef]]
      model <- c.downField("model").as[Option[SdtmProductRef]]
      priorVersion <- c.downField("priorVersion").as[Option[SdtmigProductRef]]
    } yield SdtmigProductLinks(
      self = self,
      model = model,
      priorVersion = priorVersion
    )
  }
}

