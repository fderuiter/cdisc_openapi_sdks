/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.CdashClass
import org.openapitools.client.model.CdashClassDomains
import org.openapitools.client.model.CdashClassField
import org.openapitools.client.model.CdashDomain
import org.openapitools.client.model.CdashDomainField
import org.openapitools.client.model.CdashDomainFields
import org.openapitools.client.model.CdashProduct
import org.openapitools.client.model.CdashProductClasses
import org.openapitools.client.model.CdashProductDomains
import org.openapitools.client.model.DefaultErrorResponse
import org.openapitools.client.model.ExportCdashTable
import org.openapitools.client.model.RootCdashClassField
import org.openapitools.client.model.RootCdashDomainField
import org.openapitools.client.model.XmlCdashClass
import org.openapitools.client.model.XmlCdashClassDomains
import org.openapitools.client.model.XmlCdashClassField
import org.openapitools.client.model.XmlCdashDomain
import org.openapitools.client.model.XmlCdashDomainField
import org.openapitools.client.model.XmlCdashDomainFields
import org.openapitools.client.model.XmlCdashProduct
import org.openapitools.client.model.XmlCdashProductClasses
import org.openapitools.client.model.XmlCdashProductDomains
import org.openapitools.client.model.XmlRootCdashClassField
import org.openapitools.client.model.XmlRootCdashDomainField
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object ClinicalDataAcquisitionStandardsHarmonizationCDASHApi {

  def apply(baseUrl: String = "https://library.cdisc.org/api") = new ClinicalDataAcquisitionStandardsHarmonizationCDASHApi(baseUrl)
}

class ClinicalDataAcquisitionStandardsHarmonizationCDASHApi(baseUrl: String) {

  /**
   * Get CDASH Class Domain List
   * 
   * Expected answers:
   *   code 200 : CdashClassDomains (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` CDASH Class Identifier
   */
  def mdrCdashVersionClassesClassDomainsGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashClassDomains] =
    ApiRequest[CdashClassDomains](ApiMethods.GET, baseUrl, "/mdr/cdash/{version}/classes/{class}/domains", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[CdashClassDomains](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASH Class Field
   * 
   * Expected answers:
   *   code 200 : CdashClassField (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` CDASH Class Identifier
   * @param field CDASH Field Identifier
   */
  def mdrCdashVersionClassesClassFieldsFieldGet(version: String, `class`: String, field: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashClassField] =
    ApiRequest[CdashClassField](ApiMethods.GET, baseUrl, "/mdr/cdash/{version}/classes/{class}/fields/{field}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withPathParam("field", field)
      .withSuccessResponse[CdashClassField](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASH Class
   * 
   * Expected answers:
   *   code 200 : CdashClass (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` CDASH Class Identifier
   */
  def mdrCdashVersionClassesClassGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashClass] =
    ApiRequest[CdashClass](ApiMethods.GET, baseUrl, "/mdr/cdash/{version}/classes/{class}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[CdashClass](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASH Class List
   * 
   * Expected answers:
   *   code 200 : CdashProductClasses (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrCdashVersionClassesGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashProductClasses] =
    ApiRequest[CdashProductClasses](ApiMethods.GET, baseUrl, "/mdr/cdash/{version}/classes", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[CdashProductClasses](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASH Domain Field
   * 
   * Expected answers:
   *   code 200 : CdashDomainField (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param domain CDASH Domain Identifier
   * @param field CDASH Field Identifier
   */
  def mdrCdashVersionDomainsDomainFieldsFieldGet(version: String, domain: String, field: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashDomainField] =
    ApiRequest[CdashDomainField](ApiMethods.GET, baseUrl, "/mdr/cdash/{version}/domains/{domain}/fields/{field}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("domain", domain)
      .withPathParam("field", field)
      .withSuccessResponse[CdashDomainField](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASH Domain Field List
   * 
   * Expected answers:
   *   code 200 : CdashDomainFields (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param domain CDASH Domain Identifier
   */
  def mdrCdashVersionDomainsDomainFieldsGet(version: String, domain: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashDomainFields] =
    ApiRequest[CdashDomainFields](ApiMethods.GET, baseUrl, "/mdr/cdash/{version}/domains/{domain}/fields", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("domain", domain)
      .withSuccessResponse[CdashDomainFields](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASH Domain
   * 
   * Expected answers:
   *   code 200 : CdashDomain (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param domain CDASH Domain Identifier
   */
  def mdrCdashVersionDomainsDomainGet(version: String, domain: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashDomain] =
    ApiRequest[CdashDomain](ApiMethods.GET, baseUrl, "/mdr/cdash/{version}/domains/{domain}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("domain", domain)
      .withSuccessResponse[CdashDomain](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASH Domain List
   * 
   * Expected answers:
   *   code 200 : CdashProductDomains (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrCdashVersionDomainsGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashProductDomains] =
    ApiRequest[CdashProductDomains](ApiMethods.GET, baseUrl, "/mdr/cdash/{version}/domains", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[CdashProductDomains](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASH Product
   * 
   * Expected answers:
   *   code 200 : CdashProduct (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrCdashVersionGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashProduct] =
    ApiRequest[CdashProduct](ApiMethods.GET, baseUrl, "/mdr/cdash/{version}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[CdashProduct](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get Root CDASH Class Field
   * 
   * Expected answers:
   *   code 200 : RootCdashClassField (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param `class` CDASH Class Identifier
   * @param field CDASH Field Identifier
   */
  def mdrRootCdashClassesClassFieldsFieldGet(`class`: String, field: String)(implicit basicAuth: BasicCredentials): ApiRequest[RootCdashClassField] =
    ApiRequest[RootCdashClassField](ApiMethods.GET, baseUrl, "/mdr/root/cdash/classes/{class}/fields/{field}", "application/json")
      .withCredentials(basicAuth).withPathParam("class", `class`)
      .withPathParam("field", field)
      .withSuccessResponse[RootCdashClassField](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get Root CDASH Domain Field
   * 
   * Expected answers:
   *   code 200 : RootCdashDomainField (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param domain CDASH Domain Identifier
   * @param field CDASH Field Identifier
   */
  def mdrRootCdashDomainsDomainFieldsFieldGet(domain: String, field: String)(implicit basicAuth: BasicCredentials): ApiRequest[RootCdashDomainField] =
    ApiRequest[RootCdashDomainField](ApiMethods.GET, baseUrl, "/mdr/root/cdash/domains/{domain}/fields/{field}", "application/json")
      .withCredentials(basicAuth).withPathParam("domain", domain)
      .withPathParam("field", field)
      .withSuccessResponse[RootCdashDomainField](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      



}

