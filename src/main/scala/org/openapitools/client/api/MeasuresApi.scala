/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.DefaultErrorResponse
import org.openapitools.client.model.ExportQrsItemsTable
import org.openapitools.client.model.ExportQrsWorkbook
import org.openapitools.client.model.QrsItem
import org.openapitools.client.model.QrsItems
import org.openapitools.client.model.QrsProduct
import org.openapitools.client.model.QrsResponsegroup
import org.openapitools.client.model.QrsResponsegroups
import org.openapitools.client.model.XmlQrsItem
import org.openapitools.client.model.XmlQrsItems
import org.openapitools.client.model.XmlQrsProduct
import org.openapitools.client.model.XmlQrsResponsegroup
import org.openapitools.client.model.XmlQrsResponsegroups
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object MeasuresApi {

  def apply(baseUrl: String = "https://library.cdisc.org/api") = new MeasuresApi(baseUrl)
}

class MeasuresApi(baseUrl: String) {

  /**
   * Get QRS Product
   * 
   * Expected answers:
   *   code 200 : QrsProduct (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param measure QRS Measure Identifier
   * @param version CDISC Library Product Version
   */
  def mdrQrsMeasureVersionGet(measure: String, version: String)(implicit basicAuth: BasicCredentials): ApiRequest[QrsProduct] =
    ApiRequest[QrsProduct](ApiMethods.GET, baseUrl, "/mdr/qrs/{measure}/{version}", "application/json")
      .withCredentials(basicAuth).withPathParam("measure", measure)
      .withPathParam("version", version)
      .withSuccessResponse[QrsProduct](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get QRS Item List
   * 
   * Expected answers:
   *   code 200 : QrsItems (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param measure QRS Measure Identifier
   * @param version CDISC Library Product Version
   */
  def mdrQrsMeasureVersionItemsGet(measure: String, version: String)(implicit basicAuth: BasicCredentials): ApiRequest[QrsItems] =
    ApiRequest[QrsItems](ApiMethods.GET, baseUrl, "/mdr/qrs/{measure}/{version}/items", "application/json")
      .withCredentials(basicAuth).withPathParam("measure", measure)
      .withPathParam("version", version)
      .withSuccessResponse[QrsItems](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get QRS Item
   * 
   * Expected answers:
   *   code 200 : QrsItem (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param measure QRS Measure Identifier
   * @param version CDISC Library Product Version
   * @param item QRS Measure Item Identifier
   */
  def mdrQrsMeasureVersionItemsItemGet(measure: String, version: String, item: String)(implicit basicAuth: BasicCredentials): ApiRequest[QrsItem] =
    ApiRequest[QrsItem](ApiMethods.GET, baseUrl, "/mdr/qrs/{measure}/{version}/items/{item}", "application/json")
      .withCredentials(basicAuth).withPathParam("measure", measure)
      .withPathParam("version", version)
      .withPathParam("item", item)
      .withSuccessResponse[QrsItem](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get QRS Response Group List
   * 
   * Expected answers:
   *   code 200 : QrsResponsegroups (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param measure QRS Measure Identifier
   * @param version CDISC Library Product Version
   */
  def mdrQrsMeasureVersionResponsegroupsGet(measure: String, version: String)(implicit basicAuth: BasicCredentials): ApiRequest[QrsResponsegroups] =
    ApiRequest[QrsResponsegroups](ApiMethods.GET, baseUrl, "/mdr/qrs/{measure}/{version}/responsegroups", "application/json")
      .withCredentials(basicAuth).withPathParam("measure", measure)
      .withPathParam("version", version)
      .withSuccessResponse[QrsResponsegroups](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get QRS Response Group
   * 
   * Expected answers:
   *   code 200 : QrsResponsegroup (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param measure QRS Measure Identifier
   * @param version CDISC Library Product Version
   * @param responsegroup QRS Measure's Response Group Identifier
   */
  def mdrQrsMeasureVersionResponsegroupsResponsegroupGet(measure: String, version: String, responsegroup: String)(implicit basicAuth: BasicCredentials): ApiRequest[QrsResponsegroup] =
    ApiRequest[QrsResponsegroup](ApiMethods.GET, baseUrl, "/mdr/qrs/{measure}/{version}/responsegroups/{responsegroup}", "application/json")
      .withCredentials(basicAuth).withPathParam("measure", measure)
      .withPathParam("version", version)
      .withPathParam("responsegroup", responsegroup)
      .withSuccessResponse[QrsResponsegroup](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      



}

