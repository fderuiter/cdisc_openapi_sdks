/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.CdashigClass
import org.openapitools.client.model.CdashigClassDomains
import org.openapitools.client.model.CdashigClassScenarios
import org.openapitools.client.model.CdashigDomain
import org.openapitools.client.model.CdashigDomainField
import org.openapitools.client.model.CdashigDomainFields
import org.openapitools.client.model.CdashigProduct
import org.openapitools.client.model.CdashigProductClasses
import org.openapitools.client.model.CdashigProductDomains
import org.openapitools.client.model.CdashigProductScenarios
import org.openapitools.client.model.CdashigScenario
import org.openapitools.client.model.CdashigScenarioField
import org.openapitools.client.model.CdashigScenarioFields
import org.openapitools.client.model.DefaultErrorResponse
import org.openapitools.client.model.ExportCdashigTable
import org.openapitools.client.model.RootCdashigDomainField
import org.openapitools.client.model.RootCdashigScenarioField
import org.openapitools.client.model.XmlCdashigClass
import org.openapitools.client.model.XmlCdashigClassDomains
import org.openapitools.client.model.XmlCdashigClassScenarios
import org.openapitools.client.model.XmlCdashigDomain
import org.openapitools.client.model.XmlCdashigDomainField
import org.openapitools.client.model.XmlCdashigDomainFields
import org.openapitools.client.model.XmlCdashigProduct
import org.openapitools.client.model.XmlCdashigProductClasses
import org.openapitools.client.model.XmlCdashigProductDomains
import org.openapitools.client.model.XmlCdashigProductScenarios
import org.openapitools.client.model.XmlCdashigScenario
import org.openapitools.client.model.XmlCdashigScenarioField
import org.openapitools.client.model.XmlCdashigScenarioFields
import org.openapitools.client.model.XmlRootCdashigDomainField
import org.openapitools.client.model.XmlRootCdashigScenarioField
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object CDASHImplementationGuideCDASHIGApi {

  def apply(baseUrl: String = "https://library.cdisc.org/api") = new CDASHImplementationGuideCDASHIGApi(baseUrl)
}

class CDASHImplementationGuideCDASHIGApi(baseUrl: String) {

  /**
   * Get CDASHIG Class Domain List
   * 
   * Expected answers:
   *   code 200 : CdashigClassDomains (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` CDASHIG Class Identifier
   */
  def mdrCdashigVersionClassesClassDomainsGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigClassDomains] =
    ApiRequest[CdashigClassDomains](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/classes/{class}/domains", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[CdashigClassDomains](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Class
   * 
   * Expected answers:
   *   code 200 : CdashigClass (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` CDASHIG Class Identifier
   */
  def mdrCdashigVersionClassesClassGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigClass] =
    ApiRequest[CdashigClass](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/classes/{class}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[CdashigClass](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Class Scenario List
   * 
   * Expected answers:
   *   code 200 : CdashigClassScenarios (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param `class` CDASHIG Class Identifier
   */
  def mdrCdashigVersionClassesClassScenariosGet(version: String, `class`: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigClassScenarios] =
    ApiRequest[CdashigClassScenarios](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/classes/{class}/scenarios", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("class", `class`)
      .withSuccessResponse[CdashigClassScenarios](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Class List
   * 
   * Expected answers:
   *   code 200 : CdashigProductClasses (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrCdashigVersionClassesGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigProductClasses] =
    ApiRequest[CdashigProductClasses](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/classes", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[CdashigProductClasses](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Domain Field
   * 
   * Expected answers:
   *   code 200 : CdashigDomainField (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param domain CDASHIG Domain Identifier
   * @param field CDASHIG Field Identifier
   */
  def mdrCdashigVersionDomainsDomainFieldsFieldGet(version: String, domain: String, field: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigDomainField] =
    ApiRequest[CdashigDomainField](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/domains/{domain}/fields/{field}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("domain", domain)
      .withPathParam("field", field)
      .withSuccessResponse[CdashigDomainField](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Domain Field List
   * 
   * Expected answers:
   *   code 200 : CdashigDomainFields (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param domain CDASHIG Domain Identifier
   */
  def mdrCdashigVersionDomainsDomainFieldsGet(version: String, domain: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigDomainFields] =
    ApiRequest[CdashigDomainFields](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/domains/{domain}/fields", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("domain", domain)
      .withSuccessResponse[CdashigDomainFields](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Domain
   * 
   * Expected answers:
   *   code 200 : CdashigDomain (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param domain CDASHIG Domain Identifier
   */
  def mdrCdashigVersionDomainsDomainGet(version: String, domain: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigDomain] =
    ApiRequest[CdashigDomain](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/domains/{domain}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("domain", domain)
      .withSuccessResponse[CdashigDomain](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Domain List
   * 
   * Expected answers:
   *   code 200 : CdashigProductDomains (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrCdashigVersionDomainsGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigProductDomains] =
    ApiRequest[CdashigProductDomains](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/domains", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[CdashigProductDomains](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Product
   * 
   * Expected answers:
   *   code 200 : CdashigProduct (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrCdashigVersionGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigProduct] =
    ApiRequest[CdashigProduct](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[CdashigProduct](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Scenario Field
   * 
   * Expected answers:
   *   code 200 : CdashigScenarioField (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param domain CDASHIG Domain Identifier
   * @param scenario CDASHIG Scenario Identifier
   * @param field CDASHIG Field Identifier
   */
  def mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet(version: String, domain: String, scenario: String, field: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigScenarioField] =
    ApiRequest[CdashigScenarioField](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/scenarios/{domain}.{scenario}/fields/{field}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("domain", domain)
      .withPathParam("scenario", scenario)
      .withPathParam("field", field)
      .withSuccessResponse[CdashigScenarioField](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Scenario Field List
   * 
   * Expected answers:
   *   code 200 : CdashigScenarioFields (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param domain CDASHIG Domain Identifier
   * @param scenario CDASHIG Scenario Identifier
   */
  def mdrCdashigVersionScenariosDomainScenarioFieldsGet(version: String, domain: String, scenario: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigScenarioFields] =
    ApiRequest[CdashigScenarioFields](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/scenarios/{domain}.{scenario}/fields", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("domain", domain)
      .withPathParam("scenario", scenario)
      .withSuccessResponse[CdashigScenarioFields](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Scenario
   * 
   * Expected answers:
   *   code 200 : CdashigScenario (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   * @param domain CDASHIG Domain Identifier
   * @param scenario CDASHIG Scenario Identifier
   */
  def mdrCdashigVersionScenariosDomainScenarioGet(version: String, domain: String, scenario: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigScenario] =
    ApiRequest[CdashigScenario](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/scenarios/{domain}.{scenario}", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withPathParam("domain", domain)
      .withPathParam("scenario", scenario)
      .withSuccessResponse[CdashigScenario](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get CDASHIG Scenario List
   * 
   * Expected answers:
   *   code 200 : CdashigProductScenarios (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param version CDISC Library Product Version
   */
  def mdrCdashigVersionScenariosGet(version: String)(implicit basicAuth: BasicCredentials): ApiRequest[CdashigProductScenarios] =
    ApiRequest[CdashigProductScenarios](ApiMethods.GET, baseUrl, "/mdr/cdashig/{version}/scenarios", "application/json")
      .withCredentials(basicAuth).withPathParam("version", version)
      .withSuccessResponse[CdashigProductScenarios](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get Root CDASHIG Domain Field
   * 
   * Expected answers:
   *   code 200 : RootCdashigDomainField (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param domain CDASHIG Domain Identifier
   * @param field CDASHIG Field Identifier
   */
  def mdrRootCdashigDomainsDomainFieldsFieldGet(domain: String, field: String)(implicit basicAuth: BasicCredentials): ApiRequest[RootCdashigDomainField] =
    ApiRequest[RootCdashigDomainField](ApiMethods.GET, baseUrl, "/mdr/root/cdashig/domains/{domain}/fields/{field}", "application/json")
      .withCredentials(basicAuth).withPathParam("domain", domain)
      .withPathParam("field", field)
      .withSuccessResponse[RootCdashigDomainField](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      

  /**
   * Get Root CDASHIG Scenario Field
   * 
   * Expected answers:
   *   code 200 : RootCdashigScenarioField (OK)
   *   code 400 : DefaultErrorResponse (Bad Request)
   *   code 401 : DefaultErrorResponse (Unauthorized)
   *   code 403 : DefaultErrorResponse (Forbidden)
   *   code 404 : DefaultErrorResponse (Not Found)
   *   code 405 : DefaultErrorResponse (Method Not Allowed)
   *   code 406 : DefaultErrorResponse (Not Acceptable)
   *   code 500 : DefaultErrorResponse (Internal Server Error)
   *   code 503 : DefaultErrorResponse (Service Unavailable)
   *   code 504 : DefaultErrorResponse (Gateway Timeout Error)
   * 
   * Available security schemes:
   *   basicAuth (http)
   * 
   * @param domain CDASHIG Domain Identifier
   * @param scenario CDASHIG Scenario Identifier
   * @param field CDASHIG Field Identifier
   */
  def mdrRootCdashigScenariosDomainScenarioFieldsFieldGet(domain: String, scenario: String, field: String)(implicit basicAuth: BasicCredentials): ApiRequest[RootCdashigScenarioField] =
    ApiRequest[RootCdashigScenarioField](ApiMethods.GET, baseUrl, "/mdr/root/cdashig/scenarios/{domain}.{scenario}/fields/{field}", "application/json")
      .withCredentials(basicAuth).withPathParam("domain", domain)
      .withPathParam("scenario", scenario)
      .withPathParam("field", field)
      .withSuccessResponse[RootCdashigScenarioField](200)
      .withErrorResponse[DefaultErrorResponse](400)
      .withErrorResponse[DefaultErrorResponse](401)
      .withErrorResponse[DefaultErrorResponse](403)
      .withErrorResponse[DefaultErrorResponse](404)
      .withErrorResponse[DefaultErrorResponse](405)
      .withErrorResponse[DefaultErrorResponse](406)
      .withErrorResponse[DefaultErrorResponse](500)
      .withErrorResponse[DefaultErrorResponse](503)
      .withErrorResponse[DefaultErrorResponse](504)
      



}

