/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DefaultErrorResponse.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_DefaultErrorResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_DefaultErrorResponse_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class  DefaultErrorResponse
    : public ModelBase
{
public:
    DefaultErrorResponse();
    virtual ~DefaultErrorResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// DefaultErrorResponse members


    /// <summary>
    /// HTTP Status Code
    /// </summary>
    utility::string_t getStatusCode() const;
    bool statusCodeIsSet() const;
    void unsetStatusCode();
    void setStatusCode(const utility::string_t& value);

    /// <summary>
    /// HTTP Reason Phrase
    /// </summary>
    utility::string_t getReasonPhrase() const;
    bool reasonPhraseIsSet() const;
    void unsetReasonPhrase();
    void setReasonPhrase(const utility::string_t& value);

    /// <summary>
    /// User Error Message
    /// </summary>
    utility::string_t getUserMessage() const;
    bool userMessageIsSet() const;
    void unsetUserMessage();
    void setUserMessage(const utility::string_t& value);

    /// <summary>
    /// Admin Error Message
    /// </summary>
    utility::string_t getAdminMessage() const;
    bool adminMessageIsSet() const;
    void unsetAdminMessage();
    void setAdminMessage(const utility::string_t& value);


protected:
    utility::string_t m_StatusCode;
    bool m_StatusCodeIsSet;

    utility::string_t m_ReasonPhrase;
    bool m_ReasonPhraseIsSet;

    utility::string_t m_UserMessage;
    bool m_UserMessageIsSet;

    utility::string_t m_AdminMessage;
    bool m_AdminMessageIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_DefaultErrorResponse_H_ */
