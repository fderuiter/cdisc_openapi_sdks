/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CtTerm.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CtTerm_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CtTerm_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CtTermLinks.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CtTermLinks;


class  CtTerm
    : public ModelBase
{
public:
    CtTerm();
    virtual ~CtTerm();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// CtTerm members


    utility::string_t getConceptId() const;
    bool conceptIdIsSet() const;
    void unsetConceptId();
    void setConceptId(const utility::string_t& value);

    utility::string_t getSubmissionValue() const;
    bool submissionValueIsSet() const;
    void unsetSubmissionValue();
    void setSubmissionValue(const utility::string_t& value);

    utility::string_t getDefinition() const;
    bool definitionIsSet() const;
    void unsetDefinition();
    void setDefinition(const utility::string_t& value);

    utility::string_t getPreferredTerm() const;
    bool preferredTermIsSet() const;
    void unsetPreferredTerm();
    void setPreferredTerm(const utility::string_t& value);

    std::vector<utility::string_t> getSynonyms() const;
    bool synonymsIsSet() const;
    void unsetSynonyms();
    void setSynonyms(const std::vector<utility::string_t>& value);

    std::shared_ptr<CtTermLinks> getLinks() const;
    bool linksIsSet() const;
    void unset_links();
    void setLinks(const std::shared_ptr<CtTermLinks>& value);


protected:
    utility::string_t m_ConceptId;
    bool m_ConceptIdIsSet;

    utility::string_t m_SubmissionValue;
    bool m_SubmissionValueIsSet;

    utility::string_t m_Definition;
    bool m_DefinitionIsSet;

    utility::string_t m_PreferredTerm;
    bool m_PreferredTermIsSet;

    std::vector<utility::string_t> m_Synonyms;
    bool m_SynonymsIsSet;

    std::shared_ptr<CtTermLinks> m__links;
    bool m__linksIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CtTerm_H_ */
