/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ExportQrsWorkbookItemsRow.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ExportQrsWorkbookItemsRow_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ExportQrsWorkbookItemsRow_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class  ExportQrsWorkbookItemsRow
    : public ModelBase
{
public:
    ExportQrsWorkbookItemsRow();
    virtual ~ExportQrsWorkbookItemsRow();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// ExportQrsWorkbookItemsRow members


    utility::string_t getItemSequence() const;
    bool itemSequenceIsSet() const;
    void unsetItem_Sequence();
    void setItemSequence(const utility::string_t& value);

    utility::string_t getTestName() const;
    bool testNameIsSet() const;
    void unsetTest_Name();
    void setTestName(const utility::string_t& value);

    utility::string_t getItemText() const;
    bool itemTextIsSet() const;
    void unsetItem_Text();
    void setItemText(const utility::string_t& value);

    utility::string_t getTestsCodelistCCode() const;
    bool testsCodelistCCodeIsSet() const;
    void unsetTests_Codelist_C_Code();
    void setTestsCodelistCCode(const utility::string_t& value);

    utility::string_t getTestsTermCCode() const;
    bool testsTermCCodeIsSet() const;
    void unsetTests_Term_C_Code();
    void setTestsTermCCode(const utility::string_t& value);

    utility::string_t getTestCodesCodelistCCode() const;
    bool testCodesCodelistCCodeIsSet() const;
    void unsetTest_Codes_Codelist_C_Code();
    void setTestCodesCodelistCCode(const utility::string_t& value);

    utility::string_t getTestCodesTermCCode() const;
    bool testCodesTermCCodeIsSet() const;
    void unsetTest_Codes_Term_C_Code();
    void setTestCodesTermCCode(const utility::string_t& value);

    utility::string_t getSubcategorysCodelistCCode() const;
    bool subcategorysCodelistCCodeIsSet() const;
    void unsetSubcategorys_Codelist_C_Code();
    void setSubcategorysCodelistCCode(const utility::string_t& value);

    utility::string_t getSubcategorysTermCCode() const;
    bool subcategorysTermCCodeIsSet() const;
    void unsetSubcategorys_Term_C_Code();
    void setSubcategorysTermCCode(const utility::string_t& value);

    utility::string_t getEvaluatorsCodelistCCode() const;
    bool evaluatorsCodelistCCodeIsSet() const;
    void unsetEvaluators_Codelist_C_Code();
    void setEvaluatorsCodelistCCode(const utility::string_t& value);

    utility::string_t getEvaluatorsTermCCode() const;
    bool evaluatorsTermCCodeIsSet() const;
    void unsetEvaluators_Term_C_Code();
    void setEvaluatorsTermCCode(const utility::string_t& value);

    utility::string_t getFreeFormResponsesDatatype() const;
    bool freeFormResponsesDatatypeIsSet() const;
    void unsetFree_form_Responses_Datatype();
    void setFreeFormResponsesDatatype(const utility::string_t& value);

    utility::string_t getResponseGroup() const;
    bool responseGroupIsSet() const;
    void unsetResponse_Group();
    void setResponseGroup(const utility::string_t& value);


protected:
    utility::string_t m_Item_Sequence;
    bool m_Item_SequenceIsSet;

    utility::string_t m_Test_Name;
    bool m_Test_NameIsSet;

    utility::string_t m_Item_Text;
    bool m_Item_TextIsSet;

    utility::string_t m_Tests_Codelist_C_Code;
    bool m_Tests_Codelist_C_CodeIsSet;

    utility::string_t m_Tests_Term_C_Code;
    bool m_Tests_Term_C_CodeIsSet;

    utility::string_t m_Test_Codes_Codelist_C_Code;
    bool m_Test_Codes_Codelist_C_CodeIsSet;

    utility::string_t m_Test_Codes_Term_C_Code;
    bool m_Test_Codes_Term_C_CodeIsSet;

    utility::string_t m_Subcategorys_Codelist_C_Code;
    bool m_Subcategorys_Codelist_C_CodeIsSet;

    utility::string_t m_Subcategorys_Term_C_Code;
    bool m_Subcategorys_Term_C_CodeIsSet;

    utility::string_t m_Evaluators_Codelist_C_Code;
    bool m_Evaluators_Codelist_C_CodeIsSet;

    utility::string_t m_Evaluators_Term_C_Code;
    bool m_Evaluators_Term_C_CodeIsSet;

    utility::string_t m_Free_form_Responses_Datatype;
    bool m_Free_form_Responses_DatatypeIsSet;

    utility::string_t m_Response_Group;
    bool m_Response_GroupIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ExportQrsWorkbookItemsRow_H_ */
