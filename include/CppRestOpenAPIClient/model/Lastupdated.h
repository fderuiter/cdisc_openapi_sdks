/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.16.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Lastupdated.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Lastupdated_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Lastupdated_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/LastupdatedLinks.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class LastupdatedLinks;


class  Lastupdated
    : public ModelBase
{
public:
    Lastupdated();
    virtual ~Lastupdated();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// Lastupdated members


    std::shared_ptr<LastupdatedLinks> getLinks() const;
    bool linksIsSet() const;
    void unset_links();
    void setLinks(const std::shared_ptr<LastupdatedLinks>& value);

    utility::string_t getOverall() const;
    bool overallIsSet() const;
    void unsetOverall();
    void setOverall(const utility::string_t& value);

    utility::string_t getDataAnalysis() const;
    bool dataAnalysisIsSet() const;
    void unsetData_analysis();
    void setDataAnalysis(const utility::string_t& value);

    utility::string_t getDataCollection() const;
    bool dataCollectionIsSet() const;
    void unsetData_collection();
    void setDataCollection(const utility::string_t& value);

    utility::string_t getDataTabulation() const;
    bool dataTabulationIsSet() const;
    void unsetData_tabulation();
    void setDataTabulation(const utility::string_t& value);

    utility::string_t getMeasure() const;
    bool measureIsSet() const;
    void unsetMeasure();
    void setMeasure(const utility::string_t& value);

    utility::string_t getTerminology() const;
    bool terminologyIsSet() const;
    void unsetTerminology();
    void setTerminology(const utility::string_t& value);


protected:
    std::shared_ptr<LastupdatedLinks> m__links;
    bool m__linksIsSet;

    utility::string_t m_Overall;
    bool m_OverallIsSet;

    utility::string_t m_Data_analysis;
    bool m_Data_analysisIsSet;

    utility::string_t m_Data_collection;
    bool m_Data_collectionIsSet;

    utility::string_t m_Data_tabulation;
    bool m_Data_tabulationIsSet;

    utility::string_t m_Measure;
    bool m_MeasureIsSet;

    utility::string_t m_Terminology;
    bool m_TerminologyIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Lastupdated_H_ */
