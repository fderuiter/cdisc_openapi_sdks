/**
* CDISC Library API
* REST API Documentation for CDISC Library in production server
*
* The version of the OpenAPI document: 1.1.0
* Contact: cdisc_library_support@cdisc.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SearchesApi.h
 *
 * 
 */

#ifndef SearchesApi_H_
#define SearchesApi_H_



#include "oatpp/web/client/ApiClient.hpp"
#include "oatpp/web/protocol/http/outgoing/MultipartBody.hpp"
#include "oatpp/core/macro/codegen.hpp"

#include "DefaultErrorResponse.hpp"
#include "DefaultSearchResponse.hpp"
#include "DefaultSearchScopes.hpp"
#include "ScopeValues.hpp"
#include "_mdr_search_scopes_get_200_response.hpp"

#include OATPP_CODEGEN_BEGIN(ApiClient) ///< Begin code-gen section

namespace org::openapitools::client::api
{

class SearchesApi : public oatpp::web::client::ApiClient {
public:

  API_CLIENT_INIT(SearchesApi)

  /// <summary>
  /// 
  /// </summary>
  /// <remarks>
  /// Get Search Results Across CDISC Library
  /// </remarks>
  /// <param name="q">Search Term Expression</param>
  /// <param name="highlight">Search Highlight Expression (optional, default to &quot;&quot;)</param>
  /// <param name="start">Initial Search Result Index (optional, default to 0)</param>
  /// <param name="pageSize">Number of Search Results to Return (optional, default to 100)</param>
  /// <param name="r_class">Limit Search by Setting Scope to Class (optional, default to &quot;&quot;)</param>
  /// <param name="codelist">Limit Search by Setting Scope to Codelist (optional, default to &quot;&quot;)</param>
  /// <param name="conceptId">Limit Search by Setting Scope to Concept ID (optional, default to &quot;&quot;)</param>
  /// <param name="core">Limit Search by Setting Scope to Core (optional, default to &quot;&quot;)</param>
  /// <param name="dataStructure">Limit Search by Setting Scope to Data Structure (optional, default to &quot;&quot;)</param>
  /// <param name="datasetStructure">Limit Search by Setting Scope to Dataset Structure (optional, default to &quot;&quot;)</param>
  /// <param name="definition">Limit Search by Setting Scope to Definition (optional, default to &quot;&quot;)</param>
  /// <param name="description">Limit Search by Setting Scope to Description (optional, default to &quot;&quot;)</param>
  /// <param name="domain">Limit Search by Setting Scope to Domain (optional, default to &quot;&quot;)</param>
  /// <param name="effectiveDate">Limit Search by Setting Scope to Effective Date (optional, default to &quot;&quot;)</param>
  /// <param name="extensible">Limit Search by Setting Scope to Extensible (optional, default to &quot;&quot;)</param>
  /// <param name="href">Limit Search by Setting Scope to Href (optional, default to &quot;&quot;)</param>
  /// <param name="label">Limit Search by Setting Scope to Label (optional, default to &quot;&quot;)</param>
  /// <param name="measureType">SLimit Search by Setting Scope to Measure Type (optional, default to &quot;&quot;)</param>
  /// <param name="name">Limit Search by Setting Scope to Name (optional, default to &quot;&quot;)</param>
  /// <param name="preferredTerm">Limit Search by Setting Scope to Preferred Term (optional, default to &quot;&quot;)</param>
  /// <param name="product">Limit Search by Setting Scope to Product (optional, default to &quot;&quot;)</param>
  /// <param name="productGroup">Limit Search by Setting Scope to Product Group (optional, default to &quot;&quot;)</param>
  /// <param name="registrationStatus">Limit Search by Setting Scope to Registration Status (optional, default to &quot;&quot;)</param>
  /// <param name="roleDescription">Limit Search by Setting Scope to Role Description (optional, default to &quot;&quot;)</param>
  /// <param name="sdtmTarget">Limit Search by Setting Scope to SDTM Target (optional, default to &quot;&quot;)</param>
  /// <param name="simpleDatatype">Limit Search by Setting Scope to Simple Datatype (optional, default to &quot;&quot;)</param>
  /// <param name="submissionValue">Limit Search by Setting Scope to Submission Value (optional, default to &quot;&quot;)</param>
  /// <param name="synonyms">Limit Search by Setting Scope to Synonyms (optional, default to &quot;&quot;)</param>
  /// <param name="type">Limit Search by Setting Scope to Type (optional, default to &quot;&quot;)</param>
  /// <param name="uiHref">Limit Search by Setting Scope to UI Href (optional, default to &quot;&quot;)</param>
  /// <param name="valueDomain">Limit Search by Setting Scope to Value Domain (optional, default to &quot;&quot;)</param>
  /// <param name="variableSet">Limit Search by Setting Scope to Variable Set (optional, default to &quot;&quot;)</param>
  /// <param name="version">Limit Search by Setting Scope to Version (optional, default to &quot;&quot;)</param>
  API_CALL("GET", "/mdr/search", mdr_search_get, QUERY(oatpp::String, q), QUERY(oatpp::String, highlight), QUERY(oatpp::Float64, start), QUERY(oatpp::Float64, pageSize), QUERY(oatpp::String, r_class), QUERY(oatpp::String, codelist), QUERY(oatpp::String, conceptId), QUERY(oatpp::String, core), QUERY(oatpp::String, dataStructure), QUERY(oatpp::String, datasetStructure), QUERY(oatpp::String, definition), QUERY(oatpp::String, description), QUERY(oatpp::String, domain), QUERY(oatpp::String, effectiveDate), QUERY(oatpp::String, extensible), QUERY(oatpp::String, href), QUERY(oatpp::String, label), QUERY(oatpp::String, measureType), QUERY(oatpp::String, name), QUERY(oatpp::String, preferredTerm), QUERY(oatpp::String, product), QUERY(oatpp::String, productGroup), QUERY(oatpp::String, registrationStatus), QUERY(oatpp::String, roleDescription), QUERY(oatpp::String, sdtmTarget), QUERY(oatpp::String, simpleDatatype), QUERY(oatpp::String, submissionValue), QUERY(oatpp::String, synonyms), QUERY(oatpp::String, type), QUERY(oatpp::String, uiHref), QUERY(oatpp::String, valueDomain), QUERY(oatpp::String, variableSet), QUERY(oatpp::String, version))
  /// <summary>
  /// 
  /// </summary>
  /// <remarks>
  /// Get Search Results Across CDISC Library
  /// </remarks>
  API_CALL("GET", "/mdr/search/scopes", mdr_search_scopes_get)
  /// <summary>
  /// 
  /// </summary>
  /// <remarks>
  /// Get Search Results Limited to Scope
  /// </remarks>
  /// <param name="scope">Search Scope</param>
  API_CALL("GET", "/mdr/search/scopes/{scope}", mdr_search_scopes_scope_get, PATH(DefaultSearchScopes, scope))
};

#include OATPP_CODEGEN_END(ApiClient) ///< End code-gen section

} // namespace org::openapitools::client::api

#endif /* SearchesApi_H_ */

