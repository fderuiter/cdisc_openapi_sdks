/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Lastupdated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Lastupdated{}

// Lastupdated struct for Lastupdated
type Lastupdated struct {
	Links *LastupdatedLinks `json:"_links,omitempty"`
	Overall *string `json:"overall,omitempty"`
	DataAnalysis *string `json:"data-analysis,omitempty"`
	DataCollection *string `json:"data-collection,omitempty"`
	DataTabulation *string `json:"data-tabulation,omitempty"`
	Measure *string `json:"measure,omitempty"`
	Terminology *string `json:"terminology,omitempty"`
}

// NewLastupdated instantiates a new Lastupdated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastupdated() *Lastupdated {
	this := Lastupdated{}
	return &this
}

// NewLastupdatedWithDefaults instantiates a new Lastupdated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastupdatedWithDefaults() *Lastupdated {
	this := Lastupdated{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Lastupdated) GetLinks() LastupdatedLinks {
	if o == nil || IsNil(o.Links) {
		var ret LastupdatedLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastupdated) GetLinksOk() (*LastupdatedLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Lastupdated) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given LastupdatedLinks and assigns it to the Links field.
func (o *Lastupdated) SetLinks(v LastupdatedLinks) {
	o.Links = &v
}

// GetOverall returns the Overall field value if set, zero value otherwise.
func (o *Lastupdated) GetOverall() string {
	if o == nil || IsNil(o.Overall) {
		var ret string
		return ret
	}
	return *o.Overall
}

// GetOverallOk returns a tuple with the Overall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastupdated) GetOverallOk() (*string, bool) {
	if o == nil || IsNil(o.Overall) {
		return nil, false
	}
	return o.Overall, true
}

// HasOverall returns a boolean if a field has been set.
func (o *Lastupdated) HasOverall() bool {
	if o != nil && !IsNil(o.Overall) {
		return true
	}

	return false
}

// SetOverall gets a reference to the given string and assigns it to the Overall field.
func (o *Lastupdated) SetOverall(v string) {
	o.Overall = &v
}

// GetDataAnalysis returns the DataAnalysis field value if set, zero value otherwise.
func (o *Lastupdated) GetDataAnalysis() string {
	if o == nil || IsNil(o.DataAnalysis) {
		var ret string
		return ret
	}
	return *o.DataAnalysis
}

// GetDataAnalysisOk returns a tuple with the DataAnalysis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastupdated) GetDataAnalysisOk() (*string, bool) {
	if o == nil || IsNil(o.DataAnalysis) {
		return nil, false
	}
	return o.DataAnalysis, true
}

// HasDataAnalysis returns a boolean if a field has been set.
func (o *Lastupdated) HasDataAnalysis() bool {
	if o != nil && !IsNil(o.DataAnalysis) {
		return true
	}

	return false
}

// SetDataAnalysis gets a reference to the given string and assigns it to the DataAnalysis field.
func (o *Lastupdated) SetDataAnalysis(v string) {
	o.DataAnalysis = &v
}

// GetDataCollection returns the DataCollection field value if set, zero value otherwise.
func (o *Lastupdated) GetDataCollection() string {
	if o == nil || IsNil(o.DataCollection) {
		var ret string
		return ret
	}
	return *o.DataCollection
}

// GetDataCollectionOk returns a tuple with the DataCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastupdated) GetDataCollectionOk() (*string, bool) {
	if o == nil || IsNil(o.DataCollection) {
		return nil, false
	}
	return o.DataCollection, true
}

// HasDataCollection returns a boolean if a field has been set.
func (o *Lastupdated) HasDataCollection() bool {
	if o != nil && !IsNil(o.DataCollection) {
		return true
	}

	return false
}

// SetDataCollection gets a reference to the given string and assigns it to the DataCollection field.
func (o *Lastupdated) SetDataCollection(v string) {
	o.DataCollection = &v
}

// GetDataTabulation returns the DataTabulation field value if set, zero value otherwise.
func (o *Lastupdated) GetDataTabulation() string {
	if o == nil || IsNil(o.DataTabulation) {
		var ret string
		return ret
	}
	return *o.DataTabulation
}

// GetDataTabulationOk returns a tuple with the DataTabulation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastupdated) GetDataTabulationOk() (*string, bool) {
	if o == nil || IsNil(o.DataTabulation) {
		return nil, false
	}
	return o.DataTabulation, true
}

// HasDataTabulation returns a boolean if a field has been set.
func (o *Lastupdated) HasDataTabulation() bool {
	if o != nil && !IsNil(o.DataTabulation) {
		return true
	}

	return false
}

// SetDataTabulation gets a reference to the given string and assigns it to the DataTabulation field.
func (o *Lastupdated) SetDataTabulation(v string) {
	o.DataTabulation = &v
}

// GetMeasure returns the Measure field value if set, zero value otherwise.
func (o *Lastupdated) GetMeasure() string {
	if o == nil || IsNil(o.Measure) {
		var ret string
		return ret
	}
	return *o.Measure
}

// GetMeasureOk returns a tuple with the Measure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastupdated) GetMeasureOk() (*string, bool) {
	if o == nil || IsNil(o.Measure) {
		return nil, false
	}
	return o.Measure, true
}

// HasMeasure returns a boolean if a field has been set.
func (o *Lastupdated) HasMeasure() bool {
	if o != nil && !IsNil(o.Measure) {
		return true
	}

	return false
}

// SetMeasure gets a reference to the given string and assigns it to the Measure field.
func (o *Lastupdated) SetMeasure(v string) {
	o.Measure = &v
}

// GetTerminology returns the Terminology field value if set, zero value otherwise.
func (o *Lastupdated) GetTerminology() string {
	if o == nil || IsNil(o.Terminology) {
		var ret string
		return ret
	}
	return *o.Terminology
}

// GetTerminologyOk returns a tuple with the Terminology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastupdated) GetTerminologyOk() (*string, bool) {
	if o == nil || IsNil(o.Terminology) {
		return nil, false
	}
	return o.Terminology, true
}

// HasTerminology returns a boolean if a field has been set.
func (o *Lastupdated) HasTerminology() bool {
	if o != nil && !IsNil(o.Terminology) {
		return true
	}

	return false
}

// SetTerminology gets a reference to the given string and assigns it to the Terminology field.
func (o *Lastupdated) SetTerminology(v string) {
	o.Terminology = &v
}

func (o Lastupdated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Lastupdated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.Overall) {
		toSerialize["overall"] = o.Overall
	}
	if !IsNil(o.DataAnalysis) {
		toSerialize["data-analysis"] = o.DataAnalysis
	}
	if !IsNil(o.DataCollection) {
		toSerialize["data-collection"] = o.DataCollection
	}
	if !IsNil(o.DataTabulation) {
		toSerialize["data-tabulation"] = o.DataTabulation
	}
	if !IsNil(o.Measure) {
		toSerialize["measure"] = o.Measure
	}
	if !IsNil(o.Terminology) {
		toSerialize["terminology"] = o.Terminology
	}
	return toSerialize, nil
}

type NullableLastupdated struct {
	value *Lastupdated
	isSet bool
}

func (v NullableLastupdated) Get() *Lastupdated {
	return v.value
}

func (v *NullableLastupdated) Set(val *Lastupdated) {
	v.value = val
	v.isSet = true
}

func (v NullableLastupdated) IsSet() bool {
	return v.isSet
}

func (v *NullableLastupdated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastupdated(val *Lastupdated) *NullableLastupdated {
	return &NullableLastupdated{value: val, isSet: true}
}

func (v NullableLastupdated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastupdated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


