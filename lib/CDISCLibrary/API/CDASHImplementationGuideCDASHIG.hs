{-
   CDISC Library API

   REST API Documentation for CDISC Library in production server

   OpenAPI Version: 3.0.0
   CDISC Library API API version: 1.1.0
   Contact: cdisc_library_support@cdisc.org
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : CDISCLibrary.API.CDASHImplementationGuideCDASHIG
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module CDISCLibrary.API.CDASHImplementationGuideCDASHIG where

import CDISCLibrary.Core
import CDISCLibrary.MimeTypes
import CDISCLibrary.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** CDASHImplementationGuideCDASHIG

-- *** mdrCdashigVersionClassesClassDomainsGet

-- | @GET \/mdr\/cdashig\/{version}\/classes\/{class}\/domains@
-- 
-- Get CDASHIG Class Domain List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionClassesClassDomainsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> ParamClass -- ^ "_class" -  CDASHIG Class Identifier
  -> CDISCLibraryRequest MdrCdashigVersionClassesClassDomainsGet MimeNoContent CdashigClassDomains accept
mdrCdashigVersionClassesClassDomainsGet  _ (Version version) (ParamClass _class) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/classes/",toPath _class,"/domains"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionClassesClassDomainsGet  
-- | @application/xml@
instance Produces MdrCdashigVersionClassesClassDomainsGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionClassesClassDomainsGet MimeJSON


-- *** mdrCdashigVersionClassesClassGet

-- | @GET \/mdr\/cdashig\/{version}\/classes\/{class}@
-- 
-- Get CDASHIG Class
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionClassesClassGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> ParamClass -- ^ "_class" -  CDASHIG Class Identifier
  -> CDISCLibraryRequest MdrCdashigVersionClassesClassGet MimeNoContent CdashigClass accept
mdrCdashigVersionClassesClassGet  _ (Version version) (ParamClass _class) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/classes/",toPath _class]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionClassesClassGet  
-- | @application/xml@
instance Produces MdrCdashigVersionClassesClassGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionClassesClassGet MimeJSON


-- *** mdrCdashigVersionClassesClassScenariosGet

-- | @GET \/mdr\/cdashig\/{version}\/classes\/{class}\/scenarios@
-- 
-- Get CDASHIG Class Scenario List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionClassesClassScenariosGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> ParamClass -- ^ "_class" -  CDASHIG Class Identifier
  -> CDISCLibraryRequest MdrCdashigVersionClassesClassScenariosGet MimeNoContent CdashigClassScenarios accept
mdrCdashigVersionClassesClassScenariosGet  _ (Version version) (ParamClass _class) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/classes/",toPath _class,"/scenarios"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionClassesClassScenariosGet  
-- | @application/xml@
instance Produces MdrCdashigVersionClassesClassScenariosGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionClassesClassScenariosGet MimeJSON


-- *** mdrCdashigVersionClassesGet

-- | @GET \/mdr\/cdashig\/{version}\/classes@
-- 
-- Get CDASHIG Class List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionClassesGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrCdashigVersionClassesGet MimeNoContent CdashigProductClasses accept
mdrCdashigVersionClassesGet  _ (Version version) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/classes"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionClassesGet  
-- | @application/xml@
instance Produces MdrCdashigVersionClassesGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionClassesGet MimeJSON


-- *** mdrCdashigVersionDomainsDomainFieldsFieldGet

-- | @GET \/mdr\/cdashig\/{version}\/domains\/{domain}\/fields\/{field}@
-- 
-- Get CDASHIG Domain Field
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionDomainsDomainFieldsFieldGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Domain -- ^ "domain" -  CDASHIG Domain Identifier
  -> Field -- ^ "field" -  CDASHIG Field Identifier
  -> CDISCLibraryRequest MdrCdashigVersionDomainsDomainFieldsFieldGet MimeNoContent CdashigDomainField accept
mdrCdashigVersionDomainsDomainFieldsFieldGet  _ (Version version) (Domain domain) (Field field) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/domains/",toPath domain,"/fields/",toPath field]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionDomainsDomainFieldsFieldGet  
-- | @application/xml@
instance Produces MdrCdashigVersionDomainsDomainFieldsFieldGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionDomainsDomainFieldsFieldGet MimeJSON


-- *** mdrCdashigVersionDomainsDomainFieldsGet

-- | @GET \/mdr\/cdashig\/{version}\/domains\/{domain}\/fields@
-- 
-- Get CDASHIG Domain Field List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionDomainsDomainFieldsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Domain -- ^ "domain" -  CDASHIG Domain Identifier
  -> CDISCLibraryRequest MdrCdashigVersionDomainsDomainFieldsGet MimeNoContent CdashigDomainFields accept
mdrCdashigVersionDomainsDomainFieldsGet  _ (Version version) (Domain domain) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/domains/",toPath domain,"/fields"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionDomainsDomainFieldsGet  
-- | @application/xml@
instance Produces MdrCdashigVersionDomainsDomainFieldsGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionDomainsDomainFieldsGet MimeJSON


-- *** mdrCdashigVersionDomainsDomainGet

-- | @GET \/mdr\/cdashig\/{version}\/domains\/{domain}@
-- 
-- Get CDASHIG Domain
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionDomainsDomainGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Domain -- ^ "domain" -  CDASHIG Domain Identifier
  -> CDISCLibraryRequest MdrCdashigVersionDomainsDomainGet MimeNoContent CdashigDomain accept
mdrCdashigVersionDomainsDomainGet  _ (Version version) (Domain domain) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/domains/",toPath domain]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionDomainsDomainGet  
-- | @application/xml@
instance Produces MdrCdashigVersionDomainsDomainGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionDomainsDomainGet MimeJSON


-- *** mdrCdashigVersionDomainsGet

-- | @GET \/mdr\/cdashig\/{version}\/domains@
-- 
-- Get CDASHIG Domain List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionDomainsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrCdashigVersionDomainsGet MimeNoContent CdashigProductDomains accept
mdrCdashigVersionDomainsGet  _ (Version version) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/domains"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionDomainsGet  
-- | @application/xml@
instance Produces MdrCdashigVersionDomainsGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionDomainsGet MimeJSON


-- *** mdrCdashigVersionGet

-- | @GET \/mdr\/cdashig\/{version}@
-- 
-- Get CDASHIG Product
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrCdashigVersionGet MimeNoContent CdashigProduct accept
mdrCdashigVersionGet  _ (Version version) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionGet  
-- | @application/xml@
instance Produces MdrCdashigVersionGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionGet MimeJSON
-- | @application/vnd.openxmlformats-officedocument.spreadsheetml.sheet@
instance Produces MdrCdashigVersionGet MimeVndOpenxmlformatsOfficedocumentSpreadsheetmlSheet
-- | @text/csv@
instance Produces MdrCdashigVersionGet MimeTextCsv
-- | @application/vnd.ms-excel@
instance Produces MdrCdashigVersionGet MimeVndMsExcel


-- *** mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet

-- | @GET \/mdr\/cdashig\/{version}\/scenarios\/{domain}.{scenario}\/fields\/{field}@
-- 
-- Get CDASHIG Scenario Field
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Domain -- ^ "domain" -  CDASHIG Domain Identifier
  -> Scenario -- ^ "scenario" -  CDASHIG Scenario Identifier
  -> Field -- ^ "field" -  CDASHIG Field Identifier
  -> CDISCLibraryRequest MdrCdashigVersionScenariosDomainScenarioFieldsFieldGet MimeNoContent CdashigScenarioField accept
mdrCdashigVersionScenariosDomainScenarioFieldsFieldGet  _ (Version version) (Domain domain) (Scenario scenario) (Field field) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/scenarios/",toPath domain,".",toPath scenario,"/fields/",toPath field]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionScenariosDomainScenarioFieldsFieldGet  
-- | @application/xml@
instance Produces MdrCdashigVersionScenariosDomainScenarioFieldsFieldGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionScenariosDomainScenarioFieldsFieldGet MimeJSON


-- *** mdrCdashigVersionScenariosDomainScenarioFieldsGet

-- | @GET \/mdr\/cdashig\/{version}\/scenarios\/{domain}.{scenario}\/fields@
-- 
-- Get CDASHIG Scenario Field List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionScenariosDomainScenarioFieldsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Domain -- ^ "domain" -  CDASHIG Domain Identifier
  -> Scenario -- ^ "scenario" -  CDASHIG Scenario Identifier
  -> CDISCLibraryRequest MdrCdashigVersionScenariosDomainScenarioFieldsGet MimeNoContent CdashigScenarioFields accept
mdrCdashigVersionScenariosDomainScenarioFieldsGet  _ (Version version) (Domain domain) (Scenario scenario) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/scenarios/",toPath domain,".",toPath scenario,"/fields"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionScenariosDomainScenarioFieldsGet  
-- | @application/xml@
instance Produces MdrCdashigVersionScenariosDomainScenarioFieldsGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionScenariosDomainScenarioFieldsGet MimeJSON


-- *** mdrCdashigVersionScenariosDomainScenarioGet

-- | @GET \/mdr\/cdashig\/{version}\/scenarios\/{domain}.{scenario}@
-- 
-- Get CDASHIG Scenario
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionScenariosDomainScenarioGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Domain -- ^ "domain" -  CDASHIG Domain Identifier
  -> Scenario -- ^ "scenario" -  CDASHIG Scenario Identifier
  -> CDISCLibraryRequest MdrCdashigVersionScenariosDomainScenarioGet MimeNoContent CdashigScenario accept
mdrCdashigVersionScenariosDomainScenarioGet  _ (Version version) (Domain domain) (Scenario scenario) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/scenarios/",toPath domain,".",toPath scenario]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionScenariosDomainScenarioGet  
-- | @application/xml@
instance Produces MdrCdashigVersionScenariosDomainScenarioGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionScenariosDomainScenarioGet MimeJSON


-- *** mdrCdashigVersionScenariosGet

-- | @GET \/mdr\/cdashig\/{version}\/scenarios@
-- 
-- Get CDASHIG Scenario List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrCdashigVersionScenariosGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrCdashigVersionScenariosGet MimeNoContent CdashigProductScenarios accept
mdrCdashigVersionScenariosGet  _ (Version version) =
  _mkRequest "GET" ["/mdr/cdashig/",toPath version,"/scenarios"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrCdashigVersionScenariosGet  
-- | @application/xml@
instance Produces MdrCdashigVersionScenariosGet MimeXML
-- | @application/json@
instance Produces MdrCdashigVersionScenariosGet MimeJSON


-- *** mdrRootCdashigDomainsDomainFieldsFieldGet

-- | @GET \/mdr\/root\/cdashig\/domains\/{domain}\/fields\/{field}@
-- 
-- Get Root CDASHIG Domain Field
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrRootCdashigDomainsDomainFieldsFieldGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Domain -- ^ "domain" -  CDASHIG Domain Identifier
  -> Field -- ^ "field" -  CDASHIG Field Identifier
  -> CDISCLibraryRequest MdrRootCdashigDomainsDomainFieldsFieldGet MimeNoContent RootCdashigDomainField accept
mdrRootCdashigDomainsDomainFieldsFieldGet  _ (Domain domain) (Field field) =
  _mkRequest "GET" ["/mdr/root/cdashig/domains/",toPath domain,"/fields/",toPath field]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrRootCdashigDomainsDomainFieldsFieldGet  
-- | @application/xml@
instance Produces MdrRootCdashigDomainsDomainFieldsFieldGet MimeXML
-- | @application/json@
instance Produces MdrRootCdashigDomainsDomainFieldsFieldGet MimeJSON


-- *** mdrRootCdashigScenariosDomainScenarioFieldsFieldGet

-- | @GET \/mdr\/root\/cdashig\/scenarios\/{domain}.{scenario}\/fields\/{field}@
-- 
-- Get Root CDASHIG Scenario Field
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrRootCdashigScenariosDomainScenarioFieldsFieldGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Domain -- ^ "domain" -  CDASHIG Domain Identifier
  -> Scenario -- ^ "scenario" -  CDASHIG Scenario Identifier
  -> Field -- ^ "field" -  CDASHIG Field Identifier
  -> CDISCLibraryRequest MdrRootCdashigScenariosDomainScenarioFieldsFieldGet MimeNoContent RootCdashigScenarioField accept
mdrRootCdashigScenariosDomainScenarioFieldsFieldGet  _ (Domain domain) (Scenario scenario) (Field field) =
  _mkRequest "GET" ["/mdr/root/cdashig/scenarios/",toPath domain,".",toPath scenario,"/fields/",toPath field]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrRootCdashigScenariosDomainScenarioFieldsFieldGet  
-- | @application/xml@
instance Produces MdrRootCdashigScenariosDomainScenarioFieldsFieldGet MimeXML
-- | @application/json@
instance Produces MdrRootCdashigScenariosDomainScenarioFieldsFieldGet MimeJSON

