{-
   CDISC Library API

   REST API Documentation for CDISC Library in production server

   OpenAPI Version: 3.0.0
   CDISC Library API API version: 1.1.0
   Contact: cdisc_library_support@cdisc.org
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : CDISCLibrary.API.AnalysisDataModelAndImplementationGuideADaMAndADaMIG
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module CDISCLibrary.API.AnalysisDataModelAndImplementationGuideADaMAndADaMIG where

import CDISCLibrary.Core
import CDISCLibrary.MimeTypes
import CDISCLibrary.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** AnalysisDataModelAndImplementationGuideADaMAndADaMIG

-- *** mdrAdamProductDatastructuresGet

-- | @GET \/mdr\/adam\/{product}\/datastructures@
-- 
-- Get ADaM Data Structure List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrAdamProductDatastructuresGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Product -- ^ "product" -  CDISC Library Product
  -> CDISCLibraryRequest MdrAdamProductDatastructuresGet MimeNoContent AdamProductDatastructures accept
mdrAdamProductDatastructuresGet  _ (Product product) =
  _mkRequest "GET" ["/mdr/adam/",toPath product,"/datastructures"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrAdamProductDatastructuresGet  
-- | @application/xml@
instance Produces MdrAdamProductDatastructuresGet MimeXML
-- | @application/json@
instance Produces MdrAdamProductDatastructuresGet MimeJSON
-- | @text/csv@
instance Produces MdrAdamProductDatastructuresGet MimeTextCsv


-- *** mdrAdamProductDatastructuresStructureGet

-- | @GET \/mdr\/adam\/{product}\/datastructures\/{structure}@
-- 
-- Get ADaM Data Structure
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrAdamProductDatastructuresStructureGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Product -- ^ "product" -  CDISC Library Product
  -> Structure -- ^ "structure" -  Data structure Identifier
  -> CDISCLibraryRequest MdrAdamProductDatastructuresStructureGet MimeNoContent AdamDatastructure accept
mdrAdamProductDatastructuresStructureGet  _ (Product product) (Structure structure) =
  _mkRequest "GET" ["/mdr/adam/",toPath product,"/datastructures/",toPath structure]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrAdamProductDatastructuresStructureGet  
-- | @application/xml@
instance Produces MdrAdamProductDatastructuresStructureGet MimeXML
-- | @application/json@
instance Produces MdrAdamProductDatastructuresStructureGet MimeJSON


-- *** mdrAdamProductDatastructuresStructureVariablesGet

-- | @GET \/mdr\/adam\/{product}\/datastructures\/{structure}\/variables@
-- 
-- Get ADaM Variable List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrAdamProductDatastructuresStructureVariablesGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Product -- ^ "product" -  CDISC Library Product
  -> Structure -- ^ "structure" -  ADaM Data Structure Identifier
  -> CDISCLibraryRequest MdrAdamProductDatastructuresStructureVariablesGet MimeNoContent AdamDatastructureVariables accept
mdrAdamProductDatastructuresStructureVariablesGet  _ (Product product) (Structure structure) =
  _mkRequest "GET" ["/mdr/adam/",toPath product,"/datastructures/",toPath structure,"/variables"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrAdamProductDatastructuresStructureVariablesGet  
-- | @application/xml@
instance Produces MdrAdamProductDatastructuresStructureVariablesGet MimeXML
-- | @application/json@
instance Produces MdrAdamProductDatastructuresStructureVariablesGet MimeJSON


-- *** mdrAdamProductDatastructuresStructureVariablesVarGet

-- | @GET \/mdr\/adam\/{product}\/datastructures\/{structure}\/variables\/{var}@
-- 
-- Get ADaM Variable
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrAdamProductDatastructuresStructureVariablesVarGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Product -- ^ "product" -  CDISC Library Product
  -> Structure -- ^ "structure" -  ADaM Data Structure Identifier
  -> Var -- ^ "var" -  ADaM Variable Identifier
  -> CDISCLibraryRequest MdrAdamProductDatastructuresStructureVariablesVarGet MimeNoContent AdamVariable accept
mdrAdamProductDatastructuresStructureVariablesVarGet  _ (Product product) (Structure structure) (Var var) =
  _mkRequest "GET" ["/mdr/adam/",toPath product,"/datastructures/",toPath structure,"/variables/",toPath var]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrAdamProductDatastructuresStructureVariablesVarGet  
-- | @application/xml@
instance Produces MdrAdamProductDatastructuresStructureVariablesVarGet MimeXML
-- | @application/json@
instance Produces MdrAdamProductDatastructuresStructureVariablesVarGet MimeJSON


-- *** mdrAdamProductDatastructuresStructureVarsetsGet

-- | @GET \/mdr\/adam\/{product}\/datastructures\/{structure}\/varsets@
-- 
-- Get ADaM Variable Set List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrAdamProductDatastructuresStructureVarsetsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Product -- ^ "product" -  CDISC Library Product
  -> Structure -- ^ "structure" -  ADaM Data Structure Identifier
  -> CDISCLibraryRequest MdrAdamProductDatastructuresStructureVarsetsGet MimeNoContent AdamDatastructureVarsets accept
mdrAdamProductDatastructuresStructureVarsetsGet  _ (Product product) (Structure structure) =
  _mkRequest "GET" ["/mdr/adam/",toPath product,"/datastructures/",toPath structure,"/varsets"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrAdamProductDatastructuresStructureVarsetsGet  
-- | @application/xml@
instance Produces MdrAdamProductDatastructuresStructureVarsetsGet MimeXML
-- | @application/json@
instance Produces MdrAdamProductDatastructuresStructureVarsetsGet MimeJSON


-- *** mdrAdamProductDatastructuresStructureVarsetsVarsetGet

-- | @GET \/mdr\/adam\/{product}\/datastructures\/{structure}\/varsets\/{varset}@
-- 
-- Get ADaM Variable Set
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrAdamProductDatastructuresStructureVarsetsVarsetGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Product -- ^ "product" -  CDISC Library Product
  -> Structure -- ^ "structure" -  ADaM Data Structure Identifier
  -> Varset -- ^ "varset" -  ADaM Variable Set Identifier
  -> CDISCLibraryRequest MdrAdamProductDatastructuresStructureVarsetsVarsetGet MimeNoContent AdamVarset accept
mdrAdamProductDatastructuresStructureVarsetsVarsetGet  _ (Product product) (Structure structure) (Varset varset) =
  _mkRequest "GET" ["/mdr/adam/",toPath product,"/datastructures/",toPath structure,"/varsets/",toPath varset]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrAdamProductDatastructuresStructureVarsetsVarsetGet  
-- | @application/xml@
instance Produces MdrAdamProductDatastructuresStructureVarsetsVarsetGet MimeXML
-- | @application/json@
instance Produces MdrAdamProductDatastructuresStructureVarsetsVarsetGet MimeJSON


-- *** mdrAdamProductGet

-- | @GET \/mdr\/adam\/{product}@
-- 
-- Get ADaM Product
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrAdamProductGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Product -- ^ "product" -  CDISC Library Product
  -> CDISCLibraryRequest MdrAdamProductGet MimeNoContent AdamProduct accept
mdrAdamProductGet  _ (Product product) =
  _mkRequest "GET" ["/mdr/adam/",toPath product]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrAdamProductGet  
-- | @application/xml@
instance Produces MdrAdamProductGet MimeXML
-- | @application/json@
instance Produces MdrAdamProductGet MimeJSON
-- | @application/vnd.openxmlformats-officedocument.spreadsheetml.sheet@
instance Produces MdrAdamProductGet MimeVndOpenxmlformatsOfficedocumentSpreadsheetmlSheet
-- | @text/csv@
instance Produces MdrAdamProductGet MimeTextCsv
-- | @application/vnd.ms-excel@
instance Produces MdrAdamProductGet MimeVndMsExcel

