{-
   CDISC Library API

   REST API Documentation for CDISC Library in production server

   OpenAPI Version: 3.0.0
   CDISC Library API API version: 1.1.0
   Contact: cdisc_library_support@cdisc.org
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : CDISCLibrary.API.Measures
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module CDISCLibrary.API.Measures where

import CDISCLibrary.Core
import CDISCLibrary.MimeTypes
import CDISCLibrary.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Measures

-- *** mdrQrsMeasureVersionGet

-- | @GET \/mdr\/qrs\/{measure}\/{version}@
-- 
-- Get QRS Product
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrQrsMeasureVersionGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Measure -- ^ "measure" -  QRS Measure Identifier
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrQrsMeasureVersionGet MimeNoContent QrsProduct accept
mdrQrsMeasureVersionGet  _ (Measure measure) (Version version) =
  _mkRequest "GET" ["/mdr/qrs/",toPath measure,"/",toPath version]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrQrsMeasureVersionGet  
-- | @application/xml@
instance Produces MdrQrsMeasureVersionGet MimeXML
-- | @application/json@
instance Produces MdrQrsMeasureVersionGet MimeJSON
-- | @text/csv@
instance Produces MdrQrsMeasureVersionGet MimeTextCsv
-- | @application/vnd.ms-excel@
instance Produces MdrQrsMeasureVersionGet MimeVndMsExcel


-- *** mdrQrsMeasureVersionItemsGet

-- | @GET \/mdr\/qrs\/{measure}\/{version}\/items@
-- 
-- Get QRS Item List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrQrsMeasureVersionItemsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Measure -- ^ "measure" -  QRS Measure Identifier
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrQrsMeasureVersionItemsGet MimeNoContent QrsItems accept
mdrQrsMeasureVersionItemsGet  _ (Measure measure) (Version version) =
  _mkRequest "GET" ["/mdr/qrs/",toPath measure,"/",toPath version,"/items"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrQrsMeasureVersionItemsGet  
-- | @application/xml@
instance Produces MdrQrsMeasureVersionItemsGet MimeXML
-- | @application/json@
instance Produces MdrQrsMeasureVersionItemsGet MimeJSON


-- *** mdrQrsMeasureVersionItemsItemGet

-- | @GET \/mdr\/qrs\/{measure}\/{version}\/items\/{item}@
-- 
-- Get QRS Item
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrQrsMeasureVersionItemsItemGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Measure -- ^ "measure" -  QRS Measure Identifier
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Item -- ^ "item" -  QRS Measure Item Identifier
  -> CDISCLibraryRequest MdrQrsMeasureVersionItemsItemGet MimeNoContent QrsItem accept
mdrQrsMeasureVersionItemsItemGet  _ (Measure measure) (Version version) (Item item) =
  _mkRequest "GET" ["/mdr/qrs/",toPath measure,"/",toPath version,"/items/",toPath item]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrQrsMeasureVersionItemsItemGet  
-- | @application/xml@
instance Produces MdrQrsMeasureVersionItemsItemGet MimeXML
-- | @application/json@
instance Produces MdrQrsMeasureVersionItemsItemGet MimeJSON


-- *** mdrQrsMeasureVersionResponsegroupsGet

-- | @GET \/mdr\/qrs\/{measure}\/{version}\/responsegroups@
-- 
-- Get QRS Response Group List
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrQrsMeasureVersionResponsegroupsGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Measure -- ^ "measure" -  QRS Measure Identifier
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> CDISCLibraryRequest MdrQrsMeasureVersionResponsegroupsGet MimeNoContent QrsResponsegroups accept
mdrQrsMeasureVersionResponsegroupsGet  _ (Measure measure) (Version version) =
  _mkRequest "GET" ["/mdr/qrs/",toPath measure,"/",toPath version,"/responsegroups"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrQrsMeasureVersionResponsegroupsGet  
-- | @application/xml@
instance Produces MdrQrsMeasureVersionResponsegroupsGet MimeXML
-- | @application/json@
instance Produces MdrQrsMeasureVersionResponsegroupsGet MimeJSON


-- *** mdrQrsMeasureVersionResponsegroupsResponsegroupGet

-- | @GET \/mdr\/qrs\/{measure}\/{version}\/responsegroups\/{responsegroup}@
-- 
-- Get QRS Response Group
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
mdrQrsMeasureVersionResponsegroupsResponsegroupGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> Measure -- ^ "measure" -  QRS Measure Identifier
  -> Version -- ^ "version" -  CDISC Library Product Version
  -> Responsegroup -- ^ "responsegroup" -  QRS Measure's Response Group Identifier
  -> CDISCLibraryRequest MdrQrsMeasureVersionResponsegroupsResponsegroupGet MimeNoContent QrsResponsegroup accept
mdrQrsMeasureVersionResponsegroupsResponsegroupGet  _ (Measure measure) (Version version) (Responsegroup responsegroup) =
  _mkRequest "GET" ["/mdr/qrs/",toPath measure,"/",toPath version,"/responsegroups/",toPath responsegroup]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data MdrQrsMeasureVersionResponsegroupsResponsegroupGet  
-- | @application/xml@
instance Produces MdrQrsMeasureVersionResponsegroupsResponsegroupGet MimeXML
-- | @application/json@
instance Produces MdrQrsMeasureVersionResponsegroupsResponsegroupGet MimeJSON

