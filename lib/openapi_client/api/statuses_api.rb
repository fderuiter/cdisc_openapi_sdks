=begin
#CDISC Library API

#REST API Documentation for CDISC Library in production server

The version of the OpenAPI document: 1.1.0
Contact: cdisc_library_support@cdisc.org
Generated by: https://openapi-generator.tech
Generator version: 7.16.0-SNAPSHOT

=end

require 'cgi'

module OpenapiClient
  class StatusesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Check health of system components
    # @param [Hash] opts the optional parameters
    # @return [Health]
    def health_get(opts = {})
      data, _status_code, _headers = health_get_with_http_info(opts)
      data
    end

    # Check health of system components
    # @param [Hash] opts the optional parameters
    # @return [Array<(Health, Integer, Hash)>] Health data, response status code and response headers
    def health_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatusesApi.health_get ...'
      end
      # resource path
      local_var_path = '/health'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Health'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['basicAuth']

      new_options = opts.merge(
        :operation => :"StatusesApi.health_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatusesApi#health_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Set maintenance mode and message
    # @param [Hash] opts the optional parameters
    # @return [MaintenanceBody]
    def mdr_maintenance_get(opts = {})
      data, _status_code, _headers = mdr_maintenance_get_with_http_info(opts)
      data
    end

    # Set maintenance mode and message
    # @param [Hash] opts the optional parameters
    # @return [Array<(MaintenanceBody, Integer, Hash)>] MaintenanceBody data, response status code and response headers
    def mdr_maintenance_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatusesApi.mdr_maintenance_get ...'
      end
      # resource path
      local_var_path = '/mdr/maintenance'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'MaintenanceBody'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['basicAuth']

      new_options = opts.merge(
        :operation => :"StatusesApi.mdr_maintenance_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatusesApi#mdr_maintenance_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
