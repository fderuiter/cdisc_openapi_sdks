/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QrsResponsegroupRefElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QrsResponsegroupRefElement{}

// QrsResponsegroupRefElement struct for QrsResponsegroupRefElement
type QrsResponsegroupRefElement struct {
	Href *string `json:"href,omitempty"`
	Title *string `json:"title,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewQrsResponsegroupRefElement instantiates a new QrsResponsegroupRefElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQrsResponsegroupRefElement() *QrsResponsegroupRefElement {
	this := QrsResponsegroupRefElement{}
	return &this
}

// NewQrsResponsegroupRefElementWithDefaults instantiates a new QrsResponsegroupRefElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQrsResponsegroupRefElementWithDefaults() *QrsResponsegroupRefElement {
	this := QrsResponsegroupRefElement{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *QrsResponsegroupRefElement) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroupRefElement) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *QrsResponsegroupRefElement) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *QrsResponsegroupRefElement) SetHref(v string) {
	o.Href = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *QrsResponsegroupRefElement) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroupRefElement) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *QrsResponsegroupRefElement) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *QrsResponsegroupRefElement) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *QrsResponsegroupRefElement) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrsResponsegroupRefElement) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *QrsResponsegroupRefElement) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *QrsResponsegroupRefElement) SetType(v string) {
	o.Type = &v
}

func (o QrsResponsegroupRefElement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QrsResponsegroupRefElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableQrsResponsegroupRefElement struct {
	value *QrsResponsegroupRefElement
	isSet bool
}

func (v NullableQrsResponsegroupRefElement) Get() *QrsResponsegroupRefElement {
	return v.value
}

func (v *NullableQrsResponsegroupRefElement) Set(val *QrsResponsegroupRefElement) {
	v.value = val
	v.isSet = true
}

func (v NullableQrsResponsegroupRefElement) IsSet() bool {
	return v.isSet
}

func (v *NullableQrsResponsegroupRefElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQrsResponsegroupRefElement(val *QrsResponsegroupRefElement) *NullableQrsResponsegroupRefElement {
	return &NullableQrsResponsegroupRefElement{value: val, isSet: true}
}

func (v NullableQrsResponsegroupRefElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQrsResponsegroupRefElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


