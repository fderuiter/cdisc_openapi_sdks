/*
CDISC Library API

REST API Documentation for CDISC Library in production server

API version: 1.1.0
Contact: cdisc_library_support@cdisc.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExportQrsGeneral type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportQrsGeneral{}

// ExportQrsGeneral struct for ExportQrsGeneral
type ExportQrsGeneral struct {
	Name *string `json:"Name,omitempty"`
	Label *string `json:"Label,omitempty"`
	EffectiveDate *string `json:"Effective Date,omitempty"`
	Description *string `json:"Description,omitempty"`
	Type *string `json:"Type,omitempty"`
	CategorysCodelistCCode *string `json:"Category's Codelist C-Code,omitempty"`
	CategorysTermCCode *string `json:"Category's Term C-Code,omitempty"`
}

// NewExportQrsGeneral instantiates a new ExportQrsGeneral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportQrsGeneral() *ExportQrsGeneral {
	this := ExportQrsGeneral{}
	return &this
}

// NewExportQrsGeneralWithDefaults instantiates a new ExportQrsGeneral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportQrsGeneralWithDefaults() *ExportQrsGeneral {
	this := ExportQrsGeneral{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExportQrsGeneral) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsGeneral) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExportQrsGeneral) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExportQrsGeneral) SetName(v string) {
	o.Name = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ExportQrsGeneral) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsGeneral) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ExportQrsGeneral) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ExportQrsGeneral) SetLabel(v string) {
	o.Label = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *ExportQrsGeneral) GetEffectiveDate() string {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret string
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsGeneral) GetEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *ExportQrsGeneral) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given string and assigns it to the EffectiveDate field.
func (o *ExportQrsGeneral) SetEffectiveDate(v string) {
	o.EffectiveDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExportQrsGeneral) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsGeneral) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExportQrsGeneral) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExportQrsGeneral) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ExportQrsGeneral) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsGeneral) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ExportQrsGeneral) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ExportQrsGeneral) SetType(v string) {
	o.Type = &v
}

// GetCategorysCodelistCCode returns the CategorysCodelistCCode field value if set, zero value otherwise.
func (o *ExportQrsGeneral) GetCategorysCodelistCCode() string {
	if o == nil || IsNil(o.CategorysCodelistCCode) {
		var ret string
		return ret
	}
	return *o.CategorysCodelistCCode
}

// GetCategorysCodelistCCodeOk returns a tuple with the CategorysCodelistCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsGeneral) GetCategorysCodelistCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CategorysCodelistCCode) {
		return nil, false
	}
	return o.CategorysCodelistCCode, true
}

// HasCategorysCodelistCCode returns a boolean if a field has been set.
func (o *ExportQrsGeneral) HasCategorysCodelistCCode() bool {
	if o != nil && !IsNil(o.CategorysCodelistCCode) {
		return true
	}

	return false
}

// SetCategorysCodelistCCode gets a reference to the given string and assigns it to the CategorysCodelistCCode field.
func (o *ExportQrsGeneral) SetCategorysCodelistCCode(v string) {
	o.CategorysCodelistCCode = &v
}

// GetCategorysTermCCode returns the CategorysTermCCode field value if set, zero value otherwise.
func (o *ExportQrsGeneral) GetCategorysTermCCode() string {
	if o == nil || IsNil(o.CategorysTermCCode) {
		var ret string
		return ret
	}
	return *o.CategorysTermCCode
}

// GetCategorysTermCCodeOk returns a tuple with the CategorysTermCCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQrsGeneral) GetCategorysTermCCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CategorysTermCCode) {
		return nil, false
	}
	return o.CategorysTermCCode, true
}

// HasCategorysTermCCode returns a boolean if a field has been set.
func (o *ExportQrsGeneral) HasCategorysTermCCode() bool {
	if o != nil && !IsNil(o.CategorysTermCCode) {
		return true
	}

	return false
}

// SetCategorysTermCCode gets a reference to the given string and assigns it to the CategorysTermCCode field.
func (o *ExportQrsGeneral) SetCategorysTermCCode(v string) {
	o.CategorysTermCCode = &v
}

func (o ExportQrsGeneral) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportQrsGeneral) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Label) {
		toSerialize["Label"] = o.Label
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["Effective Date"] = o.EffectiveDate
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.CategorysCodelistCCode) {
		toSerialize["Category's Codelist C-Code"] = o.CategorysCodelistCCode
	}
	if !IsNil(o.CategorysTermCCode) {
		toSerialize["Category's Term C-Code"] = o.CategorysTermCCode
	}
	return toSerialize, nil
}

type NullableExportQrsGeneral struct {
	value *ExportQrsGeneral
	isSet bool
}

func (v NullableExportQrsGeneral) Get() *ExportQrsGeneral {
	return v.value
}

func (v *NullableExportQrsGeneral) Set(val *ExportQrsGeneral) {
	v.value = val
	v.isSet = true
}

func (v NullableExportQrsGeneral) IsSet() bool {
	return v.isSet
}

func (v *NullableExportQrsGeneral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportQrsGeneral(val *ExportQrsGeneral) *NullableExportQrsGeneral {
	return &NullableExportQrsGeneral{value: val, isSet: true}
}

func (v NullableExportQrsGeneral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportQrsGeneral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


