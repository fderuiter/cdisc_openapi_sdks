extends Resource
class_name QrsItemLinks

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# QrsItemLinks Model


# Required: False
# isArray: false
@export var qrsItemTEST: RootCtTermRef:
	set(value):
		__qrsItemTEST__was__set = true
		qrsItemTEST = value
var __qrsItemTEST__was__set := false

# Required: False
# isArray: false
@export var qrsItemTESTCD: RootCtTermRef:
	set(value):
		__qrsItemTESTCD__was__set = true
		qrsItemTESTCD = value
var __qrsItemTESTCD__was__set := false

# Required: False
# isArray: false
@export var qrsItemEVAL: RootCtTermRef:
	set(value):
		__qrsItemEVAL__was__set = true
		qrsItemEVAL = value
var __qrsItemEVAL__was__set := false

# Required: False
# isArray: false
@export var qrsItemSCAT: RootCtTermRef:
	set(value):
		__qrsItemSCAT__was__set = true
		qrsItemSCAT = value
var __qrsItemSCAT__was__set := false

# Required: False
# isArray: false
@export var responsegroup: QrsResponsegroup:
	set(value):
		__responsegroup__was__set = true
		responsegroup = value
var __responsegroup__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__qrsItemTEST__was__set:
		bzz_dictionary["qrsItemTEST"] = self.qrsItemTEST
	if self.__qrsItemTESTCD__was__set:
		bzz_dictionary["qrsItemTESTCD"] = self.qrsItemTESTCD
	if self.__qrsItemEVAL__was__set:
		bzz_dictionary["qrsItemEVAL"] = self.qrsItemEVAL
	if self.__qrsItemSCAT__was__set:
		bzz_dictionary["qrsItemSCAT"] = self.qrsItemSCAT
	if self.__responsegroup__was__set:
		bzz_dictionary["responsegroup"] = self.responsegroup
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("qrsItemTEST"):
		me.qrsItemTEST = RootCtTermRef.bzz_denormalize_single(from_dict["qrsItemTEST"])
	if from_dict.has("qrsItemTESTCD"):
		me.qrsItemTESTCD = RootCtTermRef.bzz_denormalize_single(from_dict["qrsItemTESTCD"])
	if from_dict.has("qrsItemEVAL"):
		me.qrsItemEVAL = RootCtTermRef.bzz_denormalize_single(from_dict["qrsItemEVAL"])
	if from_dict.has("qrsItemSCAT"):
		me.qrsItemSCAT = RootCtTermRef.bzz_denormalize_single(from_dict["qrsItemSCAT"])
	if from_dict.has("responsegroup"):
		me.responsegroup = QrsResponsegroup.bzz_denormalize_single(from_dict["responsegroup"])
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

