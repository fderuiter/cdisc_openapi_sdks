extends Resource
class_name ExportSdtmigDatasetsRow

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# ExportSdtmigDatasetsRow Model


# Required: False
# isArray: false
@export var Version: String = "":
	set(value):
		__Version__was__set = true
		Version = value
var __Version__was__set := false

# Required: False
# isArray: false
@export var Class: String = "":
	set(value):
		__Class__was__set = true
		Class = value
var __Class__was__set := false

# Required: False
# isArray: false
@export var Dataset Name: String = "":
	set(value):
		__Dataset Name__was__set = true
		Dataset Name = value
var __Dataset Name__was__set := false

# Required: False
# isArray: false
@export var Dataset Label: String = "":
	set(value):
		__Dataset Label__was__set = true
		Dataset Label = value
var __Dataset Label__was__set := false

# Required: False
# isArray: false
@export var Structure: String = "":
	set(value):
		__Structure__was__set = true
		Structure = value
var __Structure__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__Version__was__set:
		bzz_dictionary["Version"] = self.Version
	if self.__Class__was__set:
		bzz_dictionary["Class"] = self.Class
	if self.__Dataset Name__was__set:
		bzz_dictionary["Dataset Name"] = self.Dataset Name
	if self.__Dataset Label__was__set:
		bzz_dictionary["Dataset Label"] = self.Dataset Label
	if self.__Structure__was__set:
		bzz_dictionary["Structure"] = self.Structure
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("Version"):
		me.Version = from_dict["Version"]
	if from_dict.has("Class"):
		me.Class = from_dict["Class"]
	if from_dict.has("Dataset Name"):
		me.Dataset Name = from_dict["Dataset Name"]
	if from_dict.has("Dataset Label"):
		me.Dataset Label = from_dict["Dataset Label"]
	if from_dict.has("Structure"):
		me.Structure = from_dict["Structure"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

