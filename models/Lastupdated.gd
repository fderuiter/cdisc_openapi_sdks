extends Resource
class_name Lastupdated

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# Lastupdated Model


# Required: False
# isArray: false
@export var Underscorelinks: LastupdatedLinks:
	set(value):
		__Underscorelinks__was__set = true
		Underscorelinks = value
var __Underscorelinks__was__set := false

# Required: False
# Example: 2020-02-14
# isArray: false
@export var overall: String = "":
	set(value):
		__overall__was__set = true
		overall = value
var __overall__was__set := false

# Required: False
# Example: 2020-02-14
# isArray: false
@export var dataMinusanalysis: String = "":
	set(value):
		__dataMinusanalysis__was__set = true
		dataMinusanalysis = value
var __dataMinusanalysis__was__set := false

# Required: False
# Example: 2020-02-14
# isArray: false
@export var dataMinuscollection: String = "":
	set(value):
		__dataMinuscollection__was__set = true
		dataMinuscollection = value
var __dataMinuscollection__was__set := false

# Required: False
# Example: 2020-02-14
# isArray: false
@export var dataMinustabulation: String = "":
	set(value):
		__dataMinustabulation__was__set = true
		dataMinustabulation = value
var __dataMinustabulation__was__set := false

# Required: False
# Example: 2020-02-14
# isArray: false
@export var measure: String = "":
	set(value):
		__measure__was__set = true
		measure = value
var __measure__was__set := false

# Required: False
# Example: 2020-02-14
# isArray: false
@export var terminology: String = "":
	set(value):
		__terminology__was__set = true
		terminology = value
var __terminology__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__Underscorelinks__was__set:
		bzz_dictionary["Underscorelinks"] = self.Underscorelinks
	if self.__overall__was__set:
		bzz_dictionary["overall"] = self.overall
	if self.__dataMinusanalysis__was__set:
		bzz_dictionary["dataMinusanalysis"] = self.dataMinusanalysis
	if self.__dataMinuscollection__was__set:
		bzz_dictionary["dataMinuscollection"] = self.dataMinuscollection
	if self.__dataMinustabulation__was__set:
		bzz_dictionary["dataMinustabulation"] = self.dataMinustabulation
	if self.__measure__was__set:
		bzz_dictionary["measure"] = self.measure
	if self.__terminology__was__set:
		bzz_dictionary["terminology"] = self.terminology
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("Underscorelinks"):
		me.Underscorelinks = LastupdatedLinks.bzz_denormalize_single(from_dict["Underscorelinks"])
	if from_dict.has("overall"):
		me.overall = from_dict["overall"]
	if from_dict.has("dataMinusanalysis"):
		me.dataMinusanalysis = from_dict["dataMinusanalysis"]
	if from_dict.has("dataMinuscollection"):
		me.dataMinuscollection = from_dict["dataMinuscollection"]
	if from_dict.has("dataMinustabulation"):
		me.dataMinustabulation = from_dict["dataMinustabulation"]
	if from_dict.has("measure"):
		me.measure = from_dict["measure"]
	if from_dict.has("terminology"):
		me.terminology = from_dict["terminology"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

