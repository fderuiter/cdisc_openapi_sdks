extends Resource
class_name QrsResponseLinks

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# QrsResponseLinks Model


# Required: False
# isArray: false
@export var qrsResponseORRES: RootCtTermRef:
	set(value):
		__qrsResponseORRES__was__set = true
		qrsResponseORRES = value
var __qrsResponseORRES__was__set := false

# Required: False
# isArray: false
@export var qrsResponseORRESU: RootCtTermRef:
	set(value):
		__qrsResponseORRESU__was__set = true
		qrsResponseORRESU = value
var __qrsResponseORRESU__was__set := false

# Required: False
# isArray: false
@export var qrsResponseSTRESC: RootCtTermRef:
	set(value):
		__qrsResponseSTRESC__was__set = true
		qrsResponseSTRESC = value
var __qrsResponseSTRESC__was__set := false

# Required: False
# isArray: false
@export var qrsResponseSTRESCU: RootCtTermRef:
	set(value):
		__qrsResponseSTRESCU__was__set = true
		qrsResponseSTRESCU = value
var __qrsResponseSTRESCU__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__qrsResponseORRES__was__set:
		bzz_dictionary["qrsResponseORRES"] = self.qrsResponseORRES
	if self.__qrsResponseORRESU__was__set:
		bzz_dictionary["qrsResponseORRESU"] = self.qrsResponseORRESU
	if self.__qrsResponseSTRESC__was__set:
		bzz_dictionary["qrsResponseSTRESC"] = self.qrsResponseSTRESC
	if self.__qrsResponseSTRESCU__was__set:
		bzz_dictionary["qrsResponseSTRESCU"] = self.qrsResponseSTRESCU
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("qrsResponseORRES"):
		me.qrsResponseORRES = RootCtTermRef.bzz_denormalize_single(from_dict["qrsResponseORRES"])
	if from_dict.has("qrsResponseORRESU"):
		me.qrsResponseORRESU = RootCtTermRef.bzz_denormalize_single(from_dict["qrsResponseORRESU"])
	if from_dict.has("qrsResponseSTRESC"):
		me.qrsResponseSTRESC = RootCtTermRef.bzz_denormalize_single(from_dict["qrsResponseSTRESC"])
	if from_dict.has("qrsResponseSTRESCU"):
		me.qrsResponseSTRESCU = RootCtTermRef.bzz_denormalize_single(from_dict["qrsResponseSTRESCU"])
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

