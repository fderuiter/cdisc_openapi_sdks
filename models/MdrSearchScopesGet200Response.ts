/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DefaultSearchScopes } from './DefaultSearchScopes';
import {
    DefaultSearchScopesFromJSON,
    DefaultSearchScopesFromJSONTyped,
    DefaultSearchScopesToJSON,
    DefaultSearchScopesToJSONTyped,
} from './DefaultSearchScopes';

/**
 * 
 * @export
 * @interface MdrSearchScopesGet200Response
 */
export interface MdrSearchScopesGet200Response {
    /**
     * 
     * @type {Array<DefaultSearchScopes>}
     * @memberof MdrSearchScopesGet200Response
     */
    scopes?: Array<DefaultSearchScopes>;
}

/**
 * Check if a given object implements the MdrSearchScopesGet200Response interface.
 */
export function instanceOfMdrSearchScopesGet200Response(value: object): value is MdrSearchScopesGet200Response {
    return true;
}

export function MdrSearchScopesGet200ResponseFromJSON(json: any): MdrSearchScopesGet200Response {
    return MdrSearchScopesGet200ResponseFromJSONTyped(json, false);
}

export function MdrSearchScopesGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MdrSearchScopesGet200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'scopes': json['scopes'] == null ? undefined : ((json['scopes'] as Array<any>).map(DefaultSearchScopesFromJSON)),
    };
}

export function MdrSearchScopesGet200ResponseToJSON(json: any): MdrSearchScopesGet200Response {
    return MdrSearchScopesGet200ResponseToJSONTyped(json, false);
}

export function MdrSearchScopesGet200ResponseToJSONTyped(value?: MdrSearchScopesGet200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scopes': value['scopes'] == null ? undefined : ((value['scopes'] as Array<any>).map(DefaultSearchScopesToJSON)),
    };
}

