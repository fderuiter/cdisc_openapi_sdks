/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductgroupTerminology } from './ProductgroupTerminology';
import {
    ProductgroupTerminologyFromJSON,
    ProductgroupTerminologyFromJSONTyped,
    ProductgroupTerminologyToJSON,
    ProductgroupTerminologyToJSONTyped,
} from './ProductgroupTerminology';

/**
 * 
 * @export
 * @interface XmlProductgroupTerminology
 */
export interface XmlProductgroupTerminology {
    /**
     * 
     * @type {ProductgroupTerminology}
     * @memberof XmlProductgroupTerminology
     */
    self?: ProductgroupTerminology;
}

/**
 * Check if a given object implements the XmlProductgroupTerminology interface.
 */
export function instanceOfXmlProductgroupTerminology(value: object): value is XmlProductgroupTerminology {
    return true;
}

export function XmlProductgroupTerminologyFromJSON(json: any): XmlProductgroupTerminology {
    return XmlProductgroupTerminologyFromJSONTyped(json, false);
}

export function XmlProductgroupTerminologyFromJSONTyped(json: any, ignoreDiscriminator: boolean): XmlProductgroupTerminology {
    if (json == null) {
        return json;
    }
    return {
        
        'self': json['self'] == null ? undefined : ProductgroupTerminologyFromJSON(json['self']),
    };
}

export function XmlProductgroupTerminologyToJSON(json: any): XmlProductgroupTerminology {
    return XmlProductgroupTerminologyToJSONTyped(json, false);
}

export function XmlProductgroupTerminologyToJSONTyped(value?: XmlProductgroupTerminology | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'self': ProductgroupTerminologyToJSON(value['self']),
    };
}

