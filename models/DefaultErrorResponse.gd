extends Resource
class_name DefaultErrorResponse

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# DefaultErrorResponse Model


# HTTP Status Code
# Required: False
# isArray: false
@export var statusCode: String = "":
	set(value):
		__statusCode__was__set = true
		statusCode = value
var __statusCode__was__set := false

# HTTP Reason Phrase
# Required: False
# isArray: false
@export var reasonPhrase: String = "":
	set(value):
		__reasonPhrase__was__set = true
		reasonPhrase = value
var __reasonPhrase__was__set := false

# User Error Message
# Required: False
# isArray: false
@export var userMessage: String = "":
	set(value):
		__userMessage__was__set = true
		userMessage = value
var __userMessage__was__set := false

# Admin Error Message
# Required: False
# isArray: false
@export var adminMessage: String = "":
	set(value):
		__adminMessage__was__set = true
		adminMessage = value
var __adminMessage__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__statusCode__was__set:
		bzz_dictionary["statusCode"] = self.statusCode
	if self.__reasonPhrase__was__set:
		bzz_dictionary["reasonPhrase"] = self.reasonPhrase
	if self.__userMessage__was__set:
		bzz_dictionary["userMessage"] = self.userMessage
	if self.__adminMessage__was__set:
		bzz_dictionary["adminMessage"] = self.adminMessage
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("statusCode"):
		me.statusCode = from_dict["statusCode"]
	if from_dict.has("reasonPhrase"):
		me.reasonPhrase = from_dict["reasonPhrase"]
	if from_dict.has("userMessage"):
		me.userMessage = from_dict["userMessage"]
	if from_dict.has("adminMessage"):
		me.adminMessage = from_dict["adminMessage"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

