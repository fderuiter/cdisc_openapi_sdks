/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdamDatastructureLinks } from './AdamDatastructureLinks';
import {
    AdamDatastructureLinksFromJSON,
    AdamDatastructureLinksFromJSONTyped,
    AdamDatastructureLinksToJSON,
    AdamDatastructureLinksToJSONTyped,
} from './AdamDatastructureLinks';
import type { AdamVarset } from './AdamVarset';
import {
    AdamVarsetFromJSON,
    AdamVarsetFromJSONTyped,
    AdamVarsetToJSON,
    AdamVarsetToJSONTyped,
} from './AdamVarset';

/**
 * 
 * @export
 * @interface AdamDatastructure
 */
export interface AdamDatastructure {
    /**
     * 
     * @type {string}
     * @memberof AdamDatastructure
     */
    ordinal?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamDatastructure
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamDatastructure
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamDatastructure
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof AdamDatastructure
     */
    _class?: string;
    /**
     * 
     * @type {AdamDatastructureLinks}
     * @memberof AdamDatastructure
     */
    links?: AdamDatastructureLinks;
    /**
     * 
     * @type {Array<AdamVarset>}
     * @memberof AdamDatastructure
     */
    analysisVariableSets?: Array<AdamVarset>;
}

/**
 * Check if a given object implements the AdamDatastructure interface.
 */
export function instanceOfAdamDatastructure(value: object): value is AdamDatastructure {
    return true;
}

export function AdamDatastructureFromJSON(json: any): AdamDatastructure {
    return AdamDatastructureFromJSONTyped(json, false);
}

export function AdamDatastructureFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdamDatastructure {
    if (json == null) {
        return json;
    }
    return {
        
        'ordinal': json['ordinal'] == null ? undefined : json['ordinal'],
        'name': json['name'] == null ? undefined : json['name'],
        'label': json['label'] == null ? undefined : json['label'],
        'description': json['description'] == null ? undefined : json['description'],
        '_class': json['class'] == null ? undefined : json['class'],
        'links': json['_links'] == null ? undefined : AdamDatastructureLinksFromJSON(json['_links']),
        'analysisVariableSets': json['analysisVariableSets'] == null ? undefined : ((json['analysisVariableSets'] as Array<any>).map(AdamVarsetFromJSON)),
    };
}

export function AdamDatastructureToJSON(json: any): AdamDatastructure {
    return AdamDatastructureToJSONTyped(json, false);
}

export function AdamDatastructureToJSONTyped(value?: AdamDatastructure | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ordinal': value['ordinal'],
        'name': value['name'],
        'label': value['label'],
        'description': value['description'],
        'class': value['_class'],
        '_links': AdamDatastructureLinksToJSON(value['links']),
        'analysisVariableSets': value['analysisVariableSets'] == null ? undefined : ((value['analysisVariableSets'] as Array<any>).map(AdamVarsetToJSON)),
    };
}

