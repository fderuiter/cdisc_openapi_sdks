extends Resource
class_name Health

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# Health Model


# Required: False
# isArray: false
@export var healthy: bool:
	set(value):
		__healthy__was__set = true
		healthy = value
var __healthy__was__set := false

# Required: False
# isArray: false
@export var ldapAuthenticationHealthy: bool:
	set(value):
		__ldapAuthenticationHealthy__was__set = true
		ldapAuthenticationHealthy = value
var __ldapAuthenticationHealthy__was__set := false

# Required: False
# isArray: false
@export var ldapAuthorizationHealthy: bool:
	set(value):
		__ldapAuthorizationHealthy__was__set = true
		ldapAuthorizationHealthy = value
var __ldapAuthorizationHealthy__was__set := false

# Required: False
# isArray: false
@export var databaseHealthy: bool:
	set(value):
		__databaseHealthy__was__set = true
		databaseHealthy = value
var __databaseHealthy__was__set := false

# Required: False
# isArray: false
@export var esHealthy: bool:
	set(value):
		__esHealthy__was__set = true
		esHealthy = value
var __esHealthy__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__healthy__was__set:
		bzz_dictionary["healthy"] = self.healthy
	if self.__ldapAuthenticationHealthy__was__set:
		bzz_dictionary["ldapAuthenticationHealthy"] = self.ldapAuthenticationHealthy
	if self.__ldapAuthorizationHealthy__was__set:
		bzz_dictionary["ldapAuthorizationHealthy"] = self.ldapAuthorizationHealthy
	if self.__databaseHealthy__was__set:
		bzz_dictionary["databaseHealthy"] = self.databaseHealthy
	if self.__esHealthy__was__set:
		bzz_dictionary["esHealthy"] = self.esHealthy
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("healthy"):
		me.healthy = from_dict["healthy"]
	if from_dict.has("ldapAuthenticationHealthy"):
		me.ldapAuthenticationHealthy = from_dict["ldapAuthenticationHealthy"]
	if from_dict.has("ldapAuthorizationHealthy"):
		me.ldapAuthorizationHealthy = from_dict["ldapAuthorizationHealthy"]
	if from_dict.has("databaseHealthy"):
		me.databaseHealthy = from_dict["databaseHealthy"]
	if from_dict.has("esHealthy"):
		me.esHealthy = from_dict["esHealthy"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

