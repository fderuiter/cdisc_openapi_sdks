/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CtPackageRefElement } from './CtPackageRefElement';
import {
    CtPackageRefElementFromJSON,
    CtPackageRefElementFromJSONTyped,
    CtPackageRefElementToJSON,
    CtPackageRefElementToJSONTyped,
} from './CtPackageRefElement';
import type { CtPackagesRef } from './CtPackagesRef';
import {
    CtPackagesRefFromJSON,
    CtPackagesRefFromJSONTyped,
    CtPackagesRefToJSON,
    CtPackagesRefToJSONTyped,
} from './CtPackagesRef';

/**
 * 
 * @export
 * @interface CtPackagesLinks
 */
export interface CtPackagesLinks {
    /**
     * 
     * @type {CtPackagesRef}
     * @memberof CtPackagesLinks
     */
    self?: CtPackagesRef;
    /**
     * 
     * @type {Array<CtPackageRefElement>}
     * @memberof CtPackagesLinks
     */
    packages?: Array<CtPackageRefElement>;
}

/**
 * Check if a given object implements the CtPackagesLinks interface.
 */
export function instanceOfCtPackagesLinks(value: object): value is CtPackagesLinks {
    return true;
}

export function CtPackagesLinksFromJSON(json: any): CtPackagesLinks {
    return CtPackagesLinksFromJSONTyped(json, false);
}

export function CtPackagesLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): CtPackagesLinks {
    if (json == null) {
        return json;
    }
    return {
        
        'self': json['self'] == null ? undefined : CtPackagesRefFromJSON(json['self']),
        'packages': json['packages'] == null ? undefined : ((json['packages'] as Array<any>).map(CtPackageRefElementFromJSON)),
    };
}

export function CtPackagesLinksToJSON(json: any): CtPackagesLinks {
    return CtPackagesLinksToJSONTyped(json, false);
}

export function CtPackagesLinksToJSONTyped(value?: CtPackagesLinks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'self': CtPackagesRefToJSON(value['self']),
        'packages': value['packages'] == null ? undefined : ((value['packages'] as Array<any>).map(CtPackageRefElementToJSON)),
    };
}

