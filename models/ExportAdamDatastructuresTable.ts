/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExportAdamDatastructuresRow } from './ExportAdamDatastructuresRow';
import {
    ExportAdamDatastructuresRowFromJSON,
    ExportAdamDatastructuresRowFromJSONTyped,
    ExportAdamDatastructuresRowToJSON,
    ExportAdamDatastructuresRowToJSONTyped,
} from './ExportAdamDatastructuresRow';

/**
 * 
 * @export
 * @interface ExportAdamDatastructuresTable
 */
export interface ExportAdamDatastructuresTable {
    /**
     * 
     * @type {Array<ExportAdamDatastructuresRow>}
     * @memberof ExportAdamDatastructuresTable
     */
    datastructures?: Array<ExportAdamDatastructuresRow>;
}

/**
 * Check if a given object implements the ExportAdamDatastructuresTable interface.
 */
export function instanceOfExportAdamDatastructuresTable(value: object): value is ExportAdamDatastructuresTable {
    return true;
}

export function ExportAdamDatastructuresTableFromJSON(json: any): ExportAdamDatastructuresTable {
    return ExportAdamDatastructuresTableFromJSONTyped(json, false);
}

export function ExportAdamDatastructuresTableFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportAdamDatastructuresTable {
    if (json == null) {
        return json;
    }
    return {
        
        'datastructures': json['datastructures'] == null ? undefined : ((json['datastructures'] as Array<any>).map(ExportAdamDatastructuresRowFromJSON)),
    };
}

export function ExportAdamDatastructuresTableToJSON(json: any): ExportAdamDatastructuresTable {
    return ExportAdamDatastructuresTableToJSONTyped(json, false);
}

export function ExportAdamDatastructuresTableToJSONTyped(value?: ExportAdamDatastructuresTable | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'datastructures': value['datastructures'] == null ? undefined : ((value['datastructures'] as Array<any>).map(ExportAdamDatastructuresRowToJSON)),
    };
}

