extends Resource
class_name ExportCtTerm

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# ExportCtTerm Model


# Required: False
# isArray: false
@export var bundleMinus1: String = "":
	set(value):
		__bundleMinus1__was__set = true
		bundleMinus1 = value
var __bundleMinus1__was__set := false

# Required: False
# isArray: true
@export var CDISC SynonymLeft_ParenthesissRight_Parenthesis: Array:
	set(value):
		__CDISC SynonymLeft_ParenthesissRight_Parenthesis__was__set = true
		CDISC SynonymLeft_ParenthesissRight_Parenthesis = value
var __CDISC SynonymLeft_ParenthesissRight_Parenthesis__was__set := false

# Required: False
# isArray: false
@export var bundleMinus2: String = "":
	set(value):
		__bundleMinus2__was__set = true
		bundleMinus2 = value
var __bundleMinus2__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__bundleMinus1__was__set:
		bzz_dictionary["bundleMinus1"] = self.bundleMinus1
	if self.__CDISC SynonymLeft_ParenthesissRight_Parenthesis__was__set:
		bzz_dictionary["CDISC SynonymLeft_ParenthesissRight_Parenthesis"] = self.CDISC SynonymLeft_ParenthesissRight_Parenthesis
	if self.__bundleMinus2__was__set:
		bzz_dictionary["bundleMinus2"] = self.bundleMinus2
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("bundleMinus1"):
		me.bundleMinus1 = from_dict["bundleMinus1"]
	if from_dict.has("CDISC SynonymLeft_ParenthesissRight_Parenthesis"):
		me.CDISC SynonymLeft_ParenthesissRight_Parenthesis = from_dict["CDISC SynonymLeft_ParenthesissRight_Parenthesis"]
	if from_dict.has("bundleMinus2"):
		me.bundleMinus2 = from_dict["bundleMinus2"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

