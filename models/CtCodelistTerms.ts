/* tslint:disable */
/* eslint-disable */
/**
 * CDISC Library API
 * REST API Documentation for CDISC Library in production server
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: cdisc_library_support@cdisc.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CtCodelistTermsLinks } from './CtCodelistTermsLinks';
import {
    CtCodelistTermsLinksFromJSON,
    CtCodelistTermsLinksFromJSONTyped,
    CtCodelistTermsLinksToJSON,
    CtCodelistTermsLinksToJSONTyped,
} from './CtCodelistTermsLinks';

/**
 * 
 * @export
 * @interface CtCodelistTerms
 */
export interface CtCodelistTerms {
    /**
     * 
     * @type {string}
     * @memberof CtCodelistTerms
     */
    conceptId?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelistTerms
     */
    extensible?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelistTerms
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelistTerms
     */
    submissionValue?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelistTerms
     */
    definition?: string;
    /**
     * 
     * @type {string}
     * @memberof CtCodelistTerms
     */
    preferredTerm?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CtCodelistTerms
     */
    synonyms?: Array<string>;
    /**
     * 
     * @type {CtCodelistTermsLinks}
     * @memberof CtCodelistTerms
     */
    links?: CtCodelistTermsLinks;
}

/**
 * Check if a given object implements the CtCodelistTerms interface.
 */
export function instanceOfCtCodelistTerms(value: object): value is CtCodelistTerms {
    return true;
}

export function CtCodelistTermsFromJSON(json: any): CtCodelistTerms {
    return CtCodelistTermsFromJSONTyped(json, false);
}

export function CtCodelistTermsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CtCodelistTerms {
    if (json == null) {
        return json;
    }
    return {
        
        'conceptId': json['conceptId'] == null ? undefined : json['conceptId'],
        'extensible': json['extensible'] == null ? undefined : json['extensible'],
        'name': json['name'] == null ? undefined : json['name'],
        'submissionValue': json['submissionValue'] == null ? undefined : json['submissionValue'],
        'definition': json['definition'] == null ? undefined : json['definition'],
        'preferredTerm': json['preferredTerm'] == null ? undefined : json['preferredTerm'],
        'synonyms': json['synonyms'] == null ? undefined : json['synonyms'],
        'links': json['_links'] == null ? undefined : CtCodelistTermsLinksFromJSON(json['_links']),
    };
}

export function CtCodelistTermsToJSON(json: any): CtCodelistTerms {
    return CtCodelistTermsToJSONTyped(json, false);
}

export function CtCodelistTermsToJSONTyped(value?: CtCodelistTerms | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conceptId': value['conceptId'],
        'extensible': value['extensible'],
        'name': value['name'],
        'submissionValue': value['submissionValue'],
        'definition': value['definition'],
        'preferredTerm': value['preferredTerm'],
        'synonyms': value['synonyms'],
        '_links': CtCodelistTermsLinksToJSON(value['links']),
    };
}

